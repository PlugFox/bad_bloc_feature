define(['dart_sdk', 'packages/flutter/src/foundation/_bitfield_web', 'packages/flutter/src/rendering/animated_size', 'packages/flutter/src/painting/_network_image_web', 'packages/flutter/src/gestures/arena', 'packages/flutter/src/animation/animation', 'packages/flutter/gestures', 'packages/flutter/src/semantics/binding', 'packages/vector_math/vector_math_64', 'packages/collection/src/canonicalized_map', 'packages/flutter/src/physics/clamped_simulation'], function(dart_sdk, packages__flutter__src__foundation___bitfield_web, packages__flutter__src__rendering__animated_size, packages__flutter__src__painting___network_image_web, packages__flutter__src__gestures__arena, packages__flutter__src__animation__animation, packages__flutter__gestures, packages__flutter__src__semantics__binding, packages__vector_math__vector_math_64, packages__collection__src__canonicalized_map, packages__flutter__src__physics__clamped_simulation) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const async = dart_sdk.async;
  const developer = dart_sdk.developer;
  const io = dart_sdk.io;
  const typed_data = dart_sdk.typed_data;
  const _engine = dart_sdk._engine;
  const convert = dart_sdk.convert;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__foundation___bitfield_web.src__foundation__object;
  const diagnostics$ = packages__flutter__src__foundation___bitfield_web.src__foundation__diagnostics;
  const key = packages__flutter__src__foundation___bitfield_web.src__foundation__key;
  const assertions = packages__flutter__src__foundation___bitfield_web.src__foundation__assertions;
  const print = packages__flutter__src__foundation___bitfield_web.src__foundation__print;
  const debug = packages__flutter__src__foundation___bitfield_web.src__foundation__debug;
  const change_notifier = packages__flutter__src__foundation___bitfield_web.src__foundation__change_notifier;
  const observer_list = packages__flutter__src__foundation___bitfield_web.src__foundation__observer_list;
  const synchronous_future = packages__flutter__src__foundation___bitfield_web.src__foundation__synchronous_future;
  const platform = packages__flutter__src__foundation___bitfield_web.src__foundation__platform;
  const binding = packages__flutter__src__foundation___bitfield_web.src__foundation__binding;
  const collections = packages__flutter__src__foundation___bitfield_web.src__foundation__collections;
  const basic_types = packages__flutter__src__foundation___bitfield_web.src__foundation__basic_types;
  const box$ = packages__flutter__src__rendering__animated_size.src__rendering__box;
  const custom_layout = packages__flutter__src__rendering__animated_size.src__rendering__custom_layout;
  const object$ = packages__flutter__src__rendering__animated_size.src__rendering__object;
  const sliver = packages__flutter__src__rendering__animated_size.src__rendering__sliver;
  const error = packages__flutter__src__rendering__animated_size.src__rendering__error;
  const viewport_offset = packages__flutter__src__rendering__animated_size.src__rendering__viewport_offset;
  const proxy_box = packages__flutter__src__rendering__animated_size.src__rendering__proxy_box;
  const viewport$ = packages__flutter__src__rendering__animated_size.src__rendering__viewport;
  const custom_paint = packages__flutter__src__rendering__animated_size.src__rendering__custom_paint;
  const layer = packages__flutter__src__rendering__animated_size.src__rendering__layer;
  const rotated_box = packages__flutter__src__rendering__animated_size.src__rendering__rotated_box;
  const shifted_box = packages__flutter__src__rendering__animated_size.src__rendering__shifted_box;
  const sliver_padding = packages__flutter__src__rendering__animated_size.src__rendering__sliver_padding;
  const list_body = packages__flutter__src__rendering__animated_size.src__rendering__list_body;
  const stack = packages__flutter__src__rendering__animated_size.src__rendering__stack;
  const flex$ = packages__flutter__src__rendering__animated_size.src__rendering__flex;
  const wrap = packages__flutter__src__rendering__animated_size.src__rendering__wrap;
  const flow = packages__flutter__src__rendering__animated_size.src__rendering__flow;
  const paragraph = packages__flutter__src__rendering__animated_size.src__rendering__paragraph;
  const image = packages__flutter__src__rendering__animated_size.src__rendering__image;
  const binding$ = packages__flutter__src__rendering__animated_size.src__rendering__binding;
  const debug$ = packages__flutter__src__rendering__animated_size.src__rendering__debug;
  const table = packages__flutter__src__rendering__animated_size.src__rendering__table;
  const table_border = packages__flutter__src__rendering__animated_size.src__rendering__table_border;
  const performance_overlay = packages__flutter__src__rendering__animated_size.src__rendering__performance_overlay;
  const proxy_sliver = packages__flutter__src__rendering__animated_size.src__rendering__proxy_sliver;
  const editable = packages__flutter__src__rendering__animated_size.src__rendering__editable;
  const sliver_list = packages__flutter__src__rendering__animated_size.src__rendering__sliver_list;
  const sliver_fixed_extent_list = packages__flutter__src__rendering__animated_size.src__rendering__sliver_fixed_extent_list;
  const sliver_grid = packages__flutter__src__rendering__animated_size.src__rendering__sliver_grid;
  const sliver_multi_box_adaptor = packages__flutter__src__rendering__animated_size.src__rendering__sliver_multi_box_adaptor;
  const sliver_fill = packages__flutter__src__rendering__animated_size.src__rendering__sliver_fill;
  const tweens = packages__flutter__src__rendering__animated_size.src__rendering__tweens;
  const animated_size = packages__flutter__src__rendering__animated_size.src__rendering__animated_size;
  const texture = packages__flutter__src__rendering__animated_size.src__rendering__texture;
  const sliver_persistent_header = packages__flutter__src__rendering__animated_size.src__rendering__sliver_persistent_header;
  const list_wheel_viewport = packages__flutter__src__rendering__animated_size.src__rendering__list_wheel_viewport;
  const platform_view = packages__flutter__src__rendering__animated_size.src__rendering__platform_view;
  const matrix_utils = packages__flutter__src__painting___network_image_web.src__painting__matrix_utils;
  const basic_types$ = packages__flutter__src__painting___network_image_web.src__painting__basic_types;
  const border_radius = packages__flutter__src__painting___network_image_web.src__painting__border_radius;
  const box_border = packages__flutter__src__painting___network_image_web.src__painting__box_border;
  const colors = packages__flutter__src__painting___network_image_web.src__painting__colors;
  const alignment$ = packages__flutter__src__painting___network_image_web.src__painting__alignment;
  const box_fit = packages__flutter__src__painting___network_image_web.src__painting__box_fit;
  const edge_insets = packages__flutter__src__painting___network_image_web.src__painting__edge_insets;
  const text_painter = packages__flutter__src__painting___network_image_web.src__painting__text_painter;
  const inline_span = packages__flutter__src__painting___network_image_web.src__painting__inline_span;
  const strut_style = packages__flutter__src__painting___network_image_web.src__painting__strut_style;
  const decoration_image = packages__flutter__src__painting___network_image_web.src__painting__decoration_image;
  const placeholder_span = packages__flutter__src__painting___network_image_web.src__painting__placeholder_span;
  const decoration = packages__flutter__src__painting___network_image_web.src__painting__decoration;
  const box_decoration = packages__flutter__src__painting___network_image_web.src__painting__box_decoration;
  const image_provider = packages__flutter__src__painting___network_image_web.src__painting__image_provider;
  const _network_image_web = packages__flutter__src__painting___network_image_web.src__painting___network_image_web;
  const image_resolution = packages__flutter__src__painting___network_image_web.src__painting__image_resolution;
  const image_stream = packages__flutter__src__painting___network_image_web.src__painting__image_stream;
  const binding$0 = packages__flutter__src__painting___network_image_web.src__painting__binding;
  const text_span = packages__flutter__src__painting___network_image_web.src__painting__text_span;
  const geometry = packages__flutter__src__painting___network_image_web.src__painting__geometry;
  const text_style = packages__flutter__src__painting___network_image_web.src__painting__text_style;
  const box_shadow = packages__flutter__src__painting___network_image_web.src__painting__box_shadow;
  const paint_utilities = packages__flutter__src__painting___network_image_web.src__painting__paint_utilities;
  const raw_keyboard = packages__flutter__src__gestures__arena.src__services__raw_keyboard;
  const binding$1 = packages__flutter__src__gestures__arena.src__gestures__binding;
  const events = packages__flutter__src__gestures__arena.src__gestures__events;
  const recognizer = packages__flutter__src__gestures__arena.src__gestures__recognizer;
  const monodrag = packages__flutter__src__gestures__arena.src__gestures__monodrag;
  const drag_details = packages__flutter__src__gestures__arena.src__gestures__drag_details;
  const drag = packages__flutter__src__gestures__arena.src__gestures__drag;
  const asset_bundle = packages__flutter__src__gestures__arena.src__services__asset_bundle;
  const system_channels = packages__flutter__src__gestures__arena.src__services__system_channels;
  const system_navigator = packages__flutter__src__gestures__arena.src__services__system_navigator;
  const binding$2 = packages__flutter__src__gestures__arena.src__services__binding;
  const message_codec = packages__flutter__src__gestures__arena.src__services__message_codec;
  const priority = packages__flutter__src__gestures__arena.src__scheduler__priority;
  const tap$ = packages__flutter__src__gestures__arena.src__gestures__tap;
  const multitap = packages__flutter__src__gestures__arena.src__gestures__multitap;
  const long_press = packages__flutter__src__gestures__arena.src__gestures__long_press;
  const scale = packages__flutter__src__gestures__arena.src__gestures__scale;
  const force_press = packages__flutter__src__gestures__arena.src__gestures__force_press;
  const velocity_tracker = packages__flutter__src__gestures__arena.src__gestures__velocity_tracker;
  const keyboard_key = packages__flutter__src__gestures__arena.src__services__keyboard_key;
  const system_chrome = packages__flutter__src__gestures__arena.src__services__system_chrome;
  const text_input = packages__flutter__src__gestures__arena.src__services__text_input;
  const text_editing = packages__flutter__src__gestures__arena.src__services__text_editing;
  const text_formatter = packages__flutter__src__gestures__arena.src__services__text_formatter;
  const clipboard = packages__flutter__src__gestures__arena.src__services__clipboard;
  const constants = packages__flutter__src__gestures__arena.src__gestures__constants;
  const multidrag = packages__flutter__src__gestures__arena.src__gestures__multidrag;
  const haptic_feedback = packages__flutter__src__gestures__arena.src__services__haptic_feedback;
  const hit_test = packages__flutter__src__gestures__arena.src__gestures__hit_test;
  const curves = packages__flutter__src__animation__animation.src__animation__curves;
  const animations = packages__flutter__src__animation__animation.src__animation__animations;
  const tween = packages__flutter__src__animation__animation.src__animation__tween;
  const animation$ = packages__flutter__src__animation__animation.src__animation__animation;
  const animation_controller = packages__flutter__src__animation__animation.src__animation__animation_controller;
  const tween_sequence = packages__flutter__src__animation__animation.src__animation__tween_sequence;
  const ticker = packages__flutter__gestures.src__scheduler__ticker;
  const binding$3 = packages__flutter__gestures.src__scheduler__binding;
  const platform_views = packages__flutter__gestures.src__services__platform_views;
  const semantics = packages__flutter__src__semantics__binding.src__semantics__semantics;
  const binding$4 = packages__flutter__src__semantics__binding.src__semantics__binding;
  const vector_math_64 = packages__vector_math__vector_math_64.vector_math_64;
  const unmodifiable_wrappers = packages__collection__src__canonicalized_map.src__unmodifiable_wrappers;
  const utils = packages__flutter__src__physics__clamped_simulation.src__physics__utils;
  const tolerance = packages__flutter__src__physics__clamped_simulation.src__physics__tolerance;
  const simulation = packages__flutter__src__physics__clamped_simulation.src__physics__simulation;
  const spring_simulation = packages__flutter__src__physics__clamped_simulation.src__physics__spring_simulation;
  const friction_simulation = packages__flutter__src__physics__clamped_simulation.src__physics__friction_simulation;
  var navigation_toolbar = Object.create(dart.library);
  var framework = Object.create(dart.library);
  var inherited_model = Object.create(dart.library);
  var focus_manager = Object.create(dart.library);
  var focus_traversal = Object.create(dart.library);
  var scrollable$ = Object.create(dart.library);
  var viewport = Object.create(dart.library);
  var basic = Object.create(dart.library);
  var widget_span = Object.create(dart.library);
  var localizations = Object.create(dart.library);
  var container = Object.create(dart.library);
  var image$ = Object.create(dart.library);
  var ticker_provider = Object.create(dart.library);
  var scroll_aware_image_provider = Object.create(dart.library);
  var disposable_build_context = Object.create(dart.library);
  var media_query = Object.create(dart.library);
  var binding$5 = Object.create(dart.library);
  var widget_inspector = Object.create(dart.library);
  var gesture_detector = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var table$ = Object.create(dart.library);
  var app = Object.create(dart.library);
  var title$ = Object.create(dart.library);
  var text = Object.create(dart.library);
  var inherited_theme = Object.create(dart.library);
  var shortcuts$ = Object.create(dart.library);
  var inherited_notifier = Object.create(dart.library);
  var focus_scope = Object.create(dart.library);
  var actions$ = Object.create(dart.library);
  var semantics_debugger = Object.create(dart.library);
  var performance_overlay$ = Object.create(dart.library);
  var pages = Object.create(dart.library);
  var routes = Object.create(dart.library);
  var transitions = Object.create(dart.library);
  var page_storage = Object.create(dart.library);
  var overlay$ = Object.create(dart.library);
  var navigator$ = Object.create(dart.library);
  var route_notification_messages = Object.create(dart.library);
  var modal_barrier = Object.create(dart.library);
  var banner = Object.create(dart.library);
  var scroll_position_with_single_context = Object.create(dart.library);
  var scroll_position = Object.create(dart.library);
  var scroll_activity = Object.create(dart.library);
  var scroll_notification = Object.create(dart.library);
  var scroll_metrics = Object.create(dart.library);
  var notification_listener = Object.create(dart.library);
  var scroll_physics = Object.create(dart.library);
  var scroll_simulation = Object.create(dart.library);
  var overscroll_indicator = Object.create(dart.library);
  var scroll_context = Object.create(dart.library);
  var scroll_controller = Object.create(dart.library);
  var scroll_configuration = Object.create(dart.library);
  var editable_text = Object.create(dart.library);
  var text_selection = Object.create(dart.library);
  var visibility = Object.create(dart.library);
  var sliver$ = Object.create(dart.library);
  var automatic_keep_alive = Object.create(dart.library);
  var constants$ = Object.create(dart.library);
  var sliver_fill$ = Object.create(dart.library);
  var tween_animation_builder = Object.create(dart.library);
  var value_listenable_builder = Object.create(dart.library);
  var implicit_animations = Object.create(dart.library);
  var sliver_prototype_extent_list = Object.create(dart.library);
  var animated_cross_fade = Object.create(dart.library);
  var animated_size$ = Object.create(dart.library);
  var primary_scroll_controller = Object.create(dart.library);
  var preferred_size = Object.create(dart.library);
  var icon_theme_data = Object.create(dart.library);
  var raw_keyboard_listener = Object.create(dart.library);
  var async$ = Object.create(dart.library);
  var image_filter = Object.create(dart.library);
  var fade_in_image = Object.create(dart.library);
  var scroll_view = Object.create(dart.library);
  var unique_widget = Object.create(dart.library);
  var texture$ = Object.create(dart.library);
  var page_view = Object.create(dart.library);
  var bottom_navigation_bar_item = Object.create(dart.library);
  var color_filter = Object.create(dart.library);
  var status_transitions = Object.create(dart.library);
  var sliver_layout_builder = Object.create(dart.library);
  var layout_builder = Object.create(dart.library);
  var icon_data = Object.create(dart.library);
  var annotated_region = Object.create(dart.library);
  var single_child_scroll_view = Object.create(dart.library);
  var scrollbar = Object.create(dart.library);
  var heroes = Object.create(dart.library);
  var dismissible = Object.create(dart.library);
  var animated_list = Object.create(dart.library);
  var icon_theme = Object.create(dart.library);
  var orientation_builder = Object.create(dart.library);
  var size_changed_layout_notifier = Object.create(dart.library);
  var spacer = Object.create(dart.library);
  var animated_switcher = Object.create(dart.library);
  var will_pop_scope = Object.create(dart.library);
  var sliver_persistent_header$ = Object.create(dart.library);
  var image_icon = Object.create(dart.library);
  var icon$ = Object.create(dart.library);
  var drag_target = Object.create(dart.library);
  var form = Object.create(dart.library);
  var safe_area = Object.create(dart.library);
  var list_wheel_scroll_view = Object.create(dart.library);
  var placeholder = Object.create(dart.library);
  var grid_paper = Object.create(dart.library);
  var nested_scroll_view = Object.create(dart.library);
  var platform_view$ = Object.create(dart.library);
  var draggable_scrollable_sheet = Object.create(dart.library);
  var $add = dartx.add;
  var $_equals = dartx._equals;
  var $hashCode = dartx.hashCode;
  var $runtimeType = dartx.runtimeType;
  var $_get = dartx._get;
  var $remove = dartx.remove;
  var $containsKey = dartx.containsKey;
  var $_set = dartx._set;
  var $forEach = dartx.forEach;
  var $clear = dartx.clear;
  var $putIfAbsent = dartx.putIfAbsent;
  var $keys = dartx.keys;
  var $length = dartx.length;
  var $endsWith = dartx.endsWith;
  var $substring = dartx.substring;
  var $indexOf = dartx.indexOf;
  var $toList = dartx.toList;
  var $sort = dartx.sort;
  var $reversed = dartx.reversed;
  var $isEmpty = dartx.isEmpty;
  var $contains = dartx.contains;
  var $any = dartx.any;
  var $isNotEmpty = dartx.isNotEmpty;
  var $toString = dartx.toString;
  var $map = dartx.map;
  var $join = dartx.join;
  var $modulo = dartx['%'];
  var $insert = dartx.insert;
  var $stackTrace = dartx.stackTrace;
  var $values = dartx.values;
  var $where = dartx.where;
  var $last = dartx.last;
  var $addAll = dartx.addAll;
  var $firstWhere = dartx.firstWhere;
  var $whereType = dartx.whereType;
  var $toSet = dartx.toSet;
  var $removeWhere = dartx.removeWhere;
  var $compareTo = dartx.compareTo;
  var $first = dartx.first;
  var $removeLast = dartx.removeLast;
  var $abs = dartx.abs;
  var $single = dartx.single;
  var $singleWhere = dartx.singleWhere;
  var $insertAll = dartx.insertAll;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $startsWith = dartx.startsWith;
  var $noSuchMethod = dartx.noSuchMethod;
  var $buffer = dartx.buffer;
  var $take = dartx.take;
  var $every = dartx.every;
  var $expand = dartx.expand;
  var $iterator = dartx.iterator;
  var $times = dartx['*'];
  var $sign = dartx.sign;
  var $trim = dartx.trim;
  var $leftShift = dartx['<<'];
  var $lastWhere = dartx.lastWhere;
  var $lastIndexOf = dartx.lastIndexOf;
  var $skip = dartx.skip;
  var $split = dartx.split;
  var $removeAt = dartx.removeAt;
  var $indexWhere = dartx.indexWhere;
  var $clamp = dartx.clamp;
  var $isFinite = dartx.isFinite;
  var $toDouble = dartx.toDouble;
  var $round = dartx.round;
  var $replaceRange = dartx.replaceRange;
  var $truncate = dartx.truncate;
  var $isEven = dartx.isEven;
  var $roundToDouble = dartx.roundToDouble;
  var $toRadixString = dartx.toRadixString;
  var $toUpperCase = dartx.toUpperCase;
  var $padLeft = dartx.padLeft;
  var $followedBy = dartx.followedBy;
  var $cast = dartx.cast;
  var JSArrayOfWidget = () => (JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))();
  var VoidTobool = () => (VoidTobool = dart.constFn(dart.fnType(core.bool, [])))();
  var StateOfStatefulWidget = () => (StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))();
  var GlobalKeyOfStateOfStatefulWidget = () => (GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(StateOfStatefulWidget())))();
  var LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, GlobalKeyOfStateOfStatefulWidget())))();
  var LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element = () => (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element = dart.constFn(_js_helper.LinkedMap$(GlobalKeyOfStateOfStatefulWidget(), framework.Element)))();
  var JSArrayOfDiagnosticsNode = () => (JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics$.DiagnosticsNode)))();
  var ElementToNull = () => (ElementToNull = dart.constFn(dart.fnType(core.Null, [framework.Element])))();
  var ElementAndGlobalKeyOfStateOfStatefulWidgetToNull = () => (ElementAndGlobalKeyOfStateOfStatefulWidgetToNull = dart.constFn(dart.fnType(core.Null, [framework.Element, GlobalKeyOfStateOfStatefulWidget()])))();
  var MapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (MapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(core.Map$(framework.Element, GlobalKeyOfStateOfStatefulWidget())))();
  var ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetToNull = () => (ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetToNull = dart.constFn(dart.fnType(core.Null, [framework.Element, MapOfElement$GlobalKeyOfStateOfStatefulWidget()])))();
  var SetOfElement = () => (SetOfElement = dart.constFn(core.Set$(framework.Element)))();
  var LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement = () => (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement = dart.constFn(_js_helper.LinkedMap$(GlobalKeyOfStateOfStatefulWidget(), SetOfElement())))();
  var _HashSetOfElement = () => (_HashSetOfElement = dart.constFn(collection._HashSet$(framework.Element)))();
  var LinkedHashSetOfElement = () => (LinkedHashSetOfElement = dart.constFn(collection.LinkedHashSet$(framework.Element)))();
  var VoidToLinkedHashSetOfElement = () => (VoidToLinkedHashSetOfElement = dart.constFn(dart.fnType(LinkedHashSetOfElement(), [])))();
  var LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, MapOfElement$GlobalKeyOfStateOfStatefulWidget())))();
  var LabeledGlobalKeyOfStateOfStatefulWidget = () => (LabeledGlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.LabeledGlobalKey$(StateOfStatefulWidget())))();
  var EnumPropertyOf_StateLifecycle = () => (EnumPropertyOf_StateLifecycle = dart.constFn(diagnostics$.EnumProperty$(framework._StateLifecycle)))();
  var ObjectFlagPropertyOfStatefulElement = () => (ObjectFlagPropertyOfStatefulElement = dart.constFn(diagnostics$.ObjectFlagProperty$(framework.StatefulElement)))();
  var SyncIterableOfDiagnosticsNode = () => (SyncIterableOfDiagnosticsNode = dart.constFn(_js_helper.SyncIterable$(diagnostics$.DiagnosticsNode)))();
  var ElementAndElementToint = () => (ElementAndElementToint = dart.constFn(dart.fnType(core.int, [framework.Element, framework.Element])))();
  var ElementTovoid = () => (ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))();
  var JSArrayOfElement = () => (JSArrayOfElement = dart.constFn(_interceptors.JSArray$(framework.Element)))();
  var IterableOfDiagnosticsNode = () => (IterableOfDiagnosticsNode = dart.constFn(core.Iterable$(diagnostics$.DiagnosticsNode)))();
  var VoidToIterableOfDiagnosticsNode = () => (VoidToIterableOfDiagnosticsNode = dart.constFn(dart.fnType(IterableOfDiagnosticsNode(), [])))();
  var ElementTobool = () => (ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))();
  var SetOfGlobalKeyOfStateOfStatefulWidget = () => (SetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.Set$(GlobalKeyOfStateOfStatefulWidget())))();
  var LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget = () => (LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.LinkedMap$(framework.Element, SetOfGlobalKeyOfStateOfStatefulWidget())))();
  var _HashSetOfGlobalKeyOfStateOfStatefulWidget = () => (_HashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(collection._HashSet$(GlobalKeyOfStateOfStatefulWidget())))();
  var HashSetOfGlobalKeyOfStateOfStatefulWidget = () => (HashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(collection.HashSet$(GlobalKeyOfStateOfStatefulWidget())))();
  var VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget = () => (VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(HashSetOfGlobalKeyOfStateOfStatefulWidget(), [])))();
  var VoidToNull = () => (VoidToNull = dart.constFn(dart.fnType(core.Null, [])))();
  var IdentityMapOfString$int = () => (IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))();
  var GlobalKeyOfStateOfStatefulWidgetToString = () => (GlobalKeyOfStateOfStatefulWidgetToString = dart.constFn(dart.fnType(core.String, [GlobalKeyOfStateOfStatefulWidget()])))();
  var JSArrayOfString = () => (JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))();
  var StringAndintToNull = () => (StringAndintToNull = dart.constFn(dart.fnType(core.Null, [core.String, core.int])))();
  var ElementToString = () => (ElementToString = dart.constFn(dart.fnType(core.String, [framework.Element])))();
  var DiagnosticsPropertyOfElement = () => (DiagnosticsPropertyOfElement = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.Element)))();
  var ElementToDiagnosticsPropertyOfElement = () => (ElementToDiagnosticsPropertyOfElement = dart.constFn(dart.fnType(DiagnosticsPropertyOfElement(), [framework.Element])))();
  var DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget = () => (DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(GlobalKeyOfStateOfStatefulWidget())))();
  var DiagnosticsPropertyOfWidget = () => (DiagnosticsPropertyOfWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.Widget)))();
  var _HashSetOfInheritedElement = () => (_HashSetOfInheritedElement = dart.constFn(collection._HashSet$(framework.InheritedElement)))();
  var ObjectFlagPropertyOfint = () => (ObjectFlagPropertyOfint = dart.constFn(diagnostics$.ObjectFlagProperty$(core.int)))();
  var ObjectFlagPropertyOfWidget = () => (ObjectFlagPropertyOfWidget = dart.constFn(diagnostics$.ObjectFlagProperty$(framework.Widget)))();
  var DiagnosticsPropertyOfKey = () => (DiagnosticsPropertyOfKey = dart.constFn(diagnostics$.DiagnosticsProperty$(key.Key)))();
  var InheritedElementToDiagnosticsNode = () => (InheritedElementToDiagnosticsNode = dart.constFn(dart.fnType(diagnostics$.DiagnosticsNode, [framework.InheritedElement])))();
  var ListOfDiagnosticsNode = () => (ListOfDiagnosticsNode = dart.constFn(core.List$(diagnostics$.DiagnosticsNode)))();
  var DiagnosticsPropertyOfListOfDiagnosticsNode = () => (DiagnosticsPropertyOfListOfDiagnosticsNode = dart.constFn(diagnostics$.DiagnosticsProperty$(ListOfDiagnosticsNode())))();
  var FlutterErrorDetailsToWidget = () => (FlutterErrorDetailsToWidget = dart.constFn(dart.fnType(framework.Widget, [assertions.FlutterErrorDetails])))();
  var SyncIterableOfDiagnosticsDebugCreator = () => (SyncIterableOfDiagnosticsDebugCreator = dart.constFn(_js_helper.SyncIterable$(object$.DiagnosticsDebugCreator)))();
  var IterableOfDiagnosticsDebugCreator = () => (IterableOfDiagnosticsDebugCreator = dart.constFn(core.Iterable$(object$.DiagnosticsDebugCreator)))();
  var VoidToIterableOfDiagnosticsDebugCreator = () => (VoidToIterableOfDiagnosticsDebugCreator = dart.constFn(dart.fnType(IterableOfDiagnosticsDebugCreator(), [])))();
  var DiagnosticsPropertyOfStateOfStatefulWidget = () => (DiagnosticsPropertyOfStateOfStatefulWidget = dart.constFn(diagnostics$.DiagnosticsProperty$(StateOfStatefulWidget())))();
  var ParentDataElementOfParentData = () => (ParentDataElementOfParentData = dart.constFn(framework.ParentDataElement$(object$.ParentData)))();
  var LinkedMapOfElement$Object = () => (LinkedMapOfElement$Object = dart.constFn(_js_helper.LinkedMap$(framework.Element, core.Object)))();
  var HashMapOfType$InheritedElement = () => (HashMapOfType$InheritedElement = dart.constFn(collection.HashMap$(core.Type, framework.InheritedElement)))();
  var LinkedMapOfType$InheritedElement = () => (LinkedMapOfType$InheritedElement = dart.constFn(_js_helper.LinkedMap$(core.Type, framework.InheritedElement)))();
  var JSArrayOfParentDataElementOfParentData = () => (JSArrayOfParentDataElementOfParentData = dart.constFn(_interceptors.JSArray$(ParentDataElementOfParentData())))();
  var ElementToElement = () => (ElementToElement = dart.constFn(dart.fnType(framework.Element, [framework.Element])))();
  var ListOfElement = () => (ListOfElement = dart.constFn(core.List$(framework.Element)))();
  var LinkedMapOfKey$Element = () => (LinkedMapOfKey$Element = dart.constFn(_js_helper.LinkedMap$(key.Key, framework.Element)))();
  var DiagnosticsPropertyOfRenderObject = () => (DiagnosticsPropertyOfRenderObject = dart.constFn(diagnostics$.DiagnosticsProperty$(object$.RenderObject)))();
  var RenderObjectWithChildMixinOfRenderObject = () => (RenderObjectWithChildMixinOfRenderObject = dart.constFn(object$.RenderObjectWithChildMixin$(object$.RenderObject)))();
  var ContainerParentDataMixinOfRenderObject = () => (ContainerParentDataMixinOfRenderObject = dart.constFn(object$.ContainerParentDataMixin$(object$.RenderObject)))();
  var ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject = () => (ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject = dart.constFn(object$.ContainerRenderObjectMixin$(object$.RenderObject, ContainerParentDataMixinOfRenderObject())))();
  var JSArrayOfInheritedElement = () => (JSArrayOfInheritedElement = dart.constFn(_interceptors.JSArray$(framework.InheritedElement)))();
  var JSArrayOfFocusNode = () => (JSArrayOfFocusNode = dart.constFn(_interceptors.JSArray$(focus_manager.FocusNode)))();
  var FocusNodeTobool = () => (FocusNodeTobool = dart.constFn(dart.fnType(core.bool, [focus_manager.FocusNode])))();
  var DiagnosticsPropertyOfBuildContext = () => (DiagnosticsPropertyOfBuildContext = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.BuildContext)))();
  var FocusNodeToDiagnosticsNode = () => (FocusNodeToDiagnosticsNode = dart.constFn(dart.fnType(diagnostics$.DiagnosticsNode, [focus_manager.FocusNode])))();
  var FocusNodeToString = () => (FocusNodeToString = dart.constFn(dart.fnType(core.String, [focus_manager.FocusNode])))();
  var IterablePropertyOfString = () => (IterablePropertyOfString = dart.constFn(diagnostics$.IterableProperty$(core.String)))();
  var FocusHighlightModeTovoid = () => (FocusHighlightModeTovoid = dart.constFn(dart.fnType(dart.void, [focus_manager.FocusHighlightMode])))();
  var HashedObserverListOfFocusHighlightModeTovoid = () => (HashedObserverListOfFocusHighlightModeTovoid = dart.constFn(observer_list.HashedObserverList$(FocusHighlightModeTovoid())))();
  var LinkedHashSetOfFocusNode = () => (LinkedHashSetOfFocusNode = dart.constFn(collection.LinkedHashSet$(focus_manager.FocusNode)))();
  var ListOfFocusHighlightModeTovoid = () => (ListOfFocusHighlightModeTovoid = dart.constFn(core.List$(FocusHighlightModeTovoid())))();
  var DiagnosticsPropertyOfFocusManager = () => (DiagnosticsPropertyOfFocusManager = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_manager.FocusManager)))();
  var SyncIterableOfDiagnosticsPropertyOfFocusManager = () => (SyncIterableOfDiagnosticsPropertyOfFocusManager = dart.constFn(_js_helper.SyncIterable$(DiagnosticsPropertyOfFocusManager())))();
  var IterableOfDiagnosticsPropertyOfFocusManager = () => (IterableOfDiagnosticsPropertyOfFocusManager = dart.constFn(core.Iterable$(DiagnosticsPropertyOfFocusManager())))();
  var VoidToIterableOfDiagnosticsPropertyOfFocusManager = () => (VoidToIterableOfDiagnosticsPropertyOfFocusManager = dart.constFn(dart.fnType(IterableOfDiagnosticsPropertyOfFocusManager(), [])))();
  var DiagnosticsPropertyOfFocusNode = () => (DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics$.DiagnosticsProperty$(focus_manager.FocusNode)))();
  var DiagnosticsPropertyOfString = () => (DiagnosticsPropertyOfString = dart.constFn(diagnostics$.DiagnosticsProperty$(core.String)))();
  var LinkedMapOfFocusScopeNode$_DirectionalPolicyData = () => (LinkedMapOfFocusScopeNode$_DirectionalPolicyData = dart.constFn(_js_helper.LinkedMap$(focus_manager.FocusScopeNode, focus_traversal._DirectionalPolicyData)))();
  var _DirectionalPolicyDataEntryTobool = () => (_DirectionalPolicyDataEntryTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal._DirectionalPolicyDataEntry])))();
  var FocusNodeAndFocusNodeToint = () => (FocusNodeAndFocusNodeToint = dart.constFn(dart.fnType(core.int, [focus_manager.FocusNode, focus_manager.FocusNode])))();
  var TraversalDirectionTobool = () => (TraversalDirectionTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal.TraversalDirection])))();
  var JSArrayOf_DirectionalPolicyDataEntry = () => (JSArrayOf_DirectionalPolicyDataEntry = dart.constFn(_interceptors.JSArray$(focus_traversal._DirectionalPolicyDataEntry)))();
  var _SortDataTobool = () => (_SortDataTobool = dart.constFn(dart.fnType(core.bool, [focus_traversal._SortData])))();
  var IterableOf_SortData = () => (IterableOf_SortData = dart.constFn(core.Iterable$(focus_traversal._SortData)))();
  var _SortDataAndIterableOf_SortDataToIterableOf_SortData = () => (_SortDataAndIterableOf_SortDataToIterableOf_SortData = dart.constFn(dart.fnType(IterableOf_SortData(), [focus_traversal._SortData, IterableOf_SortData()])))();
  var _SortDataAnd_SortDataToint = () => (_SortDataAnd_SortDataToint = dart.constFn(dart.fnType(core.int, [focus_traversal._SortData, focus_traversal._SortData])))();
  var ListOf_SortData = () => (ListOf_SortData = dart.constFn(core.List$(focus_traversal._SortData)))();
  var ListOf_SortDataTo_SortData = () => (ListOf_SortDataTo_SortData = dart.constFn(dart.fnType(focus_traversal._SortData, [ListOf_SortData()])))();
  var JSArrayOf_SortData = () => (JSArrayOf_SortData = dart.constFn(_interceptors.JSArray$(focus_traversal._SortData)))();
  var _SortDataToFocusNode = () => (_SortDataToFocusNode = dart.constFn(dart.fnType(focus_manager.FocusNode, [focus_traversal._SortData])))();
  var DiagnosticsPropertyOfLocalKey = () => (DiagnosticsPropertyOfLocalKey = dart.constFn(diagnostics$.DiagnosticsProperty$(key.LocalKey)))();
  var ValueKeyOfType = () => (ValueKeyOfType = dart.constFn(key.ValueKey$(core.Type)))();
  var EnumPropertyOfAxisDirection = () => (EnumPropertyOfAxisDirection = dart.constFn(diagnostics$.EnumProperty$(basic_types$.AxisDirection)))();
  var DiagnosticsPropertyOfScrollPhysics = () => (DiagnosticsPropertyOfScrollPhysics = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_physics.ScrollPhysics)))();
  var FutureOfvoid = () => (FutureOfvoid = dart.constFn(async.Future$(dart.void)))();
  var JSArrayOfFutureOfvoid = () => (JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(FutureOfvoid())))();
  var ListOfvoid = () => (ListOfvoid = dart.constFn(core.List$(dart.void)))();
  var ListOfvoidToNull = () => (ListOfvoidToNull = dart.constFn(dart.fnType(core.Null, [ListOfvoid()])))();
  var GlobalKeyOfRawGestureDetectorState = () => (GlobalKeyOfRawGestureDetectorState = dart.constFn(framework.GlobalKey$(gesture_detector.RawGestureDetectorState)))();
  var GestureRecognizerFactoryOfGestureRecognizer = () => (GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer)))();
  var GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.VerticalDragGestureRecognizer)))();
  var VoidToVerticalDragGestureRecognizer = () => (VoidToVerticalDragGestureRecognizer = dart.constFn(dart.fnType(monodrag.VerticalDragGestureRecognizer, [])))();
  var VerticalDragGestureRecognizerToNull = () => (VerticalDragGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [monodrag.VerticalDragGestureRecognizer])))();
  var LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer = () => (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer = dart.constFn(_js_helper.LinkedMap$(core.Type, GestureRecognizerFactoryOfGestureRecognizer())))();
  var GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.HorizontalDragGestureRecognizer)))();
  var VoidToHorizontalDragGestureRecognizer = () => (VoidToHorizontalDragGestureRecognizer = dart.constFn(dart.fnType(monodrag.HorizontalDragGestureRecognizer, [])))();
  var HorizontalDragGestureRecognizerToNull = () => (HorizontalDragGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [monodrag.HorizontalDragGestureRecognizer])))();
  var DiagnosticsPropertyOfScrollPosition = () => (DiagnosticsPropertyOfScrollPosition = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_position.ScrollPosition)))();
  var LinkedHashSetOf_WidgetTicker = () => (LinkedHashSetOf_WidgetTicker = dart.constFn(collection.LinkedHashSet$(ticker_provider._WidgetTicker)))();
  var SetOfTicker = () => (SetOfTicker = dart.constFn(core.Set$(ticker.Ticker)))();
  var DiagnosticsPropertyOfSetOfTicker = () => (DiagnosticsPropertyOfSetOfTicker = dart.constFn(diagnostics$.DiagnosticsProperty$(SetOfTicker())))();
  var JSArrayOfSemanticsNode = () => (JSArrayOfSemanticsNode = dart.constFn(_interceptors.JSArray$(semantics.SemanticsNode)))();
  var WidgetTobool = () => (WidgetTobool = dart.constFn(dart.fnType(core.bool, [framework.Widget])))();
  var DiagnosticsPropertyOfViewportOffset = () => (DiagnosticsPropertyOfViewportOffset = dart.constFn(diagnostics$.DiagnosticsProperty$(viewport_offset.ViewportOffset)))();
  var DiagnosticsPropertyOfdouble = () => (DiagnosticsPropertyOfdouble = dart.constFn(diagnostics$.DiagnosticsProperty$(core.double)))();
  var DiagnosticsPropertyOfCacheExtentStyle = () => (DiagnosticsPropertyOfCacheExtentStyle = dart.constFn(diagnostics$.DiagnosticsProperty$(viewport$.CacheExtentStyle)))();
  var EnumPropertyOfTextDirection = () => (EnumPropertyOfTextDirection = dart.constFn(diagnostics$.EnumProperty$(ui.TextDirection)))();
  var CustomClipperOfRect = () => (CustomClipperOfRect = dart.constFn(proxy_box.CustomClipper$(ui.Rect)))();
  var DiagnosticsPropertyOfCustomClipperOfRect = () => (DiagnosticsPropertyOfCustomClipperOfRect = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfRect())))();
  var DiagnosticsPropertyOfBorderRadius = () => (DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics$.DiagnosticsProperty$(border_radius.BorderRadius)))();
  var CustomClipperOfRRect = () => (CustomClipperOfRRect = dart.constFn(proxy_box.CustomClipper$(ui.RRect)))();
  var DiagnosticsPropertyOfCustomClipperOfRRect = () => (DiagnosticsPropertyOfCustomClipperOfRRect = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfRRect())))();
  var BuildContextToClipPath = () => (BuildContextToClipPath = dart.constFn(dart.fnType(basic.ClipPath, [framework.BuildContext])))();
  var CustomClipperOfPath = () => (CustomClipperOfPath = dart.constFn(proxy_box.CustomClipper$(ui.Path)))();
  var DiagnosticsPropertyOfCustomClipperOfPath = () => (DiagnosticsPropertyOfCustomClipperOfPath = dart.constFn(diagnostics$.DiagnosticsProperty$(CustomClipperOfPath())))();
  var EnumPropertyOfBoxShape = () => (EnumPropertyOfBoxShape = dart.constFn(diagnostics$.EnumProperty$(box_border.BoxShape)))();
  var EnumPropertyOfBoxFit = () => (EnumPropertyOfBoxFit = dart.constFn(diagnostics$.EnumProperty$(box_fit.BoxFit)))();
  var DiagnosticsPropertyOfAlignmentGeometry = () => (DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics$.DiagnosticsProperty$(alignment$.AlignmentGeometry)))();
  var DiagnosticsPropertyOfEdgeInsetsGeometry = () => (DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics$.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))();
  var ValueKeyOfObject = () => (ValueKeyOfObject = dart.constFn(key.ValueKey$(core.Object)))();
  var DiagnosticsPropertyOfObject = () => (DiagnosticsPropertyOfObject = dart.constFn(diagnostics$.DiagnosticsProperty$(core.Object)))();
  var DiagnosticsPropertyOfBoxConstraints = () => (DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics$.DiagnosticsProperty$(box$.BoxConstraints)))();
  var EnumPropertyOfAxis = () => (EnumPropertyOfAxis = dart.constFn(diagnostics$.EnumProperty$(basic_types$.Axis)))();
  var DiagnosticsPropertyOfSize = () => (DiagnosticsPropertyOfSize = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Size)))();
  var DiagnosticsPropertyOfbool = () => (DiagnosticsPropertyOfbool = dart.constFn(diagnostics$.DiagnosticsProperty$(core.bool)))();
  var EnumPropertyOfStackFit = () => (EnumPropertyOfStackFit = dart.constFn(diagnostics$.EnumProperty$(stack.StackFit)))();
  var EnumPropertyOfOverflow = () => (EnumPropertyOfOverflow = dart.constFn(diagnostics$.EnumProperty$(stack.Overflow)))();
  var EnumPropertyOfMainAxisAlignment = () => (EnumPropertyOfMainAxisAlignment = dart.constFn(diagnostics$.EnumProperty$(flex$.MainAxisAlignment)))();
  var EnumPropertyOfMainAxisSize = () => (EnumPropertyOfMainAxisSize = dart.constFn(diagnostics$.EnumProperty$(flex$.MainAxisSize)))();
  var EnumPropertyOfCrossAxisAlignment = () => (EnumPropertyOfCrossAxisAlignment = dart.constFn(diagnostics$.EnumProperty$(flex$.CrossAxisAlignment)))();
  var EnumPropertyOfVerticalDirection = () => (EnumPropertyOfVerticalDirection = dart.constFn(diagnostics$.EnumProperty$(basic_types$.VerticalDirection)))();
  var EnumPropertyOfTextBaseline = () => (EnumPropertyOfTextBaseline = dart.constFn(diagnostics$.EnumProperty$(ui.TextBaseline)))();
  var EnumPropertyOfWrapAlignment = () => (EnumPropertyOfWrapAlignment = dart.constFn(diagnostics$.EnumProperty$(wrap.WrapAlignment)))();
  var InlineSpanTobool = () => (InlineSpanTobool = dart.constFn(dart.fnType(core.bool, [inline_span.InlineSpan])))();
  var EnumPropertyOfTextAlign = () => (EnumPropertyOfTextAlign = dart.constFn(diagnostics$.EnumProperty$(ui.TextAlign)))();
  var EnumPropertyOfTextOverflow = () => (EnumPropertyOfTextOverflow = dart.constFn(diagnostics$.EnumProperty$(paragraph.TextOverflow)))();
  var EnumPropertyOfTextWidthBasis = () => (EnumPropertyOfTextWidthBasis = dart.constFn(diagnostics$.EnumProperty$(text_painter.TextWidthBasis)))();
  var DiagnosticsPropertyOfImage = () => (DiagnosticsPropertyOfImage = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Image)))();
  var EnumPropertyOfBlendMode = () => (EnumPropertyOfBlendMode = dart.constFn(diagnostics$.EnumProperty$(ui.BlendMode)))();
  var EnumPropertyOfImageRepeat = () => (EnumPropertyOfImageRepeat = dart.constFn(diagnostics$.EnumProperty$(decoration_image.ImageRepeat)))();
  var DiagnosticsPropertyOfRect = () => (DiagnosticsPropertyOfRect = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Rect)))();
  var EnumPropertyOfFilterQuality = () => (EnumPropertyOfFilterQuality = dart.constFn(diagnostics$.EnumProperty$(ui.FilterQuality)))();
  var GlobalObjectKeyOfStateOfStatefulWidget = () => (GlobalObjectKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalObjectKey$(StateOfStatefulWidget())))();
  var EnumPropertyOfHitTestBehavior = () => (EnumPropertyOfHitTestBehavior = dart.constFn(diagnostics$.EnumProperty$(proxy_box.HitTestBehavior)))();
  var ValueKeyOfKey = () => (ValueKeyOfKey = dart.constFn(key.ValueKey$(key.Key)))();
  var ValueKeyOfint = () => (ValueKeyOfint = dart.constFn(key.ValueKey$(core.int)))();
  var ListOfRepaintBoundary = () => (ListOfRepaintBoundary = dart.constFn(core.List$(basic.RepaintBoundary)))();
  var DiagnosticsPropertyOfSemanticsProperties = () => (DiagnosticsPropertyOfSemanticsProperties = dart.constFn(diagnostics$.DiagnosticsProperty$(semantics.SemanticsProperties)))();
  var DiagnosticsPropertyOfint = () => (DiagnosticsPropertyOfint = dart.constFn(diagnostics$.DiagnosticsProperty$(core.int)))();
  var SynchronousFutureOfWidgetsLocalizations = () => (SynchronousFutureOfWidgetsLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(localizations.WidgetsLocalizations)))();
  var LocalizationsDelegateOfWidgetsLocalizations = () => (LocalizationsDelegateOfWidgetsLocalizations = dart.constFn(localizations.LocalizationsDelegate$(localizations.WidgetsLocalizations)))();
  var LocalizationsDelegateTobool = () => (LocalizationsDelegateTobool = dart.constFn(dart.fnType(core.bool, [localizations.LocalizationsDelegate])))();
  var ListOfLocalizationsDelegate = () => (ListOfLocalizationsDelegate = dart.constFn(core.List$(localizations.LocalizationsDelegate)))();
  var DiagnosticsPropertyOfLocale = () => (DiagnosticsPropertyOfLocale = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Locale)))();
  var IterablePropertyOfLocalizationsDelegate = () => (IterablePropertyOfLocalizationsDelegate = dart.constFn(diagnostics$.IterableProperty$(localizations.LocalizationsDelegate)))();
  var LinkedMapOfType$dynamic = () => (LinkedMapOfType$dynamic = dart.constFn(_js_helper.LinkedMap$(core.Type, dart.dynamic)))();
  var MapOfType$dynamic = () => (MapOfType$dynamic = dart.constFn(core.Map$(core.Type, dart.dynamic)))();
  var MapOfType$dynamicToMapOfType$dynamic = () => (MapOfType$dynamicToMapOfType$dynamic = dart.constFn(dart.fnType(MapOfType$dynamic(), [MapOfType$dynamic()])))();
  var MapOfType$dynamicToNull = () => (MapOfType$dynamicToNull = dart.constFn(dart.fnType(core.Null, [MapOfType$dynamic()])))();
  var LinkedHashSetOfType = () => (LinkedHashSetOfType = dart.constFn(collection.LinkedHashSet$(core.Type)))();
  var JSArrayOfLocalizationsDelegate = () => (JSArrayOfLocalizationsDelegate = dart.constFn(_interceptors.JSArray$(localizations.LocalizationsDelegate)))();
  var dynamicTodynamic = () => (dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))();
  var JSArrayOf_Pending = () => (JSArrayOf_Pending = dart.constFn(_interceptors.JSArray$(localizations._Pending)))();
  var SynchronousFutureOfMapOfType$dynamic = () => (SynchronousFutureOfMapOfType$dynamic = dart.constFn(synchronous_future.SynchronousFuture$(MapOfType$dynamic())))();
  var _PendingToFuture = () => (_PendingToFuture = dart.constFn(dart.fnType(async.Future, [localizations._Pending])))();
  var ListToMapOfType$dynamic = () => (ListToMapOfType$dynamic = dart.constFn(dart.fnType(MapOfType$dynamic(), [core.List])))();
  var EnumPropertyOfDecorationPosition = () => (EnumPropertyOfDecorationPosition = dart.constFn(diagnostics$.EnumProperty$(proxy_box.DecorationPosition)))();
  var DiagnosticsPropertyOfDecoration = () => (DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics$.DiagnosticsProperty$(decoration.Decoration)))();
  var DiagnosticsPropertyOfClip = () => (DiagnosticsPropertyOfClip = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.Clip)))();
  var ObjectFlagPropertyOfMatrix4 = () => (ObjectFlagPropertyOfMatrix4 = dart.constFn(diagnostics$.ObjectFlagProperty$(vector_math_64.Matrix4)))();
  var DiagnosticsPropertyOfImageProvider = () => (DiagnosticsPropertyOfImageProvider = dart.constFn(diagnostics$.DiagnosticsProperty$(image_provider.ImageProvider)))();
  var DiagnosticsPropertyOfFunction = () => (DiagnosticsPropertyOfFunction = dart.constFn(diagnostics$.DiagnosticsProperty$(core.Function)))();
  var StateOfImage = () => (StateOfImage = dart.constFn(framework.State$(image$.Image)))();
  var DisposableBuildContextOfStateOfImage = () => (DisposableBuildContextOfStateOfImage = dart.constFn(disposable_build_context.DisposableBuildContext$(StateOfImage())))();
  var DiagnosticsPropertyOfImageStream = () => (DiagnosticsPropertyOfImageStream = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageStream)))();
  var DiagnosticsPropertyOfImageInfo = () => (DiagnosticsPropertyOfImageInfo = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageInfo)))();
  var DiagnosticsPropertyOfImageChunkEvent = () => (DiagnosticsPropertyOfImageChunkEvent = dart.constFn(diagnostics$.DiagnosticsProperty$(image_stream.ImageChunkEvent)))();
  var FutureOfbool = () => (FutureOfbool = dart.constFn(async.Future$(core.bool)))();
  var CompleterOfvoid = () => (CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))();
  var ImageInfoAndboolToNull = () => (ImageInfoAndboolToNull = dart.constFn(dart.fnType(core.Null, [image_stream.ImageInfo, core.bool])))();
  var dynamicAndStackTraceToNull = () => (dynamicAndStackTraceToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic, core.StackTrace])))();
  var DiagnosticsPropertyOfTicker = () => (DiagnosticsPropertyOfTicker = dart.constFn(diagnostics$.DiagnosticsProperty$(ticker.Ticker)))();
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var DurationToNull = () => (DurationToNull = dart.constFn(dart.fnType(core.Null, [core.Duration])))();
  var DiagnosticsPropertyOfMediaQueryData = () => (DiagnosticsPropertyOfMediaQueryData = dart.constFn(diagnostics$.DiagnosticsProperty$(media_query.MediaQueryData)))();
  var JSArrayOfWidgetsBindingObserver = () => (JSArrayOfWidgetsBindingObserver = dart.constFn(_interceptors.JSArray$(binding$5.WidgetsBindingObserver)))();
  var IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode = () => (IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode = dart.constFn(dart.fnType(IterableOfDiagnosticsNode(), [IterableOfDiagnosticsNode()])))();
  var VoidToFutureOfvoid = () => (VoidToFutureOfvoid = dart.constFn(dart.fnType(FutureOfvoid(), [])))();
  var VoidToFutureOfbool = () => (VoidToFutureOfbool = dart.constFn(dart.fnType(FutureOfbool(), [])))();
  var boolToFutureOfvoid = () => (boolToFutureOfvoid = dart.constFn(dart.fnType(FutureOfvoid(), [core.bool])))();
  var IdentityMapOfString$dynamic = () => (IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))();
  var MapOfString$dynamic = () => (MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))();
  var FutureOfMapOfString$dynamic = () => (FutureOfMapOfString$dynamic = dart.constFn(async.Future$(MapOfString$dynamic())))();
  var MapOfString$String = () => (MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))();
  var MapOfString$StringToFutureOfMapOfString$dynamic = () => (MapOfString$StringToFutureOfMapOfString$dynamic = dart.constFn(dart.fnType(FutureOfMapOfString$dynamic(), [MapOfString$String()])))();
  var IdentityMapOfString$String = () => (IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))();
  var FutureOfMapOfString$String = () => (FutureOfMapOfString$String = dart.constFn(async.Future$(MapOfString$String())))();
  var MapOfString$Object = () => (MapOfString$Object = dart.constFn(core.Map$(core.String, core.Object)))();
  var MapOfString$ObjectToFutureOfMapOfString$String = () => (MapOfString$ObjectToFutureOfMapOfString$String = dart.constFn(dart.fnType(FutureOfMapOfString$String(), [MapOfString$Object()])))();
  var FutureOfNull = () => (FutureOfNull = dart.constFn(async.Future$(core.Null)))();
  var boolToFutureOfNull = () => (boolToFutureOfNull = dart.constFn(dart.fnType(FutureOfNull(), [core.bool])))();
  var ListOfWidgetsBindingObserver = () => (ListOfWidgetsBindingObserver = dart.constFn(core.List$(binding$5.WidgetsBindingObserver)))();
  var ListOfFrameTiming = () => (ListOfFrameTiming = dart.constFn(core.List$(ui.FrameTiming)))();
  var ListOfFrameTimingToNull = () => (ListOfFrameTimingToNull = dart.constFn(dart.fnType(core.Null, [ListOfFrameTiming()])))();
  var RenderObjectToWidgetAdapterOfRenderBox = () => (RenderObjectToWidgetAdapterOfRenderBox = dart.constFn(binding$5.RenderObjectToWidgetAdapter$(box$.RenderBox)))();
  var RenderObjectToWidgetElementOfRenderBox = () => (RenderObjectToWidgetElementOfRenderBox = dart.constFn(binding$5.RenderObjectToWidgetElement$(box$.RenderBox)))();
  var ListOfString = () => (ListOfString = dart.constFn(core.List$(core.String)))();
  var SetOf_InspectorReferenceData = () => (SetOf_InspectorReferenceData = dart.constFn(core.Set$(widget_inspector._InspectorReferenceData)))();
  var IdentityMapOfString$SetOf_InspectorReferenceData = () => (IdentityMapOfString$SetOf_InspectorReferenceData = dart.constFn(_js_helper.IdentityMap$(core.String, SetOf_InspectorReferenceData())))();
  var IdentityMapOfString$_InspectorReferenceData = () => (IdentityMapOfString$_InspectorReferenceData = dart.constFn(_js_helper.IdentityMap$(core.String, widget_inspector._InspectorReferenceData)))();
  var IdentityMapOfObject$String = () => (IdentityMapOfObject$String = dart.constFn(_js_helper.IdentityMap$(core.Object, core.String)))();
  var IdentityMapOfString$Object = () => (IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))();
  var FutureOfMapOfString$Object = () => (FutureOfMapOfString$Object = dart.constFn(async.Future$(MapOfString$Object())))();
  var MapOfString$StringToFutureOfMapOfString$Object = () => (MapOfString$StringToFutureOfMapOfString$Object = dart.constFn(dart.fnType(FutureOfMapOfString$Object(), [MapOfString$String()])))();
  var StringAndStringToNull = () => (StringAndStringToNull = dart.constFn(dart.fnType(core.Null, [core.String, core.String])))();
  var RenderObjectTovoid = () => (RenderObjectTovoid = dart.constFn(dart.fnType(dart.void, [object$.RenderObject])))();
  var _IdentityHashSetOf_InspectorReferenceData = () => (_IdentityHashSetOf_InspectorReferenceData = dart.constFn(collection._IdentityHashSet$(widget_inspector._InspectorReferenceData)))();
  var VoidToSetOf_InspectorReferenceData = () => (VoidToSetOf_InspectorReferenceData = dart.constFn(dart.fnType(SetOf_InspectorReferenceData(), [])))();
  var StringToString = () => (StringToString = dart.constFn(dart.fnType(core.String, [core.String])))();
  var _DiagnosticsPathNodeToMapOfString$Object = () => (_DiagnosticsPathNodeToMapOfString$Object = dart.constFn(dart.fnType(MapOfString$Object(), [widget_inspector._DiagnosticsPathNode])))();
  var JSArrayOfRenderObject = () => (JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object$.RenderObject)))();
  var DiagnosticsNodeTobool = () => (DiagnosticsNodeTobool = dart.constFn(dart.fnType(core.bool, [diagnostics$.DiagnosticsNode])))();
  var JSArrayOf_LocationCount = () => (JSArrayOf_LocationCount = dart.constFn(_interceptors.JSArray$(widget_inspector._LocationCount)))();
  var ListOfint = () => (ListOfint = dart.constFn(core.List$(core.int)))();
  var IdentityMapOfString$ListOfint = () => (IdentityMapOfString$ListOfint = dart.constFn(_js_helper.IdentityMap$(core.String, ListOfint())))();
  var JSArrayOfint = () => (JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))();
  var VoidToListOfint = () => (VoidToListOfint = dart.constFn(dart.fnType(ListOfint(), [])))();
  var RenderObjectTodouble = () => (RenderObjectTodouble = dart.constFn(dart.fnType(core.double, [object$.RenderObject])))();
  var RenderObjectAndRenderObjectToint = () => (RenderObjectAndRenderObjectToint = dart.constFn(dart.fnType(core.int, [object$.RenderObject, object$.RenderObject])))();
  var _HashSetOfRenderObject = () => (_HashSetOfRenderObject = dart.constFn(collection._HashSet$(object$.RenderObject)))();
  var JSArrayOf_TransformedRect = () => (JSArrayOf_TransformedRect = dart.constFn(_interceptors.JSArray$(widget_inspector._TransformedRect)))();
  var JSArrayOfOffset = () => (JSArrayOfOffset = dart.constFn(_interceptors.JSArray$(ui.Offset)))();
  var _LocationToMapOfString$Object = () => (_LocationToMapOfString$Object = dart.constFn(dart.fnType(MapOfString$Object(), [widget_inspector._Location])))();
  var RenderObjectToNull = () => (RenderObjectToNull = dart.constFn(dart.fnType(core.Null, [object$.RenderObject])))();
  var JSArrayOf_DiagnosticsPathNode = () => (JSArrayOf_DiagnosticsPathNode = dart.constFn(_interceptors.JSArray$(widget_inspector._DiagnosticsPathNode)))();
  var LinkedMapOf_Location$int = () => (LinkedMapOf_Location$int = dart.constFn(_js_helper.LinkedMap$(widget_inspector._Location, core.int)))();
  var JSArrayOf_Location = () => (JSArrayOf_Location = dart.constFn(_interceptors.JSArray$(widget_inspector._Location)))();
  var GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(tap$.TapGestureRecognizer)))();
  var VoidToTapGestureRecognizer = () => (VoidToTapGestureRecognizer = dart.constFn(dart.fnType(tap$.TapGestureRecognizer, [])))();
  var TapGestureRecognizerToNull = () => (TapGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [tap$.TapGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(multitap.DoubleTapGestureRecognizer)))();
  var VoidToDoubleTapGestureRecognizer = () => (VoidToDoubleTapGestureRecognizer = dart.constFn(dart.fnType(multitap.DoubleTapGestureRecognizer, [])))();
  var DoubleTapGestureRecognizerToNull = () => (DoubleTapGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [multitap.DoubleTapGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(long_press.LongPressGestureRecognizer)))();
  var VoidToLongPressGestureRecognizer = () => (VoidToLongPressGestureRecognizer = dart.constFn(dart.fnType(long_press.LongPressGestureRecognizer, [])))();
  var LongPressGestureRecognizerToNull = () => (LongPressGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [long_press.LongPressGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(monodrag.PanGestureRecognizer)))();
  var VoidToPanGestureRecognizer = () => (VoidToPanGestureRecognizer = dart.constFn(dart.fnType(monodrag.PanGestureRecognizer, [])))();
  var PanGestureRecognizerToNull = () => (PanGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [monodrag.PanGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(scale.ScaleGestureRecognizer)))();
  var VoidToScaleGestureRecognizer = () => (VoidToScaleGestureRecognizer = dart.constFn(dart.fnType(scale.ScaleGestureRecognizer, [])))();
  var ScaleGestureRecognizerToNull = () => (ScaleGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [scale.ScaleGestureRecognizer])))();
  var GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(force_press.ForcePressGestureRecognizer)))();
  var VoidToForcePressGestureRecognizer = () => (VoidToForcePressGestureRecognizer = dart.constFn(dart.fnType(force_press.ForcePressGestureRecognizer, [])))();
  var ForcePressGestureRecognizerToNull = () => (ForcePressGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [force_press.ForcePressGestureRecognizer])))();
  var EnumPropertyOfDragStartBehavior = () => (EnumPropertyOfDragStartBehavior = dart.constFn(diagnostics$.EnumProperty$(recognizer.DragStartBehavior)))();
  var LinkedMapOfType$GestureRecognizer = () => (LinkedMapOfType$GestureRecognizer = dart.constFn(_js_helper.LinkedMap$(core.Type, recognizer.GestureRecognizer)))();
  var GestureRecognizerToString = () => (GestureRecognizerToString = dart.constFn(dart.fnType(core.String, [recognizer.GestureRecognizer])))();
  var IterablePropertyOfGestureRecognizer = () => (IterablePropertyOfGestureRecognizer = dart.constFn(diagnostics$.IterableProperty$(recognizer.GestureRecognizer)))();
  var DiagnosticsPropertyOfSemanticsGestureDelegate = () => (DiagnosticsPropertyOfSemanticsGestureDelegate = dart.constFn(diagnostics$.DiagnosticsProperty$(gesture_detector.SemanticsGestureDelegate)))();
  var DragUpdateDetailsToNull = () => (DragUpdateDetailsToNull = dart.constFn(dart.fnType(core.Null, [drag_details.DragUpdateDetails])))();
  var _HashSetOfKey = () => (_HashSetOfKey = dart.constFn(collection._HashSet$(key.Key)))();
  var TableRowTobool = () => (TableRowTobool = dart.constFn(dart.fnType(core.bool, [table$.TableRow])))();
  var TableRowToDecoration = () => (TableRowToDecoration = dart.constFn(dart.fnType(decoration.Decoration, [table$.TableRow])))();
  var ListOfWidget = () => (ListOfWidget = dart.constFn(core.List$(framework.Widget)))();
  var TableRowToListOfWidget = () => (TableRowToListOfWidget = dart.constFn(dart.fnType(ListOfWidget(), [table$.TableRow])))();
  var WidgetToElement = () => (WidgetToElement = dart.constFn(dart.fnType(framework.Element, [framework.Widget])))();
  var TableRowTo_TableElementRow = () => (TableRowTo_TableElementRow = dart.constFn(dart.fnType(table$._TableElementRow, [table$.TableRow])))();
  var LinkedMapOfLocalKey$ListOfElement = () => (LinkedMapOfLocalKey$ListOfElement = dart.constFn(_js_helper.LinkedMap$(key.LocalKey, ListOfElement())))();
  var _TableElementRowTobool = () => (_TableElementRowTobool = dart.constFn(dart.fnType(core.bool, [table$._TableElementRow])))();
  var JSArrayOf_TableElementRow = () => (JSArrayOf_TableElementRow = dart.constFn(_interceptors.JSArray$(table$._TableElementRow)))();
  var LinkedHashSetOfListOfElement = () => (LinkedHashSetOfListOfElement = dart.constFn(collection.LinkedHashSet$(ListOfElement())))();
  var ListOfElementTobool = () => (ListOfElementTobool = dart.constFn(dart.fnType(core.bool, [ListOfElement()])))();
  var ElementToRenderBox = () => (ElementToRenderBox = dart.constFn(dart.fnType(box$.RenderBox, [framework.Element])))();
  var IterableOfRenderBox = () => (IterableOfRenderBox = dart.constFn(core.Iterable$(box$.RenderBox)))();
  var _TableElementRowToIterableOfRenderBox = () => (_TableElementRowToIterableOfRenderBox = dart.constFn(dart.fnType(IterableOfRenderBox(), [table$._TableElementRow])))();
  var _TableElementRowToListOfElement = () => (_TableElementRowToListOfElement = dart.constFn(dart.fnType(ListOfElement(), [table$._TableElementRow])))();
  var EnumPropertyOfTableCellVerticalAlignment = () => (EnumPropertyOfTableCellVerticalAlignment = dart.constFn(diagnostics$.EnumProperty$(table.TableCellVerticalAlignment)))();
  var BuildContextToWidget = () => (BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))();
  var LinkedMapOfLogicalKeySet$Intent = () => (LinkedMapOfLogicalKeySet$Intent = dart.constFn(_js_helper.LinkedMap$(shortcuts$.LogicalKeySet, actions$.Intent)))();
  var VoidToDoNothingAction = () => (VoidToDoNothingAction = dart.constFn(dart.fnType(actions$.DoNothingAction, [])))();
  var VoidToRequestFocusAction = () => (VoidToRequestFocusAction = dart.constFn(dart.fnType(focus_traversal.RequestFocusAction, [])))();
  var VoidToNextFocusAction = () => (VoidToNextFocusAction = dart.constFn(dart.fnType(focus_traversal.NextFocusAction, [])))();
  var VoidToPreviousFocusAction = () => (VoidToPreviousFocusAction = dart.constFn(dart.fnType(focus_traversal.PreviousFocusAction, [])))();
  var VoidToDirectionalFocusAction = () => (VoidToDirectionalFocusAction = dart.constFn(dart.fnType(focus_traversal.DirectionalFocusAction, [])))();
  var VoidToScrollAction = () => (VoidToScrollAction = dart.constFn(dart.fnType(scrollable$.ScrollAction, [])))();
  var VoidToAction = () => (VoidToAction = dart.constFn(dart.fnType(actions$.Action, [])))();
  var LinkedMapOfLocalKey$VoidToAction = () => (LinkedMapOfLocalKey$VoidToAction = dart.constFn(_js_helper.LinkedMap$(key.LocalKey, VoidToAction())))();
  var GlobalObjectKeyOfNavigatorState = () => (GlobalObjectKeyOfNavigatorState = dart.constFn(framework.GlobalObjectKey$(navigator$.NavigatorState)))();
  var IdentityMapOfString$Locale = () => (IdentityMapOfString$Locale = dart.constFn(_js_helper.IdentityMap$(core.String, ui.Locale)))();
  var SyncIterableOfLocalizationsDelegate = () => (SyncIterableOfLocalizationsDelegate = dart.constFn(_js_helper.SyncIterable$(localizations.LocalizationsDelegate)))();
  var LocalizationsDelegateToType = () => (LocalizationsDelegateToType = dart.constFn(dart.fnType(core.Type, [localizations.LocalizationsDelegate])))();
  var TypeToString = () => (TypeToString = dart.constFn(dart.fnType(core.String, [core.Type])))();
  var ListOfRoute = () => (ListOfRoute = dart.constFn(core.List$(navigator$.Route)))();
  var NavigatorStateAndStringToListOfRoute = () => (NavigatorStateAndStringToListOfRoute = dart.constFn(dart.fnType(ListOfRoute(), [navigator$.NavigatorState, core.String])))();
  var BuildContextToTitle = () => (BuildContextToTitle = dart.constFn(dart.fnType(title$.Title, [framework.BuildContext])))();
  var JSArrayOfLocale = () => (JSArrayOfLocale = dart.constFn(_interceptors.JSArray$(ui.Locale)))();
  var BuildContextToDefaultTextStyle = () => (BuildContextToDefaultTextStyle = dart.constFn(dart.fnType(text.DefaultTextStyle, [framework.BuildContext])))();
  var DiagnosticsPropertyOfTextHeightBehavior = () => (DiagnosticsPropertyOfTextHeightBehavior = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.TextHeightBehavior)))();
  var JSArrayOfInheritedTheme = () => (JSArrayOfInheritedTheme = dart.constFn(_interceptors.JSArray$(inherited_theme.InheritedTheme)))();
  var JSArrayOfInlineSpan = () => (JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))();
  var LogicalKeyboardKeyAndLogicalKeyboardKeyToint = () => (LogicalKeyboardKeyAndLogicalKeyboardKeyToint = dart.constFn(dart.fnType(core.int, [keyboard_key.LogicalKeyboardKey, keyboard_key.LogicalKeyboardKey])))();
  var LogicalKeyboardKeyToString = () => (LogicalKeyboardKeyToString = dart.constFn(dart.fnType(core.String, [keyboard_key.LogicalKeyboardKey])))();
  var SetOfLogicalKeyboardKey = () => (SetOfLogicalKeyboardKey = dart.constFn(core.Set$(keyboard_key.LogicalKeyboardKey)))();
  var DiagnosticsPropertyOfSetOfLogicalKeyboardKey = () => (DiagnosticsPropertyOfSetOfLogicalKeyboardKey = dart.constFn(diagnostics$.DiagnosticsProperty$(SetOfLogicalKeyboardKey())))();
  var LinkedHashSetOfLogicalKeyboardKey = () => (LinkedHashSetOfLogicalKeyboardKey = dart.constFn(collection.LinkedHashSet$(keyboard_key.LogicalKeyboardKey)))();
  var LogicalKeySetToString = () => (LogicalKeySetToString = dart.constFn(dart.fnType(core.String, [shortcuts$.LogicalKeySet])))();
  var MapOfLogicalKeySet$Intent = () => (MapOfLogicalKeySet$Intent = dart.constFn(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)))();
  var DiagnosticsPropertyOfMapOfLogicalKeySet$Intent = () => (DiagnosticsPropertyOfMapOfLogicalKeySet$Intent = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfLogicalKeySet$Intent())))();
  var DiagnosticsPropertyOfShortcutManager = () => (DiagnosticsPropertyOfShortcutManager = dart.constFn(diagnostics$.DiagnosticsProperty$(shortcuts$.ShortcutManager)))();
  var DiagnosticsPropertyOfActionDispatcher = () => (DiagnosticsPropertyOfActionDispatcher = dart.constFn(diagnostics$.DiagnosticsProperty$(actions$.ActionDispatcher)))();
  var MapOfLocalKey$VoidToAction = () => (MapOfLocalKey$VoidToAction = dart.constFn(core.Map$(key.LocalKey, VoidToAction())))();
  var DiagnosticsPropertyOfMapOfLocalKey$VoidToAction = () => (DiagnosticsPropertyOfMapOfLocalKey$VoidToAction = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfLocalKey$VoidToAction())))();
  var FocusableActionDetectorTobool = () => (FocusableActionDetectorTobool = dart.constFn(dart.fnType(core.bool, [actions$.FocusableActionDetector])))();
  var SemanticsNodeTobool = () => (SemanticsNodeTobool = dart.constFn(dart.fnType(core.bool, [semantics.SemanticsNode])))();
  var JSArrayOfVoidToFutureOfbool = () => (JSArrayOfVoidToFutureOfbool = dart.constFn(_interceptors.JSArray$(VoidToFutureOfbool())))();
  var RouteTobool = () => (RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator$.Route])))();
  var ListOfVoidToFutureOfbool = () => (ListOfVoidToFutureOfbool = dart.constFn(core.List$(VoidToFutureOfbool())))();
  var SyncIterableOfOverlayEntry = () => (SyncIterableOfOverlayEntry = dart.constFn(_js_helper.SyncIterable$(overlay$.OverlayEntry)))();
  var AnimationStatusTovoid = () => (AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation$.AnimationStatus])))();
  var dynamicToNull = () => (dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))();
  var JSArrayOfOverlayEntry = () => (JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay$.OverlayEntry)))();
  var voidToNull = () => (voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))();
  var JSArrayOfLocalHistoryEntry = () => (JSArrayOfLocalHistoryEntry = dart.constFn(_interceptors.JSArray$(routes.LocalHistoryEntry)))();
  var AnimationOfdouble = () => (AnimationOfdouble = dart.constFn(animation$.Animation$(core.double)))();
  var BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = () => (BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AnimationOfdouble(), AnimationOfdouble(), framework.Widget])))();
  var JSArrayOfListenable = () => (JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))();
  var ValueNotifierOfbool = () => (ValueNotifierOfbool = dart.constFn(change_notifier.ValueNotifier$(core.bool)))();
  var BuildContextAndWidgetToIgnorePointer = () => (BuildContextAndWidgetToIgnorePointer = dart.constFn(dart.fnType(basic.IgnorePointer, [framework.BuildContext, framework.Widget])))();
  var BuildContextAndWidgetToWidget = () => (BuildContextAndWidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])))();
  var SetOfRouteAware = () => (SetOfRouteAware = dart.constFn(core.Set$(routes.RouteAware)))();
  var LinkedHashSetOfRouteAware = () => (LinkedHashSetOfRouteAware = dart.constFn(collection.LinkedHashSet$(routes.RouteAware)))();
  var VoidToSetOfRouteAware = () => (VoidToSetOfRouteAware = dart.constFn(dart.fnType(SetOfRouteAware(), [])))();
  var DiagnosticsPropertyOfListenable = () => (DiagnosticsPropertyOfListenable = dart.constFn(diagnostics$.DiagnosticsProperty$(change_notifier.Listenable)))();
  var AnimationOfOffset = () => (AnimationOfOffset = dart.constFn(animation$.Animation$(ui.Offset)))();
  var DiagnosticsPropertyOfAnimationOfdouble = () => (DiagnosticsPropertyOfAnimationOfdouble = dart.constFn(diagnostics$.DiagnosticsProperty$(AnimationOfdouble())))();
  var AnimationOfRelativeRect = () => (AnimationOfRelativeRect = dart.constFn(animation$.Animation$(stack.RelativeRect)))();
  var AnimationOfRect = () => (AnimationOfRect = dart.constFn(animation$.Animation$(ui.Rect)))();
  var AnimationOfAlignmentGeometry = () => (AnimationOfAlignmentGeometry = dart.constFn(animation$.Animation$(alignment$.AlignmentGeometry)))();
  var AnimationOfTextStyle = () => (AnimationOfTextStyle = dart.constFn(animation$.Animation$(text_style.TextStyle)))();
  var JSArrayOfPageStorageKey = () => (JSArrayOfPageStorageKey = dart.constFn(_interceptors.JSArray$(page_storage.PageStorageKey)))();
  var LinkedMapOfObject$dynamic = () => (LinkedMapOfObject$dynamic = dart.constFn(_js_helper.LinkedMap$(core.Object, dart.dynamic)))();
  var GlobalKeyOf_OverlayEntryWidgetState = () => (GlobalKeyOf_OverlayEntryWidgetState = dart.constFn(framework.GlobalKey$(overlay$._OverlayEntryWidgetState)))();
  var OverlayEntryTobool = () => (OverlayEntryTobool = dart.constFn(dart.fnType(core.bool, [overlay$.OverlayEntry])))();
  var ListOfOverlayEntry = () => (ListOfOverlayEntry = dart.constFn(core.List$(overlay$.OverlayEntry)))();
  var LinkedHashSetOfOverlayEntry = () => (LinkedHashSetOfOverlayEntry = dart.constFn(collection.LinkedHashSet$(overlay$.OverlayEntry)))();
  var DiagnosticsPropertyOfListOfOverlayEntry = () => (DiagnosticsPropertyOfListOfOverlayEntry = dart.constFn(diagnostics$.DiagnosticsProperty$(ListOfOverlayEntry())))();
  var RenderBoxTodouble = () => (RenderBoxTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox])))();
  var BoxHitTestResultAndOffsetTobool = () => (BoxHitTestResultAndOffsetTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, ui.Offset])))();
  var JSArrayOfRoute = () => (JSArrayOfRoute = dart.constFn(_interceptors.JSArray$(navigator$.Route)))();
  var _RouteEntryTobool = () => (_RouteEntryTobool = dart.constFn(dart.fnType(core.bool, [navigator$._RouteEntry])))();
  var GlobalKeyOfOverlayState = () => (GlobalKeyOfOverlayState = dart.constFn(framework.GlobalKey$(overlay$.OverlayState)))();
  var JSArrayOf_RouteEntry = () => (JSArrayOf_RouteEntry = dart.constFn(_interceptors.JSArray$(navigator$._RouteEntry)))();
  var LinkedHashSetOfint = () => (LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(core.int)))();
  var RouteTo_RouteEntry = () => (RouteTo_RouteEntry = dart.constFn(dart.fnType(navigator$._RouteEntry, [navigator$.Route])))();
  var DiagnosticsPropertyOfNavigatorState = () => (DiagnosticsPropertyOfNavigatorState = dart.constFn(diagnostics$.DiagnosticsProperty$(navigator$.NavigatorState)))();
  var ObjectToString = () => (ObjectToString = dart.constFn(dart.fnType(core.String, [core.Object])))();
  var AnimationOfColor = () => (AnimationOfColor = dart.constFn(animation$.Animation$(ui.Color)))();
  var EnumPropertyOfBannerLocation = () => (EnumPropertyOfBannerLocation = dart.constFn(diagnostics$.EnumProperty$(banner.BannerLocation)))();
  var LinkedHashSetOfSemanticsAction = () => (LinkedHashSetOfSemanticsAction = dart.constFn(collection.LinkedHashSet$(ui.SemanticsAction)))();
  var NotificationListenerOfNotification = () => (NotificationListenerOfNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.Notification)))();
  var DiagnosticsPropertyOfScrollMetrics = () => (DiagnosticsPropertyOfScrollMetrics = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_metrics.ScrollMetrics)))();
  var ScrollNotificationTobool = () => (ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))();
  var IdentityMapOfbool$bool = () => (IdentityMapOfbool$bool = dart.constFn(_js_helper.IdentityMap$(core.bool, core.bool)))();
  var NotificationListenerOfScrollNotification = () => (NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))();
  var TweenOfdouble = () => (TweenOfdouble = dart.constFn(tween.Tween$(core.double)))();
  var JSArrayOfScrollPosition = () => (JSArrayOfScrollPosition = dart.constFn(_interceptors.JSArray$(scroll_position.ScrollPosition)))();
  var ListOfFutureOfvoid = () => (ListOfFutureOfvoid = dart.constFn(core.List$(FutureOfvoid())))();
  var ListOfScrollPosition = () => (ListOfScrollPosition = dart.constFn(core.List$(scroll_position.ScrollPosition)))();
  var LinkedMapOfScrollPosition$VoidTovoid = () => (LinkedMapOfScrollPosition$VoidTovoid = dart.constFn(_js_helper.LinkedMap$(scroll_position.ScrollPosition, VoidTovoid())))();
  var DiagnosticsPropertyOfScrollBehavior = () => (DiagnosticsPropertyOfScrollBehavior = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_configuration.ScrollBehavior)))();
  var JSArrayOfTextSpan = () => (JSArrayOfTextSpan = dart.constFn(_interceptors.JSArray$(text_span.TextSpan)))();
  var JSArrayOfTextInputFormatter = () => (JSArrayOfTextInputFormatter = dart.constFn(_interceptors.JSArray$(text_formatter.TextInputFormatter)))();
  var EmptyIterableOfTextInputFormatter = () => (EmptyIterableOfTextInputFormatter = dart.constFn(_internal.EmptyIterable$(text_formatter.TextInputFormatter)))();
  var DiagnosticsPropertyOfTextEditingController = () => (DiagnosticsPropertyOfTextEditingController = dart.constFn(diagnostics$.DiagnosticsProperty$(editable_text.TextEditingController)))();
  var EnumPropertyOfSmartDashesType = () => (EnumPropertyOfSmartDashesType = dart.constFn(diagnostics$.EnumProperty$(text_input.SmartDashesType)))();
  var EnumPropertyOfSmartQuotesType = () => (EnumPropertyOfSmartQuotesType = dart.constFn(diagnostics$.EnumProperty$(text_input.SmartQuotesType)))();
  var DiagnosticsPropertyOfTextInputType = () => (DiagnosticsPropertyOfTextInputType = dart.constFn(diagnostics$.DiagnosticsProperty$(text_input.TextInputType)))();
  var DiagnosticsPropertyOfScrollController = () => (DiagnosticsPropertyOfScrollController = dart.constFn(diagnostics$.DiagnosticsProperty$(scroll_controller.ScrollController)))();
  var DurationTovoid = () => (DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))();
  var BuildContextAndViewportOffsetToCompositedTransformTarget = () => (BuildContextAndViewportOffsetToCompositedTransformTarget = dart.constFn(dart.fnType(basic.CompositedTransformTarget, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var TextSelectionToNull = () => (TextSelectionToNull = dart.constFn(dart.fnType(core.Null, [text_editing.TextSelection])))();
  var GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer = () => (GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer = dart.constFn(gesture_detector.GestureRecognizerFactoryWithHandlers$(text_selection._TransparentTapGestureRecognizer)))();
  var VoidTo_TransparentTapGestureRecognizer = () => (VoidTo_TransparentTapGestureRecognizer = dart.constFn(dart.fnType(text_selection._TransparentTapGestureRecognizer, [])))();
  var _TransparentTapGestureRecognizerToNull = () => (_TransparentTapGestureRecognizerToNull = dart.constFn(dart.fnType(core.Null, [text_selection._TransparentTapGestureRecognizer])))();
  var WidgetAndintToint = () => (WidgetAndintToint = dart.constFn(dart.fnType(core.int, [framework.Widget, core.int])))();
  var LinkedMapOfKey$int = () => (LinkedMapOfKey$int = dart.constFn(_js_helper.LinkedMap$(key.Key, core.int)))();
  var DiagnosticsPropertyOfSliverChildDelegate = () => (DiagnosticsPropertyOfSliverChildDelegate = dart.constFn(diagnostics$.DiagnosticsProperty$(sliver$.SliverChildDelegate)))();
  var IdentityMapOfint$Widget = () => (IdentityMapOfint$Widget = dart.constFn(_js_helper.IdentityMap$(core.int, framework.Widget)))();
  var SplayTreeMapOfint$Element = () => (SplayTreeMapOfint$Element = dart.constFn(collection.SplayTreeMap$(core.int, framework.Element)))();
  var intTovoid = () => (intTovoid = dart.constFn(dart.fnType(dart.void, [core.int])))();
  var VoidToElement = () => (VoidToElement = dart.constFn(dart.fnType(framework.Element, [])))();
  var VoidToWidget = () => (VoidToWidget = dart.constFn(dart.fnType(framework.Widget, [])))();
  var NotificationListenerOfKeepAliveNotification = () => (NotificationListenerOfKeepAliveNotification = dart.constFn(notification_listener.NotificationListener$(automatic_keep_alive.KeepAliveNotification)))();
  var LinkedMapOfListenable$VoidTovoid = () => (LinkedMapOfListenable$VoidTovoid = dart.constFn(_js_helper.LinkedMap$(change_notifier.Listenable, VoidTovoid())))();
  var ParentDataElementOfKeepAliveParentDataMixin = () => (ParentDataElementOfKeepAliveParentDataMixin = dart.constFn(framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)))();
  var ParentDataWidgetOfKeepAliveParentDataMixin = () => (ParentDataWidgetOfKeepAliveParentDataMixin = dart.constFn(framework.ParentDataWidget$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)))();
  var MapOfListenable$VoidTovoid = () => (MapOfListenable$VoidTovoid = dart.constFn(core.Map$(change_notifier.Listenable, VoidTovoid())))();
  var DiagnosticsPropertyOfMapOfListenable$VoidTovoid = () => (DiagnosticsPropertyOfMapOfListenable$VoidTovoid = dart.constFn(diagnostics$.DiagnosticsProperty$(MapOfListenable$VoidTovoid())))();
  var AnimationStatusToNull = () => (AnimationStatusToNull = dart.constFn(dart.fnType(core.Null, [animation$.AnimationStatus])))();
  var dynamicToTween = () => (dynamicToTween = dart.constFn(dart.fnType(tween.Tween, [dart.dynamic])))();
  var TweenAnddynamicAndFnToTween = () => (TweenAnddynamicAndFnToTween = dart.constFn(dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dynamicToTween()])))();
  var dynamicToAlignmentGeometryTween = () => (dynamicToAlignmentGeometryTween = dart.constFn(dart.fnType(tweens.AlignmentGeometryTween, [dart.dynamic])))();
  var dynamicToEdgeInsetsGeometryTween = () => (dynamicToEdgeInsetsGeometryTween = dart.constFn(dart.fnType(implicit_animations.EdgeInsetsGeometryTween, [dart.dynamic])))();
  var dynamicToDecorationTween = () => (dynamicToDecorationTween = dart.constFn(dart.fnType(implicit_animations.DecorationTween, [dart.dynamic])))();
  var dynamicToBoxConstraintsTween = () => (dynamicToBoxConstraintsTween = dart.constFn(dart.fnType(implicit_animations.BoxConstraintsTween, [dart.dynamic])))();
  var dynamicToMatrix4Tween = () => (dynamicToMatrix4Tween = dart.constFn(dart.fnType(implicit_animations.Matrix4Tween, [dart.dynamic])))();
  var DiagnosticsPropertyOfAlignmentGeometryTween = () => (DiagnosticsPropertyOfAlignmentGeometryTween = dart.constFn(diagnostics$.DiagnosticsProperty$(tweens.AlignmentGeometryTween)))();
  var DiagnosticsPropertyOfEdgeInsetsGeometryTween = () => (DiagnosticsPropertyOfEdgeInsetsGeometryTween = dart.constFn(diagnostics$.DiagnosticsProperty$(implicit_animations.EdgeInsetsGeometryTween)))();
  var DiagnosticsPropertyOfDecorationTween = () => (DiagnosticsPropertyOfDecorationTween = dart.constFn(diagnostics$.DiagnosticsProperty$(implicit_animations.DecorationTween)))();
  var DiagnosticsPropertyOfBoxConstraintsTween = () => (DiagnosticsPropertyOfBoxConstraintsTween = dart.constFn(diagnostics$.DiagnosticsProperty$(implicit_animations.BoxConstraintsTween)))();
  var ObjectFlagPropertyOfMatrix4Tween = () => (ObjectFlagPropertyOfMatrix4Tween = dart.constFn(diagnostics$.ObjectFlagProperty$(implicit_animations.Matrix4Tween)))();
  var dynamicToTweenOfdouble = () => (dynamicToTweenOfdouble = dart.constFn(dart.fnType(TweenOfdouble(), [dart.dynamic])))();
  var ObjectFlagPropertyOfTweenOfdouble = () => (ObjectFlagPropertyOfTweenOfdouble = dart.constFn(diagnostics$.ObjectFlagProperty$(TweenOfdouble())))();
  var dynamicToTextStyleTween = () => (dynamicToTextStyleTween = dart.constFn(dart.fnType(implicit_animations.TextStyleTween, [dart.dynamic])))();
  var dynamicToBorderRadiusTween = () => (dynamicToBorderRadiusTween = dart.constFn(dart.fnType(implicit_animations.BorderRadiusTween, [dart.dynamic])))();
  var dynamicToColorTween = () => (dynamicToColorTween = dart.constFn(dart.fnType(tween.ColorTween, [dart.dynamic])))();
  var WidgetAndKeyAndWidget__ToWidget = () => (WidgetAndKeyAndWidget__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.Widget, key.Key, framework.Widget, key.Key])))();
  var EnumPropertyOfCrossFadeState = () => (EnumPropertyOfCrossFadeState = dart.constFn(diagnostics$.EnumProperty$(animated_cross_fade.CrossFadeState)))();
  var ValueKeyOfCrossFadeState = () => (ValueKeyOfCrossFadeState = dart.constFn(key.ValueKey$(animated_cross_fade.CrossFadeState)))();
  var DiagnosticsPropertyOfAnimationController = () => (DiagnosticsPropertyOfAnimationController = dart.constFn(diagnostics$.DiagnosticsProperty$(animation_controller.AnimationController)))();
  var ObjectToNull = () => (ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))();
  var DiagnosticsPropertyOfImageFilter = () => (DiagnosticsPropertyOfImageFilter = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.ImageFilter)))();
  var BuildContextAndWidgetAndint__ToWidget = () => (BuildContextAndWidgetAndint__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, core.int, core.bool])))();
  var TweenSequenceOfdouble = () => (TweenSequenceOfdouble = dart.constFn(tween_sequence.TweenSequence$(core.double)))();
  var TweenSequenceItemOfdouble = () => (TweenSequenceItemOfdouble = dart.constFn(tween_sequence.TweenSequenceItem$(core.double)))();
  var ConstantTweenOfdouble = () => (ConstantTweenOfdouble = dart.constFn(tween.ConstantTween$(core.double)))();
  var JSArrayOfTweenSequenceItemOfdouble = () => (JSArrayOfTweenSequenceItemOfdouble = dart.constFn(_interceptors.JSArray$(TweenSequenceItemOfdouble())))();
  var BuildContextAndViewportOffsetToWidget = () => (BuildContextAndViewportOffsetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var BuildContextAndintToWidget = () => (BuildContextAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, core.int])))();
  var BuildContextAndViewportOffsetToViewport = () => (BuildContextAndViewportOffsetToViewport = dart.constFn(dart.fnType(viewport.Viewport, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var DiagnosticsPropertyOfPageController = () => (DiagnosticsPropertyOfPageController = dart.constFn(diagnostics$.DiagnosticsProperty$(page_view.PageController)))();
  var DiagnosticsPropertyOfColorFilter = () => (DiagnosticsPropertyOfColorFilter = dart.constFn(diagnostics$.DiagnosticsProperty$(ui.ColorFilter)))();
  var BuildContextAndViewportOffsetTo_SingleChildViewport = () => (BuildContextAndViewportOffsetTo_SingleChildViewport = dart.constFn(dart.fnType(single_child_scroll_view._SingleChildViewport, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var PaintingContextAndOffsetTovoid = () => (PaintingContextAndOffsetTovoid = dart.constFn(dart.fnType(dart.void, [object$.PaintingContext, ui.Offset])))();
  var LinkedMapOfObject$_HeroState = () => (LinkedMapOfObject$_HeroState = dart.constFn(_js_helper.LinkedMap$(core.Object, heroes._HeroState)))();
  var DiagnosticsPropertyOfStatefulElement = () => (DiagnosticsPropertyOfStatefulElement = dart.constFn(diagnostics$.DiagnosticsProperty$(framework.StatefulElement)))();
  var StatefulElementAndObjectTovoid = () => (StatefulElementAndObjectTovoid = dart.constFn(dart.fnType(dart.void, [framework.StatefulElement, core.Object])))();
  var BuildContextAndWidgetToPositioned = () => (BuildContextAndWidgetToPositioned = dart.constFn(dart.fnType(basic.Positioned, [framework.BuildContext, framework.Widget])))();
  var ReverseTweenOfRect = () => (ReverseTweenOfRect = dart.constFn(tween.ReverseTween$(ui.Rect)))();
  var LinkedMapOfObject$_HeroFlight = () => (LinkedMapOfObject$_HeroFlight = dart.constFn(_js_helper.LinkedMap$(core.Object, heroes._HeroFlight)))();
  var _HeroFlightTobool = () => (_HeroFlightTobool = dart.constFn(dart.fnType(core.bool, [heroes._HeroFlight])))();
  var BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget = () => (BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AnimationOfdouble(), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext])))();
  var TweenOfOffset = () => (TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))();
  var GlobalKeyOfSliverAnimatedListState = () => (GlobalKeyOfSliverAnimatedListState = dart.constFn(framework.GlobalKey$(animated_list.SliverAnimatedListState)))();
  var JSArrayOf_ActiveItem = () => (JSArrayOf_ActiveItem = dart.constFn(_interceptors.JSArray$(animated_list._ActiveItem)))();
  var VoidToint = () => (VoidToint = dart.constFn(dart.fnType(core.int, [])))();
  var BuildContextToIconTheme = () => (BuildContextToIconTheme = dart.constFn(dart.fnType(icon_theme.IconTheme, [framework.BuildContext])))();
  var WidgetAndAnimationOfdoubleToWidget = () => (WidgetAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.Widget, AnimationOfdouble()])))();
  var WidgetAndListOfWidgetToWidget = () => (WidgetAndListOfWidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.Widget, ListOfWidget()])))();
  var LinkedHashSetOf_ChildEntry = () => (LinkedHashSetOf_ChildEntry = dart.constFn(collection.LinkedHashSet$(animated_switcher._ChildEntry)))();
  var _ChildEntryToWidget = () => (_ChildEntryToWidget = dart.constFn(dart.fnType(framework.Widget, [animated_switcher._ChildEntry])))();
  var DiagnosticsPropertyOfSliverPersistentHeaderDelegate = () => (DiagnosticsPropertyOfSliverPersistentHeaderDelegate = dart.constFn(diagnostics$.DiagnosticsProperty$(sliver_persistent_header$.SliverPersistentHeaderDelegate)))();
  var OffsetToDrag = () => (OffsetToDrag = dart.constFn(dart.fnType(drag.Drag, [ui.Offset])))();
  var VelocityAndOffsetAndboolToNull = () => (VelocityAndOffsetAndboolToNull = dart.constFn(dart.fnType(core.Null, [velocity_tracker.Velocity, ui.Offset, core.bool])))();
  var _DragAvatarOfObject = () => (_DragAvatarOfObject = dart.constFn(drag_target._DragAvatar$(core.Object)))();
  var JSArrayOf_DragAvatarOfObject = () => (JSArrayOf_DragAvatarOfObject = dart.constFn(_interceptors.JSArray$(_DragAvatarOfObject())))();
  var LinkedHashSetOfFormFieldState = () => (LinkedHashSetOfFormFieldState = dart.constFn(collection.LinkedHashSet$(form.FormFieldState)))();
  var BuildContextAndViewportOffsetToListWheelViewport = () => (BuildContextAndViewportOffsetToListWheelViewport = dart.constFn(dart.fnType(list_wheel_scroll_view.ListWheelViewport, [framework.BuildContext, viewport_offset.ViewportOffset])))();
  var intAndElementToNull = () => (intAndElementToNull = dart.constFn(dart.fnType(core.Null, [core.int, framework.Element])))();
  var BuildContextTo_NestedScrollViewCustomScrollView = () => (BuildContextTo_NestedScrollViewCustomScrollView = dart.constFn(dart.fnType(nested_scroll_view._NestedScrollViewCustomScrollView, [framework.BuildContext])))();
  var _NestedScrollPositionToIdleScrollActivity = () => (_NestedScrollPositionToIdleScrollActivity = dart.constFn(dart.fnType(scroll_activity.IdleScrollActivity, [nested_scroll_view._NestedScrollPosition])))();
  var _NestedScrollPositionToScrollActivity = () => (_NestedScrollPositionToScrollActivity = dart.constFn(dart.fnType(scroll_activity.ScrollActivity, [nested_scroll_view._NestedScrollPosition])))();
  var _NestedScrollPositionToDrivenScrollActivity = () => (_NestedScrollPositionToDrivenScrollActivity = dart.constFn(dart.fnType(scroll_activity.DrivenScrollActivity, [nested_scroll_view._NestedScrollPosition])))();
  var _NestedScrollPositionToHoldScrollActivity = () => (_NestedScrollPositionToHoldScrollActivity = dart.constFn(dart.fnType(scroll_activity.HoldScrollActivity, [nested_scroll_view._NestedScrollPosition])))();
  var _NestedScrollPositionToDragScrollActivity = () => (_NestedScrollPositionToDragScrollActivity = dart.constFn(dart.fnType(scroll_activity.DragScrollActivity, [nested_scroll_view._NestedScrollPosition])))();
  var JSArrayOfdouble = () => (JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))();
  var SyncIterableOf_NestedScrollPosition = () => (SyncIterableOf_NestedScrollPosition = dart.constFn(_js_helper.SyncIterable$(nested_scroll_view._NestedScrollPosition)))();
  var DiagnosticsPropertyOfSliverOverlapAbsorberHandle = () => (DiagnosticsPropertyOfSliverOverlapAbsorberHandle = dart.constFn(diagnostics$.DiagnosticsProperty$(nested_scroll_view.SliverOverlapAbsorberHandle)))();
  var FactoryOfOneSequenceGestureRecognizer = () => (FactoryOfOneSequenceGestureRecognizer = dart.constFn(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))();
  var BuildContextAndPlatformViewControllerToPlatformViewSurface = () => (BuildContextAndPlatformViewControllerToPlatformViewSurface = dart.constFn(dart.fnType(platform_view$.PlatformViewSurface, [framework.BuildContext, platform_views.PlatformViewController])))();
  var LinkedHashSetOfFactoryOfOneSequenceGestureRecognizer = () => (LinkedHashSetOfFactoryOfOneSequenceGestureRecognizer = dart.constFn(collection.LinkedHashSet$(FactoryOfOneSequenceGestureRecognizer())))();
  var ValueNotifierOfdouble = () => (ValueNotifierOfdouble = dart.constFn(change_notifier.ValueNotifier$(core.double)))();
  var BuildContextAndBoxConstraintsToWidget = () => (BuildContextAndBoxConstraintsToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, box$.BoxConstraints])))();
  const CT = Object.create(null);
  dart.defineLazy(CT, {
    get C2() {
      return C2 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 39,
        [_Location_line]: 72,
        [_Location_file]: null
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 65,
        [_Location_line]: 72,
        [_Location_file]: null
      });
    },
    get C1() {
      return C1 = dart.constList([C2 || CT.C2, C3 || CT.C3], widget_inspector._Location);
    },
    get C0() {
      return C0 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1 || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 72,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart"
      });
    },
    get C6() {
      return C6 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 38,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 63,
        [_Location_line]: 73,
        [_Location_file]: null
      });
    },
    get C5() {
      return C5 = dart.constList([C6 || CT.C6, C7 || CT.C7], widget_inspector._Location);
    },
    get C4() {
      return C4 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C5 || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 73,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart"
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "id",
        [_Location_column]: 40,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 67,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C9() {
      return C9 = dart.constList([C10 || CT.C10, C11 || CT.C11], widget_inspector._Location);
    },
    get C8() {
      return C8 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C9 || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 74,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart"
      });
    },
    get C14() {
      return C14 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 7,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 71,
        [_Location_file]: null
      });
    },
    get C13() {
      return C13 = dart.constList([C14 || CT.C14, C15 || CT.C15], widget_inspector._Location);
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C13 || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 65,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart"
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: navigation_toolbar._ToolbarSlot.prototype,
        [_name$]: "_ToolbarSlot.leading",
        index: 0
      });
    },
    get C17() {
      return C17 = dart.const({
        __proto__: navigation_toolbar._ToolbarSlot.prototype,
        [_name$]: "_ToolbarSlot.middle",
        index: 1
      });
    },
    get C18() {
      return C18 = dart.const({
        __proto__: navigation_toolbar._ToolbarSlot.prototype,
        [_name$]: "_ToolbarSlot.trailing",
        index: 2
      });
    },
    get C19() {
      return C19 = dart.constList([C16 || CT.C16, C17 || CT.C17, C18 || CT.C18], navigation_toolbar._ToolbarSlot);
    },
    get C20() {
      return C20 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.rtl",
        index: 0
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.ltr",
        index: 1
      });
    },
    get C22() {
      return C22 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$0]: "_StateLifecycle.created",
        index: 0
      });
    },
    get C23() {
      return C23 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$0]: "_StateLifecycle.initialized",
        index: 1
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$0]: "_StateLifecycle.ready",
        index: 2
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: framework._StateLifecycle.prototype,
        [_name$0]: "_StateLifecycle.defunct",
        index: 3
      });
    },
    get C26() {
      return C26 = dart.constList([C22 || CT.C22, C23 || CT.C23, C24 || CT.C24, C25 || CT.C25], framework._StateLifecycle);
    },
    get C27() {
      return C27 = dart.constList([], framework.Widget);
    },
    get C28() {
      return C28 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$0]: "_ElementLifecycle.initial",
        index: 0
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$0]: "_ElementLifecycle.active",
        index: 1
      });
    },
    get C30() {
      return C30 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$0]: "_ElementLifecycle.inactive",
        index: 2
      });
    },
    get C31() {
      return C31 = dart.const({
        __proto__: framework._ElementLifecycle.prototype,
        [_name$0]: "_ElementLifecycle.defunct",
        index: 3
      });
    },
    get C32() {
      return C32 = dart.constList([C28 || CT.C28, C29 || CT.C29, C30 || CT.C30, C31 || CT.C31], framework._ElementLifecycle);
    },
    get C33() {
      return C33 = dart.fn(framework.Element._sort, ElementAndElementToint());
    },
    get C34() {
      return C34 = dart.fn(framework._InactiveElements._deactivateRecursively, ElementTovoid());
    },
    get C35() {
      return C35 = dart.const({
        __proto__: diagnostics$.DiagnosticsTreeStyle.prototype,
        [_name$1]: "DiagnosticsTreeStyle.errorProperty",
        index: 9
      });
    },
    get C36() {
      return C36 = dart.fn(framework.Element._activateRecursively, ElementTovoid());
    },
    get C39() {
      return C39 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 36,
        [_Location_line]: 4361,
        [_Location_file]: null
      });
    },
    get C40() {
      return C40 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "error",
        [_Location_column]: 54,
        [_Location_line]: 4361,
        [_Location_file]: null
      });
    },
    get C38() {
      return C38 = dart.constList([C39 || CT.C39, C40 || CT.C40], widget_inspector._Location);
    },
    get C37() {
      return C37 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C38 || CT.C38,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 4361,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/framework.dart"
      });
    },
    get C41() {
      return C41 = dart.fn(framework.ErrorWidget._defaultErrorWidgetBuilder, FlutterErrorDetailsToWidget());
    },
    get C42() {
      return C42 = dart.constList([], focus_manager.FocusNode);
    },
    get C43() {
      return C43 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$2]: "FocusHighlightMode.touch",
        index: 0
      });
    },
    get C44() {
      return C44 = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_name$2]: "FocusHighlightMode.traditional",
        index: 1
      });
    },
    get C45() {
      return C45 = dart.constList([C43 || CT.C43, C44 || CT.C44], focus_manager.FocusHighlightMode);
    },
    get C46() {
      return C46 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$2]: "FocusHighlightStrategy.automatic",
        index: 0
      });
    },
    get C47() {
      return C47 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$2]: "FocusHighlightStrategy.alwaysTouch",
        index: 1
      });
    },
    get C48() {
      return C48 = dart.const({
        __proto__: focus_manager.FocusHighlightStrategy.prototype,
        [_name$2]: "FocusHighlightStrategy.alwaysTraditional",
        index: 2
      });
    },
    get C49() {
      return C49 = dart.constList([C46 || CT.C46, C47 || CT.C47, C48 || CT.C48], focus_manager.FocusHighlightStrategy);
    },
    get C50() {
      return C50 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.touch",
        index: 0
      });
    },
    get C51() {
      return C51 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.stylus",
        index: 2
      });
    },
    get C52() {
      return C52 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.invertedStylus",
        index: 3
      });
    },
    get C53() {
      return C53 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.mouse",
        index: 1
      });
    },
    get C54() {
      return C54 = dart.const({
        __proto__: ui.PointerDeviceKind.prototype,
        [_name]: "PointerDeviceKind.unknown",
        index: 4
      });
    },
    get C55() {
      return C55 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$3]: "TraversalDirection.up",
        index: 0
      });
    },
    get C56() {
      return C56 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$3]: "TraversalDirection.right",
        index: 1
      });
    },
    get C57() {
      return C57 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$3]: "TraversalDirection.down",
        index: 2
      });
    },
    get C58() {
      return C58 = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_name$3]: "TraversalDirection.left",
        index: 3
      });
    },
    get C59() {
      return C59 = dart.constList([C55 || CT.C55, C56 || CT.C56, C57 || CT.C57, C58 || CT.C58], focus_traversal.TraversalDirection);
    },
    get C61() {
      return C61 = dart.wrapType(focus_traversal.RequestFocusAction);
    },
    get C60() {
      return C60 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C61 || CT.C61
      });
    },
    get C63() {
      return C63 = dart.wrapType(focus_traversal.NextFocusAction);
    },
    get C62() {
      return C62 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C63 || CT.C63
      });
    },
    get C65() {
      return C65 = dart.wrapType(focus_traversal.PreviousFocusAction);
    },
    get C64() {
      return C64 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C65 || CT.C65
      });
    },
    get C68() {
      return C68 = dart.wrapType(actions$.DoNothingAction);
    },
    get C67() {
      return C67 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C68 || CT.C68
      });
    },
    get C66() {
      return C66 = dart.const({
        __proto__: actions$.Intent.prototype,
        [key$0]: C67 || CT.C67
      });
    },
    get C70() {
      return C70 = dart.wrapType(focus_traversal.DirectionalFocusAction);
    },
    get C69() {
      return C69 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C70 || CT.C70
      });
    },
    get C71() {
      return C71 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$4]: "ScrollPositionAlignmentPolicy.explicit",
        index: 0
      });
    },
    get C72() {
      return C72 = dart.const({
        __proto__: basic_types$.AxisDirection.prototype,
        [_name$5]: "AxisDirection.down",
        index: 2
      });
    },
    get C73() {
      return C73 = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$6]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C74() {
      return C74 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C75() {
      return C75 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    },
    get C76() {
      return C76 = dart.constMap(core.Type, GestureRecognizerFactoryOfGestureRecognizer(), []);
    },
    get C77() {
      return C77 = dart.const({
        __proto__: basic_types$.Axis.prototype,
        [_name$5]: "Axis.vertical",
        index: 1
      });
    },
    get C78() {
      return C78 = dart.const({
        __proto__: basic_types$.Axis.prototype,
        [_name$5]: "Axis.horizontal",
        index: 0
      });
    },
    get C81() {
      return C81 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 636,
        [_Location_file]: null
      });
    },
    get C82() {
      return C82 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 15,
        [_Location_line]: 637,
        [_Location_file]: null
      });
    },
    get C83() {
      return C83 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 15,
        [_Location_line]: 638,
        [_Location_file]: null
      });
    },
    get C84() {
      return C84 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 639,
        [_Location_file]: null
      });
    },
    get C80() {
      return C80 = dart.constList([C81 || CT.C81, C82 || CT.C82, C83 || CT.C83, C84 || CT.C84], widget_inspector._Location);
    },
    get C79() {
      return C79 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C80 || CT.C80,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 635,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C87() {
      return C87 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 13,
        [_Location_line]: 634,
        [_Location_file]: null
      });
    },
    get C88() {
      return C88 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 635,
        [_Location_file]: null
      });
    },
    get C86() {
      return C86 = dart.constList([C87 || CT.C87, C88 || CT.C88], widget_inspector._Location);
    },
    get C85() {
      return C85 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C86 || CT.C86,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 633,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C91() {
      return C91 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 629,
        [_Location_file]: null
      });
    },
    get C92() {
      return C92 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 11,
        [_Location_line]: 630,
        [_Location_file]: null
      });
    },
    get C93() {
      return C93 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 11,
        [_Location_line]: 631,
        [_Location_file]: null
      });
    },
    get C94() {
      return C94 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 11,
        [_Location_line]: 632,
        [_Location_file]: null
      });
    },
    get C95() {
      return C95 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 633,
        [_Location_file]: null
      });
    },
    get C90() {
      return C90 = dart.constList([C91 || CT.C91, C92 || CT.C92, C93 || CT.C93, C94 || CT.C94, C95 || CT.C95], widget_inspector._Location);
    },
    get C89() {
      return C89 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C90 || CT.C90,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 628,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C98() {
      return C98 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 9,
        [_Location_line]: 627,
        [_Location_file]: null
      });
    },
    get C99() {
      return C99 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 628,
        [_Location_file]: null
      });
    },
    get C97() {
      return C97 = dart.constList([C98 || CT.C98, C99 || CT.C99], widget_inspector._Location);
    },
    get C96() {
      return C96 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C97 || CT.C97,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 626,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C102() {
      return C102 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollable",
        [_Location_column]: 7,
        [_Location_line]: 623,
        [_Location_file]: null
      });
    },
    get C103() {
      return C103 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 624,
        [_Location_file]: null
      });
    },
    get C104() {
      return C104 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 626,
        [_Location_file]: null
      });
    },
    get C101() {
      return C101 = dart.constList([C102 || CT.C102, C103 || CT.C103, C104 || CT.C104], widget_inspector._Location);
    },
    get C100() {
      return C100 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C101 || CT.C101,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 622,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C107() {
      return C107 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 648,
        [_Location_file]: null
      });
    },
    get C108() {
      return C108 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 649,
        [_Location_file]: null
      });
    },
    get C109() {
      return C109 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 650,
        [_Location_file]: null
      });
    },
    get C110() {
      return C110 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "allowImplicitScrolling",
        [_Location_column]: 9,
        [_Location_line]: 651,
        [_Location_file]: null
      });
    },
    get C111() {
      return C111 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticChildCount",
        [_Location_column]: 9,
        [_Location_line]: 652,
        [_Location_file]: null
      });
    },
    get C106() {
      return C106 = dart.constList([C107 || CT.C107, C108 || CT.C108, C109 || CT.C109, C110 || CT.C110, C111 || CT.C111], widget_inspector._Location);
    },
    get C105() {
      return C105 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C106 || CT.C106,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 647,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart"
      });
    },
    get C112() {
      return C112 = dart.const({
        __proto__: scrollable$.ScrollIncrementType.prototype,
        [_name$7]: "ScrollIncrementType.line",
        index: 0
      });
    },
    get C113() {
      return C113 = dart.const({
        __proto__: scrollable$.ScrollIncrementType.prototype,
        [_name$7]: "ScrollIncrementType.page",
        index: 1
      });
    },
    get C114() {
      return C114 = dart.constList([C112 || CT.C112, C113 || CT.C113], scrollable$.ScrollIncrementType);
    },
    get C115() {
      return C115 = dart.const({
        __proto__: basic_types$.AxisDirection.prototype,
        [_name$5]: "AxisDirection.up",
        index: 0
      });
    },
    get C116() {
      return C116 = dart.const({
        __proto__: basic_types$.AxisDirection.prototype,
        [_name$5]: "AxisDirection.right",
        index: 1
      });
    },
    get C117() {
      return C117 = dart.const({
        __proto__: basic_types$.AxisDirection.prototype,
        [_name$5]: "AxisDirection.left",
        index: 3
      });
    },
    get C118() {
      return C118 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C120() {
      return C120 = dart.wrapType(scrollable$.ScrollAction);
    },
    get C119() {
      return C119 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C120 || CT.C120
      });
    },
    get C121() {
      return C121 = dart.const({
        __proto__: viewport$.CacheExtentStyle.prototype,
        [_name$8]: "CacheExtentStyle.pixel",
        index: 0
      });
    },
    get C122() {
      return C122 = dart.const({
        __proto__: ui.BlendMode.prototype,
        [_name]: "BlendMode.modulate",
        index: 13
      });
    },
    get C123() {
      return C123 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C124() {
      return C124 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.hardEdge",
        index: 1
      });
    },
    get C126() {
      return C126 = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C125() {
      return C125 = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C126 || CT.C126,
        [BorderRadius_bottomLeft]: C126 || CT.C126,
        [BorderRadius_topRight]: C126 || CT.C126,
        [BorderRadius_topLeft]: C126 || CT.C126
      });
    },
    get C127() {
      return C127 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.antiAlias",
        index: 2
      });
    },
    get C130() {
      return C130 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 11,
        [_Location_line]: 819,
        [_Location_file]: null
      });
    },
    get C131() {
      return C131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 823,
        [_Location_file]: null
      });
    },
    get C132() {
      return C132 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 824,
        [_Location_file]: null
      });
    },
    get C129() {
      return C129 = dart.constList([C130 || CT.C130, C131 || CT.C131, C132 || CT.C132], widget_inspector._Location);
    },
    get C128() {
      return C128 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C129 || CT.C129,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 818,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C135() {
      return C135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 816,
        [_Location_file]: null
      });
    },
    get C136() {
      return C136 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 817,
        [_Location_file]: null
      });
    },
    get C134() {
      return C134 = dart.constList([C135 || CT.C135, C136 || CT.C136], widget_inspector._Location);
    },
    get C133() {
      return C133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C134 || CT.C134,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 815,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C137() {
      return C137 = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_name$9]: "BoxShape.rectangle",
        index: 0
      });
    },
    get C138() {
      return C138 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.none",
        index: 0
      });
    },
    get C139() {
      return C139 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C140() {
      return C140 = dart.const({
        __proto__: alignment$.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C141() {
      return C141 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C142() {
      return C142 = dart.const({
        __proto__: box_fit.BoxFit.prototype,
        [_name$10]: "BoxFit.contain",
        index: 1
      });
    },
    get C143() {
      return C143 = dart.const({
        __proto__: alignment$.AlignmentDirectional.prototype,
        [AlignmentDirectional_y]: -1,
        [AlignmentDirectional_start]: -1
      });
    },
    get C144() {
      return C144 = dart.const({
        __proto__: stack.StackFit.prototype,
        [_name$11]: "StackFit.loose",
        index: 0
      });
    },
    get C145() {
      return C145 = dart.const({
        __proto__: stack.Overflow.prototype,
        [_name$11]: "Overflow.clip",
        index: 1
      });
    },
    get C148() {
      return C148 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 3706,
        [_Location_file]: null
      });
    },
    get C149() {
      return C149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "start",
        [_Location_column]: 7,
        [_Location_line]: 3707,
        [_Location_file]: null
      });
    },
    get C150() {
      return C150 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 3708,
        [_Location_file]: null
      });
    },
    get C151() {
      return C151 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "end",
        [_Location_column]: 7,
        [_Location_line]: 3709,
        [_Location_file]: null
      });
    },
    get C152() {
      return C152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 3710,
        [_Location_file]: null
      });
    },
    get C153() {
      return C153 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 3711,
        [_Location_file]: null
      });
    },
    get C154() {
      return C154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 3712,
        [_Location_file]: null
      });
    },
    get C155() {
      return C155 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 3713,
        [_Location_file]: null
      });
    },
    get C147() {
      return C147 = dart.constList([C148 || CT.C148, C149 || CT.C149, C150 || CT.C150, C151 || CT.C151, C152 || CT.C152, C153 || CT.C153, C154 || CT.C154, C155 || CT.C155], widget_inspector._Location);
    },
    get C146() {
      return C146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C147 || CT.C147,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 3705,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C156() {
      return C156 = dart.const({
        __proto__: flex$.MainAxisAlignment.prototype,
        [_name$12]: "MainAxisAlignment.start",
        index: 0
      });
    },
    get C157() {
      return C157 = dart.const({
        __proto__: flex$.MainAxisSize.prototype,
        [_name$12]: "MainAxisSize.max",
        index: 1
      });
    },
    get C158() {
      return C158 = dart.const({
        __proto__: flex$.CrossAxisAlignment.prototype,
        [_name$12]: "CrossAxisAlignment.center",
        index: 2
      });
    },
    get C159() {
      return C159 = dart.const({
        __proto__: basic_types$.VerticalDirection.prototype,
        [_name$5]: "VerticalDirection.down",
        index: 1
      });
    },
    get C160() {
      return C160 = dart.const({
        __proto__: flex$.FlexFit.prototype,
        [_name$12]: "FlexFit.loose",
        index: 1
      });
    },
    get C161() {
      return C161 = dart.const({
        __proto__: wrap.WrapAlignment.prototype,
        [_name$13]: "WrapAlignment.start",
        index: 0
      });
    },
    get C162() {
      return C162 = dart.const({
        __proto__: wrap.WrapCrossAlignment.prototype,
        [_name$13]: "WrapCrossAlignment.start",
        index: 0
      });
    },
    get C163() {
      return C163 = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_name]: "TextAlign.start",
        index: 4
      });
    },
    get C164() {
      return C164 = dart.const({
        __proto__: paragraph.TextOverflow.prototype,
        [_name$14]: "TextOverflow.clip",
        index: 0
      });
    },
    get C165() {
      return C165 = dart.const({
        __proto__: text_painter.TextWidthBasis.prototype,
        [_name$15]: "TextWidthBasis.parent",
        index: 0
      });
    },
    get C166() {
      return C166 = dart.const({
        __proto__: decoration_image.ImageRepeat.prototype,
        [_name$16]: "ImageRepeat.noRepeat",
        index: 3
      });
    },
    get C167() {
      return C167 = dart.const({
        __proto__: ui.FilterQuality.prototype,
        [_name]: "FilterQuality.low",
        index: 1
      });
    },
    get C168() {
      return C168 = dart.const({
        __proto__: proxy_box.HitTestBehavior.prototype,
        [_name$17]: "HitTestBehavior.deferToChild",
        index: 0
      });
    },
    get C171() {
      return C171 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEnter",
        [_Location_column]: 9,
        [_Location_line]: 5712,
        [_Location_file]: null
      });
    },
    get C172() {
      return C172 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExit",
        [_Location_column]: 9,
        [_Location_line]: 5713,
        [_Location_file]: null
      });
    },
    get C173() {
      return C173 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHover",
        [_Location_column]: 9,
        [_Location_line]: 5714,
        [_Location_file]: null
      });
    },
    get C174() {
      return C174 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opaque",
        [_Location_column]: 9,
        [_Location_line]: 5715,
        [_Location_file]: null
      });
    },
    get C175() {
      return C175 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 5716,
        [_Location_file]: null
      });
    },
    get C170() {
      return C170 = dart.constList([C171 || CT.C171, C172 || CT.C172, C173 || CT.C173, C174 || CT.C174, C175 || CT.C175], widget_inspector._Location);
    },
    get C169() {
      return C169 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C170 || CT.C170,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 5711,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C178() {
      return C178 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 5720,
        [_Location_file]: null
      });
    },
    get C179() {
      return C179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 7,
        [_Location_line]: 5721,
        [_Location_file]: null
      });
    },
    get C180() {
      return C180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerMove",
        [_Location_column]: 7,
        [_Location_line]: 5722,
        [_Location_file]: null
      });
    },
    get C181() {
      return C181 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerCancel",
        [_Location_column]: 7,
        [_Location_line]: 5723,
        [_Location_file]: null
      });
    },
    get C182() {
      return C182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerSignal",
        [_Location_column]: 7,
        [_Location_line]: 5724,
        [_Location_file]: null
      });
    },
    get C183() {
      return C183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 5725,
        [_Location_file]: null
      });
    },
    get C184() {
      return C184 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 5726,
        [_Location_file]: null
      });
    },
    get C177() {
      return C177 = dart.constList([C178 || CT.C178, C179 || CT.C179, C180 || CT.C180, C181 || CT.C181, C182 || CT.C182, C183 || CT.C183, C184 || CT.C184], widget_inspector._Location);
    },
    get C176() {
      return C176 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C177 || CT.C177,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 5719,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C187() {
      return C187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "owner",
        [_Location_column]: 28,
        [_Location_line]: 6137,
        [_Location_file]: null
      });
    },
    get C186() {
      return C186 = dart.constList([C187 || CT.C187], widget_inspector._Location);
    },
    get C185() {
      return C185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C186 || CT.C186,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 6137,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C190() {
      return C190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 47,
        [_Location_line]: 6241,
        [_Location_file]: null
      });
    },
    get C191() {
      return C191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childIndex",
        [_Location_column]: 52,
        [_Location_line]: 6241,
        [_Location_file]: null
      });
    },
    get C189() {
      return C189 = dart.constList([C190 || CT.C190, C191 || CT.C191], widget_inspector._Location);
    },
    get C188() {
      return C188 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C189 || CT.C189,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 6241,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C194() {
      return C194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 6958,
        [_Location_file]: null
      });
    },
    get C195() {
      return C195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childIndex",
        [_Location_column]: 55,
        [_Location_line]: 6958,
        [_Location_file]: null
      });
    },
    get C193() {
      return C193 = dart.constList([C194 || CT.C194, C195 || CT.C195], widget_inspector._Location);
    },
    get C192() {
      return C192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C193 || CT.C193,
        [_Location_name]: null,
        [_Location_column]: 44,
        [_Location_line]: 6958,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/basic.dart"
      });
    },
    get C196() {
      return C196 = dart.const({
        __proto__: ui.PlaceholderAlignment.prototype,
        [_name]: "PlaceholderAlignment.bottom",
        index: 4
      });
    },
    get C197() {
      return C197 = dart.const({
        __proto__: localizations.DefaultWidgetsLocalizations.prototype
      });
    },
    get C198() {
      return C198 = dart.const({
        __proto__: localizations._WidgetsLocalizationsDelegate.prototype
      });
    },
    get C200() {
      return C200 = dart.constList([], widget_inspector._Location);
    },
    get C199() {
      return C199 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 551,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart"
      });
    },
    get C203() {
      return C203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 11,
        [_Location_line]: 560,
        [_Location_file]: null
      });
    },
    get C204() {
      return C204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 561,
        [_Location_file]: null
      });
    },
    get C202() {
      return C202 = dart.constList([C203 || CT.C203, C204 || CT.C204], widget_inspector._Location);
    },
    get C201() {
      return C201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C202 || CT.C202,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 559,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart"
      });
    },
    get C207() {
      return C207 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 555,
        [_Location_file]: null
      });
    },
    get C208() {
      return C208 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 9,
        [_Location_line]: 556,
        [_Location_file]: null
      });
    },
    get C209() {
      return C209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsState",
        [_Location_column]: 9,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C210() {
      return C210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "typeToResources",
        [_Location_column]: 9,
        [_Location_line]: 558,
        [_Location_file]: null
      });
    },
    get C211() {
      return C211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 559,
        [_Location_file]: null
      });
    },
    get C206() {
      return C206 = dart.constList([C207 || CT.C207, C208 || CT.C208, C209 || CT.C209, C210 || CT.C210, C211 || CT.C211], widget_inspector._Location);
    },
    get C205() {
      return C205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C206 || CT.C206,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 554,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart"
      });
    },
    get C214() {
      return C214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 553,
        [_Location_file]: null
      });
    },
    get C215() {
      return C215 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 554,
        [_Location_file]: null
      });
    },
    get C213() {
      return C213 = dart.constList([C214 || CT.C214, C215 || CT.C215], widget_inspector._Location);
    },
    get C212() {
      return C212 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C213 || CT.C213,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 552,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart"
      });
    },
    get C216() {
      return C216 = dart.const({
        __proto__: proxy_box.DecorationPosition.prototype,
        [_name$17]: "DecorationPosition.background",
        index: 0
      });
    },
    get C217() {
      return C217 = dart.const({
        __proto__: proxy_box.DecorationPosition.prototype,
        [_name$17]: "DecorationPosition.foreground",
        index: 1
      });
    },
    get C218() {
      return C218 = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 1 / 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 1 / 0
      });
    },
    get C221() {
      return C221 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 31,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C220() {
      return C220 = dart.constList([C221 || CT.C221], widget_inspector._Location);
    },
    get C219() {
      return C219 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C220 || CT.C220,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 415,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C224() {
      return C224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 9,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C225() {
      return C225 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxHeight",
        [_Location_column]: 9,
        [_Location_line]: 414,
        [_Location_file]: null
      });
    },
    get C226() {
      return C226 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C223() {
      return C223 = dart.constList([C224 || CT.C224, C225 || CT.C225, C226 || CT.C226], widget_inspector._Location);
    },
    get C222() {
      return C222 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C223 || CT.C223,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 412,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C229() {
      return C229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 23,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C230() {
      return C230 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 45,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C228() {
      return C228 = dart.constList([C229 || CT.C229, C230 || CT.C230], widget_inspector._Location);
    },
    get C227() {
      return C227 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C228 || CT.C228,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 420,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C233() {
      return C233 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 25,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C234() {
      return C234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 52,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C232() {
      return C232 = dart.constList([C233 || CT.C233, C234 || CT.C234], widget_inspector._Location);
    },
    get C231() {
      return C231 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C232 || CT.C232,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 424,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C237() {
      return C237 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 30,
        [_Location_line]: 427,
        [_Location_file]: null
      });
    },
    get C238() {
      return C238 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 54,
        [_Location_line]: 427,
        [_Location_file]: null
      });
    },
    get C236() {
      return C236 = dart.constList([C237 || CT.C237, C238 || CT.C238], widget_inspector._Location);
    },
    get C235() {
      return C235 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C236 || CT.C236,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 427,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C241() {
      return C241 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 9,
        [_Location_line]: 431,
        [_Location_file]: null
      });
    },
    get C242() {
      return C242 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C243() {
      return C243 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C240() {
      return C240 = dart.constList([C241 || CT.C241, C242 || CT.C242, C243 || CT.C243], widget_inspector._Location);
    },
    get C239() {
      return C239 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C240 || CT.C240,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 430,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C246() {
      return C246 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 32,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C247() {
      return C247 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 58,
        [_Location_line]: 438,
        [_Location_file]: null
      });
    },
    get C245() {
      return C245 = dart.constList([C246 || CT.C246, C247 || CT.C247], widget_inspector._Location);
    },
    get C244() {
      return C244 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C245 || CT.C245,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 438,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C250() {
      return C250 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 25,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C251() {
      return C251 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 42,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C249() {
      return C249 = dart.constList([C250 || CT.C250, C251 || CT.C251], widget_inspector._Location);
    },
    get C248() {
      return C248 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C249 || CT.C249,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 441,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C254() {
      return C254 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 27,
        [_Location_line]: 444,
        [_Location_file]: null
      });
    },
    get C255() {
      return C255 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 444,
        [_Location_file]: null
      });
    },
    get C253() {
      return C253 = dart.constList([C254 || CT.C254, C255 || CT.C255], widget_inspector._Location);
    },
    get C252() {
      return C252 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C253 || CT.C253,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 444,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C258() {
      return C258 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 9,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C259() {
      return C259 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 9,
        [_Location_line]: 452,
        [_Location_file]: null
      });
    },
    get C260() {
      return C260 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 453,
        [_Location_file]: null
      });
    },
    get C257() {
      return C257 = dart.constList([C258 || CT.C258, C259 || CT.C259, C260 || CT.C260], widget_inspector._Location);
    },
    get C256() {
      return C256 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C257 || CT.C257,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 447,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/container.dart"
      });
    },
    get C263() {
      return C263 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 1091,
        [_Location_file]: null
      });
    },
    get C264() {
      return C264 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1092,
        [_Location_file]: null
      });
    },
    get C265() {
      return C265 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1093,
        [_Location_file]: null
      });
    },
    get C266() {
      return C266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scale",
        [_Location_column]: 7,
        [_Location_line]: 1094,
        [_Location_file]: null
      });
    },
    get C267() {
      return C267 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1095,
        [_Location_file]: null
      });
    },
    get C268() {
      return C268 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorBlendMode",
        [_Location_column]: 7,
        [_Location_line]: 1096,
        [_Location_file]: null
      });
    },
    get C269() {
      return C269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 1097,
        [_Location_file]: null
      });
    },
    get C270() {
      return C270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 1098,
        [_Location_file]: null
      });
    },
    get C271() {
      return C271 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 1099,
        [_Location_file]: null
      });
    },
    get C272() {
      return C272 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "centerSlice",
        [_Location_column]: 7,
        [_Location_line]: 1100,
        [_Location_file]: null
      });
    },
    get C273() {
      return C273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 1101,
        [_Location_file]: null
      });
    },
    get C274() {
      return C274 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "invertColors",
        [_Location_column]: 7,
        [_Location_line]: 1102,
        [_Location_file]: null
      });
    },
    get C275() {
      return C275 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filterQuality",
        [_Location_column]: 7,
        [_Location_line]: 1103,
        [_Location_file]: null
      });
    },
    get C262() {
      return C262 = dart.constList([C263 || CT.C263, C264 || CT.C264, C265 || CT.C265, C266 || CT.C266, C267 || CT.C267, C268 || CT.C268, C269 || CT.C269, C270 || CT.C270, C271 || CT.C271, C272 || CT.C272, C273 || CT.C273, C274 || CT.C274, C275 || CT.C275], widget_inspector._Location);
    },
    get C261() {
      return C261 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C262 || CT.C262,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 1090,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image.dart"
      });
    },
    get C278() {
      return C278 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 1108,
        [_Location_file]: null
      });
    },
    get C279() {
      return C279 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 9,
        [_Location_line]: 1109,
        [_Location_file]: null
      });
    },
    get C280() {
      return C280 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 1110,
        [_Location_file]: null
      });
    },
    get C281() {
      return C281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1111,
        [_Location_file]: null
      });
    },
    get C277() {
      return C277 = dart.constList([C278 || CT.C278, C279 || CT.C279, C280 || CT.C280, C281 || CT.C281], widget_inspector._Location);
    },
    get C276() {
      return C276 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C277 || CT.C277,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1107,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image.dart"
      });
    },
    get C284() {
      return C284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C285() {
      return C285 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C283() {
      return C283 = dart.constList([C284 || CT.C284, C285 || CT.C285], widget_inspector._Location);
    },
    get C282() {
      return C282 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C283 || CT.C283,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 67,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart"
      });
    },
    get C286() {
      return C286 = dart.const({
        __proto__: media_query.Orientation.prototype,
        [_name$18]: "Orientation.portrait",
        index: 0
      });
    },
    get C287() {
      return C287 = dart.const({
        __proto__: media_query.Orientation.prototype,
        [_name$18]: "Orientation.landscape",
        index: 1
      });
    },
    get C288() {
      return C288 = dart.constList([C286 || CT.C286, C287 || CT.C287], media_query.Orientation);
    },
    get C289() {
      return C289 = dart.const({
        __proto__: ui.Brightness.prototype,
        [_name]: "Brightness.light",
        index: 1
      });
    },
    get C290() {
      return C290 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C291() {
      return C291 = dart.fn(widget_inspector.transformDebugCreator, IterableOfDiagnosticsNodeToIterableOfDiagnosticsNode());
    },
    get C292() {
      return C292 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "inflateWidget",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C293() {
      return C293 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "updateChild",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C294() {
      return C294 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "rebuild",
        [PartialStackFrame_className]: "Element",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C295() {
      return C295 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "performRebuild",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C296() {
      return C296 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "_firstBuild",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C297() {
      return C297 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "mount",
        [PartialStackFrame_className]: "ComponentElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C298() {
      return C298 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "_firstBuild",
        [PartialStackFrame_className]: "StatefulElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C299() {
      return C299 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "mount",
        [PartialStackFrame_className]: "SingleChildRenderObjectElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C300() {
      return C300 = dart.const({
        __proto__: assertions.PartialStackFrame.prototype,
        [PartialStackFrame_method]: "performRebuild",
        [PartialStackFrame_className]: "StatefulElement",
        [PartialStackFrame_package]: "package:flutter/src/widgets/framework.dart"
      });
    },
    get C302() {
      return C302 = dart.constList([C292 || CT.C292, C293 || CT.C293, C295 || CT.C295, C294 || CT.C294, C296 || CT.C296, C297 || CT.C297], assertions.PartialStackFrame);
    },
    get C301() {
      return C301 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C302 || CT.C302
      });
    },
    get C304() {
      return C304 = dart.constList([C293 || CT.C293, C295 || CT.C295, C294 || CT.C294, C296 || CT.C296, C297 || CT.C297], assertions.PartialStackFrame);
    },
    get C303() {
      return C303 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C304 || CT.C304
      });
    },
    get C306() {
      return C306 = dart.constList([C292 || CT.C292, C293 || CT.C293, C295 || CT.C295, C300 || CT.C300, C294 || CT.C294, C296 || CT.C296, C298 || CT.C298, C297 || CT.C297], assertions.PartialStackFrame);
    },
    get C305() {
      return C305 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C306 || CT.C306
      });
    },
    get C308() {
      return C308 = dart.constList([C293 || CT.C293, C295 || CT.C295, C300 || CT.C300, C294 || CT.C294, C296 || CT.C296, C298 || CT.C298, C297 || CT.C297], assertions.PartialStackFrame);
    },
    get C307() {
      return C307 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C308 || CT.C308
      });
    },
    get C310() {
      return C310 = dart.constList([C292 || CT.C292, C293 || CT.C293, C299 || CT.C299], assertions.PartialStackFrame);
    },
    get C309() {
      return C309 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C310 || CT.C310
      });
    },
    get C312() {
      return C312 = dart.constList([C293 || CT.C293, C299 || CT.C299], assertions.PartialStackFrame);
    },
    get C311() {
      return C311 = dart.const({
        __proto__: assertions.RepetitiveStackFrameFilter.prototype,
        [RepetitiveStackFrameFilter_replacement]: "...     Normal element mounting",
        [RepetitiveStackFrameFilter_frames]: C312 || CT.C312
      });
    },
    get C315() {
      return C315 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 7,
        [_Location_line]: 932,
        [_Location_file]: null
      });
    },
    get C316() {
      return C316 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShortDescription",
        [_Location_column]: 7,
        [_Location_line]: 933,
        [_Location_file]: null
      });
    },
    get C317() {
      return C317 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 934,
        [_Location_file]: null
      });
    },
    get C314() {
      return C314 = dart.constList([C315 || CT.C315, C316 || CT.C316, C317 || CT.C317], widget_inspector._Location);
    },
    get C313() {
      return C313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C314 || CT.C314,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 931,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/binding.dart"
      });
    },
    get C318() {
      return C318 = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C319() {
      return C319 = dart.const({
        __proto__: ui.ClipOp.prototype,
        [_name]: "ClipOp.intersect",
        index: 1
      });
    },
    get C320() {
      return C320 = dart.const(new _js_helper.PrivateSymbol.new('_drawCircle', _drawCircle));
    },
    get C321() {
      return C321 = dart.const(new _js_helper.PrivateSymbol.new('_drawOval', _drawOval));
    },
    get C322() {
      return C322 = dart.const(new _js_helper.PrivateSymbol.new('_saveLayerWithoutBounds', _saveLayerWithoutBounds));
    },
    get C323() {
      return C323 = dart.const(new _js_helper.PrivateSymbol.new('_drawImageRect', _drawImageRect));
    },
    get C324() {
      return C324 = dart.const(new _js_helper.PrivateSymbol.new('_drawRect', _drawRect));
    },
    get C325() {
      return C325 = dart.const(new _js_helper.PrivateSymbol.new('_scale', _scale));
    },
    get C326() {
      return C326 = dart.const(new _js_helper.PrivateSymbol.new('_drawDRRect', _drawDRRect));
    },
    get C327() {
      return C327 = dart.const(new _js_helper.PrivateSymbol.new('_canvas', _canvas));
    },
    get C328() {
      return C328 = dart.const(new _js_helper.PrivateSymbol.new('_saveLayer', _saveLayer));
    },
    get C329() {
      return C329 = dart.const(new _js_helper.PrivateSymbol.new('_drawLine', _drawLine));
    },
    get C330() {
      return C330 = dart.const(new _js_helper.PrivateSymbol.new('_clipRRect', _clipRRect));
    },
    get C331() {
      return C331 = dart.const(new _js_helper.PrivateSymbol.new('_clipPath', _clipPath));
    },
    get C332() {
      return C332 = dart.const(new _js_helper.PrivateSymbol.new('_transform', _transform));
    },
    get C333() {
      return C333 = dart.const(new _js_helper.PrivateSymbol.new('_drawImage', _drawImage));
    },
    get C334() {
      return C334 = dart.const(new _js_helper.PrivateSymbol.new('_drawPath', _drawPath));
    },
    get C335() {
      return C335 = dart.const(new _js_helper.PrivateSymbol.new('_drawColor', _drawColor));
    },
    get C336() {
      return C336 = dart.const(new _js_helper.PrivateSymbol.new('_drawPaint', _drawPaint));
    },
    get C337() {
      return C337 = dart.const(new _js_helper.PrivateSymbol.new('_drawRRect', _drawRRect));
    },
    get C338() {
      return C338 = dart.const(new _js_helper.PrivateSymbol.new('_drawParagraph', _drawParagraph));
    },
    get C339() {
      return C339 = dart.const(new _js_helper.PrivateSymbol.new('_clipRect', _clipRect));
    },
    get C340() {
      return C340 = dart.const(new _js_helper.PrivateSymbol.new('_canvas=', _canvas_));
    },
    get C341() {
      return C341 = dart.constList([], widget_inspector._DiagnosticsPathNode);
    },
    get C342() {
      return C342 = dart.constList([], diagnostics$.DiagnosticsNode);
    },
    get C343() {
      return C343 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 1802,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C346() {
      return C346 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 2286,
        [_Location_file]: null
      });
    },
    get C347() {
      return C347 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 2287,
        [_Location_file]: null
      });
    },
    get C348() {
      return C348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 2288,
        [_Location_file]: null
      });
    },
    get C349() {
      return C349 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2289,
        [_Location_file]: null
      });
    },
    get C345() {
      return C345 = dart.constList([C346 || CT.C346, C347 || CT.C347, C348 || CT.C348, C349 || CT.C349], widget_inspector._Location);
    },
    get C344() {
      return C344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C345 || CT.C345,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2285,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C352() {
      return C352 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 2279,
        [_Location_file]: null
      });
    },
    get C353() {
      return C353 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanDown",
        [_Location_column]: 9,
        [_Location_line]: 2280,
        [_Location_file]: null
      });
    },
    get C354() {
      return C354 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 9,
        [_Location_line]: 2281,
        [_Location_file]: null
      });
    },
    get C355() {
      return C355 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 9,
        [_Location_line]: 2282,
        [_Location_file]: null
      });
    },
    get C356() {
      return C356 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 2283,
        [_Location_file]: null
      });
    },
    get C357() {
      return C357 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 2284,
        [_Location_file]: null
      });
    },
    get C358() {
      return C358 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2285,
        [_Location_file]: null
      });
    },
    get C351() {
      return C351 = dart.constList([C352 || CT.C352, C353 || CT.C353, C354 || CT.C354, C355 || CT.C355, C356 || CT.C356, C357 || CT.C357, C358 || CT.C358], widget_inspector._Location);
    },
    get C350() {
      return C350 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C351 || CT.C351,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2278,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C361() {
      return C361 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 2294,
        [_Location_file]: null
      });
    },
    get C362() {
      return C362 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 2295,
        [_Location_file]: null
      });
    },
    get C363() {
      return C363 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2296,
        [_Location_file]: null
      });
    },
    get C360() {
      return C360 = dart.constList([C361 || CT.C361, C362 || CT.C362, C363 || CT.C363], widget_inspector._Location);
    },
    get C359() {
      return C359 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C360 || CT.C360,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 2293,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C366() {
      return C366 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selection",
        [_Location_column]: 25,
        [_Location_line]: 2298,
        [_Location_file]: null
      });
    },
    get C365() {
      return C365 = dart.constList([C366 || CT.C366], widget_inspector._Location);
    },
    get C364() {
      return C364 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C365 || CT.C365,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 2298,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C369() {
      return C369 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 18,
        [_Location_line]: 2277,
        [_Location_file]: null
      });
    },
    get C368() {
      return C368 = dart.constList([C369 || CT.C369], widget_inspector._Location);
    },
    get C367() {
      return C367 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C368 || CT.C368,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2277,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart"
      });
    },
    get C370() {
      return C370 = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 1 / 0,
        [OffsetBase__dx]: 1 / 0
      });
    },
    get C371() {
      return C371 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 10
      });
    },
    get C372() {
      return C372 = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 5,
        [OffsetBase__dx]: 5
      });
    },
    get C373() {
      return C373 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 3862707260.0
      });
    },
    get C374() {
      return C374 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2155905279.0
      });
    },
    get C375() {
      return C375 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2151694464.0
      });
    },
    get C377() {
      return C377 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C376() {
      return C376 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 1.2,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 10,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C377 || CT.C377,
        [TextStyle_inherit]: true
      });
    },
    get C380() {
      return C380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 739,
        [_Location_file]: null
      });
    },
    get C381() {
      return C381 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 740,
        [_Location_file]: null
      });
    },
    get C382() {
      return C382 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 741,
        [_Location_file]: null
      });
    },
    get C383() {
      return C383 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 742,
        [_Location_file]: null
      });
    },
    get C379() {
      return C379 = dart.constList([C380 || CT.C380, C381 || CT.C381, C382 || CT.C382, C383 || CT.C383], widget_inspector._Location);
    },
    get C378() {
      return C378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C379 || CT.C379,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 738,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart"
      });
    },
    get C384() {
      return C384 = dart.constMap(core.Type, recognizer.GestureRecognizer, []);
    },
    get C387() {
      return C387 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 1036,
        [_Location_file]: null
      });
    },
    get C388() {
      return C388 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1037,
        [_Location_file]: null
      });
    },
    get C389() {
      return C389 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1038,
        [_Location_file]: null
      });
    },
    get C386() {
      return C386 = dart.constList([C387 || CT.C387, C388 || CT.C388, C389 || CT.C389], widget_inspector._Location);
    },
    get C385() {
      return C385 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C386 || CT.C386,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 1035,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart"
      });
    },
    get C392() {
      return C392 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1042,
        [_Location_file]: null
      });
    },
    get C393() {
      return C393 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "assignSemantics",
        [_Location_column]: 9,
        [_Location_line]: 1043,
        [_Location_file]: null
      });
    },
    get C391() {
      return C391 = dart.constList([C392 || CT.C392, C393 || CT.C393], widget_inspector._Location);
    },
    get C390() {
      return C390 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C391 || CT.C391,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1041,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart"
      });
    },
    get C394() {
      return C394 = dart.const({
        __proto__: long_press.LongPressStartDetails.prototype,
        [LongPressStartDetails_localPosition]: C141 || CT.C141,
        [LongPressStartDetails_globalPosition]: C141 || CT.C141
      });
    },
    get C396() {
      return C396 = dart.const({
        __proto__: velocity_tracker.Velocity.prototype,
        [Velocity_pixelsPerSecond]: C141 || CT.C141
      });
    },
    get C395() {
      return C395 = dart.const({
        __proto__: long_press.LongPressEndDetails.prototype,
        [LongPressEndDetails_velocity]: C396 || CT.C396,
        [LongPressEndDetails_localPosition]: C141 || CT.C141,
        [LongPressEndDetails_globalPosition]: C141 || CT.C141
      });
    },
    get C397() {
      return C397 = dart.constList([], table$.TableRow);
    },
    get C398() {
      return C398 = dart.const({
        __proto__: table.FlexColumnWidth.prototype,
        [FlexColumnWidth_value]: 1
      });
    },
    get C399() {
      return C399 = dart.const({
        __proto__: table.TableCellVerticalAlignment.prototype,
        [_name$19]: "TableCellVerticalAlignment.top",
        index: 0
      });
    },
    get C400() {
      return C400 = dart.constList([], table$._TableElementRow);
    },
    get C401() {
      return C401 = dart.constList([], framework.Element);
    },
    get C402() {
      return C402 = dart.constList([], navigator$.NavigatorObserver);
    },
    get C403() {
      return C403 = dart.constMap(core.String, BuildContextToWidget(), []);
    },
    get C405() {
      return C405 = dart.const({
        __proto__: ui.Locale.prototype,
        [Locale__countryCode]: "US",
        [Locale_scriptCode]: null,
        [Locale__languageCode]: "en"
      });
    },
    get C404() {
      return C404 = dart.constList([C405 || CT.C405], ui.Locale);
    },
    get C406() {
      return C406 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$20]: "TargetPlatform.android",
        index: 0
      });
    },
    get C407() {
      return C407 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$20]: "TargetPlatform.fuchsia",
        index: 1
      });
    },
    get C408() {
      return C408 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$20]: "TargetPlatform.macOS",
        index: 3
      });
    },
    get C409() {
      return C409 = dart.const({
        __proto__: platform.TargetPlatform.prototype,
        [_name$20]: "TargetPlatform.iOS",
        index: 2
      });
    },
    get C412() {
      return C412 = dart.wrapType(actions$.ActivateAction);
    },
    get C411() {
      return C411 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C412 || CT.C412
      });
    },
    get C410() {
      return C410 = dart.const({
        __proto__: actions$.Intent.prototype,
        [key$0]: C411 || CT.C411
      });
    },
    get C413() {
      return C413 = dart.const({
        __proto__: actions$.Intent.prototype,
        [key$0]: C62 || CT.C62
      });
    },
    get C414() {
      return C414 = dart.const({
        __proto__: actions$.Intent.prototype,
        [key$0]: C64 || CT.C64
      });
    },
    get C415() {
      return C415 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [key$0]: C69 || CT.C69,
        [ignoreTextFields$]: true,
        [direction$0]: C58 || CT.C58
      });
    },
    get C416() {
      return C416 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [key$0]: C69 || CT.C69,
        [ignoreTextFields$]: true,
        [direction$0]: C56 || CT.C56
      });
    },
    get C417() {
      return C417 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [key$0]: C69 || CT.C69,
        [ignoreTextFields$]: true,
        [direction$0]: C57 || CT.C57
      });
    },
    get C418() {
      return C418 = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [key$0]: C69 || CT.C69,
        [ignoreTextFields$]: true,
        [direction$0]: C55 || CT.C55
      });
    },
    get C419() {
      return C419 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C112 || CT.C112,
        [direction$1]: C115 || CT.C115
      });
    },
    get C420() {
      return C420 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C112 || CT.C112,
        [direction$1]: C72 || CT.C72
      });
    },
    get C421() {
      return C421 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C112 || CT.C112,
        [direction$1]: C117 || CT.C117
      });
    },
    get C422() {
      return C422 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C112 || CT.C112,
        [direction$1]: C116 || CT.C116
      });
    },
    get C423() {
      return C423 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C113 || CT.C113,
        [direction$1]: C115 || CT.C115
      });
    },
    get C424() {
      return C424 = dart.const({
        __proto__: scrollable$.ScrollIntent.prototype,
        [key$0]: C119 || CT.C119,
        [type$0]: C113 || CT.C113,
        [direction$1]: C72 || CT.C72
      });
    },
    get C425() {
      return C425 = dart.const({
        __proto__: actions$.DoNothingAction.prototype,
        [intentKey$]: C67 || CT.C67
      });
    },
    get C426() {
      return C426 = dart.fn(navigator$.Navigator.defaultGenerateInitialRoutes, NavigatorStateAndStringToListOfRoute());
    },
    get C429() {
      return C429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 9,
        [_Location_line]: 1283,
        [_Location_file]: null
      });
    },
    get C430() {
      return C430 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialRoute",
        [_Location_column]: 9,
        [_Location_line]: 1287,
        [_Location_file]: null
      });
    },
    get C431() {
      return C431 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateRoute",
        [_Location_column]: 9,
        [_Location_line]: 1290,
        [_Location_file]: null
      });
    },
    get C432() {
      return C432 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateInitialRoutes",
        [_Location_column]: 9,
        [_Location_line]: 1291,
        [_Location_file]: null
      });
    },
    get C433() {
      return C433 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onUnknownRoute",
        [_Location_column]: 9,
        [_Location_line]: 1296,
        [_Location_file]: null
      });
    },
    get C434() {
      return C434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "observers",
        [_Location_column]: 9,
        [_Location_line]: 1297,
        [_Location_file]: null
      });
    },
    get C428() {
      return C428 = dart.constList([C429 || CT.C429, C430 || CT.C430, C431 || CT.C431, C432 || CT.C432, C433 || CT.C433, C434 || CT.C434], widget_inspector._Location);
    },
    get C427() {
      return C427 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C428 || CT.C428,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 1282,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C437() {
      return C437 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 1304,
        [_Location_file]: null
      });
    },
    get C436() {
      return C436 = dart.constList([C437 || CT.C437], widget_inspector._Location);
    },
    get C435() {
      return C435 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C436 || CT.C436,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1303,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C440() {
      return C440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 9,
        [_Location_line]: 1315,
        [_Location_file]: null
      });
    },
    get C441() {
      return C441 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1316,
        [_Location_file]: null
      });
    },
    get C439() {
      return C439 = dart.constList([C440 || CT.C440, C441 || CT.C441], widget_inspector._Location);
    },
    get C438() {
      return C438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C439 || CT.C439,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1314,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C444() {
      return C444 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 9,
        [_Location_line]: 1325,
        [_Location_file]: null
      });
    },
    get C445() {
      return C445 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 9,
        [_Location_line]: 1326,
        [_Location_file]: null
      });
    },
    get C443() {
      return C443 = dart.constList([C444 || CT.C444, C445 || CT.C445], widget_inspector._Location);
    },
    get C442() {
      return C442 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C443 || CT.C443,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 1324,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C448() {
      return C448 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 9,
        [_Location_line]: 1330,
        [_Location_file]: null
      });
    },
    get C449() {
      return C449 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 9,
        [_Location_line]: 1331,
        [_Location_file]: null
      });
    },
    get C447() {
      return C447 = dart.constList([C448 || CT.C448, C449 || CT.C449], widget_inspector._Location);
    },
    get C446() {
      return C446 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C447 || CT.C447,
        [_Location_name]: null,
        [_Location_column]: 28,
        [_Location_line]: 1329,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C452() {
      return C452 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 22,
        [_Location_line]: 1338,
        [_Location_file]: null
      });
    },
    get C453() {
      return C453 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 32,
        [_Location_line]: 1338,
        [_Location_file]: null
      });
    },
    get C454() {
      return C454 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 43,
        [_Location_line]: 1338,
        [_Location_file]: null
      });
    },
    get C455() {
      return C455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 55,
        [_Location_line]: 1338,
        [_Location_file]: null
      });
    },
    get C451() {
      return C451 = dart.constList([C452 || CT.C452, C453 || CT.C453, C454 || CT.C454, C455 || CT.C455], widget_inspector._Location);
    },
    get C450() {
      return C450 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C451 || CT.C451,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 1338,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C458() {
      return C458 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 9,
        [_Location_line]: 1336,
        [_Location_file]: null
      });
    },
    get C457() {
      return C457 = dart.constList([C458 || CT.C458], widget_inspector._Location);
    },
    get C456() {
      return C456 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C457 || CT.C457,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1335,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C461() {
      return C461 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1345,
        [_Location_file]: null
      });
    },
    get C460() {
      return C460 = dart.constList([C461 || CT.C461], widget_inspector._Location);
    },
    get C459() {
      return C459 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C460 || CT.C460,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1344,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C464() {
      return C464 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1352,
        [_Location_file]: null
      });
    },
    get C465() {
      return C465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectButtonBuilder",
        [_Location_column]: 11,
        [_Location_line]: 1353,
        [_Location_file]: null
      });
    },
    get C463() {
      return C463 = dart.constList([C464 || CT.C464, C465 || CT.C465], widget_inspector._Location);
    },
    get C462() {
      return C462 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C463 || CT.C463,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1351,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C468() {
      return C468 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1358,
        [_Location_file]: null
      });
    },
    get C467() {
      return C467 = dart.constList([C468 || CT.C468], widget_inspector._Location);
    },
    get C466() {
      return C466 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C467 || CT.C467,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1357,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C471() {
      return C471 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 13,
        [_Location_line]: 1374,
        [_Location_file]: null
      });
    },
    get C472() {
      return C472 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 13,
        [_Location_line]: 1375,
        [_Location_file]: null
      });
    },
    get C473() {
      return C473 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1376,
        [_Location_file]: null
      });
    },
    get C470() {
      return C470 = dart.constList([C471 || CT.C471, C472 || CT.C472, C473 || CT.C473], widget_inspector._Location);
    },
    get C469() {
      return C469 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C470 || CT.C470,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1373,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C476() {
      return C476 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 1370,
        [_Location_file]: null
      });
    },
    get C475() {
      return C475 = dart.constList([C476 || CT.C476], widget_inspector._Location);
    },
    get C474() {
      return C474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C475 || CT.C475,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1366,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C479() {
      return C479 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 9,
        [_Location_line]: 1382,
        [_Location_file]: null
      });
    },
    get C480() {
      return C480 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 1383,
        [_Location_file]: null
      });
    },
    get C481() {
      return C481 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1384,
        [_Location_file]: null
      });
    },
    get C478() {
      return C478 = dart.constList([C479 || CT.C479, C480 || CT.C480, C481 || CT.C481], widget_inspector._Location);
    },
    get C477() {
      return C477 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C478 || CT.C478,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 1381,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C484() {
      return C484 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 15,
        [_Location_line]: 1402,
        [_Location_file]: null
      });
    },
    get C485() {
      return C485 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegates",
        [_Location_column]: 15,
        [_Location_line]: 1403,
        [_Location_file]: null
      });
    },
    get C486() {
      return C486 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 1404,
        [_Location_file]: null
      });
    },
    get C483() {
      return C483 = dart.constList([C484 || CT.C484, C485 || CT.C485, C486 || CT.C486], widget_inspector._Location);
    },
    get C482() {
      return C482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C483 || CT.C483,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1401,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C489() {
      return C489 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1401,
        [_Location_file]: null
      });
    },
    get C488() {
      return C488 = dart.constList([C489 || CT.C489], widget_inspector._Location);
    },
    get C487() {
      return C487 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C488 || CT.C488,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1400,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C492() {
      return C492 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "policy",
        [_Location_column]: 11,
        [_Location_line]: 1399,
        [_Location_file]: null
      });
    },
    get C493() {
      return C493 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1400,
        [_Location_file]: null
      });
    },
    get C491() {
      return C491 = dart.constList([C492 || CT.C492, C493 || CT.C493], widget_inspector._Location);
    },
    get C490() {
      return C490 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C491 || CT.C491,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1398,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C496() {
      return C496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 9,
        [_Location_line]: 1397,
        [_Location_file]: null
      });
    },
    get C497() {
      return C497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1398,
        [_Location_file]: null
      });
    },
    get C495() {
      return C495 = dart.constList([C496 || CT.C496, C497 || CT.C497], widget_inspector._Location);
    },
    get C494() {
      return C494 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C495 || CT.C495,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1396,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C500() {
      return C500 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 7,
        [_Location_line]: 1394,
        [_Location_file]: null
      });
    },
    get C501() {
      return C501 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugLabel",
        [_Location_column]: 7,
        [_Location_line]: 1395,
        [_Location_file]: null
      });
    },
    get C502() {
      return C502 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1396,
        [_Location_file]: null
      });
    },
    get C499() {
      return C499 = dart.constList([C500 || CT.C500, C501 || CT.C501, C502 || CT.C502], widget_inspector._Location);
    },
    get C498() {
      return C498 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C499 || CT.C499,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1393,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C505() {
      return C505 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 7,
        [_Location_line]: 1475,
        [_Location_file]: null
      });
    },
    get C506() {
      return C506 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1476,
        [_Location_file]: null
      });
    },
    get C504() {
      return C504 = dart.constList([C505 || CT.C505, C506 || CT.C506], widget_inspector._Location);
    },
    get C503() {
      return C503 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C504 || CT.C504,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1474,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/app.dart"
      });
    },
    get C507() {
      return C507 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C510() {
      return C510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C511() {
      return C511 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C512() {
      return C512 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 11,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C513() {
      return C513 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 11,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C514() {
      return C514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 11,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C515() {
      return C515 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 11,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C516() {
      return C516 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 11,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C517() {
      return C517 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C509() {
      return C509 = dart.constList([C510 || CT.C510, C511 || CT.C511, C512 || CT.C512, C513 || CT.C513, C514 || CT.C514, C515 || CT.C515, C516 || CT.C516, C517 || CT.C517], widget_inspector._Location);
    },
    get C508() {
      return C508 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C509 || CT.C509,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 104,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C520() {
      return C520 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C519() {
      return C519 = dart.constList([C520 || CT.C520], widget_inspector._Location);
    },
    get C518() {
      return C518 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C519 || CT.C519,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 101,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C522() {
      return C522 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 84,
        [_Location_line]: 162,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C521() {
      return C521 = dart.const({
        __proto__: text.DefaultTextStyle.prototype,
        [_location$]: C522 || CT.C522,
        [key$]: null,
        [child$]: null,
        [DefaultTextStyle_textHeightBehavior]: null,
        [DefaultTextStyle_textWidthBasis]: C165 || CT.C165,
        [DefaultTextStyle_maxLines]: null,
        [DefaultTextStyle_overflow]: C164 || CT.C164,
        [DefaultTextStyle_softWrap]: true,
        [DefaultTextStyle_textAlign]: null,
        [DefaultTextStyle_style]: C507 || CT.C507
      });
    },
    get C525() {
      return C525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C526() {
      return C526 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C527() {
      return C527 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 182,
        [_Location_file]: null
      });
    },
    get C528() {
      return C528 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 183,
        [_Location_file]: null
      });
    },
    get C529() {
      return C529 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 184,
        [_Location_file]: null
      });
    },
    get C530() {
      return C530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 7,
        [_Location_line]: 185,
        [_Location_file]: null
      });
    },
    get C531() {
      return C531 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 7,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C532() {
      return C532 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C524() {
      return C524 = dart.constList([C525 || CT.C525, C526 || CT.C526, C527 || CT.C527, C528 || CT.C528, C529 || CT.C529, C530 || CT.C530, C531 || CT.C531, C532 || CT.C532], widget_inspector._Location);
    },
    get C523() {
      return C523 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C524 || CT.C524,
        [_Location_name]: null,
        [_Location_column]: 56,
        [_Location_line]: 179,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C535() {
      return C535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "themes",
        [_Location_column]: 24,
        [_Location_line]: 133,
        [_Location_file]: null
      });
    },
    get C536() {
      return C536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 40,
        [_Location_line]: 133,
        [_Location_file]: null
      });
    },
    get C534() {
      return C534 = dart.constList([C535 || CT.C535, C536 || CT.C536], widget_inspector._Location);
    },
    get C533() {
      return C533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C534 || CT.C534,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 133,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/inherited_theme.dart"
      });
    },
    get C538() {
      return C538 = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 6
      });
    },
    get C537() {
      return C537 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C538 || CT.C538,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C541() {
      return C541 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 443,
        [_Location_file]: null
      });
    },
    get C542() {
      return C542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 444,
        [_Location_file]: null
      });
    },
    get C543() {
      return C543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 7,
        [_Location_line]: 445,
        [_Location_file]: null
      });
    },
    get C544() {
      return C544 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 446,
        [_Location_file]: null
      });
    },
    get C545() {
      return C545 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 447,
        [_Location_file]: null
      });
    },
    get C546() {
      return C546 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textScaleFactor",
        [_Location_column]: 7,
        [_Location_line]: 448,
        [_Location_file]: null
      });
    },
    get C547() {
      return C547 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 449,
        [_Location_file]: null
      });
    },
    get C548() {
      return C548 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strutStyle",
        [_Location_column]: 7,
        [_Location_line]: 450,
        [_Location_file]: null
      });
    },
    get C549() {
      return C549 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 7,
        [_Location_line]: 451,
        [_Location_file]: null
      });
    },
    get C550() {
      return C550 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textHeightBehavior",
        [_Location_column]: 7,
        [_Location_line]: 452,
        [_Location_file]: null
      });
    },
    get C551() {
      return C551 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 7,
        [_Location_line]: 453,
        [_Location_file]: null
      });
    },
    get C540() {
      return C540 = dart.constList([C541 || CT.C541, C542 || CT.C542, C543 || CT.C543, C544 || CT.C544, C545 || CT.C545, C546 || CT.C546, C547 || CT.C547, C548 || CT.C548, C549 || CT.C549, C550 || CT.C550, C551 || CT.C551], widget_inspector._Location);
    },
    get C539() {
      return C539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C540 || CT.C540,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 442,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C554() {
      return C554 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C553() {
      return C553 = dart.constList([C554 || CT.C554], widget_inspector._Location);
    },
    get C552() {
      return C552 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C553 || CT.C553,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 463,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C557() {
      return C557 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 9,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C558() {
      return C558 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C559() {
      return C559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C556() {
      return C556 = dart.constList([C557 || CT.C557, C558 || CT.C558, C559 || CT.C559], widget_inspector._Location);
    },
    get C555() {
      return C555 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C556 || CT.C556,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 460,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text.dart"
      });
    },
    get C560() {
      return C560 = dart.const({
        __proto__: diagnostics$._NoDefaultValue.prototype
      });
    },
    get C561() {
      return C561 = dart.const({
        __proto__: diagnostics$.DiagnosticLevel.prototype,
        [_name$1]: "DiagnosticLevel.info",
        index: 3
      });
    },
    get C562() {
      return C562 = dart.constMap(shortcuts$.LogicalKeySet, actions$.Intent, []);
    },
    get C565() {
      return C565 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "manager",
        [_Location_column]: 9,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C566() {
      return C566 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C564() {
      return C564 = dart.constList([C565 || CT.C565, C566 || CT.C566], widget_inspector._Location);
    },
    get C563() {
      return C563 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C564 || CT.C564,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 422,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart"
      });
    },
    get C569() {
      return C569 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugLabel",
        [_Location_column]: 7,
        [_Location_line]: 419,
        [_Location_file]: null
      });
    },
    get C570() {
      return C570 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 7,
        [_Location_line]: 420,
        [_Location_file]: null
      });
    },
    get C571() {
      return C571 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onKey",
        [_Location_column]: 7,
        [_Location_line]: 421,
        [_Location_file]: null
      });
    },
    get C572() {
      return C572 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 422,
        [_Location_file]: null
      });
    },
    get C568() {
      return C568 = dart.constList([C569 || CT.C569, C570 || CT.C570, C571 || CT.C571, C572 || CT.C572], widget_inspector._Location);
    },
    get C567() {
      return C567 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C568 || CT.C568,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 418,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart"
      });
    },
    get C575() {
      return C575 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusable",
        [_Location_column]: 9,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C576() {
      return C576 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focused",
        [_Location_column]: 9,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C577() {
      return C577 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C574() {
      return C574 = dart.constList([C575 || CT.C575, C576 || CT.C576, C577 || CT.C577], widget_inspector._Location);
    },
    get C573() {
      return C573 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C574 || CT.C574,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 464,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart"
      });
    },
    get C580() {
      return C580 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 7,
        [_Location_line]: 463,
        [_Location_file]: null
      });
    },
    get C581() {
      return C581 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 464,
        [_Location_file]: null
      });
    },
    get C579() {
      return C579 = dart.constList([C580 || CT.C580, C581 || CT.C581], widget_inspector._Location);
    },
    get C578() {
      return C578 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C579 || CT.C579,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 462,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart"
      });
    },
    get C584() {
      return C584 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 9,
        [_Location_line]: 581,
        [_Location_file]: null
      });
    },
    get C585() {
      return C585 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C583() {
      return C583 = dart.constList([C584 || CT.C584, C585 || CT.C585], widget_inspector._Location);
    },
    get C582() {
      return C582 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C583 || CT.C583,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 580,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart"
      });
    },
    get C588() {
      return C588 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 579,
        [_Location_file]: null
      });
    },
    get C589() {
      return C589 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 580,
        [_Location_file]: null
      });
    },
    get C587() {
      return C587 = dart.constList([C588 || CT.C588, C589 || CT.C589], widget_inspector._Location);
    },
    get C586() {
      return C586 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C587 || CT.C587,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 578,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart"
      });
    },
    get C590() {
      return C590 = dart.const({
        __proto__: actions$.ActionDispatcher.prototype
      });
    },
    get C593() {
      return C593 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 9,
        [_Location_line]: 691,
        [_Location_file]: null
      });
    },
    get C594() {
      return C594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 9,
        [_Location_line]: 692,
        [_Location_file]: null
      });
    },
    get C595() {
      return C595 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canRequestFocus",
        [_Location_column]: 9,
        [_Location_line]: 693,
        [_Location_file]: null
      });
    },
    get C596() {
      return C596 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 9,
        [_Location_line]: 694,
        [_Location_file]: null
      });
    },
    get C597() {
      return C597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 695,
        [_Location_file]: null
      });
    },
    get C592() {
      return C592 = dart.constList([C593 || CT.C593, C594 || CT.C594, C595 || CT.C595, C596 || CT.C596, C597 || CT.C597], widget_inspector._Location);
    },
    get C591() {
      return C591 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C592 || CT.C592,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 690,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/actions.dart"
      });
    },
    get C600() {
      return C600 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onEnter",
        [_Location_column]: 7,
        [_Location_line]: 688,
        [_Location_file]: null
      });
    },
    get C601() {
      return C601 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onExit",
        [_Location_column]: 7,
        [_Location_line]: 689,
        [_Location_file]: null
      });
    },
    get C602() {
      return C602 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 690,
        [_Location_file]: null
      });
    },
    get C599() {
      return C599 = dart.constList([C600 || CT.C600, C601 || CT.C601, C602 || CT.C602], widget_inspector._Location);
    },
    get C598() {
      return C598 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C599 || CT.C599,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 687,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/actions.dart"
      });
    },
    get C605() {
      return C605 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 23,
        [_Location_line]: 699,
        [_Location_file]: null
      });
    },
    get C606() {
      return C606 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 48,
        [_Location_line]: 699,
        [_Location_file]: null
      });
    },
    get C604() {
      return C604 = dart.constList([C605 || CT.C605, C606 || CT.C606], widget_inspector._Location);
    },
    get C603() {
      return C603 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C604 || CT.C604,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 699,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/actions.dart"
      });
    },
    get C609() {
      return C609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 25,
        [_Location_line]: 702,
        [_Location_file]: null
      });
    },
    get C610() {
      return C610 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 54,
        [_Location_line]: 702,
        [_Location_file]: null
      });
    },
    get C608() {
      return C608 = dart.constList([C609 || CT.C609, C610 || CT.C610], widget_inspector._Location);
    },
    get C607() {
      return C607 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C608 || CT.C608,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 702,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/actions.dart"
      });
    },
    get C612() {
      return C612 = dart.wrapType(actions$.SelectAction);
    },
    get C611() {
      return C611 = dart.const({
        __proto__: ValueKeyOfType().prototype,
        [ValueKey_value]: C612 || CT.C612
      });
    },
    get C613() {
      return C613 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 0.8,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 10,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C139 || CT.C139,
        [TextStyle_inherit]: true
      });
    },
    get C616() {
      return C616 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 13,
        [_Location_line]: 180,
        [_Location_file]: null
      });
    },
    get C617() {
      return C617 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 181,
        [_Location_file]: null
      });
    },
    get C615() {
      return C615 = dart.constList([C616 || CT.C616, C617 || CT.C617], widget_inspector._Location);
    },
    get C614() {
      return C614 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C615 || CT.C615,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 179,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart"
      });
    },
    get C620() {
      return C620 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 11,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C621() {
      return C621 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 11,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C622() {
      return C622 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 179,
        [_Location_file]: null
      });
    },
    get C619() {
      return C619 = dart.constList([C620 || CT.C620, C621 || CT.C621, C622 || CT.C622], widget_inspector._Location);
    },
    get C618() {
      return C618 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C619 || CT.C619,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 176,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart"
      });
    },
    get C625() {
      return C625 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 9,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C626() {
      return C626 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 9,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C627() {
      return C627 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onLongPress",
        [_Location_column]: 9,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C628() {
      return C628 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanEnd",
        [_Location_column]: 9,
        [_Location_line]: 174,
        [_Location_file]: null
      });
    },
    get C629() {
      return C629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 175,
        [_Location_file]: null
      });
    },
    get C630() {
      return C630 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C624() {
      return C624 = dart.constList([C625 || CT.C625, C626 || CT.C626, C627 || CT.C627, C628 || CT.C628, C629 || CT.C629, C630 || CT.C630], widget_inspector._Location);
    },
    get C623() {
      return C623 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C624 || CT.C624,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 170,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart"
      });
    },
    get C633() {
      return C633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 163,
        [_Location_file]: null
      });
    },
    get C634() {
      return C634 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 170,
        [_Location_file]: null
      });
    },
    get C632() {
      return C632 = dart.constList([C633 || CT.C633, C634 || CT.C634], widget_inspector._Location);
    },
    get C631() {
      return C631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C632 || CT.C632,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 162,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart"
      });
    },
    get C635() {
      return C635 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2130743551
      });
    },
    get C638() {
      return C638 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 1402,
        [_Location_file]: null
      });
    },
    get C639() {
      return C639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 9,
        [_Location_line]: 1403,
        [_Location_file]: null
      });
    },
    get C640() {
      return C640 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 9,
        [_Location_line]: 1404,
        [_Location_file]: null
      });
    },
    get C641() {
      return C641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 9,
        [_Location_line]: 1405,
        [_Location_file]: null
      });
    },
    get C637() {
      return C637 = dart.constList([C638 || CT.C638, C639 || CT.C639, C640 || CT.C640, C641 || CT.C641], widget_inspector._Location);
    },
    get C636() {
      return C636 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C637 || CT.C637,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1401,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C644() {
      return C644 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 9,
        [_Location_line]: 1409,
        [_Location_file]: null
      });
    },
    get C645() {
      return C645 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 9,
        [_Location_line]: 1410,
        [_Location_file]: null
      });
    },
    get C646() {
      return C646 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 9,
        [_Location_line]: 1411,
        [_Location_file]: null
      });
    },
    get C643() {
      return C643 = dart.constList([C644 || CT.C644, C645 || CT.C645, C646 || CT.C646], widget_inspector._Location);
    },
    get C642() {
      return C642 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C643 || CT.C643,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1408,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C649() {
      return C649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "filter",
        [_Location_column]: 9,
        [_Location_line]: 1416,
        [_Location_file]: null
      });
    },
    get C650() {
      return C650 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 1417,
        [_Location_file]: null
      });
    },
    get C648() {
      return C648 = dart.constList([C649 || CT.C649, C650 || CT.C650], widget_inspector._Location);
    },
    get C647() {
      return C647 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C648 || CT.C648,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 1415,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C653() {
      return C653 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 7,
        [_Location_line]: 1421,
        [_Location_file]: null
      });
    },
    get C654() {
      return C654 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1423,
        [_Location_file]: null
      });
    },
    get C652() {
      return C652 = dart.constList([C653 || CT.C653, C654 || CT.C654], widget_inspector._Location);
    },
    get C651() {
      return C651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C652 || CT.C652,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1420,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C657() {
      return C657 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 1434,
        [_Location_file]: null
      });
    },
    get C658() {
      return C658 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 7,
        [_Location_line]: 1435,
        [_Location_file]: null
      });
    },
    get C656() {
      return C656 = dart.constList([C657 || CT.C657, C658 || CT.C658], widget_inspector._Location);
    },
    get C655() {
      return C655 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C656 || CT.C656,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 1433,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C659() {
      return C659 = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [_name$21]: "AnimationStatus.completed",
        index: 3
      });
    },
    get C660() {
      return C660 = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [_name$21]: "AnimationStatus.forward",
        index: 1
      });
    },
    get C661() {
      return C661 = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [_name$21]: "AnimationStatus.reverse",
        index: 2
      });
    },
    get C662() {
      return C662 = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [_name$21]: "AnimationStatus.dismissed",
        index: 0
      });
    },
    get C663() {
      return C663 = dart.const({
        __proto__: navigator$.RouteSettings.prototype,
        [RouteSettings_arguments]: null,
        [RouteSettings_isInitialRoute]: false,
        [RouteSettings_name]: null
      });
    },
    get C664() {
      return C664 = dart.constList([], overlay$.OverlayEntry);
    },
    get C665() {
      return C665 = dart.fn(pages._defaultTransitionsBuilder, BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget());
    },
    get C666() {
      return C666 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C669() {
      return C669 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 27,
        [_Location_line]: 781,
        [_Location_file]: null
      });
    },
    get C670() {
      return C670 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 27,
        [_Location_line]: 782,
        [_Location_file]: null
      });
    },
    get C668() {
      return C668 = dart.constList([C669 || CT.C669, C670 || CT.C670], widget_inspector._Location);
    },
    get C667() {
      return C667 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C668 || CT.C668,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 780,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C673() {
      return C673 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 23,
        [_Location_line]: 776,
        [_Location_file]: null
      });
    },
    get C674() {
      return C674 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 23,
        [_Location_line]: 777,
        [_Location_file]: null
      });
    },
    get C675() {
      return C675 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 23,
        [_Location_line]: 785,
        [_Location_file]: null
      });
    },
    get C672() {
      return C672 = dart.constList([C673 || CT.C673, C674 || CT.C674, C675 || CT.C675], widget_inspector._Location);
    },
    get C671() {
      return C671 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C672 || CT.C672,
        [_Location_name]: null,
        [_Location_column]: 21,
        [_Location_line]: 775,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C678() {
      return C678 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 21,
        [_Location_line]: 792,
        [_Location_file]: null
      });
    },
    get C677() {
      return C677 = dart.constList([C678 || CT.C678], widget_inspector._Location);
    },
    get C676() {
      return C676 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C677 || CT.C677,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 791,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C681() {
      return C681 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 19,
        [_Location_line]: 790,
        [_Location_file]: null
      });
    },
    get C682() {
      return C682 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 791,
        [_Location_file]: null
      });
    },
    get C680() {
      return C680 = dart.constList([C681 || CT.C681, C682 || CT.C682], widget_inspector._Location);
    },
    get C679() {
      return C679 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C680 || CT.C680,
        [_Location_name]: null,
        [_Location_column]: 34,
        [_Location_line]: 789,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C685() {
      return C685 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 17,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C686() {
      return C686 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 17,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C687() {
      return C687 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 789,
        [_Location_file]: null
      });
    },
    get C684() {
      return C684 = dart.constList([C685 || CT.C685, C686 || CT.C686, C687 || CT.C687], widget_inspector._Location);
    },
    get C683() {
      return C683 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C684 || CT.C684,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 764,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C690() {
      return C690 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C689() {
      return C689 = dart.constList([C690 || CT.C690], widget_inspector._Location);
    },
    get C688() {
      return C688 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C689 || CT.C689,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 763,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C693() {
      return C693 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 13,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C694() {
      return C694 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 763,
        [_Location_file]: null
      });
    },
    get C692() {
      return C692 = dart.constList([C693 || CT.C693, C694 || CT.C694], widget_inspector._Location);
    },
    get C691() {
      return C691 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C692 || CT.C692,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 761,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C697() {
      return C697 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bucket",
        [_Location_column]: 11,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C698() {
      return C698 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C696() {
      return C696 = dart.constList([C697 || CT.C697, C698 || CT.C698], widget_inspector._Location);
    },
    get C695() {
      return C695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C696 || CT.C696,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 759,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C701() {
      return C701 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C702() {
      return C702 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C700() {
      return C700 = dart.constList([C701 || CT.C701, C702 || CT.C702], widget_inspector._Location);
    },
    get C699() {
      return C699 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C700 || CT.C700,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 757,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C705() {
      return C705 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "route",
        [_Location_column]: 7,
        [_Location_line]: 754,
        [_Location_file]: null
      });
    },
    get C706() {
      return C706 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isCurrent",
        [_Location_column]: 7,
        [_Location_line]: 755,
        [_Location_file]: null
      });
    },
    get C707() {
      return C707 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "canPop",
        [_Location_column]: 7,
        [_Location_line]: 756,
        [_Location_file]: null
      });
    },
    get C708() {
      return C708 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C704() {
      return C704 = dart.constList([C705 || CT.C705, C706 || CT.C706, C707 || CT.C707, C708 || CT.C708], widget_inspector._Location);
    },
    get C703() {
      return C703 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C704 || CT.C704,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 753,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C709() {
      return C709 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2147483648.0
      });
    },
    get C710() {
      return C710 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C713() {
      return C713 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1666,
        [_Location_file]: null
      });
    },
    get C714() {
      return C714 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scopesRoute",
        [_Location_column]: 7,
        [_Location_line]: 1667,
        [_Location_file]: null
      });
    },
    get C715() {
      return C715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "explicitChildNodes",
        [_Location_column]: 7,
        [_Location_line]: 1668,
        [_Location_file]: null
      });
    },
    get C712() {
      return C712 = dart.constList([C713 || CT.C713, C714 || CT.C714, C715 || CT.C715], widget_inspector._Location);
    },
    get C711() {
      return C711 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C712 || CT.C712,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1665,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C718() {
      return C718 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 1676,
        [_Location_file]: null
      });
    },
    get C719() {
      return C719 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1680,
        [_Location_file]: null
      });
    },
    get C717() {
      return C717 = dart.constList([C718 || CT.C718, C719 || CT.C719], widget_inspector._Location);
    },
    get C716() {
      return C716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C717 || CT.C717,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1675,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/routes.dart"
      });
    },
    get C720() {
      return C720 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C723() {
      return C723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "translation",
        [_Location_column]: 7,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C724() {
      return C724 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformHitTests",
        [_Location_column]: 7,
        [_Location_line]: 303,
        [_Location_file]: null
      });
    },
    get C725() {
      return C725 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C722() {
      return C722 = dart.constList([C723 || CT.C723, C724 || CT.C724, C725 || CT.C725], widget_inspector._Location);
    },
    get C721() {
      return C721 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C722 || CT.C722,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 301,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C728() {
      return C728 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 360,
        [_Location_file]: null
      });
    },
    get C729() {
      return C729 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 361,
        [_Location_file]: null
      });
    },
    get C730() {
      return C730 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 362,
        [_Location_file]: null
      });
    },
    get C727() {
      return C727 = dart.constList([C728 || CT.C728, C729 || CT.C729, C730 || CT.C730], widget_inspector._Location);
    },
    get C726() {
      return C726 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C727 || CT.C727,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 359,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C733() {
      return C733 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 413,
        [_Location_file]: null
      });
    },
    get C734() {
      return C734 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 414,
        [_Location_file]: null
      });
    },
    get C735() {
      return C735 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 415,
        [_Location_file]: null
      });
    },
    get C732() {
      return C732 = dart.constList([C733 || CT.C733, C734 || CT.C734, C735 || CT.C735], widget_inspector._Location);
    },
    get C731() {
      return C731 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C732 || CT.C732,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 412,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C738() {
      return C738 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 505,
        [_Location_file]: null
      });
    },
    get C739() {
      return C739 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 9,
        [_Location_line]: 506,
        [_Location_file]: null
      });
    },
    get C740() {
      return C740 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 9,
        [_Location_line]: 507,
        [_Location_file]: null
      });
    },
    get C741() {
      return C741 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C737() {
      return C737 = dart.constList([C738 || CT.C738, C739 || CT.C739, C740 || CT.C740, C741 || CT.C741], widget_inspector._Location);
    },
    get C736() {
      return C736 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C737 || CT.C737,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 504,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C744() {
      return C744 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 504,
        [_Location_file]: null
      });
    },
    get C743() {
      return C743 = dart.constList([C744 || CT.C744], widget_inspector._Location);
    },
    get C742() {
      return C742 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C743 || CT.C743,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 503,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C747() {
      return C747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rect",
        [_Location_column]: 7,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C748() {
      return C748 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C746() {
      return C746 = dart.constList([C747 || CT.C747, C748 || CT.C748], widget_inspector._Location);
    },
    get C745() {
      return C745 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C746 || CT.C746,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 763,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C751() {
      return C751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 829,
        [_Location_file]: null
      });
    },
    get C752() {
      return C752 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 7,
        [_Location_line]: 830,
        [_Location_file]: null
      });
    },
    get C753() {
      return C753 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 831,
        [_Location_file]: null
      });
    },
    get C754() {
      return C754 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 7,
        [_Location_line]: 832,
        [_Location_file]: null
      });
    },
    get C755() {
      return C755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 833,
        [_Location_file]: null
      });
    },
    get C750() {
      return C750 = dart.constList([C751 || CT.C751, C752 || CT.C752, C753 || CT.C753, C754 || CT.C754, C755 || CT.C755], widget_inspector._Location);
    },
    get C749() {
      return C749 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C750 || CT.C750,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 828,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C758() {
      return C758 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 885,
        [_Location_file]: null
      });
    },
    get C759() {
      return C759 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 886,
        [_Location_file]: null
      });
    },
    get C760() {
      return C760 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 887,
        [_Location_file]: null
      });
    },
    get C757() {
      return C757 = dart.constList([C758 || CT.C758, C759 || CT.C759, C760 || CT.C760], widget_inspector._Location);
    },
    get C756() {
      return C756 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C757 || CT.C757,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 884,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C763() {
      return C763 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 944,
        [_Location_file]: null
      });
    },
    get C764() {
      return C764 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "widthFactor",
        [_Location_column]: 7,
        [_Location_line]: 945,
        [_Location_file]: null
      });
    },
    get C765() {
      return C765 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 7,
        [_Location_line]: 946,
        [_Location_file]: null
      });
    },
    get C766() {
      return C766 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 947,
        [_Location_file]: null
      });
    },
    get C762() {
      return C762 = dart.constList([C763 || CT.C763, C764 || CT.C764, C765 || CT.C765, C766 || CT.C766], widget_inspector._Location);
    },
    get C761() {
      return C761 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C762 || CT.C762,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 943,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C769() {
      return C769 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 1004,
        [_Location_file]: null
      });
    },
    get C770() {
      return C770 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 1005,
        [_Location_file]: null
      });
    },
    get C771() {
      return C771 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 1006,
        [_Location_file]: null
      });
    },
    get C772() {
      return C772 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 1007,
        [_Location_file]: null
      });
    },
    get C773() {
      return C773 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 1008,
        [_Location_file]: null
      });
    },
    get C774() {
      return C774 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1009,
        [_Location_file]: null
      });
    },
    get C768() {
      return C768 = dart.constList([C769 || CT.C769, C770 || CT.C770, C771 || CT.C771, C772 || CT.C772, C773 || CT.C773, C774 || CT.C774], widget_inspector._Location);
    },
    get C767() {
      return C767 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C768 || CT.C768,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1003,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart"
      });
    },
    get C777() {
      return C777 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C778() {
      return C778 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C776() {
      return C776 = dart.constList([C777 || CT.C777, C778 || CT.C778], widget_inspector._Location);
    },
    get C775() {
      return C775 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C776 || CT.C776,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 175,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart"
      });
    },
    get C781() {
      return C781 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C782() {
      return C782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "entry",
        [_Location_column]: 11,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C780() {
      return C780 = dart.constList([C781 || CT.C781, C782 || CT.C782], widget_inspector._Location);
    },
    get C779() {
      return C779 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C780 || CT.C780,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 473,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart"
      });
    },
    get C785() {
      return C785 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C786() {
      return C786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "entry",
        [_Location_column]: 11,
        [_Location_line]: 482,
        [_Location_file]: null
      });
    },
    get C787() {
      return C787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "tickerEnabled",
        [_Location_column]: 11,
        [_Location_line]: 483,
        [_Location_file]: null
      });
    },
    get C784() {
      return C784 = dart.constList([C785 || CT.C785, C786 || CT.C786, C787 || CT.C787], widget_inspector._Location);
    },
    get C783() {
      return C783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C784 || CT.C784,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 480,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart"
      });
    },
    get C790() {
      return C790 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "skipCount",
        [_Location_column]: 7,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C791() {
      return C791 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 489,
        [_Location_file]: null
      });
    },
    get C789() {
      return C789 = dart.constList([C790 || CT.C790, C791 || CT.C791], widget_inspector._Location);
    },
    get C788() {
      return C788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C789 || CT.C789,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 487,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart"
      });
    },
    get C792() {
      return C792 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$22]: "RoutePopDisposition.pop",
        index: 0
      });
    },
    get C793() {
      return C793 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$22]: "RoutePopDisposition.doNotPop",
        index: 1
      });
    },
    get C794() {
      return C794 = dart.const({
        __proto__: navigator$.RoutePopDisposition.prototype,
        [_name$22]: "RoutePopDisposition.bubble",
        index: 2
      });
    },
    get C795() {
      return C795 = dart.constList([C792 || CT.C792, C793 || CT.C793, C794 || CT.C794], navigator$.RoutePopDisposition);
    },
    get C796() {
      return C796 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.add",
        index: 0
      });
    },
    get C797() {
      return C797 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.push",
        index: 1
      });
    },
    get C798() {
      return C798 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.pushReplace",
        index: 2
      });
    },
    get C799() {
      return C799 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.pushing",
        index: 3
      });
    },
    get C800() {
      return C800 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.replace",
        index: 4
      });
    },
    get C801() {
      return C801 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.idle",
        index: 5
      });
    },
    get C802() {
      return C802 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.pop",
        index: 6
      });
    },
    get C803() {
      return C803 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.remove",
        index: 7
      });
    },
    get C804() {
      return C804 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.popping",
        index: 8
      });
    },
    get C805() {
      return C805 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.removing",
        index: 9
      });
    },
    get C806() {
      return C806 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.dispose",
        index: 10
      });
    },
    get C807() {
      return C807 = dart.const({
        __proto__: navigator$._RouteLifecycle.prototype,
        [_name$22]: "_RouteLifecycle.disposed",
        index: 11
      });
    },
    get C808() {
      return C808 = dart.constList([C796 || CT.C796, C797 || CT.C797, C798 || CT.C798, C799 || CT.C799, C800 || CT.C800, C801 || CT.C801, C802 || CT.C802, C803 || CT.C803, C804 || CT.C804, C805 || CT.C805, C806 || CT.C806, C807 || CT.C807], navigator$._RouteLifecycle);
    },
    get C811() {
      return C811 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 2866,
        [_Location_file]: null
      });
    },
    get C812() {
      return C812 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialEntries",
        [_Location_column]: 13,
        [_Location_line]: 2867,
        [_Location_file]: null
      });
    },
    get C810() {
      return C810 = dart.constList([C811 || CT.C811, C812 || CT.C812], widget_inspector._Location);
    },
    get C809() {
      return C809 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C810 || CT.C810,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 2865,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart"
      });
    },
    get C815() {
      return C815 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "node",
        [_Location_column]: 11,
        [_Location_line]: 2863,
        [_Location_file]: null
      });
    },
    get C816() {
      return C816 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 2864,
        [_Location_file]: null
      });
    },
    get C817() {
      return C817 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 2865,
        [_Location_file]: null
      });
    },
    get C814() {
      return C814 = dart.constList([C815 || CT.C815, C816 || CT.C816, C817 || CT.C817], widget_inspector._Location);
    },
    get C813() {
      return C813 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C814 || CT.C814,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 2862,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart"
      });
    },
    get C820() {
      return C820 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "absorbing",
        [_Location_column]: 9,
        [_Location_line]: 2861,
        [_Location_file]: null
      });
    },
    get C821() {
      return C821 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 2862,
        [_Location_file]: null
      });
    },
    get C819() {
      return C819 = dart.constList([C820 || CT.C820, C821 || CT.C821], widget_inspector._Location);
    },
    get C818() {
      return C818 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C819 || CT.C819,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 2860,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart"
      });
    },
    get C824() {
      return C824 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 2857,
        [_Location_file]: null
      });
    },
    get C825() {
      return C825 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerUp",
        [_Location_column]: 7,
        [_Location_line]: 2858,
        [_Location_file]: null
      });
    },
    get C826() {
      return C826 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerCancel",
        [_Location_column]: 7,
        [_Location_line]: 2859,
        [_Location_file]: null
      });
    },
    get C827() {
      return C827 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 2860,
        [_Location_file]: null
      });
    },
    get C823() {
      return C823 = dart.constList([C824 || CT.C824, C825 || CT.C825, C826 || CT.C826, C827 || CT.C827], widget_inspector._Location);
    },
    get C822() {
      return C822 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C823 || CT.C823,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 2856,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart"
      });
    },
    get C830() {
      return C830 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 19,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C829() {
      return C829 = dart.constList([C830 || CT.C830], widget_inspector._Location);
    },
    get C828() {
      return C828 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C829 || CT.C829,
        [_Location_name]: null,
        [_Location_column]: 47,
        [_Location_line]: 109,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C833() {
      return C833 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 17,
        [_Location_line]: 108,
        [_Location_file]: null
      });
    },
    get C834() {
      return C834 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 109,
        [_Location_file]: null
      });
    },
    get C832() {
      return C832 = dart.constList([C833 || CT.C833, C834 || CT.C834], widget_inspector._Location);
    },
    get C831() {
      return C831 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C832 || CT.C832,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 107,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C837() {
      return C837 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opaque",
        [_Location_column]: 15,
        [_Location_line]: 106,
        [_Location_file]: null
      });
    },
    get C838() {
      return C838 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 107,
        [_Location_file]: null
      });
    },
    get C836() {
      return C836 = dart.constList([C837 || CT.C837, C838 || CT.C838], widget_inspector._Location);
    },
    get C835() {
      return C835 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C836 || CT.C836,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 105,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C841() {
      return C841 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 13,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C842() {
      return C842 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 13,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C843() {
      return C843 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C840() {
      return C840 = dart.constList([C841 || CT.C841, C842 || CT.C842, C843 || CT.C843], widget_inspector._Location);
    },
    get C839() {
      return C839 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C840 || CT.C840,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 102,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C846() {
      return C846 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDismiss",
        [_Location_column]: 11,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C847() {
      return C847 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C845() {
      return C845 = dart.constList([C846 || CT.C846, C847 || CT.C847], widget_inspector._Location);
    },
    get C844() {
      return C844 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C845 || CT.C845,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 97,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C850() {
      return C850 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excluding",
        [_Location_column]: 9,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C851() {
      return C851 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C849() {
      return C849 = dart.constList([C850 || CT.C850, C851 || CT.C851], widget_inspector._Location);
    },
    get C848() {
      return C848 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C849 || CT.C849,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 93,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C854() {
      return C854 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C853() {
      return C853 = dart.constList([C854 || CT.C854], widget_inspector._Location);
    },
    get C852() {
      return C852 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C853 || CT.C853,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 92,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C857() {
      return C857 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C858() {
      return C858 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dismissible",
        [_Location_column]: 7,
        [_Location_line]: 187,
        [_Location_file]: null
      });
    },
    get C859() {
      return C859 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticsLabel",
        [_Location_column]: 7,
        [_Location_line]: 188,
        [_Location_file]: null
      });
    },
    get C860() {
      return C860 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "barrierSemanticsDismissible",
        [_Location_column]: 7,
        [_Location_line]: 189,
        [_Location_file]: null
      });
    },
    get C856() {
      return C856 = dart.constList([C857 || CT.C857, C858 || CT.C858, C859 || CT.C859, C860 || CT.C860], widget_inspector._Location);
    },
    get C855() {
      return C855 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C856 || CT.C856,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 185,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C863() {
      return C863 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C864() {
      return C864 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 288,
        [_Location_file]: null
      });
    },
    get C865() {
      return C865 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semantics",
        [_Location_column]: 7,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C866() {
      return C866 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C862() {
      return C862 = dart.constList([C863 || CT.C863, C864 || CT.C864, C865 || CT.C865, C866 || CT.C866], widget_inspector._Location);
    },
    get C861() {
      return C861 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C862 || CT.C862,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 286,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart"
      });
    },
    get C867() {
      return C867 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.topStart",
        index: 0
      });
    },
    get C868() {
      return C868 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.topEnd",
        index: 1
      });
    },
    get C869() {
      return C869 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.bottomStart",
        index: 2
      });
    },
    get C870() {
      return C870 = dart.const({
        __proto__: banner.BannerLocation.prototype,
        [_name$23]: "BannerLocation.bottomEnd",
        index: 3
      });
    },
    get C871() {
      return C871 = dart.constList([C867 || CT.C867, C868 || CT.C868, C869 || CT.C869, C870 || CT.C870], banner.BannerLocation);
    },
    get C872() {
      return C872 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2696354844.0
      });
    },
    get C874() {
      return C874 = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 8
      });
    },
    get C873() {
      return C873 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: 1,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C874 || CT.C874,
        [TextStyle_fontSize]: 10.2,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C377 || CT.C377,
        [TextStyle_inherit]: true
      });
    },
    get C876() {
      return C876 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2130706432
      });
    },
    get C875() {
      return C875 = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 6,
        [Shadow_offset]: C141 || CT.C141,
        [Shadow_color]: C876 || CT.C876,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C879() {
      return C879 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 312,
        [_Location_file]: null
      });
    },
    get C880() {
      return C880 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C878() {
      return C878 = dart.constList([C879 || CT.C879, C880 || CT.C880], widget_inspector._Location);
    },
    get C877() {
      return C877 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C878 || CT.C878,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 311,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/banner.dart"
      });
    },
    get C883() {
      return C883 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 356,
        [_Location_file]: null
      });
    },
    get C884() {
      return C884 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "message",
        [_Location_column]: 9,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C885() {
      return C885 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 9,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C886() {
      return C886 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "location",
        [_Location_column]: 9,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C882() {
      return C882 = dart.constList([C883 || CT.C883, C884 || CT.C884, C885 || CT.C885, C886 || CT.C886], widget_inspector._Location);
    },
    get C881() {
      return C881 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C882 || CT.C882,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 355,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/banner.dart"
      });
    },
    get C887() {
      return C887 = dart.const({
        __proto__: ui.Rect.prototype,
        [Rect_bottom]: 40,
        [Rect_right]: 40,
        [Rect_top]: 28,
        [Rect_left]: -40
      });
    },
    get C888() {
      return C888 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$4]: "ScrollPositionAlignmentPolicy.keepVisibleAtEnd",
        index: 1
      });
    },
    get C889() {
      return C889 = dart.const({
        __proto__: scroll_position.ScrollPositionAlignmentPolicy.prototype,
        [_name$4]: "ScrollPositionAlignmentPolicy.keepVisibleAtStart",
        index: 2
      });
    },
    get C890() {
      return C890 = dart.constList([C71 || CT.C71, C888 || CT.C888, C889 || CT.C889], scroll_position.ScrollPositionAlignmentPolicy);
    },
    get C891() {
      return C891 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 20000
      });
    },
    get C892() {
      return C892 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 50000
      });
    },
    get C893() {
      return C893 = dart.const({
        __proto__: tolerance.Tolerance.prototype,
        [Tolerance_velocity]: 0.001,
        [Tolerance_time]: 0.001,
        [Tolerance_distance]: 0.001
      });
    },
    get C894() {
      return C894 = dart.fn(scroll_notification.defaultScrollNotificationPredicate, ScrollNotificationTobool());
    },
    get C897() {
      return C897 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 232,
        [_Location_file]: null
      });
    },
    get C896() {
      return C896 = dart.constList([C897 || CT.C897], widget_inspector._Location);
    },
    get C895() {
      return C895 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C896 || CT.C896,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 231,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart"
      });
    },
    get C900() {
      return C900 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 11,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C901() {
      return C901 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 231,
        [_Location_file]: null
      });
    },
    get C899() {
      return C899 = dart.constList([C900 || CT.C900, C901 || CT.C901], widget_inspector._Location);
    },
    get C898() {
      return C898 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C899 || CT.C899,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 224,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart"
      });
    },
    get C904() {
      return C904 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C903() {
      return C903 = dart.constList([C904 || CT.C904], widget_inspector._Location);
    },
    get C902() {
      return C902 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C903 || CT.C903,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 223,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart"
      });
    },
    get C907() {
      return C907 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C908() {
      return C908 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C906() {
      return C906 = dart.constList([C907 || CT.C907, C908 || CT.C908], widget_inspector._Location);
    },
    get C905() {
      return C905 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C906 || CT.C906,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 221,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart"
      });
    },
    get C909() {
      return C909 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$24]: "_GlowState.idle",
        index: 0
      });
    },
    get C910() {
      return C910 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$24]: "_GlowState.absorb",
        index: 1
      });
    },
    get C911() {
      return C911 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$24]: "_GlowState.pull",
        index: 2
      });
    },
    get C912() {
      return C912 = dart.const({
        __proto__: overscroll_indicator._GlowState.prototype,
        [_name$24]: "_GlowState.recede",
        index: 3
      });
    },
    get C913() {
      return C913 = dart.constList([C909 || CT.C909, C910 || CT.C910, C911 || CT.C911, C912 || CT.C912], overscroll_indicator._GlowState);
    },
    get C914() {
      return C914 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 600000
      });
    },
    get C915() {
      return C915 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 167000
      });
    },
    get C916() {
      return C916 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    },
    get C919() {
      return C919 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 43,
        [_Location_file]: null
      });
    },
    get C920() {
      return C920 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 11,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C921() {
      return C921 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C918() {
      return C918 = dart.constList([C919 || CT.C919, C920 || CT.C920, C921 || CT.C921], widget_inspector._Location);
    },
    get C917() {
      return C917 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C918 || CT.C918,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 42,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_configuration.dart"
      });
    },
    get C922() {
      return C922 = dart.const({
        __proto__: scroll_physics.BouncingScrollPhysics.prototype,
        [parent$]: null
      });
    },
    get C923() {
      return C923 = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [parent$]: null
      });
    },
    get C924() {
      return C924 = dart.const({
        __proto__: scroll_configuration.ScrollBehavior.prototype
      });
    },
    get C926() {
      return C926 = dart.const({
        __proto__: ui.TextAffinity.prototype,
        [_name]: "TextAffinity.downstream",
        index: 1
      });
    },
    get C925() {
      return C925 = dart.const({
        __proto__: text_editing.TextSelection.prototype,
        [TextRange_end]: -1,
        [TextRange_start]: -1,
        [TextSelection_isDirectional]: false,
        [TextSelection_affinity]: C926 || CT.C926,
        [TextSelection_extentOffset]: -1,
        [TextSelection_baseOffset]: -1
      });
    },
    get C928() {
      return C928 = dart.const({
        __proto__: ui.TextDecoration.prototype,
        [TextDecoration__mask]: 1
      });
    },
    get C927() {
      return C927 = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: C928 || CT.C928,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C929() {
      return C929 = dart.const({
        __proto__: text_input.TextCapitalization.prototype,
        [_name$25]: "TextCapitalization.none",
        index: 3
      });
    },
    get C930() {
      return C930 = dart.const({
        __proto__: ui.BoxHeightStyle.prototype,
        [_name]: "BoxHeightStyle.tight",
        index: 0
      });
    },
    get C931() {
      return C931 = dart.const({
        __proto__: ui.BoxWidthStyle.prototype,
        [_name]: "BoxWidthStyle.tight",
        index: 0
      });
    },
    get C932() {
      return C932 = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C933() {
      return C933 = dart.const({
        __proto__: editable_text.ToolbarOptions.prototype,
        [selectAll$]: true,
        [paste$]: true,
        [cut$]: true,
        [copy$]: true
      });
    },
    get C934() {
      return C934 = dart.const({
        __proto__: EmptyIterableOfTextInputFormatter().prototype
      });
    },
    get C935() {
      return C935 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$25]: "TextInputAction.newline",
        index: 12
      });
    },
    get C936() {
      return C936 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$25]: "TextInputAction.done",
        index: 2
      });
    },
    get C937() {
      return C937 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$25]: "TextInputAction.go",
        index: 3
      });
    },
    get C938() {
      return C938 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$25]: "TextInputAction.send",
        index: 5
      });
    },
    get C939() {
      return C939 = dart.const({
        __proto__: text_input.TextInputAction.prototype,
        [_name$25]: "TextInputAction.search",
        index: 4
      });
    },
    get C940() {
      return C940 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$25]: "FloatingCursorDragState.Start",
        index: 0
      });
    },
    get C941() {
      return C941 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$25]: "FloatingCursorDragState.Update",
        index: 1
      });
    },
    get C942() {
      return C942 = dart.const({
        __proto__: text_input.FloatingCursorDragState.prototype,
        [_name$25]: "FloatingCursorDragState.End",
        index: 2
      });
    },
    get C945() {
      return C945 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 15,
        [_Location_line]: 1876,
        [_Location_file]: null
      });
    },
    get C946() {
      return C946 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "startHandleLayerLink",
        [_Location_column]: 15,
        [_Location_line]: 1877,
        [_Location_file]: null
      });
    },
    get C947() {
      return C947 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "endHandleLayerLink",
        [_Location_column]: 15,
        [_Location_line]: 1878,
        [_Location_file]: null
      });
    },
    get C948() {
      return C948 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textSpan",
        [_Location_column]: 15,
        [_Location_line]: 1879,
        [_Location_file]: null
      });
    },
    get C949() {
      return C949 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 15,
        [_Location_line]: 1880,
        [_Location_file]: null
      });
    },
    get C950() {
      return C950 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorColor",
        [_Location_column]: 15,
        [_Location_line]: 1881,
        [_Location_file]: null
      });
    },
    get C951() {
      return C951 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backgroundCursorColor",
        [_Location_column]: 15,
        [_Location_line]: 1882,
        [_Location_file]: null
      });
    },
    get C952() {
      return C952 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showCursor",
        [_Location_column]: 15,
        [_Location_line]: 1883,
        [_Location_file]: null
      });
    },
    get C953() {
      return C953 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "forceLine",
        [_Location_column]: 15,
        [_Location_line]: 1886,
        [_Location_file]: null
      });
    },
    get C954() {
      return C954 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "readOnly",
        [_Location_column]: 15,
        [_Location_line]: 1887,
        [_Location_file]: null
      });
    },
    get C955() {
      return C955 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hasFocus",
        [_Location_column]: 15,
        [_Location_line]: 1888,
        [_Location_file]: null
      });
    },
    get C956() {
      return C956 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 15,
        [_Location_line]: 1889,
        [_Location_file]: null
      });
    },
    get C957() {
      return C957 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "minLines",
        [_Location_column]: 15,
        [_Location_line]: 1890,
        [_Location_file]: null
      });
    },
    get C958() {
      return C958 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "expands",
        [_Location_column]: 15,
        [_Location_line]: 1891,
        [_Location_file]: null
      });
    },
    get C959() {
      return C959 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "strutStyle",
        [_Location_column]: 15,
        [_Location_line]: 1892,
        [_Location_file]: null
      });
    },
    get C960() {
      return C960 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionColor",
        [_Location_column]: 15,
        [_Location_line]: 1893,
        [_Location_file]: null
      });
    },
    get C961() {
      return C961 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textScaleFactor",
        [_Location_column]: 15,
        [_Location_line]: 1894,
        [_Location_file]: null
      });
    },
    get C962() {
      return C962 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 15,
        [_Location_line]: 1895,
        [_Location_file]: null
      });
    },
    get C963() {
      return C963 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 15,
        [_Location_line]: 1896,
        [_Location_file]: null
      });
    },
    get C964() {
      return C964 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 15,
        [_Location_line]: 1897,
        [_Location_file]: null
      });
    },
    get C965() {
      return C965 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textWidthBasis",
        [_Location_column]: 15,
        [_Location_line]: 1898,
        [_Location_file]: null
      });
    },
    get C966() {
      return C966 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscureText",
        [_Location_column]: 15,
        [_Location_line]: 1899,
        [_Location_file]: null
      });
    },
    get C967() {
      return C967 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autocorrect",
        [_Location_column]: 15,
        [_Location_line]: 1900,
        [_Location_file]: null
      });
    },
    get C968() {
      return C968 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartDashesType",
        [_Location_column]: 15,
        [_Location_line]: 1901,
        [_Location_file]: null
      });
    },
    get C969() {
      return C969 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "smartQuotesType",
        [_Location_column]: 15,
        [_Location_line]: 1902,
        [_Location_file]: null
      });
    },
    get C970() {
      return C970 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableSuggestions",
        [_Location_column]: 15,
        [_Location_line]: 1903,
        [_Location_file]: null
      });
    },
    get C971() {
      return C971 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 15,
        [_Location_line]: 1904,
        [_Location_file]: null
      });
    },
    get C972() {
      return C972 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionChanged",
        [_Location_column]: 15,
        [_Location_line]: 1905,
        [_Location_file]: null
      });
    },
    get C973() {
      return C973 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCaretChanged",
        [_Location_column]: 15,
        [_Location_line]: 1906,
        [_Location_file]: null
      });
    },
    get C974() {
      return C974 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "rendererIgnoresPointer",
        [_Location_column]: 15,
        [_Location_line]: 1907,
        [_Location_file]: null
      });
    },
    get C975() {
      return C975 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorWidth",
        [_Location_column]: 15,
        [_Location_line]: 1908,
        [_Location_file]: null
      });
    },
    get C976() {
      return C976 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorRadius",
        [_Location_column]: 15,
        [_Location_line]: 1909,
        [_Location_file]: null
      });
    },
    get C977() {
      return C977 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cursorOffset",
        [_Location_column]: 15,
        [_Location_line]: 1910,
        [_Location_file]: null
      });
    },
    get C978() {
      return C978 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionHeightStyle",
        [_Location_column]: 15,
        [_Location_line]: 1911,
        [_Location_file]: null
      });
    },
    get C979() {
      return C979 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionWidthStyle",
        [_Location_column]: 15,
        [_Location_line]: 1912,
        [_Location_file]: null
      });
    },
    get C980() {
      return C980 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "paintCursorAboveText",
        [_Location_column]: 15,
        [_Location_line]: 1913,
        [_Location_file]: null
      });
    },
    get C981() {
      return C981 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enableInteractiveSelection",
        [_Location_column]: 15,
        [_Location_line]: 1914,
        [_Location_file]: null
      });
    },
    get C982() {
      return C982 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textSelectionDelegate",
        [_Location_column]: 15,
        [_Location_line]: 1915,
        [_Location_file]: null
      });
    },
    get C983() {
      return C983 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "devicePixelRatio",
        [_Location_column]: 15,
        [_Location_line]: 1916,
        [_Location_file]: null
      });
    },
    get C944() {
      return C944 = dart.constList([C945 || CT.C945, C946 || CT.C946, C947 || CT.C947, C948 || CT.C948, C949 || CT.C949, C950 || CT.C950, C951 || CT.C951, C952 || CT.C952, C953 || CT.C953, C954 || CT.C954, C955 || CT.C955, C956 || CT.C956, C957 || CT.C957, C958 || CT.C958, C959 || CT.C959, C960 || CT.C960, C961 || CT.C961, C962 || CT.C962, C963 || CT.C963, C964 || CT.C964, C965 || CT.C965, C966 || CT.C966, C967 || CT.C967, C968 || CT.C968, C969 || CT.C969, C970 || CT.C970, C971 || CT.C971, C972 || CT.C972, C973 || CT.C973, C974 || CT.C974, C975 || CT.C975, C976 || CT.C976, C977 || CT.C977, C978 || CT.C978, C979 || CT.C979, C980 || CT.C980, C981 || CT.C981, C982 || CT.C982, C983 || CT.C983], widget_inspector._Location);
    },
    get C943() {
      return C943 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C944 || CT.C944,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 1875,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart"
      });
    },
    get C986() {
      return C986 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCopy",
        [_Location_column]: 13,
        [_Location_line]: 1872,
        [_Location_file]: null
      });
    },
    get C987() {
      return C987 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCut",
        [_Location_column]: 13,
        [_Location_line]: 1873,
        [_Location_file]: null
      });
    },
    get C988() {
      return C988 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPaste",
        [_Location_column]: 13,
        [_Location_line]: 1874,
        [_Location_file]: null
      });
    },
    get C989() {
      return C989 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 1875,
        [_Location_file]: null
      });
    },
    get C985() {
      return C985 = dart.constList([C986 || CT.C986, C987 || CT.C987, C988 || CT.C988, C989 || CT.C989], widget_inspector._Location);
    },
    get C984() {
      return C984 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C985 || CT.C985,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 1871,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart"
      });
    },
    get C992() {
      return C992 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 11,
        [_Location_line]: 1870,
        [_Location_file]: null
      });
    },
    get C993() {
      return C993 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 1871,
        [_Location_file]: null
      });
    },
    get C991() {
      return C991 = dart.constList([C992 || CT.C992, C993 || CT.C993], widget_inspector._Location);
    },
    get C990() {
      return C990 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C991 || CT.C991,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 1869,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart"
      });
    },
    get C996() {
      return C996 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1863,
        [_Location_file]: null
      });
    },
    get C997() {
      return C997 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 1864,
        [_Location_file]: null
      });
    },
    get C998() {
      return C998 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 1865,
        [_Location_file]: null
      });
    },
    get C999() {
      return C999 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 1866,
        [_Location_file]: null
      });
    },
    get C1000() {
      return C1000 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 7,
        [_Location_line]: 1867,
        [_Location_file]: null
      });
    },
    get C1001() {
      return C1001 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 7,
        [_Location_line]: 1868,
        [_Location_file]: null
      });
    },
    get C995() {
      return C995 = dart.constList([C996 || CT.C996, C997 || CT.C997, C998 || CT.C998, C999 || CT.C999, C1000 || CT.C1000, C1001 || CT.C1001], widget_inspector._Location);
    },
    get C994() {
      return C994 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C995 || CT.C995,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1862,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart"
      });
    },
    get C1002() {
      return C1002 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C1003() {
      return C1003 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 125000
      });
    },
    get C1004() {
      return C1004 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.2,
        [Cubic_b]: 0,
        [Cubic_a]: 0.4
      });
    },
    get C1005() {
      return C1005 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C1006() {
      return C1006 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 150000
      });
    },
    get C1007() {
      return C1007 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$26]: "TextSelectionHandleType.left",
        index: 0
      });
    },
    get C1008() {
      return C1008 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$26]: "TextSelectionHandleType.right",
        index: 1
      });
    },
    get C1009() {
      return C1009 = dart.const({
        __proto__: text_selection.TextSelectionHandleType.prototype,
        [_name$26]: "TextSelectionHandleType.collapsed",
        index: 2
      });
    },
    get C1010() {
      return C1010 = dart.constList([C1007 || CT.C1007, C1008 || CT.C1008, C1009 || CT.C1009], text_selection.TextSelectionHandleType);
    },
    get C1011() {
      return C1011 = dart.const({
        __proto__: text_selection._TextSelectionHandlePosition.prototype,
        [_name$26]: "_TextSelectionHandlePosition.start",
        index: 0
      });
    },
    get C1012() {
      return C1012 = dart.const({
        __proto__: text_selection._TextSelectionHandlePosition.prototype,
        [_name$26]: "_TextSelectionHandlePosition.end",
        index: 1
      });
    },
    get C1013() {
      return C1013 = dart.constList([C1011 || CT.C1011, C1012 || CT.C1012], text_selection._TextSelectionHandlePosition);
    },
    get C1014() {
      return C1014 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 506,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1017() {
      return C1017 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionHandleChanged",
        [_Location_column]: 9,
        [_Location_line]: 510,
        [_Location_file]: null
      });
    },
    get C1018() {
      return C1018 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSelectionHandleTapped",
        [_Location_column]: 9,
        [_Location_line]: 511,
        [_Location_file]: null
      });
    },
    get C1019() {
      return C1019 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "startHandleLayerLink",
        [_Location_column]: 9,
        [_Location_line]: 512,
        [_Location_file]: null
      });
    },
    get C1020() {
      return C1020 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "endHandleLayerLink",
        [_Location_column]: 9,
        [_Location_line]: 513,
        [_Location_file]: null
      });
    },
    get C1021() {
      return C1021 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "renderObject",
        [_Location_column]: 9,
        [_Location_line]: 514,
        [_Location_file]: null
      });
    },
    get C1022() {
      return C1022 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selection",
        [_Location_column]: 9,
        [_Location_line]: 515,
        [_Location_file]: null
      });
    },
    get C1023() {
      return C1023 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "selectionControls",
        [_Location_column]: 9,
        [_Location_line]: 516,
        [_Location_file]: null
      });
    },
    get C1024() {
      return C1024 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 9,
        [_Location_line]: 517,
        [_Location_file]: null
      });
    },
    get C1025() {
      return C1025 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 518,
        [_Location_file]: null
      });
    },
    get C1016() {
      return C1016 = dart.constList([C1017 || CT.C1017, C1018 || CT.C1018, C1019 || CT.C1019, C1020 || CT.C1020, C1021 || CT.C1021, C1022 || CT.C1022, C1023 || CT.C1023, C1024 || CT.C1024, C1025 || CT.C1025], widget_inspector._Location);
    },
    get C1015() {
      return C1015 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1016 || CT.C1016,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 509,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1028() {
      return C1028 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "visible",
        [_Location_column]: 7,
        [_Location_line]: 508,
        [_Location_file]: null
      });
    },
    get C1029() {
      return C1029 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 509,
        [_Location_file]: null
      });
    },
    get C1027() {
      return C1027 = dart.constList([C1028 || CT.C1028, C1029 || CT.C1029], widget_inspector._Location);
    },
    get C1026() {
      return C1026 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1027 || CT.C1027,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 507,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1030() {
      return C1030 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 524,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1033() {
      return C1033 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 9,
        [_Location_line]: 553,
        [_Location_file]: null
      });
    },
    get C1034() {
      return C1034 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showWhenUnlinked",
        [_Location_column]: 9,
        [_Location_line]: 554,
        [_Location_file]: null
      });
    },
    get C1035() {
      return C1035 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 9,
        [_Location_line]: 555,
        [_Location_file]: null
      });
    },
    get C1036() {
      return C1036 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 556,
        [_Location_file]: null
      });
    },
    get C1032() {
      return C1032 = dart.constList([C1033 || CT.C1033, C1034 || CT.C1034, C1035 || CT.C1035, C1036 || CT.C1036], widget_inspector._Location);
    },
    get C1031() {
      return C1031 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1032 || CT.C1032,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 552,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1039() {
      return C1039 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 551,
        [_Location_file]: null
      });
    },
    get C1040() {
      return C1040 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 552,
        [_Location_file]: null
      });
    },
    get C1038() {
      return C1038 = dart.constList([C1039 || CT.C1039, C1040 || CT.C1040], widget_inspector._Location);
    },
    get C1037() {
      return C1037 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1038 || CT.C1038,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 550,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1043() {
      return C1043 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 15,
        [_Location_line]: 774,
        [_Location_file]: null
      });
    },
    get C1044() {
      return C1044 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 780,
        [_Location_file]: null
      });
    },
    get C1042() {
      return C1042 = dart.constList([C1043 || CT.C1043, C1044 || CT.C1044], widget_inspector._Location);
    },
    get C1041() {
      return C1041 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1042 || CT.C1042,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 773,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1047() {
      return C1047 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 13,
        [_Location_line]: 768,
        [_Location_file]: null
      });
    },
    get C1048() {
      return C1048 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 13,
        [_Location_line]: 769,
        [_Location_file]: null
      });
    },
    get C1049() {
      return C1049 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanStart",
        [_Location_column]: 13,
        [_Location_line]: 770,
        [_Location_file]: null
      });
    },
    get C1050() {
      return C1050 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPanUpdate",
        [_Location_column]: 13,
        [_Location_line]: 771,
        [_Location_file]: null
      });
    },
    get C1051() {
      return C1051 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 13,
        [_Location_line]: 772,
        [_Location_file]: null
      });
    },
    get C1052() {
      return C1052 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 773,
        [_Location_file]: null
      });
    },
    get C1046() {
      return C1046 = dart.constList([C1047 || CT.C1047, C1048 || CT.C1048, C1049 || CT.C1049, C1050 || CT.C1050, C1051 || CT.C1051, C1052 || CT.C1052], widget_inspector._Location);
    },
    get C1045() {
      return C1045 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1046 || CT.C1046,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 767,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1055() {
      return C1055 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C1056() {
      return C1056 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C1057() {
      return C1057 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C1058() {
      return C1058 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 767,
        [_Location_file]: null
      });
    },
    get C1054() {
      return C1054 = dart.constList([C1055 || CT.C1055, C1056 || CT.C1056, C1057 || CT.C1057, C1058 || CT.C1058], widget_inspector._Location);
    },
    get C1053() {
      return C1053 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1054 || CT.C1054,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 763,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1061() {
      return C1061 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C1062() {
      return C1062 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 763,
        [_Location_file]: null
      });
    },
    get C1060() {
      return C1060 = dart.constList([C1061 || CT.C1061, C1062 || CT.C1062], widget_inspector._Location);
    },
    get C1059() {
      return C1059 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1060 || CT.C1060,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 761,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1065() {
      return C1065 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "link",
        [_Location_column]: 7,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C1066() {
      return C1066 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 7,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C1067() {
      return C1067 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showWhenUnlinked",
        [_Location_column]: 7,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C1068() {
      return C1068 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C1064() {
      return C1064 = dart.constList([C1065 || CT.C1065, C1066 || CT.C1066, C1067 || CT.C1067, C1068 || CT.C1068], widget_inspector._Location);
    },
    get C1063() {
      return C1063 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1064 || CT.C1064,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 757,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1071() {
      return C1071 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 1105,
        [_Location_file]: null
      });
    },
    get C1072() {
      return C1072 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTapDown",
        [_Location_column]: 7,
        [_Location_line]: 1106,
        [_Location_file]: null
      });
    },
    get C1073() {
      return C1073 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onForcePressStart",
        [_Location_column]: 7,
        [_Location_line]: 1107,
        [_Location_file]: null
      });
    },
    get C1074() {
      return C1074 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onForcePressEnd",
        [_Location_column]: 7,
        [_Location_line]: 1108,
        [_Location_file]: null
      });
    },
    get C1075() {
      return C1075 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleTapUp",
        [_Location_column]: 7,
        [_Location_line]: 1109,
        [_Location_file]: null
      });
    },
    get C1076() {
      return C1076 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleTapCancel",
        [_Location_column]: 7,
        [_Location_line]: 1110,
        [_Location_file]: null
      });
    },
    get C1077() {
      return C1077 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapStart",
        [_Location_column]: 7,
        [_Location_line]: 1111,
        [_Location_file]: null
      });
    },
    get C1078() {
      return C1078 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapMoveUpdate",
        [_Location_column]: 7,
        [_Location_line]: 1112,
        [_Location_file]: null
      });
    },
    get C1079() {
      return C1079 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSingleLongTapEnd",
        [_Location_column]: 7,
        [_Location_line]: 1113,
        [_Location_file]: null
      });
    },
    get C1080() {
      return C1080 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDoubleTapDown",
        [_Location_column]: 7,
        [_Location_line]: 1114,
        [_Location_file]: null
      });
    },
    get C1081() {
      return C1081 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionStart",
        [_Location_column]: 7,
        [_Location_line]: 1115,
        [_Location_file]: null
      });
    },
    get C1082() {
      return C1082 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionUpdate",
        [_Location_column]: 7,
        [_Location_line]: 1116,
        [_Location_file]: null
      });
    },
    get C1083() {
      return C1083 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onDragSelectionEnd",
        [_Location_column]: 7,
        [_Location_line]: 1117,
        [_Location_file]: null
      });
    },
    get C1084() {
      return C1084 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1118,
        [_Location_file]: null
      });
    },
    get C1085() {
      return C1085 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1119,
        [_Location_file]: null
      });
    },
    get C1070() {
      return C1070 = dart.constList([C1071 || CT.C1071, C1072 || CT.C1072, C1073 || CT.C1073, C1074 || CT.C1074, C1075 || CT.C1075, C1076 || CT.C1076, C1077 || CT.C1077, C1078 || CT.C1078, C1079 || CT.C1079, C1080 || CT.C1080, C1081 || CT.C1081, C1082 || CT.C1082, C1083 || CT.C1083, C1084 || CT.C1084, C1085 || CT.C1085], widget_inspector._Location);
    },
    get C1069() {
      return C1069 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1070 || CT.C1070,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1104,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1088() {
      return C1088 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestures",
        [_Location_column]: 7,
        [_Location_line]: 1437,
        [_Location_file]: null
      });
    },
    get C1089() {
      return C1089 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1438,
        [_Location_file]: null
      });
    },
    get C1090() {
      return C1090 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 1439,
        [_Location_file]: null
      });
    },
    get C1091() {
      return C1091 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1440,
        [_Location_file]: null
      });
    },
    get C1087() {
      return C1087 = dart.constList([C1088 || CT.C1088, C1089 || CT.C1089, C1090 || CT.C1090, C1091 || CT.C1091], widget_inspector._Location);
    },
    get C1086() {
      return C1086 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1087 || CT.C1087,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1436,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart"
      });
    },
    get C1093() {
      return C1093 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 58,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1092() {
      return C1092 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C1093 || CT.C1093,
        [key$]: null,
        [child$0]: null,
        [height$]: 0,
        [width$]: 0
      });
    },
    get C1096() {
      return C1096 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 221,
        [_Location_file]: null
      });
    },
    get C1097() {
      return C1097 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C1098() {
      return C1098 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C1095() {
      return C1095 = dart.constList([C1096 || CT.C1096, C1097 || CT.C1097, C1098 || CT.C1098], widget_inspector._Location);
    },
    get C1094() {
      return C1094 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1095 || CT.C1095,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 220,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1101() {
      return C1101 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 227,
        [_Location_file]: null
      });
    },
    get C1102() {
      return C1102 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 228,
        [_Location_file]: null
      });
    },
    get C1103() {
      return C1103 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C1100() {
      return C1100 = dart.constList([C1101 || CT.C1101, C1102 || CT.C1102, C1103 || CT.C1103], widget_inspector._Location);
    },
    get C1099() {
      return C1099 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1100 || CT.C1100,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 226,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1106() {
      return C1106 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C1107() {
      return C1107 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 43,
        [_Location_line]: 238,
        [_Location_file]: null
      });
    },
    get C1105() {
      return C1105 = dart.constList([C1106 || CT.C1106, C1107 || CT.C1107], widget_inspector._Location);
    },
    get C1104() {
      return C1104 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1105 || CT.C1105,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 238,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1110() {
      return C1110 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 240,
        [_Location_file]: null
      });
    },
    get C1111() {
      return C1111 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C1109() {
      return C1109 = dart.constList([C1110 || CT.C1110, C1111 || CT.C1111], widget_inspector._Location);
    },
    get C1108() {
      return C1108 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1109 || CT.C1109,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 239,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1113() {
      return C1113 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 36,
        [_Location_line]: 303,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1112() {
      return C1112 = dart.const({
        __proto__: basic.SliverToBoxAdapter.prototype,
        [_location$]: C1113 || CT.C1113,
        [key$]: null,
        [child$0]: null
      });
    },
    get C1116() {
      return C1116 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 11,
        [_Location_line]: 459,
        [_Location_file]: null
      });
    },
    get C1117() {
      return C1117 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoring",
        [_Location_column]: 11,
        [_Location_line]: 460,
        [_Location_file]: null
      });
    },
    get C1118() {
      return C1118 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 11,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C1115() {
      return C1115 = dart.constList([C1116 || CT.C1116, C1117 || CT.C1117, C1118 || CT.C1118], widget_inspector._Location);
    },
    get C1114() {
      return C1114 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1115 || CT.C1115,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 458,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1121() {
      return C1121 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 9,
        [_Location_line]: 465,
        [_Location_file]: null
      });
    },
    get C1122() {
      return C1122 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 9,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C1123() {
      return C1123 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 9,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C1120() {
      return C1120 = dart.constList([C1121 || CT.C1121, C1122 || CT.C1122, C1123 || CT.C1123], widget_inspector._Location);
    },
    get C1119() {
      return C1119 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1120 || CT.C1120,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 464,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1126() {
      return C1126 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C1127() {
      return C1127 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 44,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C1125() {
      return C1125 = dart.constList([C1126 || CT.C1126, C1127 || CT.C1127], widget_inspector._Location);
    },
    get C1124() {
      return C1124 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1125 || CT.C1125,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 476,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1130() {
      return C1130 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 9,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C1131() {
      return C1131 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C1129() {
      return C1129 = dart.constList([C1130 || CT.C1130, C1131 || CT.C1131], widget_inspector._Location);
    },
    get C1128() {
      return C1128 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1129 || CT.C1129,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 477,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart"
      });
    },
    get C1132() {
      return C1132 = dart.fn(sliver$._kDefaultSemanticIndexCallback, WidgetAndintToint());
    },
    get C1135() {
      return C1135 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 454,
        [_Location_file]: null
      });
    },
    get C1134() {
      return C1134 = dart.constList([C1135 || CT.C1135], widget_inspector._Location);
    },
    get C1133() {
      return C1133 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1134 || CT.C1134,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 454,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1138() {
      return C1138 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 34,
        [_Location_line]: 458,
        [_Location_file]: null
      });
    },
    get C1139() {
      return C1139 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 458,
        [_Location_file]: null
      });
    },
    get C1137() {
      return C1137 = dart.constList([C1138 || CT.C1138, C1139 || CT.C1139], widget_inspector._Location);
    },
    get C1136() {
      return C1136 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1137 || CT.C1137,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 458,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1142() {
      return C1142 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 34,
        [_Location_line]: 461,
        [_Location_file]: null
      });
    },
    get C1141() {
      return C1141 = dart.constList([C1142 || CT.C1142], widget_inspector._Location);
    },
    get C1140() {
      return C1140 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1141 || CT.C1141,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 461,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1145() {
      return C1145 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C1146() {
      return C1146 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 39,
        [_Location_line]: 462,
        [_Location_file]: null
      });
    },
    get C1144() {
      return C1144 = dart.constList([C1145 || CT.C1145, C1146 || CT.C1146], widget_inspector._Location);
    },
    get C1143() {
      return C1143 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1144 || CT.C1144,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 462,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1149() {
      return C1149 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 31,
        [_Location_line]: 682,
        [_Location_file]: null
      });
    },
    get C1148() {
      return C1148 = dart.constList([C1149 || CT.C1149], widget_inspector._Location);
    },
    get C1147() {
      return C1147 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1148 || CT.C1148,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 682,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1152() {
      return C1152 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 34,
        [_Location_line]: 686,
        [_Location_file]: null
      });
    },
    get C1153() {
      return C1153 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 78,
        [_Location_line]: 686,
        [_Location_file]: null
      });
    },
    get C1151() {
      return C1151 = dart.constList([C1152 || CT.C1152, C1153 || CT.C1153], widget_inspector._Location);
    },
    get C1150() {
      return C1150 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1151 || CT.C1151,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 686,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1156() {
      return C1156 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 34,
        [_Location_line]: 689,
        [_Location_file]: null
      });
    },
    get C1155() {
      return C1155 = dart.constList([C1156 || CT.C1156], widget_inspector._Location);
    },
    get C1154() {
      return C1154 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1155 || CT.C1155,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 689,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1159() {
      return C1159 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 25,
        [_Location_line]: 690,
        [_Location_file]: null
      });
    },
    get C1160() {
      return C1160 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 39,
        [_Location_line]: 690,
        [_Location_file]: null
      });
    },
    get C1158() {
      return C1158 = dart.constList([C1159 || CT.C1159, C1160 || CT.C1160], widget_inspector._Location);
    },
    get C1157() {
      return C1157 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1158 || CT.C1158,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 690,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart"
      });
    },
    get C1163() {
      return C1163 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C1164() {
      return C1164 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C1162() {
      return C1162 = dart.constList([C1163 || CT.C1163, C1164 || CT.C1164], widget_inspector._Location);
    },
    get C1161() {
      return C1161 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1162 || CT.C1162,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 61,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart"
      });
    },
    get C1167() {
      return C1167 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keepAlive",
        [_Location_column]: 7,
        [_Location_line]: 233,
        [_Location_file]: null
      });
    },
    get C1168() {
      return C1168 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 234,
        [_Location_file]: null
      });
    },
    get C1166() {
      return C1166 = dart.constList([C1167 || CT.C1167, C1168 || CT.C1168], widget_inspector._Location);
    },
    get C1165() {
      return C1165 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1166 || CT.C1166,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 232,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart"
      });
    },
    get C1171() {
      return C1171 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportFraction",
        [_Location_column]: 9,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C1172() {
      return C1172 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 9,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C1170() {
      return C1170 = dart.constList([C1171 || CT.C1171, C1172 || CT.C1172], widget_inspector._Location);
    },
    get C1169() {
      return C1169 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1170 || CT.C1170,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 66,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart"
      });
    },
    get C1175() {
      return C1175 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportFraction",
        [_Location_column]: 7,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C1176() {
      return C1176 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 7,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C1174() {
      return C1174 = dart.constList([C1175 || CT.C1175, C1176 || CT.C1176], widget_inspector._Location);
    },
    get C1173() {
      return C1173 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1174 || CT.C1174,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 64,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart"
      });
    },
    get C1179() {
      return C1179 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 426,
        [_Location_file]: null
      });
    },
    get C1178() {
      return C1178 = dart.constList([C1179 || CT.C1179], widget_inspector._Location);
    },
    get C1177() {
      return C1177 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1178 || CT.C1178,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 426,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart"
      });
    },
    get C1182() {
      return C1182 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 52,
        [_Location_line]: 428,
        [_Location_file]: null
      });
    },
    get C1181() {
      return C1181 = dart.constList([C1182 || CT.C1182], widget_inspector._Location);
    },
    get C1180() {
      return C1180 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1181 || CT.C1181,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 428,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart"
      });
    },
    get C1185() {
      return C1185 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 46,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C1184() {
      return C1184 = dart.constList([C1185 || CT.C1185], widget_inspector._Location);
    },
    get C1183() {
      return C1183 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1184 || CT.C1184,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 429,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart"
      });
    },
    get C1186() {
      return C1186 = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C1189() {
      return C1189 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 751,
        [_Location_file]: null
      });
    },
    get C1190() {
      return C1190 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 752,
        [_Location_file]: null
      });
    },
    get C1191() {
      return C1191 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 753,
        [_Location_file]: null
      });
    },
    get C1192() {
      return C1192 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 754,
        [_Location_file]: null
      });
    },
    get C1193() {
      return C1193 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundDecoration",
        [_Location_column]: 7,
        [_Location_line]: 755,
        [_Location_file]: null
      });
    },
    get C1194() {
      return C1194 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "constraints",
        [_Location_column]: 7,
        [_Location_line]: 756,
        [_Location_file]: null
      });
    },
    get C1195() {
      return C1195 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 7,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C1196() {
      return C1196 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 7,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C1188() {
      return C1188 = dart.constList([C1189 || CT.C1189, C1190 || CT.C1190, C1191 || CT.C1191, C1192 || CT.C1192, C1193 || CT.C1193, C1194 || CT.C1194, C1195 || CT.C1195, C1196 || CT.C1196], widget_inspector._Location);
    },
    get C1187() {
      return C1187 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1188 || CT.C1188,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 750,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1199() {
      return C1199 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 834,
        [_Location_file]: null
      });
    },
    get C1200() {
      return C1200 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 835,
        [_Location_file]: null
      });
    },
    get C1198() {
      return C1198 = dart.constList([C1199 || CT.C1199, C1200 || CT.C1200], widget_inspector._Location);
    },
    get C1197() {
      return C1197 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1198 || CT.C1198,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 833,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1203() {
      return C1203 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 928,
        [_Location_file]: null
      });
    },
    get C1204() {
      return C1204 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 929,
        [_Location_file]: null
      });
    },
    get C1202() {
      return C1202 = dart.constList([C1203 || CT.C1203, C1204 || CT.C1204], widget_inspector._Location);
    },
    get C1201() {
      return C1201 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1202 || CT.C1202,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 927,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1207() {
      return C1207 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1079,
        [_Location_file]: null
      });
    },
    get C1208() {
      return C1208 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 7,
        [_Location_line]: 1080,
        [_Location_file]: null
      });
    },
    get C1209() {
      return C1209 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 1081,
        [_Location_file]: null
      });
    },
    get C1210() {
      return C1210 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 7,
        [_Location_line]: 1082,
        [_Location_file]: null
      });
    },
    get C1211() {
      return C1211 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 1083,
        [_Location_file]: null
      });
    },
    get C1212() {
      return C1212 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1084,
        [_Location_file]: null
      });
    },
    get C1213() {
      return C1213 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1085,
        [_Location_file]: null
      });
    },
    get C1206() {
      return C1206 = dart.constList([C1207 || CT.C1207, C1208 || CT.C1208, C1209 || CT.C1209, C1210 || CT.C1210, C1211 || CT.C1211, C1212 || CT.C1212, C1213 || CT.C1213], widget_inspector._Location);
    },
    get C1205() {
      return C1205 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1206 || CT.C1206,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1078,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1216() {
      return C1216 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 1215,
        [_Location_file]: null
      });
    },
    get C1217() {
      return C1217 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1216,
        [_Location_file]: null
      });
    },
    get C1218() {
      return C1218 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "start",
        [_Location_column]: 7,
        [_Location_line]: 1217,
        [_Location_file]: null
      });
    },
    get C1219() {
      return C1219 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 1218,
        [_Location_file]: null
      });
    },
    get C1220() {
      return C1220 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "end",
        [_Location_column]: 7,
        [_Location_line]: 1219,
        [_Location_file]: null
      });
    },
    get C1221() {
      return C1221 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 7,
        [_Location_line]: 1220,
        [_Location_file]: null
      });
    },
    get C1222() {
      return C1222 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 1221,
        [_Location_file]: null
      });
    },
    get C1223() {
      return C1223 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 1222,
        [_Location_file]: null
      });
    },
    get C1215() {
      return C1215 = dart.constList([C1216 || CT.C1216, C1217 || CT.C1217, C1218 || CT.C1218, C1219 || CT.C1219, C1220 || CT.C1220, C1221 || CT.C1221, C1222 || CT.C1222, C1223 || CT.C1223], widget_inspector._Location);
    },
    get C1214() {
      return C1214 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1215 || CT.C1215,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 1214,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1226() {
      return C1226 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 1360,
        [_Location_file]: null
      });
    },
    get C1227() {
      return C1227 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1361,
        [_Location_file]: null
      });
    },
    get C1228() {
      return C1228 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1362,
        [_Location_file]: null
      });
    },
    get C1225() {
      return C1225 = dart.constList([C1226 || CT.C1226, C1227 || CT.C1227, C1228 || CT.C1228], widget_inspector._Location);
    },
    get C1224() {
      return C1224 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1225 || CT.C1225,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1359,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1231() {
      return C1231 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 1493,
        [_Location_file]: null
      });
    },
    get C1232() {
      return C1232 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 7,
        [_Location_line]: 1494,
        [_Location_file]: null
      });
    },
    get C1233() {
      return C1233 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alwaysIncludeSemantics",
        [_Location_column]: 7,
        [_Location_line]: 1495,
        [_Location_file]: null
      });
    },
    get C1230() {
      return C1230 = dart.constList([C1231 || CT.C1231, C1232 || CT.C1232, C1233 || CT.C1233], widget_inspector._Location);
    },
    get C1229() {
      return C1229 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1230 || CT.C1230,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1492,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1236() {
      return C1236 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 1603,
        [_Location_file]: null
      });
    },
    get C1237() {
      return C1237 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textAlign",
        [_Location_column]: 7,
        [_Location_line]: 1604,
        [_Location_file]: null
      });
    },
    get C1238() {
      return C1238 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "softWrap",
        [_Location_column]: 7,
        [_Location_line]: 1605,
        [_Location_file]: null
      });
    },
    get C1239() {
      return C1239 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 1606,
        [_Location_file]: null
      });
    },
    get C1240() {
      return C1240 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLines",
        [_Location_column]: 7,
        [_Location_line]: 1607,
        [_Location_file]: null
      });
    },
    get C1241() {
      return C1241 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1608,
        [_Location_file]: null
      });
    },
    get C1235() {
      return C1235 = dart.constList([C1236 || CT.C1236, C1237 || CT.C1237, C1238 || CT.C1238, C1239 || CT.C1239, C1240 || CT.C1240, C1241 || CT.C1241], widget_inspector._Location);
    },
    get C1234() {
      return C1234 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1235 || CT.C1235,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1602,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1244() {
      return C1244 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 1731,
        [_Location_file]: null
      });
    },
    get C1245() {
      return C1245 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 7,
        [_Location_line]: 1732,
        [_Location_file]: null
      });
    },
    get C1246() {
      return C1246 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 7,
        [_Location_line]: 1733,
        [_Location_file]: null
      });
    },
    get C1247() {
      return C1247 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "borderRadius",
        [_Location_column]: 7,
        [_Location_line]: 1734,
        [_Location_file]: null
      });
    },
    get C1248() {
      return C1248 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 7,
        [_Location_line]: 1735,
        [_Location_file]: null
      });
    },
    get C1249() {
      return C1249 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 1736,
        [_Location_file]: null
      });
    },
    get C1250() {
      return C1250 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 7,
        [_Location_line]: 1737,
        [_Location_file]: null
      });
    },
    get C1243() {
      return C1243 = dart.constList([C1244 || CT.C1244, C1245 || CT.C1245, C1246 || CT.C1246, C1247 || CT.C1247, C1248 || CT.C1248, C1249 || CT.C1249, C1250 || CT.C1250], widget_inspector._Location);
    },
    get C1242() {
      return C1242 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1243 || CT.C1243,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1730,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart"
      });
    },
    get C1251() {
      return C1251 = dart.const({
        __proto__: animated_cross_fade.CrossFadeState.prototype,
        [_name$27]: "CrossFadeState.showFirst",
        index: 0
      });
    },
    get C1252() {
      return C1252 = dart.const({
        __proto__: animated_cross_fade.CrossFadeState.prototype,
        [_name$27]: "CrossFadeState.showSecond",
        index: 1
      });
    },
    get C1253() {
      return C1253 = dart.constList([C1251 || CT.C1251, C1252 || CT.C1252], animated_cross_fade.CrossFadeState);
    },
    get C1254() {
      return C1254 = dart.const({
        __proto__: alignment$.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: 0
      });
    },
    get C1255() {
      return C1255 = dart.fn(animated_cross_fade.AnimatedCrossFade.defaultLayoutBuilder, WidgetAndKeyAndWidget__ToWidget());
    },
    get C1258() {
      return C1258 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 222,
        [_Location_file]: null
      });
    },
    get C1259() {
      return C1259 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 223,
        [_Location_file]: null
      });
    },
    get C1260() {
      return C1260 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 224,
        [_Location_file]: null
      });
    },
    get C1261() {
      return C1261 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 11,
        [_Location_line]: 225,
        [_Location_file]: null
      });
    },
    get C1262() {
      return C1262 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 226,
        [_Location_file]: null
      });
    },
    get C1257() {
      return C1257 = dart.constList([C1258 || CT.C1258, C1259 || CT.C1259, C1260 || CT.C1260, C1261 || CT.C1261, C1262 || CT.C1262], widget_inspector._Location);
    },
    get C1256() {
      return C1256 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1257 || CT.C1257,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 221,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1265() {
      return C1265 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 229,
        [_Location_file]: null
      });
    },
    get C1266() {
      return C1266 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 230,
        [_Location_file]: null
      });
    },
    get C1264() {
      return C1264 = dart.constList([C1265 || CT.C1265, C1266 || CT.C1266], widget_inspector._Location);
    },
    get C1263() {
      return C1263 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1264 || CT.C1264,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 228,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1269() {
      return C1269 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 219,
        [_Location_file]: null
      });
    },
    get C1270() {
      return C1270 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 220,
        [_Location_file]: null
      });
    },
    get C1268() {
      return C1268 = dart.constList([C1269 || CT.C1269, C1270 || CT.C1270], widget_inspector._Location);
    },
    get C1267() {
      return C1267 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1268 || CT.C1268,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 218,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1271() {
      return C1271 = dart.const({
        __proto__: ValueKeyOfCrossFadeState().prototype,
        [ValueKey_value]: C1251 || CT.C1251
      });
    },
    get C1272() {
      return C1272 = dart.const({
        __proto__: ValueKeyOfCrossFadeState().prototype,
        [ValueKey_value]: C1252 || CT.C1252
      });
    },
    get C1275() {
      return C1275 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 347,
        [_Location_file]: null
      });
    },
    get C1276() {
      return C1276 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 348,
        [_Location_file]: null
      });
    },
    get C1274() {
      return C1274 = dart.constList([C1275 || CT.C1275, C1276 || CT.C1276], widget_inspector._Location);
    },
    get C1273() {
      return C1273 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1274 || CT.C1274,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 346,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1279() {
      return C1279 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excluding",
        [_Location_column]: 9,
        [_Location_line]: 345,
        [_Location_file]: null
      });
    },
    get C1280() {
      return C1280 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 346,
        [_Location_file]: null
      });
    },
    get C1278() {
      return C1278 = dart.constList([C1279 || CT.C1279, C1280 || CT.C1280], widget_inspector._Location);
    },
    get C1277() {
      return C1277 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1278 || CT.C1278,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 344,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1283() {
      return C1283 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 342,
        [_Location_file]: null
      });
    },
    get C1284() {
      return C1284 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 343,
        [_Location_file]: null
      });
    },
    get C1285() {
      return C1285 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 344,
        [_Location_file]: null
      });
    },
    get C1282() {
      return C1282 = dart.constList([C1283 || CT.C1283, C1284 || CT.C1284, C1285 || CT.C1285], widget_inspector._Location);
    },
    get C1281() {
      return C1281 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1282 || CT.C1282,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 341,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1288() {
      return C1288 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C1289() {
      return C1289 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C1287() {
      return C1287 = dart.constList([C1288 || CT.C1288, C1289 || CT.C1289], widget_inspector._Location);
    },
    get C1286() {
      return C1286 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1287 || CT.C1287,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 357,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1292() {
      return C1292 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excluding",
        [_Location_column]: 9,
        [_Location_line]: 356,
        [_Location_file]: null
      });
    },
    get C1293() {
      return C1293 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C1291() {
      return C1291 = dart.constList([C1292 || CT.C1292, C1293 || CT.C1293], widget_inspector._Location);
    },
    get C1290() {
      return C1290 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1291 || CT.C1291,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 355,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1296() {
      return C1296 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C1297() {
      return C1297 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 7,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C1298() {
      return C1298 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C1295() {
      return C1295 = dart.constList([C1296 || CT.C1296, C1297 || CT.C1297, C1298 || CT.C1298], widget_inspector._Location);
    },
    get C1294() {
      return C1294 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1295 || CT.C1295,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 352,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1301() {
      return C1301 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C1302() {
      return C1302 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "duration",
        [_Location_column]: 9,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C1303() {
      return C1303 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverseDuration",
        [_Location_column]: 9,
        [_Location_line]: 367,
        [_Location_file]: null
      });
    },
    get C1304() {
      return C1304 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "curve",
        [_Location_column]: 9,
        [_Location_line]: 368,
        [_Location_file]: null
      });
    },
    get C1305() {
      return C1305 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "vsync",
        [_Location_column]: 9,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C1306() {
      return C1306 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C1300() {
      return C1300 = dart.constList([C1301 || CT.C1301, C1302 || CT.C1302, C1303 || CT.C1303, C1304 || CT.C1304, C1305 || CT.C1305, C1306 || CT.C1306], widget_inspector._Location);
    },
    get C1299() {
      return C1299 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1300 || CT.C1300,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 364,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1309() {
      return C1309 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 364,
        [_Location_file]: null
      });
    },
    get C1308() {
      return C1308 = dart.constList([C1309 || CT.C1309], widget_inspector._Location);
    },
    get C1307() {
      return C1307 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1308 || CT.C1308,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 363,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart"
      });
    },
    get C1312() {
      return C1312 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 127,
        [_Location_file]: null
      });
    },
    get C1313() {
      return C1313 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 128,
        [_Location_file]: null
      });
    },
    get C1314() {
      return C1314 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 129,
        [_Location_file]: null
      });
    },
    get C1311() {
      return C1311 = dart.constList([C1312 || CT.C1312, C1313 || CT.C1313, C1314 || CT.C1314], widget_inspector._Location);
    },
    get C1310() {
      return C1310 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1311 || CT.C1311,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 126,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/raw_keyboard_listener.dart"
      });
    },
    get C1315() {
      return C1315 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$28]: "ConnectionState.none",
        index: 0
      });
    },
    get C1316() {
      return C1316 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$28]: "ConnectionState.waiting",
        index: 1
      });
    },
    get C1317() {
      return C1317 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$28]: "ConnectionState.active",
        index: 2
      });
    },
    get C1318() {
      return C1318 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$28]: "ConnectionState.done",
        index: 3
      });
    },
    get C1319() {
      return C1319 = dart.constList([C1315 || CT.C1315, C1316 || CT.C1316, C1317 || CT.C1317, C1318 || CT.C1318], async$.ConnectionState);
    },
    get C1320() {
      return C1320 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.58,
        [Cubic_b]: 0,
        [Cubic_a]: 0
      });
    },
    get C1321() {
      return C1321 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 700000
      });
    },
    get C1322() {
      return C1322 = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 1,
        [Cubic_b]: 0,
        [Cubic_a]: 0.42
      });
    },
    get C1325() {
      return C1325 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 7,
        [_Location_line]: 344,
        [_Location_file]: null
      });
    },
    get C1326() {
      return C1326 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "frameBuilder",
        [_Location_column]: 7,
        [_Location_line]: 345,
        [_Location_file]: null
      });
    },
    get C1327() {
      return C1327 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 346,
        [_Location_file]: null
      });
    },
    get C1328() {
      return C1328 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 347,
        [_Location_file]: null
      });
    },
    get C1329() {
      return C1329 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 348,
        [_Location_file]: null
      });
    },
    get C1330() {
      return C1330 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 349,
        [_Location_file]: null
      });
    },
    get C1331() {
      return C1331 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "repeat",
        [_Location_column]: 7,
        [_Location_line]: 350,
        [_Location_file]: null
      });
    },
    get C1332() {
      return C1332 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 7,
        [_Location_line]: 351,
        [_Location_file]: null
      });
    },
    get C1333() {
      return C1333 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gaplessPlayback",
        [_Location_column]: 7,
        [_Location_line]: 352,
        [_Location_file]: null
      });
    },
    get C1334() {
      return C1334 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 7,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C1324() {
      return C1324 = dart.constList([C1325 || CT.C1325, C1326 || CT.C1326, C1327 || CT.C1327, C1328 || CT.C1328, C1329 || CT.C1329, C1330 || CT.C1330, C1331 || CT.C1331, C1332 || CT.C1332, C1333 || CT.C1333, C1334 || CT.C1334], widget_inspector._Location);
    },
    get C1323() {
      return C1323 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1324 || CT.C1324,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 343,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1337() {
      return C1337 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "target",
        [_Location_column]: 11,
        [_Location_line]: 365,
        [_Location_file]: null
      });
    },
    get C1338() {
      return C1338 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "placeholder",
        [_Location_column]: 11,
        [_Location_line]: 366,
        [_Location_file]: null
      });
    },
    get C1339() {
      return C1339 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "isTargetLoaded",
        [_Location_column]: 11,
        [_Location_line]: 367,
        [_Location_file]: null
      });
    },
    get C1340() {
      return C1340 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fadeInDuration",
        [_Location_column]: 11,
        [_Location_line]: 368,
        [_Location_file]: null
      });
    },
    get C1341() {
      return C1341 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fadeOutDuration",
        [_Location_column]: 11,
        [_Location_line]: 369,
        [_Location_file]: null
      });
    },
    get C1342() {
      return C1342 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fadeInCurve",
        [_Location_column]: 11,
        [_Location_line]: 370,
        [_Location_file]: null
      });
    },
    get C1343() {
      return C1343 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fadeOutCurve",
        [_Location_column]: 11,
        [_Location_line]: 371,
        [_Location_file]: null
      });
    },
    get C1336() {
      return C1336 = dart.constList([C1337 || CT.C1337, C1338 || CT.C1338, C1339 || CT.C1339, C1340 || CT.C1340, C1341 || CT.C1341, C1342 || CT.C1342, C1343 || CT.C1343], widget_inspector._Location);
    },
    get C1335() {
      return C1335 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1336 || CT.C1336,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 364,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1346() {
      return C1346 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 378,
        [_Location_file]: null
      });
    },
    get C1347() {
      return C1347 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 9,
        [_Location_line]: 379,
        [_Location_file]: null
      });
    },
    get C1348() {
      return C1348 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 380,
        [_Location_file]: null
      });
    },
    get C1349() {
      return C1349 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 381,
        [_Location_file]: null
      });
    },
    get C1345() {
      return C1345 = dart.constList([C1346 || CT.C1346, C1347 || CT.C1347, C1348 || CT.C1348, C1349 || CT.C1349], widget_inspector._Location);
    },
    get C1344() {
      return C1344 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1345 || CT.C1345,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 377,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1352() {
      return C1352 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 483,
        [_Location_file]: null
      });
    },
    get C1353() {
      return C1353 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 484,
        [_Location_file]: null
      });
    },
    get C1351() {
      return C1351 = dart.constList([C1352 || CT.C1352, C1353 || CT.C1353], widget_inspector._Location);
    },
    get C1350() {
      return C1350 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1351 || CT.C1351,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 482,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1356() {
      return C1356 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 487,
        [_Location_file]: null
      });
    },
    get C1357() {
      return C1357 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 488,
        [_Location_file]: null
      });
    },
    get C1355() {
      return C1355 = dart.constList([C1356 || CT.C1356, C1357 || CT.C1357], widget_inspector._Location);
    },
    get C1354() {
      return C1354 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1355 || CT.C1355,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 486,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1360() {
      return C1360 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 7,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C1361() {
      return C1361 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C1362() {
      return C1362 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 480,
        [_Location_file]: null
      });
    },
    get C1363() {
      return C1363 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 481,
        [_Location_file]: null
      });
    },
    get C1359() {
      return C1359 = dart.constList([C1360 || CT.C1360, C1361 || CT.C1361, C1362 || CT.C1362, C1363 || CT.C1363], widget_inspector._Location);
    },
    get C1358() {
      return C1358 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1359 || CT.C1359,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 475,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart"
      });
    },
    get C1364() {
      return C1364 = dart.const({
        __proto__: scroll_physics.AlwaysScrollableScrollPhysics.prototype,
        [parent$]: null
      });
    },
    get C1367() {
      return C1367 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 9,
        [_Location_line]: 280,
        [_Location_file]: null
      });
    },
    get C1368() {
      return C1368 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 9,
        [_Location_line]: 281,
        [_Location_file]: null
      });
    },
    get C1369() {
      return C1369 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 9,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C1366() {
      return C1366 = dart.constList([C1367 || CT.C1367, C1368 || CT.C1368, C1369 || CT.C1369], widget_inspector._Location);
    },
    get C1365() {
      return C1365 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1366 || CT.C1366,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 279,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1372() {
      return C1372 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C1373() {
      return C1373 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 7,
        [_Location_line]: 287,
        [_Location_file]: null
      });
    },
    get C1374() {
      return C1374 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 7,
        [_Location_line]: 288,
        [_Location_file]: null
      });
    },
    get C1375() {
      return C1375 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cacheExtent",
        [_Location_column]: 7,
        [_Location_line]: 289,
        [_Location_file]: null
      });
    },
    get C1376() {
      return C1376 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "center",
        [_Location_column]: 7,
        [_Location_line]: 290,
        [_Location_file]: null
      });
    },
    get C1377() {
      return C1377 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "anchor",
        [_Location_column]: 7,
        [_Location_line]: 291,
        [_Location_file]: null
      });
    },
    get C1371() {
      return C1371 = dart.constList([C1372 || CT.C1372, C1373 || CT.C1373, C1374 || CT.C1374, C1375 || CT.C1375, C1376 || CT.C1376, C1377 || CT.C1377], widget_inspector._Location);
    },
    get C1370() {
      return C1370 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1371 || CT.C1371,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 285,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1380() {
      return C1380 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 7,
        [_Location_line]: 304,
        [_Location_file]: null
      });
    },
    get C1381() {
      return C1381 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 305,
        [_Location_file]: null
      });
    },
    get C1382() {
      return C1382 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 306,
        [_Location_file]: null
      });
    },
    get C1383() {
      return C1383 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C1384() {
      return C1384 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "semanticChildCount",
        [_Location_column]: 7,
        [_Location_line]: 308,
        [_Location_file]: null
      });
    },
    get C1385() {
      return C1385 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 7,
        [_Location_line]: 309,
        [_Location_file]: null
      });
    },
    get C1379() {
      return C1379 = dart.constList([C1380 || CT.C1380, C1381 || CT.C1381, C1382 || CT.C1382, C1383 || CT.C1383, C1384 || CT.C1384, C1385 || CT.C1385], widget_inspector._Location);
    },
    get C1378() {
      return C1378 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1379 || CT.C1379,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 303,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1388() {
      return C1388 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 38,
        [_Location_line]: 314,
        [_Location_file]: null
      });
    },
    get C1387() {
      return C1387 = dart.constList([C1388 || CT.C1388], widget_inspector._Location);
    },
    get C1386() {
      return C1386 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1387 || CT.C1387,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 314,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1391() {
      return C1391 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 541,
        [_Location_file]: null
      });
    },
    get C1392() {
      return C1392 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 546,
        [_Location_file]: null
      });
    },
    get C1390() {
      return C1390 = dart.constList([C1391 || CT.C1391, C1392 || CT.C1392], widget_inspector._Location);
    },
    get C1389() {
      return C1389 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1390 || CT.C1390,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 540,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1395() {
      return C1395 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 30,
        [_Location_line]: 552,
        [_Location_file]: null
      });
    },
    get C1396() {
      return C1396 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 57,
        [_Location_line]: 552,
        [_Location_file]: null
      });
    },
    get C1394() {
      return C1394 = dart.constList([C1395 || CT.C1395, C1396 || CT.C1396], widget_inspector._Location);
    },
    get C1393() {
      return C1393 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1394 || CT.C1394,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 552,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1399() {
      return C1399 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 9,
        [_Location_line]: 1205,
        [_Location_file]: null
      });
    },
    get C1400() {
      return C1400 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 1206,
        [_Location_file]: null
      });
    },
    get C1398() {
      return C1398 = dart.constList([C1399 || CT.C1399, C1400 || CT.C1400], widget_inspector._Location);
    },
    get C1397() {
      return C1397 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1398 || CT.C1398,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 1204,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1403() {
      return C1403 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 23,
        [_Location_line]: 1209,
        [_Location_file]: null
      });
    },
    get C1402() {
      return C1402 = dart.constList([C1403 || CT.C1403], widget_inspector._Location);
    },
    get C1401() {
      return C1401 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1402 || CT.C1402,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1209,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1406() {
      return C1406 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 7,
        [_Location_line]: 1689,
        [_Location_file]: null
      });
    },
    get C1407() {
      return C1407 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gridDelegate",
        [_Location_column]: 7,
        [_Location_line]: 1690,
        [_Location_file]: null
      });
    },
    get C1405() {
      return C1405 = dart.constList([C1406 || CT.C1406, C1407 || CT.C1407], widget_inspector._Location);
    },
    get C1404() {
      return C1404 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1405 || CT.C1405,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 1688,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart"
      });
    },
    get C1410() {
      return C1410 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportFraction",
        [_Location_column]: 17,
        [_Location_line]: 835,
        [_Location_file]: null
      });
    },
    get C1411() {
      return C1411 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 17,
        [_Location_line]: 836,
        [_Location_file]: null
      });
    },
    get C1409() {
      return C1409 = dart.constList([C1410 || CT.C1410, C1411 || CT.C1411], widget_inspector._Location);
    },
    get C1408() {
      return C1408 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1409 || CT.C1409,
        [_Location_name]: null,
        [_Location_column]: 15,
        [_Location_line]: 834,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart"
      });
    },
    get C1414() {
      return C1414 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cacheExtent",
        [_Location_column]: 13,
        [_Location_line]: 829,
        [_Location_file]: null
      });
    },
    get C1415() {
      return C1415 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "cacheExtentStyle",
        [_Location_column]: 13,
        [_Location_line]: 830,
        [_Location_file]: null
      });
    },
    get C1416() {
      return C1416 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 13,
        [_Location_line]: 831,
        [_Location_file]: null
      });
    },
    get C1417() {
      return C1417 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 13,
        [_Location_line]: 832,
        [_Location_file]: null
      });
    },
    get C1418() {
      return C1418 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 13,
        [_Location_line]: 833,
        [_Location_file]: null
      });
    },
    get C1413() {
      return C1413 = dart.constList([C1414 || CT.C1414, C1415 || CT.C1415, C1416 || CT.C1416, C1417 || CT.C1417, C1418 || CT.C1418], widget_inspector._Location);
    },
    get C1412() {
      return C1412 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1413 || CT.C1413,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 825,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart"
      });
    },
    get C1421() {
      return C1421 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 9,
        [_Location_line]: 820,
        [_Location_file]: null
      });
    },
    get C1422() {
      return C1422 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 9,
        [_Location_line]: 821,
        [_Location_file]: null
      });
    },
    get C1423() {
      return C1423 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 822,
        [_Location_file]: null
      });
    },
    get C1424() {
      return C1424 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 823,
        [_Location_file]: null
      });
    },
    get C1425() {
      return C1425 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 9,
        [_Location_line]: 824,
        [_Location_file]: null
      });
    },
    get C1420() {
      return C1420 = dart.constList([C1421 || CT.C1421, C1422 || CT.C1422, C1423 || CT.C1423, C1424 || CT.C1424, C1425 || CT.C1425], widget_inspector._Location);
    },
    get C1419() {
      return C1419 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1420 || CT.C1420,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 819,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart"
      });
    },
    get C1428() {
      return C1428 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 808,
        [_Location_file]: null
      });
    },
    get C1429() {
      return C1429 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 819,
        [_Location_file]: null
      });
    },
    get C1427() {
      return C1427 = dart.constList([C1428 || CT.C1428, C1429 || CT.C1429], widget_inspector._Location);
    },
    get C1426() {
      return C1426 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1427 || CT.C1427,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 807,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart"
      });
    },
    get C1430() {
      return C1430 = dart.const({
        __proto__: page_view.PageScrollPhysics.prototype,
        [parent$]: null
      });
    },
    get C1431() {
      return C1431 = dart.const({
        __proto__: diagnostics$.DiagnosticsTreeStyle.prototype,
        [_name$1]: "DiagnosticsTreeStyle.singleLine",
        index: 8
      });
    },
    get C1434() {
      return C1434 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 26,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C1435() {
      return C1435 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 302,
        [_Location_file]: null
      });
    },
    get C1433() {
      return C1433 = dart.constList([C1434 || CT.C1434, C1435 || CT.C1435], widget_inspector._Location);
    },
    get C1432() {
      return C1432 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1433 || CT.C1433,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 302,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C1438() {
      return C1438 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 11,
        [_Location_line]: 313,
        [_Location_file]: null
      });
    },
    get C1439() {
      return C1439 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 11,
        [_Location_line]: 314,
        [_Location_file]: null
      });
    },
    get C1440() {
      return C1440 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 315,
        [_Location_file]: null
      });
    },
    get C1437() {
      return C1437 = dart.constList([C1438 || CT.C1438, C1439 || CT.C1439, C1440 || CT.C1440], widget_inspector._Location);
    },
    get C1436() {
      return C1436 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1437 || CT.C1437,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 312,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C1443() {
      return C1443 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 7,
        [_Location_line]: 307,
        [_Location_file]: null
      });
    },
    get C1444() {
      return C1444 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 308,
        [_Location_file]: null
      });
    },
    get C1445() {
      return C1445 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 309,
        [_Location_file]: null
      });
    },
    get C1446() {
      return C1446 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 310,
        [_Location_file]: null
      });
    },
    get C1447() {
      return C1447 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 7,
        [_Location_line]: 311,
        [_Location_file]: null
      });
    },
    get C1442() {
      return C1442 = dart.constList([C1443 || CT.C1443, C1444 || CT.C1444, C1445 || CT.C1445, C1446 || CT.C1446, C1447 || CT.C1447], widget_inspector._Location);
    },
    get C1441() {
      return C1441 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1442 || CT.C1442,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 306,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C1450() {
      return C1450 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 38,
        [_Location_line]: 320,
        [_Location_file]: null
      });
    },
    get C1449() {
      return C1449 = dart.constList([C1450 || CT.C1450], widget_inspector._Location);
    },
    get C1448() {
      return C1448 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1449 || CT.C1449,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 320,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C1451() {
      return C1451 = dart.const(new _js_helper.PrivateSymbol.new('_repaint', _repaint));
    },
    get C1452() {
      return C1452 = dart.const({
        __proto__: heroes.HeroFlightDirection.prototype,
        [_name$29]: "HeroFlightDirection.push",
        index: 0
      });
    },
    get C1453() {
      return C1453 = dart.const({
        __proto__: heroes.HeroFlightDirection.prototype,
        [_name$29]: "HeroFlightDirection.pop",
        index: 1
      });
    },
    get C1454() {
      return C1454 = dart.constList([C1452 || CT.C1452, C1453 || CT.C1453], heroes.HeroFlightDirection);
    },
    get C1457() {
      return C1457 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C1458() {
      return C1458 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 388,
        [_Location_file]: null
      });
    },
    get C1456() {
      return C1456 = dart.constList([C1457 || CT.C1457, C1458 || CT.C1458], widget_inspector._Location);
    },
    get C1455() {
      return C1455 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1456 || CT.C1456,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 386,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1461() {
      return C1461 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 31,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C1462() {
      return C1462 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 42,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C1460() {
      return C1460 = dart.constList([C1461 || CT.C1461, C1462 || CT.C1462], widget_inspector._Location);
    },
    get C1459() {
      return C1459 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1460 || CT.C1460,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 399,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1465() {
      return C1465 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "enabled",
        [_Location_column]: 11,
        [_Location_line]: 398,
        [_Location_file]: null
      });
    },
    get C1466() {
      return C1466 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 399,
        [_Location_file]: null
      });
    },
    get C1464() {
      return C1464 = dart.constList([C1465 || CT.C1465, C1466 || CT.C1466], widget_inspector._Location);
    },
    get C1463() {
      return C1463 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1464 || CT.C1464,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 397,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1469() {
      return C1469 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offstage",
        [_Location_column]: 9,
        [_Location_line]: 396,
        [_Location_file]: null
      });
    },
    get C1470() {
      return C1470 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 397,
        [_Location_file]: null
      });
    },
    get C1468() {
      return C1468 = dart.constList([C1469 || CT.C1469, C1470 || CT.C1470], widget_inspector._Location);
    },
    get C1467() {
      return C1467 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1468 || CT.C1468,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 395,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1473() {
      return C1473 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 393,
        [_Location_file]: null
      });
    },
    get C1474() {
      return C1474 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 394,
        [_Location_file]: null
      });
    },
    get C1475() {
      return C1475 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 395,
        [_Location_file]: null
      });
    },
    get C1472() {
      return C1472 = dart.constList([C1473 || CT.C1473, C1474 || CT.C1474, C1475 || CT.C1475], widget_inspector._Location);
    },
    get C1471() {
      return C1471 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1472 || CT.C1472,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 392,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1478() {
      return C1478 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 17,
        [_Location_line]: 525,
        [_Location_file]: null
      });
    },
    get C1479() {
      return C1479 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 526,
        [_Location_file]: null
      });
    },
    get C1477() {
      return C1477 = dart.constList([C1478 || CT.C1478, C1479 || CT.C1479], widget_inspector._Location);
    },
    get C1476() {
      return C1476 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1477 || CT.C1477,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 524,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1482() {
      return C1482 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 524,
        [_Location_file]: null
      });
    },
    get C1481() {
      return C1481 = dart.constList([C1482 || CT.C1482], widget_inspector._Location);
    },
    get C1480() {
      return C1480 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1481 || CT.C1481,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 523,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1485() {
      return C1485 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 523,
        [_Location_file]: null
      });
    },
    get C1484() {
      return C1484 = dart.constList([C1485 || CT.C1485], widget_inspector._Location);
    },
    get C1483() {
      return C1483 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1484 || CT.C1484,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 522,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1488() {
      return C1488 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 11,
        [_Location_line]: 518,
        [_Location_file]: null
      });
    },
    get C1489() {
      return C1489 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "right",
        [_Location_column]: 11,
        [_Location_line]: 519,
        [_Location_file]: null
      });
    },
    get C1490() {
      return C1490 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "bottom",
        [_Location_column]: 11,
        [_Location_line]: 520,
        [_Location_file]: null
      });
    },
    get C1491() {
      return C1491 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 11,
        [_Location_line]: 521,
        [_Location_file]: null
      });
    },
    get C1492() {
      return C1492 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 522,
        [_Location_file]: null
      });
    },
    get C1487() {
      return C1487 = dart.constList([C1488 || CT.C1488, C1489 || CT.C1489, C1490 || CT.C1490, C1491 || CT.C1491, C1492 || CT.C1492], widget_inspector._Location);
    },
    get C1486() {
      return C1486 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1487 || CT.C1487,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 517,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1495() {
      return C1495 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "animation",
        [_Location_column]: 7,
        [_Location_line]: 490,
        [_Location_file]: null
      });
    },
    get C1496() {
      return C1496 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 491,
        [_Location_file]: null
      });
    },
    get C1497() {
      return C1497 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 492,
        [_Location_file]: null
      });
    },
    get C1494() {
      return C1494 = dart.constList([C1495 || CT.C1495, C1496 || CT.C1496, C1497 || CT.C1497], widget_inspector._Location);
    },
    get C1493() {
      return C1493 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1494 || CT.C1494,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 489,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart"
      });
    },
    get C1498() {
      return C1498 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.vertical",
        index: 0
      });
    },
    get C1499() {
      return C1499 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.horizontal",
        index: 1
      });
    },
    get C1500() {
      return C1500 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.endToStart",
        index: 2
      });
    },
    get C1501() {
      return C1501 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.startToEnd",
        index: 3
      });
    },
    get C1502() {
      return C1502 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.up",
        index: 4
      });
    },
    get C1503() {
      return C1503 = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_name$30]: "DismissDirection.down",
        index: 5
      });
    },
    get C1504() {
      return C1504 = dart.constList([C1498 || CT.C1498, C1499 || CT.C1499, C1500 || CT.C1500, C1501 || CT.C1501, C1502 || CT.C1502, C1503 || CT.C1503], dismissible.DismissDirection);
    },
    get C1505() {
      return C1505 = dart.constMap(dismissible.DismissDirection, core.double, []);
    },
    get C1506() {
      return C1506 = dart.const({
        __proto__: dismissible._FlingGestureKind.prototype,
        [_name$30]: "_FlingGestureKind.none",
        index: 0
      });
    },
    get C1507() {
      return C1507 = dart.const({
        __proto__: dismissible._FlingGestureKind.prototype,
        [_name$30]: "_FlingGestureKind.forward",
        index: 1
      });
    },
    get C1508() {
      return C1508 = dart.const({
        __proto__: dismissible._FlingGestureKind.prototype,
        [_name$30]: "_FlingGestureKind.reverse",
        index: 2
      });
    },
    get C1509() {
      return C1509 = dart.constList([C1506 || CT.C1506, C1507 || CT.C1507, C1508 || CT.C1508], dismissible._FlingGestureKind);
    },
    get C1512() {
      return C1512 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 545,
        [_Location_file]: null
      });
    },
    get C1513() {
      return C1513 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 546,
        [_Location_file]: null
      });
    },
    get C1514() {
      return C1514 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 547,
        [_Location_file]: null
      });
    },
    get C1511() {
      return C1511 = dart.constList([C1512 || CT.C1512, C1513 || CT.C1513, C1514 || CT.C1514], widget_inspector._Location);
    },
    get C1510() {
      return C1510 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1511 || CT.C1511,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 544,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1517() {
      return C1517 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sizeFactor",
        [_Location_column]: 9,
        [_Location_line]: 542,
        [_Location_file]: null
      });
    },
    get C1518() {
      return C1518 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axis",
        [_Location_column]: 9,
        [_Location_line]: 543,
        [_Location_file]: null
      });
    },
    get C1519() {
      return C1519 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 544,
        [_Location_file]: null
      });
    },
    get C1516() {
      return C1516 = dart.constList([C1517 || CT.C1517, C1518 || CT.C1518, C1519 || CT.C1519], widget_inspector._Location);
    },
    get C1515() {
      return C1515 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1516 || CT.C1516,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 541,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1522() {
      return C1522 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "position",
        [_Location_column]: 7,
        [_Location_line]: 553,
        [_Location_file]: null
      });
    },
    get C1521() {
      return C1521 = dart.constList([C1522 || CT.C1522, C215 || CT.C215], widget_inspector._Location);
    },
    get C1520() {
      return C1520 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1521 || CT.C1521,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 552,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1525() {
      return C1525 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 15,
        [_Location_line]: 562,
        [_Location_file]: null
      });
    },
    get C1526() {
      return C1526 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 566,
        [_Location_file]: null
      });
    },
    get C1524() {
      return C1524 = dart.constList([C1525 || CT.C1525, C1526 || CT.C1526], widget_inspector._Location);
    },
    get C1523() {
      return C1523 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1524 || CT.C1524,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 561,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1529() {
      return C1529 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 561,
        [_Location_file]: null
      });
    },
    get C1528() {
      return C1528 = dart.constList([C1529 || CT.C1529], widget_inspector._Location);
    },
    get C1527() {
      return C1527 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1528 || CT.C1528,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 560,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1532() {
      return C1532 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 23,
        [_Location_line]: 558,
        [_Location_file]: null
      });
    },
    get C1531() {
      return C1531 = dart.constList([C1532 || CT.C1532], widget_inspector._Location);
    },
    get C1530() {
      return C1530 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1531 || CT.C1531,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 558,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1535() {
      return C1535 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 574,
        [_Location_file]: null
      });
    },
    get C1536() {
      return C1536 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 575,
        [_Location_file]: null
      });
    },
    get C1537() {
      return C1537 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onHorizontalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 576,
        [_Location_file]: null
      });
    },
    get C1538() {
      return C1538 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragStart",
        [_Location_column]: 7,
        [_Location_line]: 577,
        [_Location_file]: null
      });
    },
    get C1539() {
      return C1539 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragUpdate",
        [_Location_column]: 7,
        [_Location_line]: 578,
        [_Location_file]: null
      });
    },
    get C1540() {
      return C1540 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onVerticalDragEnd",
        [_Location_column]: 7,
        [_Location_line]: 579,
        [_Location_file]: null
      });
    },
    get C1541() {
      return C1541 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 580,
        [_Location_file]: null
      });
    },
    get C1542() {
      return C1542 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 581,
        [_Location_file]: null
      });
    },
    get C1543() {
      return C1543 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 7,
        [_Location_line]: 582,
        [_Location_file]: null
      });
    },
    get C1534() {
      return C1534 = dart.constList([C1535 || CT.C1535, C1536 || CT.C1536, C1537 || CT.C1537, C1538 || CT.C1538, C1539 || CT.C1539, C1540 || CT.C1540, C1541 || CT.C1541, C1542 || CT.C1542, C1543 || CT.C1543], widget_inspector._Location);
    },
    get C1533() {
      return C1533 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1534 || CT.C1534,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 573,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart"
      });
    },
    get C1544() {
      return C1544 = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C75 || CT.C75,
        [Interval_end]: 1,
        [Interval_begin]: 0.4
      });
    },
    get C1547() {
      return C1547 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C1548() {
      return C1548 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemBuilder",
        [_Location_column]: 13,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C1549() {
      return C1549 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialItemCount",
        [_Location_column]: 13,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C1546() {
      return C1546 = dart.constList([C1547 || CT.C1547, C1548 || CT.C1548, C1549 || CT.C1549], widget_inspector._Location);
    },
    get C1545() {
      return C1545 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1546 || CT.C1546,
        [_Location_name]: null,
        [_Location_column]: 19,
        [_Location_line]: 475,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart"
      });
    },
    get C1552() {
      return C1552 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 11,
        [_Location_line]: 474,
        [_Location_file]: null
      });
    },
    get C1553() {
      return C1553 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 11,
        [_Location_line]: 475,
        [_Location_file]: null
      });
    },
    get C1551() {
      return C1551 = dart.constList([C1552 || CT.C1552, C1553 || CT.C1553], widget_inspector._Location);
    },
    get C1550() {
      return C1550 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1551 || CT.C1551,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 473,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart"
      });
    },
    get C1556() {
      return C1556 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 7,
        [_Location_line]: 466,
        [_Location_file]: null
      });
    },
    get C1557() {
      return C1557 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 7,
        [_Location_line]: 467,
        [_Location_file]: null
      });
    },
    get C1558() {
      return C1558 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 468,
        [_Location_file]: null
      });
    },
    get C1559() {
      return C1559 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "primary",
        [_Location_column]: 7,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C1560() {
      return C1560 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C1561() {
      return C1561 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shrinkWrap",
        [_Location_column]: 7,
        [_Location_line]: 471,
        [_Location_file]: null
      });
    },
    get C1562() {
      return C1562 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 7,
        [_Location_line]: 472,
        [_Location_file]: null
      });
    },
    get C1555() {
      return C1555 = dart.constList([C1556 || CT.C1556, C1557 || CT.C1557, C1558 || CT.C1558, C1559 || CT.C1559, C1560 || CT.C1560, C1561 || CT.C1561, C1562 || CT.C1562], widget_inspector._Location);
    },
    get C1554() {
      return C1554 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1555 || CT.C1555,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 465,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart"
      });
    },
    get C1565() {
      return C1565 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 7,
        [_Location_line]: 993,
        [_Location_file]: null
      });
    },
    get C1564() {
      return C1564 = dart.constList([C1565 || CT.C1565], widget_inspector._Location);
    },
    get C1563() {
      return C1563 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1564 || CT.C1564,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 992,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart"
      });
    },
    get C1568() {
      return C1568 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 11,
        [_Location_line]: 40,
        [_Location_file]: null
      });
    },
    get C1569() {
      return C1569 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 11,
        [_Location_line]: 41,
        [_Location_file]: null
      });
    },
    get C1570() {
      return C1570 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C1567() {
      return C1567 = dart.constList([C1568 || CT.C1568, C1569 || CT.C1569, C1570 || CT.C1570], widget_inspector._Location);
    },
    get C1566() {
      return C1566 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1567 || CT.C1567,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 39,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon_theme.dart"
      });
    },
    get C1573() {
      return C1573 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 38,
        [_Location_file]: null
      });
    },
    get C1572() {
      return C1572 = dart.constList([C1573 || CT.C1573], widget_inspector._Location);
    },
    get C1571() {
      return C1571 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1572 || CT.C1572,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 37,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon_theme.dart"
      });
    },
    get C1574() {
      return C1574 = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [size$3]: 24,
        [_opacity$1]: 1,
        [color$10]: C139 || CT.C139
      });
    },
    get C1577() {
      return C1577 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 59,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C1578() {
      return C1578 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 71,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C1576() {
      return C1576 = dart.constList([C1577 || CT.C1577, C1578 || CT.C1578], widget_inspector._Location);
    },
    get C1575() {
      return C1575 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1576 || CT.C1576,
        [_Location_name]: null,
        [_Location_column]: 49,
        [_Location_line]: 83,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon_theme.dart"
      });
    },
    get C1581() {
      return C1581 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 26,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C1580() {
      return C1580 = dart.constList([C1581 || CT.C1581], widget_inspector._Location);
    },
    get C1579() {
      return C1579 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1580 || CT.C1580,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 55,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/orientation_builder.dart"
      });
    },
    get C1583() {
      return C1583 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 65,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/spacer.dart"
      });
    },
    get C1582() {
      return C1582 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C1583 || CT.C1583,
        [key$]: null,
        [child$0]: null,
        [height$]: 0,
        [width$]: 0
      });
    },
    get C1586() {
      return C1586 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "flex",
        [_Location_column]: 7,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C1587() {
      return C1587 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C1585() {
      return C1585 = dart.constList([C1586 || CT.C1586, C1587 || CT.C1587], widget_inspector._Location);
    },
    get C1584() {
      return C1584 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1585 || CT.C1585,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 63,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/spacer.dart"
      });
    },
    get C1588() {
      return C1588 = dart.fn(animated_switcher.AnimatedSwitcher.defaultTransitionBuilder, WidgetAndAnimationOfdoubleToWidget());
    },
    get C1589() {
      return C1589 = dart.fn(animated_switcher.AnimatedSwitcher.defaultLayoutBuilder, WidgetAndListOfWidgetToWidget());
    },
    get C1592() {
      return C1592 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 7,
        [_Location_line]: 268,
        [_Location_file]: null
      });
    },
    get C1593() {
      return C1593 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 269,
        [_Location_file]: null
      });
    },
    get C1591() {
      return C1591 = dart.constList([C1592 || CT.C1592, C1593 || CT.C1593], widget_inspector._Location);
    },
    get C1590() {
      return C1590 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1591 || CT.C1591,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 267,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart"
      });
    },
    get C1596() {
      return C1596 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 282,
        [_Location_file]: null
      });
    },
    get C1597() {
      return C1597 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 7,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C1595() {
      return C1595 = dart.constList([C1596 || CT.C1596, C1597 || CT.C1597], widget_inspector._Location);
    },
    get C1594() {
      return C1594 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1595 || CT.C1595,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 281,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart"
      });
    },
    get C1600() {
      return C1600 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 44,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C1601() {
      return C1601 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childIndex",
        [_Location_column]: 64,
        [_Location_line]: 387,
        [_Location_file]: null
      });
    },
    get C1599() {
      return C1599 = dart.constList([C1600 || CT.C1600, C1601 || CT.C1601], widget_inspector._Location);
    },
    get C1598() {
      return C1598 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1599 || CT.C1599,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 387,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart"
      });
    },
    get C1604() {
      return C1604 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 411,
        [_Location_file]: null
      });
    },
    get C1605() {
      return C1605 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 412,
        [_Location_file]: null
      });
    },
    get C1603() {
      return C1603 = dart.constList([C1604 || CT.C1604, C1605 || CT.C1605], widget_inspector._Location);
    },
    get C1602() {
      return C1602 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1603 || CT.C1603,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 410,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart"
      });
    },
    get C1608() {
      return C1608 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 52,
        [_Location_line]: 148,
        [_Location_file]: null
      });
    },
    get C1607() {
      return C1607 = dart.constList([C1608 || CT.C1608], widget_inspector._Location);
    },
    get C1606() {
      return C1606 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1607 || CT.C1607,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 148,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart"
      });
    },
    get C1611() {
      return C1611 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 44,
        [_Location_line]: 150,
        [_Location_file]: null
      });
    },
    get C1610() {
      return C1610 = dart.constList([C1611 || CT.C1611], widget_inspector._Location);
    },
    get C1609() {
      return C1609 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1610 || CT.C1610,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 150,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart"
      });
    },
    get C1614() {
      return C1614 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 46,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C1613() {
      return C1613 = dart.constList([C1614 || CT.C1614], widget_inspector._Location);
    },
    get C1612() {
      return C1612 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1613 || CT.C1613,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 152,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart"
      });
    },
    get C1617() {
      return C1617 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "delegate",
        [_Location_column]: 45,
        [_Location_line]: 153,
        [_Location_file]: null
      });
    },
    get C1616() {
      return C1616 = dart.constList([C1617 || CT.C1617], widget_inspector._Location);
    },
    get C1615() {
      return C1615 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1616 || CT.C1616,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 153,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart"
      });
    },
    get C1620() {
      return C1620 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 25,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C1621() {
      return C1621 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 42,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C1619() {
      return C1619 = dart.constList([C1620 || CT.C1620, C1621 || CT.C1621], widget_inspector._Location);
    },
    get C1618() {
      return C1618 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1619 || CT.C1619,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 77,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image_icon.dart"
      });
    },
    get C1624() {
      return C1624 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 76,
        [_Location_file]: null
      });
    },
    get C1625() {
      return C1625 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 77,
        [_Location_file]: null
      });
    },
    get C1623() {
      return C1623 = dart.constList([C1624 || CT.C1624, C1625 || CT.C1625], widget_inspector._Location);
    },
    get C1622() {
      return C1622 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1623 || CT.C1623,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 75,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image_icon.dart"
      });
    },
    get C1628() {
      return C1628 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 9,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C1629() {
      return C1629 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C1630() {
      return C1630 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 9,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C1631() {
      return C1631 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 9,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C1632() {
      return C1632 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 9,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C1633() {
      return C1633 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 9,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C1634() {
      return C1634 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "excludeFromSemantics",
        [_Location_column]: 9,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C1627() {
      return C1627 = dart.constList([C1628 || CT.C1628, C1629 || CT.C1629, C1630 || CT.C1630, C1631 || CT.C1631, C1632 || CT.C1632, C1633 || CT.C1633, C1634 || CT.C1634], widget_inspector._Location);
    },
    get C1626() {
      return C1626 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1627 || CT.C1627,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 88,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image_icon.dart"
      });
    },
    get C1637() {
      return C1637 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 7,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C1638() {
      return C1638 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C1636() {
      return C1636 = dart.constList([C1637 || CT.C1637, C1638 || CT.C1638], widget_inspector._Location);
    },
    get C1635() {
      return C1635 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1636 || CT.C1636,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 86,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/image_icon.dart"
      });
    },
    get C1641() {
      return C1641 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 25,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C1642() {
      return C1642 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 42,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C1640() {
      return C1640 = dart.constList([C1641 || CT.C1641, C1642 || CT.C1642], widget_inspector._Location);
    },
    get C1639() {
      return C1639 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1640 || CT.C1640,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 166,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1645() {
      return C1645 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 165,
        [_Location_file]: null
      });
    },
    get C1646() {
      return C1646 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 166,
        [_Location_file]: null
      });
    },
    get C1644() {
      return C1644 = dart.constList([C1645 || CT.C1645, C1646 || CT.C1646], widget_inspector._Location);
    },
    get C1643() {
      return C1643 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1644 || CT.C1644,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 164,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1649() {
      return C1649 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overflow",
        [_Location_column]: 7,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C1650() {
      return C1650 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textDirection",
        [_Location_column]: 7,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C1651() {
      return C1651 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "text",
        [_Location_column]: 7,
        [_Location_line]: 178,
        [_Location_file]: null
      });
    },
    get C1648() {
      return C1648 = dart.constList([C1649 || CT.C1649, C1650 || CT.C1650, C1651 || CT.C1651], widget_inspector._Location);
    },
    get C1647() {
      return C1647 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1648 || CT.C1648,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 175,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1654() {
      return C1654 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transform",
        [_Location_column]: 13,
        [_Location_line]: 194,
        [_Location_file]: null
      });
    },
    get C1655() {
      return C1655 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 13,
        [_Location_line]: 195,
        [_Location_file]: null
      });
    },
    get C1656() {
      return C1656 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "transformHitTests",
        [_Location_column]: 13,
        [_Location_line]: 196,
        [_Location_file]: null
      });
    },
    get C1657() {
      return C1657 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 197,
        [_Location_file]: null
      });
    },
    get C1653() {
      return C1653 = dart.constList([C1654 || CT.C1654, C1655 || CT.C1655, C1656 || CT.C1656, C1657 || CT.C1657], widget_inspector._Location);
    },
    get C1652() {
      return C1652 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1653 || CT.C1653,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 193,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1660() {
      return C1660 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 212,
        [_Location_file]: null
      });
    },
    get C1659() {
      return C1659 = dart.constList([C1660 || CT.C1660], widget_inspector._Location);
    },
    get C1658() {
      return C1658 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1659 || CT.C1659,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 211,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1663() {
      return C1663 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 11,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C1664() {
      return C1664 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 11,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C1665() {
      return C1665 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 211,
        [_Location_file]: null
      });
    },
    get C1662() {
      return C1662 = dart.constList([C1663 || CT.C1663, C1664 || CT.C1664, C1665 || CT.C1665], widget_inspector._Location);
    },
    get C1661() {
      return C1661 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1662 || CT.C1662,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 208,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1668() {
      return C1668 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C1667() {
      return C1667 = dart.constList([C1668 || CT.C1668], widget_inspector._Location);
    },
    get C1666() {
      return C1666 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1667 || CT.C1667,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 207,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1671() {
      return C1671 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 7,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C1672() {
      return C1672 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C1670() {
      return C1670 = dart.constList([C1671 || CT.C1671, C1672 || CT.C1672], widget_inspector._Location);
    },
    get C1669() {
      return C1669 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1670 || CT.C1670,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 205,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/icon.dart"
      });
    },
    get C1673() {
      return C1673 = dart.const({
        __proto__: drag_target.DragAnchor.prototype,
        [_name$31]: "DragAnchor.child",
        index: 0
      });
    },
    get C1674() {
      return C1674 = dart.const({
        __proto__: drag_target.DragAnchor.prototype,
        [_name$31]: "DragAnchor.pointer",
        index: 1
      });
    },
    get C1675() {
      return C1675 = dart.constList([C1673 || CT.C1673, C1674 || CT.C1674], drag_target.DragAnchor);
    },
    get C1678() {
      return C1678 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPointerDown",
        [_Location_column]: 7,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C1679() {
      return C1679 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 425,
        [_Location_file]: null
      });
    },
    get C1677() {
      return C1677 = dart.constList([C1678 || CT.C1678, C1679 || CT.C1679], widget_inspector._Location);
    },
    get C1676() {
      return C1676 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1677 || CT.C1677,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 423,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart"
      });
    },
    get C1682() {
      return C1682 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "metaData",
        [_Location_column]: 7,
        [_Location_line]: 562,
        [_Location_file]: null
      });
    },
    get C1683() {
      return C1683 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "behavior",
        [_Location_column]: 7,
        [_Location_line]: 563,
        [_Location_file]: null
      });
    },
    get C1684() {
      return C1684 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C1681() {
      return C1681 = dart.constList([C1682 || CT.C1682, C1683 || CT.C1683, C1684 || CT.C1684], widget_inspector._Location);
    },
    get C1680() {
      return C1680 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1681 || CT.C1681,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 561,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart"
      });
    },
    get C1685() {
      return C1685 = dart.const({
        __proto__: drag_target._DragEndKind.prototype,
        [_name$31]: "_DragEndKind.dropped",
        index: 0
      });
    },
    get C1686() {
      return C1686 = dart.const({
        __proto__: drag_target._DragEndKind.prototype,
        [_name$31]: "_DragEndKind.canceled",
        index: 1
      });
    },
    get C1687() {
      return C1687 = dart.constList([C1685 || CT.C1685, C1686 || CT.C1686], drag_target._DragEndKind);
    },
    get C1690() {
      return C1690 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 711,
        [_Location_file]: null
      });
    },
    get C1691() {
      return C1691 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "ignoringSemantics",
        [_Location_column]: 9,
        [_Location_line]: 712,
        [_Location_file]: null
      });
    },
    get C1689() {
      return C1689 = dart.constList([C1690 || CT.C1690, C1691 || CT.C1691], widget_inspector._Location);
    },
    get C1688() {
      return C1688 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1689 || CT.C1689,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 710,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart"
      });
    },
    get C1694() {
      return C1694 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 7,
        [_Location_line]: 708,
        [_Location_file]: null
      });
    },
    get C1695() {
      return C1695 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 7,
        [_Location_line]: 709,
        [_Location_file]: null
      });
    },
    get C1696() {
      return C1696 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 710,
        [_Location_file]: null
      });
    },
    get C1693() {
      return C1693 = dart.constList([C1694 || CT.C1694, C1695 || CT.C1695, C1696 || CT.C1696], widget_inspector._Location);
    },
    get C1692() {
      return C1692 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1693 || CT.C1693,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 707,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart"
      });
    },
    get C1699() {
      return C1699 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "formState",
        [_Location_column]: 9,
        [_Location_line]: 171,
        [_Location_file]: null
      });
    },
    get C1700() {
      return C1700 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "generation",
        [_Location_column]: 9,
        [_Location_line]: 172,
        [_Location_file]: null
      });
    },
    get C1701() {
      return C1701 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 173,
        [_Location_file]: null
      });
    },
    get C1698() {
      return C1698 = dart.constList([C1699 || CT.C1699, C1700 || CT.C1700, C1701 || CT.C1701], widget_inspector._Location);
    },
    get C1697() {
      return C1697 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1698 || CT.C1698,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 170,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/form.dart"
      });
    },
    get C1704() {
      return C1704 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onWillPop",
        [_Location_column]: 7,
        [_Location_line]: 169,
        [_Location_file]: null
      });
    },
    get C1703() {
      return C1703 = dart.constList([C1704 || CT.C1704, C634 || CT.C634], widget_inspector._Location);
    },
    get C1702() {
      return C1702 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1703 || CT.C1703,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 168,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/form.dart"
      });
    },
    get C1707() {
      return C1707 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 9,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C1708() {
      return C1708 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeLeft",
        [_Location_column]: 9,
        [_Location_line]: 112,
        [_Location_file]: null
      });
    },
    get C1709() {
      return C1709 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeTop",
        [_Location_column]: 9,
        [_Location_line]: 113,
        [_Location_file]: null
      });
    },
    get C1710() {
      return C1710 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeRight",
        [_Location_column]: 9,
        [_Location_line]: 114,
        [_Location_file]: null
      });
    },
    get C1711() {
      return C1711 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeBottom",
        [_Location_column]: 9,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C1712() {
      return C1712 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 116,
        [_Location_file]: null
      });
    },
    get C1706() {
      return C1706 = dart.constList([C1707 || CT.C1707, C1708 || CT.C1708, C1709 || CT.C1709, C1710 || CT.C1710, C1711 || CT.C1711, C1712 || CT.C1712], widget_inspector._Location);
    },
    get C1705() {
      return C1705 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1706 || CT.C1706,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 110,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart"
      });
    },
    get C1715() {
      return C1715 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C1716() {
      return C1716 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 110,
        [_Location_file]: null
      });
    },
    get C1714() {
      return C1714 = dart.constList([C1715 || CT.C1715, C1716 || CT.C1716], widget_inspector._Location);
    },
    get C1713() {
      return C1713 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1714 || CT.C1714,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 103,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart"
      });
    },
    get C1719() {
      return C1719 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "context",
        [_Location_column]: 9,
        [_Location_line]: 205,
        [_Location_file]: null
      });
    },
    get C1720() {
      return C1720 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeLeft",
        [_Location_column]: 9,
        [_Location_line]: 206,
        [_Location_file]: null
      });
    },
    get C1721() {
      return C1721 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeTop",
        [_Location_column]: 9,
        [_Location_line]: 207,
        [_Location_file]: null
      });
    },
    get C1722() {
      return C1722 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeRight",
        [_Location_column]: 9,
        [_Location_line]: 208,
        [_Location_file]: null
      });
    },
    get C1723() {
      return C1723 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "removeBottom",
        [_Location_column]: 9,
        [_Location_line]: 209,
        [_Location_file]: null
      });
    },
    get C1724() {
      return C1724 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 210,
        [_Location_file]: null
      });
    },
    get C1718() {
      return C1718 = dart.constList([C1719 || CT.C1719, C1720 || CT.C1720, C1721 || CT.C1721, C1722 || CT.C1722, C1723 || CT.C1723, C1724 || CT.C1724], widget_inspector._Location);
    },
    get C1717() {
      return C1717 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1718 || CT.C1718,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 204,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart"
      });
    },
    get C1727() {
      return C1727 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 7,
        [_Location_line]: 198,
        [_Location_file]: null
      });
    },
    get C1728() {
      return C1728 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "sliver",
        [_Location_column]: 7,
        [_Location_line]: 204,
        [_Location_file]: null
      });
    },
    get C1726() {
      return C1726 = dart.constList([C1727 || CT.C1727, C1728 || CT.C1728], widget_inspector._Location);
    },
    get C1725() {
      return C1725 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1726 || CT.C1726,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 197,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart"
      });
    },
    get C1731() {
      return C1731 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C1732() {
      return C1732 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 53,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C1730() {
      return C1730 = dart.constList([C1731 || CT.C1731, C1732 || CT.C1732], widget_inspector._Location);
    },
    get C1729() {
      return C1729 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1730 || CT.C1730,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 97,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1735() {
      return C1735 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C1736() {
      return C1736 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 71,
        [_Location_line]: 143,
        [_Location_file]: null
      });
    },
    get C1734() {
      return C1734 = dart.constList([C1735 || CT.C1735, C1736 || CT.C1736], widget_inspector._Location);
    },
    get C1733() {
      return C1733 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1734 || CT.C1734,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 143,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1739() {
      return C1739 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 54,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C1740() {
      return C1740 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 68,
        [_Location_line]: 186,
        [_Location_file]: null
      });
    },
    get C1738() {
      return C1738 = dart.constList([C1739 || CT.C1739, C1740 || CT.C1740], widget_inspector._Location);
    },
    get C1737() {
      return C1737 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1738 || CT.C1738,
        [_Location_name]: null,
        [_Location_column]: 37,
        [_Location_line]: 186,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1743() {
      return C1743 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 29,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C1744() {
      return C1744 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "index",
        [_Location_column]: 61,
        [_Location_line]: 190,
        [_Location_file]: null
      });
    },
    get C1742() {
      return C1742 = dart.constList([C1743 || CT.C1743, C1744 || CT.C1744], widget_inspector._Location);
    },
    get C1741() {
      return C1741 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1742 || CT.C1742,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 190,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1747() {
      return C1747 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "diameterRatio",
        [_Location_column]: 13,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C1748() {
      return C1748 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "perspective",
        [_Location_column]: 13,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C1749() {
      return C1749 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offAxisFraction",
        [_Location_column]: 13,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C1750() {
      return C1750 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "useMagnifier",
        [_Location_column]: 13,
        [_Location_line]: 767,
        [_Location_file]: null
      });
    },
    get C1751() {
      return C1751 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "magnification",
        [_Location_column]: 13,
        [_Location_line]: 768,
        [_Location_file]: null
      });
    },
    get C1752() {
      return C1752 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "overAndUnderCenterOpacity",
        [_Location_column]: 13,
        [_Location_line]: 769,
        [_Location_file]: null
      });
    },
    get C1753() {
      return C1753 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 13,
        [_Location_line]: 770,
        [_Location_file]: null
      });
    },
    get C1754() {
      return C1754 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "squeeze",
        [_Location_column]: 13,
        [_Location_line]: 771,
        [_Location_file]: null
      });
    },
    get C1755() {
      return C1755 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipToSize",
        [_Location_column]: 13,
        [_Location_line]: 772,
        [_Location_file]: null
      });
    },
    get C1756() {
      return C1756 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "renderChildrenOutsideViewport",
        [_Location_column]: 13,
        [_Location_line]: 773,
        [_Location_file]: null
      });
    },
    get C1757() {
      return C1757 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 13,
        [_Location_line]: 774,
        [_Location_file]: null
      });
    },
    get C1758() {
      return C1758 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "childDelegate",
        [_Location_column]: 13,
        [_Location_line]: 775,
        [_Location_file]: null
      });
    },
    get C1746() {
      return C1746 = dart.constList([C1747 || CT.C1747, C1748 || CT.C1748, C1749 || CT.C1749, C1750 || CT.C1750, C1751 || CT.C1751, C1752 || CT.C1752, C1753 || CT.C1753, C1754 || CT.C1754, C1755 || CT.C1755, C1756 || CT.C1756, C1757 || CT.C1757, C1758 || CT.C1758], widget_inspector._Location);
    },
    get C1745() {
      return C1745 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1746 || CT.C1746,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 763,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1761() {
      return C1761 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C1762() {
      return C1762 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 9,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C1763() {
      return C1763 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "itemExtent",
        [_Location_column]: 9,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C1764() {
      return C1764 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 9,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C1760() {
      return C1760 = dart.constList([C1761 || CT.C1761, C1762 || CT.C1762, C1763 || CT.C1763, C1764 || CT.C1764], widget_inspector._Location);
    },
    get C1759() {
      return C1759 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1760 || CT.C1760,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 758,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1767() {
      return C1767 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 7,
        [_Location_line]: 743,
        [_Location_file]: null
      });
    },
    get C1768() {
      return C1768 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C1766() {
      return C1766 = dart.constList([C1767 || CT.C1767, C1768 || CT.C1768], widget_inspector._Location);
    },
    get C1765() {
      return C1765 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1766 || CT.C1766,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 742,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart"
      });
    },
    get C1769() {
      return C1769 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282735204.0
      });
    },
    get C1772() {
      return C1772 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 9,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C1773() {
      return C1773 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 9,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C1771() {
      return C1771 = dart.constList([C1772 || CT.C1772, C1773 || CT.C1773], widget_inspector._Location);
    },
    get C1770() {
      return C1770 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1771 || CT.C1771,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 91,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/placeholder.dart"
      });
    },
    get C1776() {
      return C1776 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxWidth",
        [_Location_column]: 7,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C1777() {
      return C1777 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxHeight",
        [_Location_column]: 7,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C1778() {
      return C1778 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C1775() {
      return C1775 = dart.constList([C1776 || CT.C1776, C1777 || CT.C1777, C1778 || CT.C1778], widget_inspector._Location);
    },
    get C1774() {
      return C1774 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1775 || CT.C1775,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 88,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/placeholder.dart"
      });
    },
    get C1779() {
      return C1779 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2143545587
      });
    },
    get C1782() {
      return C1782 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "foregroundPainter",
        [_Location_column]: 7,
        [_Location_line]: 111,
        [_Location_file]: null
      });
    },
    get C1783() {
      return C1783 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 117,
        [_Location_file]: null
      });
    },
    get C1781() {
      return C1781 = dart.constList([C1782 || CT.C1782, C1783 || CT.C1783], widget_inspector._Location);
    },
    get C1780() {
      return C1780 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1781 || CT.C1781,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 110,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/grid_paper.dart"
      });
    },
    get C1786() {
      return C1786 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 285,
        [_Location_file]: null
      });
    },
    get C1787() {
      return C1787 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 286,
        [_Location_file]: null
      });
    },
    get C1785() {
      return C1785 = dart.constList([C1786 || CT.C1786, C1787 || CT.C1787], widget_inspector._Location);
    },
    get C1784() {
      return C1784 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1785 || CT.C1785,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 284,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1790() {
      return C1790 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 284,
        [_Location_file]: null
      });
    },
    get C1789() {
      return C1789 = dart.constList([C1790 || CT.C1790], widget_inspector._Location);
    },
    get C1788() {
      return C1788 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1789 || CT.C1789,
        [_Location_name]: null,
        [_Location_column]: 7,
        [_Location_line]: 283,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1793() {
      return C1793 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 13,
        [_Location_line]: 427,
        [_Location_file]: null
      });
    },
    get C1794() {
      return C1794 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scrollDirection",
        [_Location_column]: 13,
        [_Location_line]: 428,
        [_Location_file]: null
      });
    },
    get C1795() {
      return C1795 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "reverse",
        [_Location_column]: 13,
        [_Location_line]: 429,
        [_Location_file]: null
      });
    },
    get C1796() {
      return C1796 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 13,
        [_Location_line]: 430,
        [_Location_file]: null
      });
    },
    get C1797() {
      return C1797 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 13,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C1798() {
      return C1798 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 13,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C1799() {
      return C1799 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handle",
        [_Location_column]: 13,
        [_Location_line]: 439,
        [_Location_file]: null
      });
    },
    get C1792() {
      return C1792 = dart.constList([C1793 || CT.C1793, C1794 || CT.C1794, C1795 || CT.C1795, C1796 || CT.C1796, C1797 || CT.C1797, C1798 || CT.C1798, C1799 || CT.C1799], widget_inspector._Location);
    },
    get C1791() {
      return C1791 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1792 || CT.C1792,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 426,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1802() {
      return C1802 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 9,
        [_Location_line]: 424,
        [_Location_file]: null
      });
    },
    get C1801() {
      return C1801 = dart.constList([C1802 || CT.C1802], widget_inspector._Location);
    },
    get C1800() {
      return C1800 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1801 || CT.C1801,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 423,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1805() {
      return C1805 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "state",
        [_Location_column]: 7,
        [_Location_line]: 422,
        [_Location_file]: null
      });
    },
    get C1806() {
      return C1806 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 423,
        [_Location_file]: null
      });
    },
    get C1804() {
      return C1804 = dart.constList([C1805 || CT.C1805, C1806 || CT.C1806], widget_inspector._Location);
    },
    get C1803() {
      return C1803 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1804 || CT.C1804,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 421,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1809() {
      return C1809 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 476,
        [_Location_file]: null
      });
    },
    get C1810() {
      return C1810 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 7,
        [_Location_line]: 477,
        [_Location_file]: null
      });
    },
    get C1811() {
      return C1811 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "slivers",
        [_Location_column]: 7,
        [_Location_line]: 478,
        [_Location_file]: null
      });
    },
    get C1812() {
      return C1812 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "handle",
        [_Location_column]: 7,
        [_Location_line]: 479,
        [_Location_file]: null
      });
    },
    get C1808() {
      return C1808 = dart.constList([C1809 || CT.C1809, C1810 || CT.C1810, C1811 || CT.C1811, C1812 || CT.C1812], widget_inspector._Location);
    },
    get C1807() {
      return C1807 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1808 || CT.C1808,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 475,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart"
      });
    },
    get C1813() {
      return C1813 = dart.fn(nested_scroll_view._NestedScrollCoordinator._createIdleScrollActivity, _NestedScrollPositionToIdleScrollActivity());
    },
    get C1814() {
      return C1814 = dart.const({
        __proto__: nested_scroll_view._NestedBallisticScrollActivityMode.prototype,
        [_name$32]: "_NestedBallisticScrollActivityMode.outer",
        index: 0
      });
    },
    get C1815() {
      return C1815 = dart.const({
        __proto__: nested_scroll_view._NestedBallisticScrollActivityMode.prototype,
        [_name$32]: "_NestedBallisticScrollActivityMode.inner",
        index: 1
      });
    },
    get C1816() {
      return C1816 = dart.const({
        __proto__: nested_scroll_view._NestedBallisticScrollActivityMode.prototype,
        [_name$32]: "_NestedBallisticScrollActivityMode.independent",
        index: 2
      });
    },
    get C1817() {
      return C1817 = dart.constList([C1814 || CT.C1814, C1815 || CT.C1815, C1816 || CT.C1816], nested_scroll_view._NestedBallisticScrollActivityMode);
    },
    get C1818() {
      return C1818 = dart.const({
        __proto__: sliver.SliverGeometry.prototype,
        [SliverGeometry_cacheExtent]: 0,
        [SliverGeometry_scrollOffsetCorrection]: null,
        [SliverGeometry_hasVisualOverflow]: false,
        [SliverGeometry_visible]: false,
        [SliverGeometry_hitTestExtent]: 0,
        [SliverGeometry_maxScrollObstructionExtent]: 0,
        [SliverGeometry_maxPaintExtent]: 0,
        [SliverGeometry_layoutExtent]: 0,
        [SliverGeometry_paintExtent]: 0,
        [SliverGeometry_paintOrigin]: 0,
        [SliverGeometry_scrollExtent]: 0
      });
    },
    get C1819() {
      return C1819 = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291598643.0
      });
    },
    get C1820() {
      return C1820 = dart.const({
        __proto__: platform_view.PlatformViewHitTestBehavior.prototype,
        [_name$33]: "PlatformViewHitTestBehavior.opaque",
        index: 0
      });
    },
    get C1821() {
      return C1821 = dart.constSet(FactoryOfOneSequenceGestureRecognizer(), []);
    },
    get C1824() {
      return C1824 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 357,
        [_Location_file]: null
      });
    },
    get C1825() {
      return C1825 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureRecognizers",
        [_Location_column]: 11,
        [_Location_line]: 358,
        [_Location_file]: null
      });
    },
    get C1826() {
      return C1826 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hitTestBehavior",
        [_Location_column]: 11,
        [_Location_line]: 359,
        [_Location_file]: null
      });
    },
    get C1823() {
      return C1823 = dart.constList([C1824 || CT.C1824, C1825 || CT.C1825, C1826 || CT.C1826], widget_inspector._Location);
    },
    get C1822() {
      return C1822 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1823 || CT.C1823,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 356,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1829() {
      return C1829 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewType",
        [_Location_column]: 7,
        [_Location_line]: 353,
        [_Location_file]: null
      });
    },
    get C1830() {
      return C1830 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onCreatePlatformView",
        [_Location_column]: 7,
        [_Location_line]: 354,
        [_Location_file]: null
      });
    },
    get C1831() {
      return C1831 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "surfaceFactory",
        [_Location_column]: 7,
        [_Location_line]: 355,
        [_Location_file]: null
      });
    },
    get C1828() {
      return C1828 = dart.constList([C1829 || CT.C1829, C1830 || CT.C1830, C1831 || CT.C1831], widget_inspector._Location);
    },
    get C1827() {
      return C1827 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1828 || CT.C1828,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 352,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1834() {
      return C1834 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 435,
        [_Location_file]: null
      });
    },
    get C1835() {
      return C1835 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hitTestBehavior",
        [_Location_column]: 9,
        [_Location_line]: 436,
        [_Location_file]: null
      });
    },
    get C1836() {
      return C1836 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureRecognizers",
        [_Location_column]: 9,
        [_Location_line]: 437,
        [_Location_file]: null
      });
    },
    get C1833() {
      return C1833 = dart.constList([C1834 || CT.C1834, C1835 || CT.C1835, C1836 || CT.C1836], widget_inspector._Location);
    },
    get C1832() {
      return C1832 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1833 || CT.C1833,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 434,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1839() {
      return C1839 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 432,
        [_Location_file]: null
      });
    },
    get C1840() {
      return C1840 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 7,
        [_Location_line]: 433,
        [_Location_file]: null
      });
    },
    get C1841() {
      return C1841 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 434,
        [_Location_file]: null
      });
    },
    get C1838() {
      return C1838 = dart.constList([C1839 || CT.C1839, C1840 || CT.C1840, C1841 || CT.C1841], widget_inspector._Location);
    },
    get C1837() {
      return C1837 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1838 || CT.C1838,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 431,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1843() {
      return C1843 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 559,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1842() {
      return C1842 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C1843 || CT.C1843,
        [key$]: null,
        [child$0]: null,
        [height$]: 1 / 0,
        [width$]: 1 / 0
      });
    },
    get C1846() {
      return C1846 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 562,
        [_Location_file]: null
      });
    },
    get C1847() {
      return C1847 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "hitTestBehavior",
        [_Location_column]: 7,
        [_Location_line]: 563,
        [_Location_file]: null
      });
    },
    get C1848() {
      return C1848 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureRecognizers",
        [_Location_column]: 7,
        [_Location_line]: 564,
        [_Location_file]: null
      });
    },
    get C1845() {
      return C1845 = dart.constList([C1846 || CT.C1846, C1847 || CT.C1847, C1848 || CT.C1848], widget_inspector._Location);
    },
    get C1844() {
      return C1844 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1845 || CT.C1845,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 561,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1850() {
      return C1850 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C200 || CT.C200,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 834,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1849() {
      return C1849 = dart.const({
        __proto__: basic.SizedBox.prototype,
        [_location$]: C1850 || CT.C1850,
        [key$]: null,
        [child$0]: null,
        [height$]: 1 / 0,
        [width$]: 1 / 0
      });
    },
    get C1853() {
      return C1853 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 7,
        [_Location_line]: 838,
        [_Location_file]: null
      });
    },
    get C1854() {
      return C1854 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFocusChange",
        [_Location_column]: 7,
        [_Location_line]: 839,
        [_Location_file]: null
      });
    },
    get C1855() {
      return C1855 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 840,
        [_Location_file]: null
      });
    },
    get C1852() {
      return C1852 = dart.constList([C1853 || CT.C1853, C1854 || CT.C1854, C1855 || CT.C1855], widget_inspector._Location);
    },
    get C1851() {
      return C1851 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1852 || CT.C1852,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 837,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart"
      });
    },
    get C1856() {
      return C1856 = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000
      });
    },
    get C1859() {
      return C1859 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 11,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C1860() {
      return C1860 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 336,
        [_Location_file]: null
      });
    },
    get C1861() {
      return C1861 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C1858() {
      return C1858 = dart.constList([C1859 || CT.C1859, C1860 || CT.C1860, C1861 || CT.C1861], widget_inspector._Location);
    },
    get C1857() {
      return C1857 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1858 || CT.C1858,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 334,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C1864() {
      return C1864 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 48,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C1863() {
      return C1863 = dart.constList([C1864 || CT.C1864], widget_inspector._Location);
    },
    get C1862() {
      return C1862 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1863 || CT.C1863,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 339,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C1867() {
      return C1867 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C1866() {
      return C1866 = dart.constList([C1867 || CT.C1867], widget_inspector._Location);
    },
    get C1865() {
      return C1865 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1866 || CT.C1866,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 331,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C1870() {
      return C1870 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 36,
        [_Location_line]: 555,
        [_Location_file]: null
      });
    },
    get C1871() {
      return C1871 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notifier",
        [_Location_column]: 50,
        [_Location_line]: 555,
        [_Location_file]: null
      });
    },
    get C1869() {
      return C1869 = dart.constList([C1870 || CT.C1870, C1871 || CT.C1871], widget_inspector._Location);
    },
    get C1868() {
      return C1868 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C1869 || CT.C1869,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 555,
        [_Location_file]: "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart"
      });
    }
  });
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C2;
  var C3;
  var C1;
  var C0;
  var C6;
  var C7;
  var C5;
  var C4;
  var C10;
  var C11;
  var C9;
  var C8;
  var C14;
  var C15;
  var C13;
  var C12;
  var _location = dart.privateName(widget_inspector, "_location");
  var key$ = dart.privateName(framework, "Widget.key");
  var _location$ = dart.privateName(framework, "Widget._location");
  framework.Widget = class Widget extends diagnostics$.DiagnosticableTree {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get [_location]() {
      return this[_location$];
    }
    set [_location](value) {
      super[_location] = value;
    }
    toStringShort() {
      let type = object.objectRuntimeType(this, "Widget");
      return this.key == null ? type : dart.str(type) + "-" + dart.str(this.key);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = diagnostics$.DiagnosticsTreeStyle.dense;
    }
    _equals(other) {
      if (other == null) return false;
      return super[$_equals](other);
    }
    get hashCode() {
      return super[$hashCode];
    }
    static canUpdate(oldWidget, newWidget) {
      return dart.equals(dart.runtimeType(oldWidget), dart.runtimeType(newWidget)) && dart.equals(oldWidget.key, newWidget.key);
    }
    static _debugConcreteSubtype(widget) {
      return framework.StatefulWidget.is(widget) ? 1 : framework.StatelessWidget.is(widget) ? 2 : 0;
    }
  };
  (framework.Widget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[key$] = key;
    this[_location$] = $36creationLocationd_0dea112b090073317d4;
    framework.Widget.__proto__.new.call(this);
    ;
  }).prototype = framework.Widget.prototype;
  dart.addTypeTests(framework.Widget);
  framework.Widget[dart.implements] = () => [widget_inspector._HasCreationLocation];
  dart.setMethodSignature(framework.Widget, () => ({
    __proto__: dart.getMethods(framework.Widget.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(framework.Widget, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.Widget, () => ({
    __proto__: dart.getFields(framework.Widget.__proto__),
    key: dart.finalFieldType(key.Key),
    [_location]: dart.finalFieldType(widget_inspector._Location)
  }));
  dart.defineExtensionMethods(framework.Widget, ['_equals']);
  dart.defineExtensionAccessors(framework.Widget, ['hashCode']);
  framework.StatelessWidget = class StatelessWidget extends framework.Widget {
    createElement() {
      return new framework.StatelessElement.new(this);
    }
  };
  (framework.StatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.StatelessWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.StatelessWidget.prototype;
  dart.addTypeTests(framework.StatelessWidget);
  dart.setMethodSignature(framework.StatelessWidget, () => ({
    __proto__: dart.getMethods(framework.StatelessWidget.__proto__),
    createElement: dart.fnType(framework.StatelessElement, [])
  }));
  dart.setLibraryUri(framework.StatelessWidget, "package:flutter/src/widgets/framework.dart");
  var leading$ = dart.privateName(navigation_toolbar, "NavigationToolbar.leading");
  var middle$ = dart.privateName(navigation_toolbar, "NavigationToolbar.middle");
  var trailing$ = dart.privateName(navigation_toolbar, "NavigationToolbar.trailing");
  var centerMiddle$ = dart.privateName(navigation_toolbar, "NavigationToolbar.centerMiddle");
  var middleSpacing$ = dart.privateName(navigation_toolbar, "NavigationToolbar.middleSpacing");
  navigation_toolbar.NavigationToolbar = class NavigationToolbar extends framework.StatelessWidget {
    get leading() {
      return this[leading$];
    }
    set leading(value) {
      super.leading = value;
    }
    get middle() {
      return this[middle$];
    }
    set middle(value) {
      super.middle = value;
    }
    get trailing() {
      return this[trailing$];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get centerMiddle() {
      return this[centerMiddle$];
    }
    set centerMiddle(value) {
      super.centerMiddle = value;
    }
    get middleSpacing() {
      return this[middleSpacing$];
    }
    set middleSpacing(value) {
      super.middleSpacing = value;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart", 63, 12, "debugCheckHasDirectionality(context)");
      let textDirection = basic.Directionality.of(context);
      return new basic.CustomMultiChildLayout.new({delegate: new navigation_toolbar._ToolbarLayout.new({centerMiddle: this.centerMiddle, middleSpacing: this.middleSpacing, textDirection: textDirection}), children: (() => {
          let t0 = JSArrayOfWidget().of([]);
          if (this.leading != null) t0[$add](new basic.LayoutId.new({id: navigation_toolbar._ToolbarSlot.leading, child: this.leading, $creationLocationd_0dea112b090073317d4: C0 || CT.C0}));
          if (this.middle != null) t0[$add](new basic.LayoutId.new({id: navigation_toolbar._ToolbarSlot.middle, child: this.middle, $creationLocationd_0dea112b090073317d4: C4 || CT.C4}));
          if (this.trailing != null) t0[$add](new basic.LayoutId.new({id: navigation_toolbar._ToolbarSlot.trailing, child: this.trailing, $creationLocationd_0dea112b090073317d4: C8 || CT.C8}));
          return t0;
        })(), $creationLocationd_0dea112b090073317d4: C12 || CT.C12});
    }
  };
  (navigation_toolbar.NavigationToolbar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let middle = opts && 'middle' in opts ? opts.middle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let centerMiddle = opts && 'centerMiddle' in opts ? opts.centerMiddle : true;
    let middleSpacing = opts && 'middleSpacing' in opts ? opts.middleSpacing : 16;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[leading$] = leading;
    this[middle$] = middle;
    this[trailing$] = trailing;
    this[centerMiddle$] = centerMiddle;
    this[middleSpacing$] = middleSpacing;
    if (!(centerMiddle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart", 35, 15, "centerMiddle != null");
    if (!(middleSpacing != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart", 36, 15, "middleSpacing != null");
    navigation_toolbar.NavigationToolbar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_toolbar.NavigationToolbar.prototype;
  dart.addTypeTests(navigation_toolbar.NavigationToolbar);
  dart.setMethodSignature(navigation_toolbar.NavigationToolbar, () => ({
    __proto__: dart.getMethods(navigation_toolbar.NavigationToolbar.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_toolbar.NavigationToolbar, "package:flutter/src/widgets/navigation_toolbar.dart");
  dart.setFieldSignature(navigation_toolbar.NavigationToolbar, () => ({
    __proto__: dart.getFields(navigation_toolbar.NavigationToolbar.__proto__),
    leading: dart.finalFieldType(framework.Widget),
    middle: dart.finalFieldType(framework.Widget),
    trailing: dart.finalFieldType(framework.Widget),
    centerMiddle: dart.finalFieldType(core.bool),
    middleSpacing: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(navigation_toolbar.NavigationToolbar, {
    /*navigation_toolbar.NavigationToolbar.kMiddleSpacing*/get kMiddleSpacing() {
      return 16;
    }
  });
  var _name$ = dart.privateName(navigation_toolbar, "_name");
  var C16;
  var C17;
  var C18;
  var C19;
  navigation_toolbar._ToolbarSlot = class _ToolbarSlot extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (navigation_toolbar._ToolbarSlot.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = navigation_toolbar._ToolbarSlot.prototype;
  dart.addTypeTests(navigation_toolbar._ToolbarSlot);
  dart.setLibraryUri(navigation_toolbar._ToolbarSlot, "package:flutter/src/widgets/navigation_toolbar.dart");
  dart.setFieldSignature(navigation_toolbar._ToolbarSlot, () => ({
    __proto__: dart.getFields(navigation_toolbar._ToolbarSlot.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigation_toolbar._ToolbarSlot, ['toString']);
  navigation_toolbar._ToolbarSlot.leading = C16 || CT.C16;
  navigation_toolbar._ToolbarSlot.middle = C17 || CT.C17;
  navigation_toolbar._ToolbarSlot.trailing = C18 || CT.C18;
  navigation_toolbar._ToolbarSlot.values = C19 || CT.C19;
  var _name = dart.privateName(ui, "_name");
  var C20;
  var C21;
  navigation_toolbar._ToolbarLayout = class _ToolbarLayout extends custom_layout.MultiChildLayoutDelegate {
    performLayout(size) {
      let leadingWidth = 0.0;
      let trailingWidth = 0.0;
      if (dart.test(this.hasChild(navigation_toolbar._ToolbarSlot.leading))) {
        let constraints = new box$.BoxConstraints.new({minWidth: 0.0, maxWidth: dart.notNull(size.width) / 3.0, minHeight: size.height, maxHeight: size.height});
        leadingWidth = this.layoutChild(navigation_toolbar._ToolbarSlot.leading, constraints).width;
        let leadingX = null;
        switch (this.textDirection) {
          case C20 || CT.C20:
          {
            leadingX = dart.notNull(size.width) - dart.notNull(leadingWidth);
            break;
          }
          case C21 || CT.C21:
          {
            leadingX = 0.0;
            break;
          }
        }
        this.positionChild(navigation_toolbar._ToolbarSlot.leading, new ui.Offset.new(leadingX, 0.0));
      }
      if (dart.test(this.hasChild(navigation_toolbar._ToolbarSlot.trailing))) {
        let constraints = new box$.BoxConstraints.loose(size);
        let trailingSize = this.layoutChild(navigation_toolbar._ToolbarSlot.trailing, constraints);
        let trailingX = null;
        switch (this.textDirection) {
          case C20 || CT.C20:
          {
            trailingX = 0.0;
            break;
          }
          case C21 || CT.C21:
          {
            trailingX = dart.notNull(size.width) - dart.notNull(trailingSize.width);
            break;
          }
        }
        let trailingY = (dart.notNull(size.height) - dart.notNull(trailingSize.height)) / 2.0;
        trailingWidth = trailingSize.width;
        this.positionChild(navigation_toolbar._ToolbarSlot.trailing, new ui.Offset.new(trailingX, trailingY));
      }
      if (dart.test(this.hasChild(navigation_toolbar._ToolbarSlot.middle))) {
        let maxWidth = math.max(core.double, dart.notNull(size.width) - dart.notNull(leadingWidth) - dart.notNull(trailingWidth) - dart.notNull(this.middleSpacing) * 2.0, 0.0);
        let constraints = new box$.BoxConstraints.loose(size).copyWith({maxWidth: maxWidth});
        let middleSize = this.layoutChild(navigation_toolbar._ToolbarSlot.middle, constraints);
        let middleStartMargin = dart.notNull(leadingWidth) + dart.notNull(this.middleSpacing);
        let middleStart = middleStartMargin;
        let middleY = (dart.notNull(size.height) - dart.notNull(middleSize.height)) / 2.0;
        if (dart.test(this.centerMiddle)) {
          middleStart = (dart.notNull(size.width) - dart.notNull(middleSize.width)) / 2.0;
          if (middleStart + dart.notNull(middleSize.width) > dart.notNull(size.width) - dart.notNull(trailingWidth))
            middleStart = dart.notNull(size.width) - dart.notNull(trailingWidth) - dart.notNull(middleSize.width);
          else if (middleStart < middleStartMargin) middleStart = middleStartMargin;
        }
        let middleX = null;
        switch (this.textDirection) {
          case C20 || CT.C20:
          {
            middleX = dart.notNull(size.width) - dart.notNull(middleSize.width) - middleStart;
            break;
          }
          case C21 || CT.C21:
          {
            middleX = middleStart;
            break;
          }
        }
        this.positionChild(navigation_toolbar._ToolbarSlot.middle, new ui.Offset.new(middleX, middleY));
      }
    }
    shouldRelayout(oldDelegate) {
      navigation_toolbar._ToolbarLayout._check(oldDelegate);
      return !dart.equals(oldDelegate.centerMiddle, this.centerMiddle) || oldDelegate.middleSpacing != this.middleSpacing || !dart.equals(oldDelegate.textDirection, this.textDirection);
    }
  };
  (navigation_toolbar._ToolbarLayout.new = function(opts) {
    let centerMiddle = opts && 'centerMiddle' in opts ? opts.centerMiddle : null;
    let middleSpacing = opts && 'middleSpacing' in opts ? opts.middleSpacing : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this.centerMiddle = centerMiddle;
    this.middleSpacing = middleSpacing;
    this.textDirection = textDirection;
    if (!(middleSpacing != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart", 91, 15, "middleSpacing != null");
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigation_toolbar.dart", 92, 15, "textDirection != null");
    navigation_toolbar._ToolbarLayout.__proto__.new.call(this);
    ;
  }).prototype = navigation_toolbar._ToolbarLayout.prototype;
  dart.addTypeTests(navigation_toolbar._ToolbarLayout);
  dart.setMethodSignature(navigation_toolbar._ToolbarLayout, () => ({
    __proto__: dart.getMethods(navigation_toolbar._ToolbarLayout.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(navigation_toolbar._ToolbarLayout, "package:flutter/src/widgets/navigation_toolbar.dart");
  dart.setFieldSignature(navigation_toolbar._ToolbarLayout, () => ({
    __proto__: dart.getFields(navigation_toolbar._ToolbarLayout.__proto__),
    centerMiddle: dart.finalFieldType(core.bool),
    middleSpacing: dart.finalFieldType(core.double),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  framework.UniqueKey = class UniqueKey extends key.LocalKey {
    toString() {
      return "[#" + dart.str(diagnostics$.shortHash(this)) + "]";
    }
  };
  (framework.UniqueKey.new = function() {
    framework.UniqueKey.__proto__.new.call(this);
    ;
  }).prototype = framework.UniqueKey.prototype;
  dart.addTypeTests(framework.UniqueKey);
  dart.setLibraryUri(framework.UniqueKey, "package:flutter/src/widgets/framework.dart");
  dart.defineExtensionMethods(framework.UniqueKey, ['toString']);
  var value$ = dart.privateName(framework, "ObjectKey.value");
  framework.ObjectKey = class ObjectKey extends key.LocalKey {
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return framework.ObjectKey.is(other) && core.identical(other.value, this.value);
    }
    get hashCode() {
      return ui.hashValues(this[$runtimeType], core.identityHashCode(this.value));
    }
    toString() {
      if (dart.equals(this[$runtimeType], dart.wrapType(framework.ObjectKey))) return "[" + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
      return "[" + dart.str(object.objectRuntimeType(this, "ObjectKey")) + " " + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
    }
  };
  (framework.ObjectKey.new = function(value) {
    this[value$] = value;
    framework.ObjectKey.__proto__.new.call(this);
    ;
  }).prototype = framework.ObjectKey.prototype;
  dart.addTypeTests(framework.ObjectKey);
  dart.setMethodSignature(framework.ObjectKey, () => ({
    __proto__: dart.getMethods(framework.ObjectKey.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(framework.ObjectKey, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.ObjectKey, () => ({
    __proto__: dart.getFields(framework.ObjectKey.__proto__),
    value: dart.finalFieldType(core.Object)
  }));
  dart.defineExtensionMethods(framework.ObjectKey, ['_equals', 'toString']);
  dart.defineExtensionAccessors(framework.ObjectKey, ['hashCode']);
  var _register = dart.privateName(framework, "_register");
  var _unregister = dart.privateName(framework, "_unregister");
  var _debugReserveFor = dart.privateName(framework, "_debugReserveFor");
  var _parent = dart.privateName(framework, "_parent");
  var _debugLifecycleState = dart.privateName(framework, "_debugLifecycleState");
  var _currentElement = dart.privateName(framework, "_currentElement");
  const _is_GlobalKey_default = Symbol('_is_GlobalKey_default');
  framework.GlobalKey$ = dart.generic(T => {
    class GlobalKey extends key.Key {
      static new(opts) {
        let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
        return new (framework.LabeledGlobalKey$(T)).new(debugLabel);
      }
      static _debugRemoveReservationFor(parent, child) {
        if (!dart.test(dart.fn(() => {
          let t1;
          if (!(parent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 143, 14, "parent != null");
          if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 144, 14, "child != null");
          t1 = framework.GlobalKey._debugReservations[$_get](parent);
          t1 == null ? null : t1[$remove](child);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 142, 12, "() {\r\n      assert(parent != null);\r\n      assert(child != null);\r\n      _debugReservations[parent]?.remove(child);\r\n      return true;\r\n    }()");
      }
      [_register](element) {
        if (!dart.test(dart.fn(() => {
          if (dart.test(framework.GlobalKey._registry[$containsKey](this))) {
            if (!(element.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 153, 16, "element.widget != null");
            if (!(framework.GlobalKey._registry[$_get](this).widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 154, 16, "_registry[this].widget != null");
            if (!!dart.equals(dart.runtimeType(element.widget), dart.runtimeType(framework.GlobalKey._registry[$_get](this).widget))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 155, 16, "element.widget.runtimeType != _registry[this].widget.runtimeType");
            framework.GlobalKey._debugIllFatedElements.add(framework.GlobalKey._registry[$_get](this));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 151, 12, "() {\r\n      if (_registry.containsKey(this)) {\r\n        assert(element.widget != null);\r\n        assert(_registry[this].widget != null);\r\n        assert(element.widget.runtimeType != _registry[this].widget.runtimeType);\r\n        _debugIllFatedElements.add(_registry[this]);\r\n      }\r\n      return true;\r\n    }()");
        framework.GlobalKey._registry[$_set](this, element);
      }
      [_unregister](element) {
        if (!dart.test(dart.fn(() => {
          if (dart.test(framework.GlobalKey._registry[$containsKey](this)) && !dart.equals(framework.GlobalKey._registry[$_get](this), element)) {
            if (!(element.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 166, 16, "element.widget != null");
            if (!(framework.GlobalKey._registry[$_get](this).widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 167, 16, "_registry[this].widget != null");
            if (!!dart.equals(dart.runtimeType(element.widget), dart.runtimeType(framework.GlobalKey._registry[$_get](this).widget))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 168, 16, "element.widget.runtimeType != _registry[this].widget.runtimeType");
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 164, 12, "() {\r\n      if (_registry.containsKey(this) && _registry[this] != element) {\r\n        assert(element.widget != null);\r\n        assert(_registry[this].widget != null);\r\n        assert(element.widget.runtimeType != _registry[this].widget.runtimeType);\r\n      }\r\n      return true;\r\n    }()");
        if (dart.equals(framework.GlobalKey._registry[$_get](this), element)) framework.GlobalKey._registry[$remove](this);
      }
      [_debugReserveFor](parent, child) {
        if (!dart.test(dart.fn(() => {
          let t2, t1;
          if (!(parent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 178, 14, "parent != null");
          if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 179, 14, "child != null");
          t1 = framework.GlobalKey._debugReservations;
          t2 = parent;
          t1[$_get](t2) == null ? t1[$_set](t2, new (LinkedMapOfElement$GlobalKeyOfStateOfStatefulWidget()).new()) : null;
          framework.GlobalKey._debugReservations[$_get](parent)[$_set](child, this);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 177, 12, "() {\r\n      assert(parent != null);\r\n      assert(child != null);\r\n      _debugReservations[parent] ??= <Element, GlobalKey>{};\r\n      _debugReservations[parent][child] = this;\r\n      return true;\r\n    }()");
      }
      static _debugVerifyGlobalKeyReservation() {
        if (!dart.test(dart.fn(() => {
          let keyToParent = new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element()).new();
          framework.GlobalKey._debugReservations[$forEach](dart.fn((parent, chidToKey) => {
            let t1;
            if (dart.equals((t1 = parent.renderObject, t1 == null ? null : t1.attached), false)) return;
            chidToKey[$forEach](dart.fn((child, key) => {
              if (child[_parent] == null) return;
              if (dart.test(keyToParent[$containsKey](key)) && !dart.equals(keyToParent[$_get](key), parent)) {
                let older = keyToParent[$_get](key);
                let newer = parent;
                let error = null;
                if (dart.toString(older) != dart.toString(newer)) {
                  error = new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."), new assertions.ErrorDescription.new("The key " + dart.str(key) + " was used by multiple widgets. The parents of those widgets were:\n" + "- " + dart.str(dart.toString(older)) + "\n" + "- " + dart.str(dart.toString(newer)) + "\n" + "A GlobalKey can only be specified on one widget at a time in the widget tree.")]));
                } else {
                  error = new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."), new assertions.ErrorDescription.new("The key " + dart.str(key) + " was used by multiple widgets. The parents of those widgets were " + "different widgets that both had the following description:\n" + "  " + dart.str(dart.toString(parent)) + "\n" + "A GlobalKey can only be specified on one widget at a time in the widget tree.")]));
                }
                if (!dart.equals(child[_parent], older)) {
                  older.visitChildren(dart.fn(currentChild => {
                    if (dart.equals(currentChild, child)) older.forgetChild(child);
                  }, ElementToNull()));
                }
                if (!dart.equals(child[_parent], newer)) {
                  newer.visitChildren(dart.fn(currentChild => {
                    if (dart.equals(currentChild, child)) newer.forgetChild(child);
                  }, ElementToNull()));
                }
                dart.throw(error);
              } else {
                keyToParent[$_set](key, parent);
              }
            }, ElementAndGlobalKeyOfStateOfStatefulWidgetToNull()));
          }, ElementAndMapOfElement$GlobalKeyOfStateOfStatefulWidgetToNull()));
          framework.GlobalKey._debugReservations[$clear]();
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 187, 12, "() {\r\n      final Map<GlobalKey, Element> keyToParent = <GlobalKey, Element>{};\r\n      _debugReservations.forEach((Element parent, Map<Element, GlobalKey> chidToKey) {\r\n        // We ignore parent that are detached.\r\n        if (parent.renderObject?.attached == false)\r\n          return;\r\n        chidToKey.forEach((Element child, GlobalKey key) {\r\n          // If parent = null, the node is deactivated by its parent and is\r\n          // not re-attached to other part of the tree. We should ignore this\r\n          // node.\r\n          if (child._parent == null)\r\n            return;\r\n          // It is possible the same key registers to the same parent twice\r\n          // with different children. That is illegal, but it is not in the\r\n          // scope of this check. Such error will be detected in\r\n          // _debugVerifyIllFatedPopulation or\r\n          // _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans.\r\n          if (keyToParent.containsKey(key) && keyToParent[key] != parent) {\r\n            // We have duplication reservations for the same global key.\r\n            final Element older = keyToParent[key];\r\n            final Element newer = parent;\r\n            FlutterError error;\r\n            if (older.toString() != newer.toString()) {\r\n              error = FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Multiple widgets used the same GlobalKey.'),\r\n                ErrorDescription(\r\n                  'The key $key was used by multiple widgets. The parents of those widgets were:\\n'\r\n                    '- ${older.toString()}\\n'\r\n                    '- ${newer.toString()}\\n'\r\n                    'A GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            } else {\r\n              error = FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Multiple widgets used the same GlobalKey.'),\r\n                ErrorDescription(\r\n                  'The key $key was used by multiple widgets. The parents of those widgets were '\r\n                    'different widgets that both had the following description:\\n'\r\n                    '  ${parent.toString()}\\n'\r\n                    'A GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            }\r\n            // Fix the tree by removing the duplicated child from one of its\r\n            // parents to resolve the duplicated key issue. This allows us to\r\n            // tear down the tree during testing without producing additional\r\n            // misleading exceptions.\r\n            if (child._parent != older) {\r\n              older.visitChildren((Element currentChild) {\r\n                if (currentChild == child)\r\n                  older.forgetChild(child);\r\n              });\r\n            }\r\n            if (child._parent != newer) {\r\n              newer.visitChildren((Element currentChild) {\r\n                if (currentChild == child)\r\n                  newer.forgetChild(child);\r\n              });\r\n            }\r\n            throw error;\r\n          } else {\r\n            keyToParent[key] = parent;\r\n          }\r\n        });\r\n      });\r\n      _debugReservations.clear();\r\n      return true;\r\n    }()");
      }
      static _debugVerifyIllFatedPopulation() {
        if (!dart.test(dart.fn(() => {
          let duplicates = null;
          for (let element of framework.GlobalKey._debugIllFatedElements) {
            if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.defunct)) {
              if (!(element != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 262, 18, "element != null");
              if (!(element.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 263, 18, "element.widget != null");
              if (!(element.widget.key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 264, 18, "element.widget.key != null");
              let key = GlobalKeyOfStateOfStatefulWidget().as(element.widget.key);
              if (!dart.test(framework.GlobalKey._registry[$containsKey](key))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 266, 18, "_registry.containsKey(key)");
              duplicates == null ? duplicates = new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$SetOfElement()).new() : null;
              let elements = duplicates[$putIfAbsent](key, dart.fn(() => new (_HashSetOfElement()).new(), VoidToLinkedHashSetOfElement()));
              elements.add(element);
              elements.add(framework.GlobalKey._registry[$_get](key));
            }
          }
          framework.GlobalKey._debugIllFatedElements.clear();
          if (duplicates != null) {
            let information = JSArrayOfDiagnosticsNode().of([]);
            information[$add](new assertions.ErrorSummary.new("Multiple widgets used the same GlobalKey."));
            for (let key of duplicates[$keys]) {
              let elements = duplicates[$_get](key);
              information[$add](framework.Element.describeElements("The key " + dart.str(key) + " was used by " + dart.str(elements[$length]) + " widgets", elements));
            }
            information[$add](new assertions.ErrorDescription.new("A GlobalKey can only be specified on one widget at a time in the widget tree."));
            dart.throw(new assertions.FlutterError.fromParts(information));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 258, 12, "() {\r\n      Map<GlobalKey, Set<Element>> duplicates;\r\n      for (final Element element in _debugIllFatedElements) {\r\n        if (element._debugLifecycleState != _ElementLifecycle.defunct) {\r\n          assert(element != null);\r\n          assert(element.widget != null);\r\n          assert(element.widget.key != null);\r\n          final GlobalKey key = element.widget.key as GlobalKey;\r\n          assert(_registry.containsKey(key));\r\n          duplicates ??= <GlobalKey, Set<Element>>{};\r\n          // Uses ordered set to produce consistent error message.\r\n          final Set<Element> elements = duplicates.putIfAbsent(key, () => LinkedHashSet<Element>());\r\n          elements.add(element);\r\n          elements.add(_registry[key]);\r\n        }\r\n      }\r\n      _debugIllFatedElements.clear();\r\n      if (duplicates != null) {\r\n        final List<DiagnosticsNode> information = <DiagnosticsNode>[];\r\n        information.add(ErrorSummary('Multiple widgets used the same GlobalKey.'));\r\n        for (final GlobalKey key in duplicates.keys) {\r\n          final Set<Element> elements = duplicates[key];\r\n          // TODO(jacobr): this will omit the '- ' before each widget name and\r\n          // use the more standard whitespace style instead. Please let me know\r\n          // if the '- ' style is a feature we want to maintain and we can add\r\n          // another tree style that supports it. I also see '* ' in some places\r\n          // so it would be nice to unify and normalize.\r\n          information.add(Element.describeElements('The key $key was used by ${elements.length} widgets', elements));\r\n        }\r\n        information.add(ErrorDescription('A GlobalKey can only be specified on one widget at a time in the widget tree.'));\r\n        throw FlutterError.fromParts(information);\r\n      }\r\n      return true;\r\n    }()");
      }
      get [_currentElement]() {
        return framework.GlobalKey._registry[$_get](this);
      }
      get currentContext() {
        return this[_currentElement];
      }
      get currentWidget() {
        let t1;
        t1 = this[_currentElement];
        return t1 == null ? null : t1.widget;
      }
      get currentState() {
        let element = this[_currentElement];
        if (framework.StatefulElement.is(element)) {
          let statefulElement = element;
          let state = statefulElement.state;
          if (T.is(state)) return state;
        }
        return null;
      }
    }
    (GlobalKey.constructor = function() {
      GlobalKey.__proto__.empty.call(this);
      ;
    }).prototype = GlobalKey.prototype;
    dart.addTypeTests(GlobalKey);
    GlobalKey.prototype[_is_GlobalKey_default] = true;
    dart.setMethodSignature(GlobalKey, () => ({
      __proto__: dart.getMethods(GlobalKey.__proto__),
      [_register]: dart.fnType(dart.void, [framework.Element]),
      [_unregister]: dart.fnType(dart.void, [framework.Element]),
      [_debugReserveFor]: dart.fnType(dart.void, [framework.Element, framework.Element])
    }));
    dart.setGetterSignature(GlobalKey, () => ({
      __proto__: dart.getGetters(GlobalKey.__proto__),
      [_currentElement]: framework.Element,
      currentContext: framework.BuildContext,
      currentWidget: framework.Widget,
      currentState: T
    }));
    dart.setLibraryUri(GlobalKey, "package:flutter/src/widgets/framework.dart");
    return GlobalKey;
  });
  framework.GlobalKey = framework.GlobalKey$();
  dart.defineLazy(framework.GlobalKey, {
    /*framework.GlobalKey._registry*/get _registry() {
      return new (LinkedMapOfGlobalKeyOfStateOfStatefulWidget$Element()).new();
    },
    /*framework.GlobalKey._debugIllFatedElements*/get _debugIllFatedElements() {
      return new (_HashSetOfElement()).new();
    },
    /*framework.GlobalKey._debugReservations*/get _debugReservations() {
      return new (LinkedMapOfElement$MapOfElement$GlobalKeyOfStateOfStatefulWidget()).new();
    }
  });
  dart.addTypeTests(framework.GlobalKey, _is_GlobalKey_default);
  var _debugLabel$ = dart.privateName(framework, "_debugLabel");
  const _is_LabeledGlobalKey_default = Symbol('_is_LabeledGlobalKey_default');
  framework.LabeledGlobalKey$ = dart.generic(T => {
    class LabeledGlobalKey extends framework.GlobalKey$(T) {
      toString() {
        let label = this[_debugLabel$] != null ? " " + dart.str(this[_debugLabel$]) : "";
        if (dart.equals(this[$runtimeType], dart.wrapType(LabeledGlobalKeyOfStateOfStatefulWidget()))) return "[GlobalKey#" + dart.str(diagnostics$.shortHash(this)) + label + "]";
        return "[" + dart.str(diagnostics$.describeIdentity(this)) + label + "]";
      }
    }
    (LabeledGlobalKey.new = function(_debugLabel) {
      this[_debugLabel$] = _debugLabel;
      LabeledGlobalKey.__proto__.constructor.call(this);
      ;
    }).prototype = LabeledGlobalKey.prototype;
    dart.addTypeTests(LabeledGlobalKey);
    LabeledGlobalKey.prototype[_is_LabeledGlobalKey_default] = true;
    dart.setLibraryUri(LabeledGlobalKey, "package:flutter/src/widgets/framework.dart");
    dart.setFieldSignature(LabeledGlobalKey, () => ({
      __proto__: dart.getFields(LabeledGlobalKey.__proto__),
      [_debugLabel$]: dart.finalFieldType(core.String)
    }));
    dart.defineExtensionMethods(LabeledGlobalKey, ['toString']);
    return LabeledGlobalKey;
  });
  framework.LabeledGlobalKey = framework.LabeledGlobalKey$();
  dart.addTypeTests(framework.LabeledGlobalKey, _is_LabeledGlobalKey_default);
  const _is_GlobalObjectKey_default = Symbol('_is_GlobalObjectKey_default');
  var value$0 = dart.privateName(framework, "GlobalObjectKey.value");
  framework.GlobalObjectKey$ = dart.generic(T => {
    var GlobalObjectKeyOfT = () => (GlobalObjectKeyOfT = dart.constFn(framework.GlobalObjectKey$(T)))();
    class GlobalObjectKey extends framework.GlobalKey$(T) {
      get value() {
        return this[value$0];
      }
      set value(value) {
        super.value = value;
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
        return GlobalObjectKeyOfT().is(other) && core.identical(other.value, this.value);
      }
      get hashCode() {
        return core.identityHashCode(this.value);
      }
      toString() {
        let selfType = object.objectRuntimeType(this, "GlobalObjectKey");
        if (selfType[$endsWith]("<State<StatefulWidget>>")) {
          selfType = selfType[$substring](0, selfType.length - "<State<StatefulWidget>>".length);
        }
        return "[" + dart.str(selfType) + " " + dart.str(diagnostics$.describeIdentity(this.value)) + "]";
      }
    }
    (GlobalObjectKey.new = function(value) {
      this[value$0] = value;
      GlobalObjectKey.__proto__.constructor.call(this);
      ;
    }).prototype = GlobalObjectKey.prototype;
    dart.addTypeTests(GlobalObjectKey);
    GlobalObjectKey.prototype[_is_GlobalObjectKey_default] = true;
    dart.setMethodSignature(GlobalObjectKey, () => ({
      __proto__: dart.getMethods(GlobalObjectKey.__proto__),
      _equals: dart.fnType(core.bool, [core.Object]),
      [$_equals]: dart.fnType(core.bool, [core.Object])
    }));
    dart.setLibraryUri(GlobalObjectKey, "package:flutter/src/widgets/framework.dart");
    dart.setFieldSignature(GlobalObjectKey, () => ({
      __proto__: dart.getFields(GlobalObjectKey.__proto__),
      value: dart.finalFieldType(core.Object)
    }));
    dart.defineExtensionMethods(GlobalObjectKey, ['_equals', 'toString']);
    dart.defineExtensionAccessors(GlobalObjectKey, ['hashCode']);
    return GlobalObjectKey;
  });
  framework.GlobalObjectKey = framework.GlobalObjectKey$();
  dart.addTypeTests(framework.GlobalObjectKey, _is_GlobalObjectKey_default);
  const _is_TypeMatcher_default = Symbol('_is_TypeMatcher_default');
  framework.TypeMatcher$ = dart.generic(T => {
    class TypeMatcher extends core.Object {
      check(object) {
        return T.is(object);
      }
    }
    (TypeMatcher.new = function() {
      ;
    }).prototype = TypeMatcher.prototype;
    dart.addTypeTests(TypeMatcher);
    TypeMatcher.prototype[_is_TypeMatcher_default] = true;
    dart.setMethodSignature(TypeMatcher, () => ({
      __proto__: dart.getMethods(TypeMatcher.__proto__),
      check: dart.fnType(core.bool, [dart.dynamic])
    }));
    dart.setLibraryUri(TypeMatcher, "package:flutter/src/widgets/framework.dart");
    return TypeMatcher;
  });
  framework.TypeMatcher = framework.TypeMatcher$();
  dart.addTypeTests(framework.TypeMatcher, _is_TypeMatcher_default);
  framework.StatefulWidget = class StatefulWidget extends framework.Widget {
    createElement() {
      return new framework.StatefulElement.new(this);
    }
  };
  (framework.StatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.StatefulWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.StatefulWidget.prototype;
  dart.addTypeTests(framework.StatefulWidget);
  dart.setMethodSignature(framework.StatefulWidget, () => ({
    __proto__: dart.getMethods(framework.StatefulWidget.__proto__),
    createElement: dart.fnType(framework.StatefulElement, [])
  }));
  dart.setLibraryUri(framework.StatefulWidget, "package:flutter/src/widgets/framework.dart");
  var _name$0 = dart.privateName(framework, "_name");
  var C22;
  var C23;
  var C24;
  var C25;
  var C26;
  framework._StateLifecycle = class _StateLifecycle extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (framework._StateLifecycle.new = function(index, _name) {
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = framework._StateLifecycle.prototype;
  dart.addTypeTests(framework._StateLifecycle);
  dart.setLibraryUri(framework._StateLifecycle, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework._StateLifecycle, () => ({
    __proto__: dart.getFields(framework._StateLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$0]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(framework._StateLifecycle, ['toString']);
  framework._StateLifecycle.created = C22 || CT.C22;
  framework._StateLifecycle.initialized = C23 || CT.C23;
  framework._StateLifecycle.ready = C24 || CT.C24;
  framework._StateLifecycle.defunct = C25 || CT.C25;
  framework._StateLifecycle.values = C26 || CT.C26;
  var _element = dart.privateName(framework, "_element");
  var _widget = dart.privateName(framework, "_widget");
  var _debugTypesAreRight = dart.privateName(framework, "_debugTypesAreRight");
  const _is_State_default = Symbol('_is_State_default');
  var _widget$ = dart.privateName(framework, "State._widget");
  framework.State$ = dart.generic(T => {
    var ObjectFlagPropertyOfT = () => (ObjectFlagPropertyOfT = dart.constFn(diagnostics$.ObjectFlagProperty$(T)))();
    class State extends diagnostics$.Diagnosticable {
      get [_widget]() {
        return this[_widget$];
      }
      set [_widget](value) {
        this[_widget$] = T._check(value);
      }
      get widget() {
        return this[_widget];
      }
      [_debugTypesAreRight](widget) {
        return T.is(widget);
      }
      get context() {
        return this[_element];
      }
      get mounted() {
        return this[_element] != null;
      }
      initState() {
        if (!dart.equals(this[_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1110, 12, "_debugLifecycleState == _StateLifecycle.created");
      }
      didUpdateWidget(oldWidget) {
        T._check(oldWidget);
      }
      reassemble() {
      }
      setState(fn) {
        if (!(fn != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1194, 12, "fn != null");
        if (!dart.test(dart.fn(() => {
          if (dart.equals(this[_debugLifecycleState], framework._StateLifecycle.defunct)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() called after dispose(): " + dart.str(this)), new assertions.ErrorDescription.new("This error happens if you call setState() on a State object for a widget that " + "no longer appears in the widget tree (e.g., whose parent widget no longer " + "includes the widget in its build). This error can occur when code calls " + "setState() from a timer or an animation callback."), new assertions.ErrorHint.new("The preferred solution is " + "to cancel the timer or stop listening to the animation in the dispose() " + "callback. Another solution is to check the \"mounted\" property of this " + "object before calling setState() to ensure the object is still in the " + "tree."), new assertions.ErrorHint.new("This error might indicate a memory leak if setState() is being called " + "because another object is retaining a reference to this State object " + "after it has been removed from the tree. To avoid memory leaks, " + "consider breaking the reference to this object during dispose().")])));
          }
          if (dart.equals(this[_debugLifecycleState], framework._StateLifecycle.created) && !dart.test(this.mounted)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() called in constructor: " + dart.str(this)), new assertions.ErrorHint.new("This happens when you call setState() on a State object for a widget that " + "hasn't been inserted into the widget tree yet. It is not necessary to call " + "setState() in the constructor, since the state is already assumed to be dirty " + "when it is initially created.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1195, 12, "() {\r\n      if (_debugLifecycleState == _StateLifecycle.defunct) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() called after dispose(): $this'),\r\n          ErrorDescription(\r\n            'This error happens if you call setState() on a State object for a widget that '\r\n            'no longer appears in the widget tree (e.g., whose parent widget no longer '\r\n            'includes the widget in its build). This error can occur when code calls '\r\n            'setState() from a timer or an animation callback.'\r\n          ),\r\n          ErrorHint(\r\n            'The preferred solution is '\r\n            'to cancel the timer or stop listening to the animation in the dispose() '\r\n            'callback. Another solution is to check the \"mounted\" property of this '\r\n            'object before calling setState() to ensure the object is still in the '\r\n            'tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This error might indicate a memory leak if setState() is being called '\r\n            'because another object is retaining a reference to this State object '\r\n            'after it has been removed from the tree. To avoid memory leaks, '\r\n            'consider breaking the reference to this object during dispose().'\r\n          ),\r\n        ]);\r\n      }\r\n      if (_debugLifecycleState == _StateLifecycle.created && !mounted) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() called in constructor: $this'),\r\n          ErrorHint(\r\n            'This happens when you call setState() on a State object for a widget that '\r\n            'hasn\\'t been inserted into the widget tree yet. It is not necessary to call '\r\n            'setState() in the constructor, since the state is already assumed to be dirty '\r\n            'when it is initially created.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
        let result = fn();
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(result)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() callback argument returned a Future."), new assertions.ErrorDescription.new("The setState() method on " + dart.str(this) + " was called with a closure or method that " + "returned a Future. Maybe it is marked as \"async\"."), new assertions.ErrorHint.new("Instead of performing asynchronous work inside a call to setState(), first " + "execute the work (without updating the widget state), and then synchronously " + "update the state inside a call to setState().")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1234, 12, "() {\r\n      if (result is Future) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() callback argument returned a Future.'),\r\n          ErrorDescription(\r\n            'The setState() method on $this was called with a closure or method that '\r\n            'returned a Future. Maybe it is marked as \"async\".'\r\n          ),\r\n          ErrorHint(\r\n            'Instead of performing asynchronous work inside a call to setState(), first '\r\n            'execute the work (without updating the widget state), and then synchronously '\r\n           'update the state inside a call to setState().'\r\n          ),\r\n        ]);\r\n      }\r\n      // We ignore other types of return values so that you can do things like:\r\n      //   setState(() => x = 3);\r\n      return true;\r\n    }()");
        this[_element].markNeedsBuild();
      }
      deactivate() {
      }
      dispose() {
        if (!dart.equals(this[_debugLifecycleState], framework._StateLifecycle.ready)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1306, 12, "_debugLifecycleState == _StateLifecycle.ready");
        if (!dart.test(dart.fn(() => {
          this[_debugLifecycleState] = framework._StateLifecycle.defunct;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1307, 12, "() {\r\n      _debugLifecycleState = _StateLifecycle.defunct;\r\n      return true;\r\n    }()");
      }
      didChangeDependencies() {
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (!dart.test(dart.fn(() => {
          properties.add(new (EnumPropertyOf_StateLifecycle()).new("lifecycle state", this[_debugLifecycleState], {defaultValue: framework._StateLifecycle.ready}));
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1436, 12, "() {\r\n      properties.add(EnumProperty<_StateLifecycle>('lifecycle state', _debugLifecycleState, defaultValue: _StateLifecycle.ready));\r\n      return true;\r\n    }()");
        properties.add(new (ObjectFlagPropertyOfT()).new("_widget", this[_widget], {ifNull: "no widget"}));
        properties.add(new (ObjectFlagPropertyOfStatefulElement()).new("_element", this[_element], {ifNull: "not mounted"}));
      }
    }
    (State.new = function() {
      this[_widget$] = null;
      this[_debugLifecycleState] = framework._StateLifecycle.created;
      this[_element] = null;
      State.__proto__.new.call(this);
      ;
    }).prototype = State.prototype;
    dart.addTypeTests(State);
    State.prototype[_is_State_default] = true;
    dart.setMethodSignature(State, () => ({
      __proto__: dart.getMethods(State.__proto__),
      [_debugTypesAreRight]: dart.fnType(core.bool, [framework.Widget]),
      initState: dart.fnType(dart.void, []),
      didUpdateWidget: dart.fnType(dart.void, [core.Object]),
      reassemble: dart.fnType(dart.void, []),
      setState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      deactivate: dart.fnType(dart.void, []),
      dispose: dart.fnType(dart.void, []),
      didChangeDependencies: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(State, () => ({
      __proto__: dart.getGetters(State.__proto__),
      widget: T,
      context: framework.BuildContext,
      mounted: core.bool
    }));
    dart.setLibraryUri(State, "package:flutter/src/widgets/framework.dart");
    dart.setFieldSignature(State, () => ({
      __proto__: dart.getFields(State.__proto__),
      [_widget]: dart.fieldType(T),
      [_debugLifecycleState]: dart.fieldType(framework._StateLifecycle),
      [_element]: dart.fieldType(framework.StatefulElement)
    }));
    return State;
  });
  framework.State = framework.State$();
  dart.addTypeTests(framework.State, _is_State_default);
  var child$ = dart.privateName(framework, "ProxyWidget.child");
  framework.ProxyWidget = class ProxyWidget extends framework.Widget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
  };
  (framework.ProxyWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    framework.ProxyWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ProxyWidget.prototype;
  dart.addTypeTests(framework.ProxyWidget);
  dart.setLibraryUri(framework.ProxyWidget, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.ProxyWidget, () => ({
    __proto__: dart.getFields(framework.ProxyWidget.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _debugDescribeIncorrectParentDataType = dart.privateName(framework, "_debugDescribeIncorrectParentDataType");
  const _is_ParentDataWidget_default = Symbol('_is_ParentDataWidget_default');
  framework.ParentDataWidget$ = dart.generic(T => {
    var ParentDataElementOfT = () => (ParentDataElementOfT = dart.constFn(framework.ParentDataElement$(T)))();
    class ParentDataWidget extends framework.ProxyWidget {
      createElement() {
        return new (ParentDataElementOfT()).new(this);
      }
      debugIsValidRenderObject(renderObject) {
        if (!!dart.wrapType(T)[$_equals](dart.wrapType(dart.dynamic))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1549, 12, "T != dynamic");
        if (!!dart.wrapType(T)[$_equals](dart.wrapType(object$.ParentData))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1550, 12, "T != ParentData");
        return T.is(renderObject.parentData);
      }
      [_debugDescribeIncorrectParentDataType](opts) {
        let parentData = opts && 'parentData' in opts ? opts.parentData : null;
        let parentDataCreator = opts && 'parentDataCreator' in opts ? opts.parentDataCreator : null;
        let ownershipChain = opts && 'ownershipChain' in opts ? opts.ownershipChain : null;
        return new (SyncIterableOfDiagnosticsNode()).new((function* _debugDescribeIncorrectParentDataType() {
          if (!!dart.wrapType(T)[$_equals](dart.wrapType(dart.dynamic))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1566, 12, "T != dynamic");
          if (!!dart.wrapType(T)[$_equals](dart.wrapType(object$.ParentData))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1567, 12, "T != ParentData");
          if (!(this.debugTypicalAncestorWidgetClass != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1568, 12, "debugTypicalAncestorWidgetClass != null");
          let description = "The ParentDataWidget " + dart.str(this) + " wants to apply ParentData of type " + dart.str(dart.wrapType(T)) + " to a RenderObject";
          if (parentData == null) {
            yield new assertions.ErrorDescription.new(description + ", which has not been set up to receive any ParentData.");
          } else {
            yield new assertions.ErrorDescription.new(description + ", which has been set up to accept ParentData of incompatible type " + dart.str(dart.runtimeType(parentData)) + ".");
          }
          yield new assertions.ErrorHint.new("Usually, this means that the " + dart.str(this[$runtimeType]) + " widget has the wrong ancestor RenderObjectWidget. " + "Typically, " + dart.str(this[$runtimeType]) + " widgets are placed directly inside " + dart.str(this.debugTypicalAncestorWidgetClass) + " widgets.");
          if (parentDataCreator != null) {
            yield new assertions.ErrorHint.new("The offending " + dart.str(this[$runtimeType]) + " is currently placed inside a " + dart.str(dart.runtimeType(parentDataCreator)) + " widget.");
          }
          if (ownershipChain != null) {
            yield new assertions.ErrorDescription.new("The ownership chain for the RenderObject that received the incompatible parent data was:\n  " + dart.str(ownershipChain));
          }
        }).bind(this));
      }
      debugCanApplyOutOfTurn() {
        return false;
      }
    }
    (ParentDataWidget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      ParentDataWidget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ParentDataWidget.prototype;
    dart.addTypeTests(ParentDataWidget);
    ParentDataWidget.prototype[_is_ParentDataWidget_default] = true;
    dart.setMethodSignature(ParentDataWidget, () => ({
      __proto__: dart.getMethods(ParentDataWidget.__proto__),
      createElement: dart.fnType(framework.ParentDataElement$(T), []),
      debugIsValidRenderObject: dart.fnType(core.bool, [object$.RenderObject]),
      [_debugDescribeIncorrectParentDataType]: dart.fnType(core.Iterable$(diagnostics$.DiagnosticsNode), [], {ownershipChain: diagnostics$.DiagnosticsNode, parentData: object$.ParentData, parentDataCreator: framework.RenderObjectWidget}, {}),
      debugCanApplyOutOfTurn: dart.fnType(core.bool, [])
    }));
    dart.setLibraryUri(ParentDataWidget, "package:flutter/src/widgets/framework.dart");
    return ParentDataWidget;
  });
  framework.ParentDataWidget = framework.ParentDataWidget$();
  dart.addTypeTests(framework.ParentDataWidget, _is_ParentDataWidget_default);
  framework.InheritedWidget = class InheritedWidget extends framework.ProxyWidget {
    createElement() {
      return new framework.InheritedElement.new(this);
    }
  };
  (framework.InheritedWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.InheritedWidget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.InheritedWidget.prototype;
  dart.addTypeTests(framework.InheritedWidget);
  dart.setMethodSignature(framework.InheritedWidget, () => ({
    __proto__: dart.getMethods(framework.InheritedWidget.__proto__),
    createElement: dart.fnType(framework.InheritedElement, [])
  }));
  dart.setLibraryUri(framework.InheritedWidget, "package:flutter/src/widgets/framework.dart");
  framework.RenderObjectWidget = class RenderObjectWidget extends framework.Widget {
    updateRenderObject(context, renderObject) {
      object$.RenderObject._check(renderObject);
    }
    didUnmountRenderObject(renderObject) {
      object$.RenderObject._check(renderObject);
    }
  };
  (framework.RenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.RenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.RenderObjectWidget.prototype;
  dart.addTypeTests(framework.RenderObjectWidget);
  dart.setMethodSignature(framework.RenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.RenderObjectWidget.__proto__),
    updateRenderObject: dart.fnType(dart.void, [framework.BuildContext, core.Object]),
    didUnmountRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setLibraryUri(framework.RenderObjectWidget, "package:flutter/src/widgets/framework.dart");
  framework.LeafRenderObjectWidget = class LeafRenderObjectWidget extends framework.RenderObjectWidget {
    createElement() {
      return new framework.LeafRenderObjectElement.new(this);
    }
  };
  (framework.LeafRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    framework.LeafRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.LeafRenderObjectWidget.prototype;
  dart.addTypeTests(framework.LeafRenderObjectWidget);
  dart.setMethodSignature(framework.LeafRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.LeafRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.LeafRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.LeafRenderObjectWidget, "package:flutter/src/widgets/framework.dart");
  var child$0 = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  framework.SingleChildRenderObjectWidget = class SingleChildRenderObjectWidget extends framework.RenderObjectWidget {
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    createElement() {
      return new framework.SingleChildRenderObjectElement.new(this);
    }
  };
  (framework.SingleChildRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$0] = child;
    framework.SingleChildRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.SingleChildRenderObjectWidget.prototype;
  dart.addTypeTests(framework.SingleChildRenderObjectWidget);
  dart.setMethodSignature(framework.SingleChildRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.SingleChildRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.SingleChildRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.SingleChildRenderObjectWidget, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.SingleChildRenderObjectWidget, () => ({
    __proto__: dart.getFields(framework.SingleChildRenderObjectWidget.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C27;
  var children$ = dart.privateName(framework, "MultiChildRenderObjectWidget.children");
  framework.MultiChildRenderObjectWidget = class MultiChildRenderObjectWidget extends framework.RenderObjectWidget {
    get children() {
      return this[children$];
    }
    set children(value) {
      super.children = value;
    }
    createElement() {
      return new framework.MultiChildRenderObjectElement.new(this);
    }
  };
  (framework.MultiChildRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$] = children;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1819, 14, "children != null");
    if (!dart.test(dart.fn(() => {
      let index = children[$indexOf](null);
      if (dart.notNull(index) >= 0) {
        dart.throw(assertions.FlutterError.new(dart.str(this[$runtimeType]) + "'s children must not contain any null values, " + "but a null value was found at index " + dart.str(index)));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1820, 14, "() {\r\n        final int index = children.indexOf(null);\r\n        if (index >= 0) {\r\n          throw FlutterError(\r\n            \"$runtimeType's children must not contain any null values, \"\r\n            'but a null value was found at index $index'\r\n          );\r\n        }\r\n        return true;\r\n      }()");
    framework.MultiChildRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.MultiChildRenderObjectWidget.prototype;
  dart.addTypeTests(framework.MultiChildRenderObjectWidget);
  dart.setMethodSignature(framework.MultiChildRenderObjectWidget, () => ({
    __proto__: dart.getMethods(framework.MultiChildRenderObjectWidget.__proto__),
    createElement: dart.fnType(framework.MultiChildRenderObjectElement, [])
  }));
  dart.setLibraryUri(framework.MultiChildRenderObjectWidget, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.MultiChildRenderObjectWidget, () => ({
    __proto__: dart.getFields(framework.MultiChildRenderObjectWidget.__proto__),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  var C28;
  var C29;
  var C30;
  var C31;
  var C32;
  framework._ElementLifecycle = class _ElementLifecycle extends core.Object {
    toString() {
      return this[_name$0];
    }
  };
  (framework._ElementLifecycle.new = function(index, _name) {
    this.index = index;
    this[_name$0] = _name;
    ;
  }).prototype = framework._ElementLifecycle.prototype;
  dart.addTypeTests(framework._ElementLifecycle);
  dart.setLibraryUri(framework._ElementLifecycle, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework._ElementLifecycle, () => ({
    __proto__: dart.getFields(framework._ElementLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$0]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(framework._ElementLifecycle, ['toString']);
  framework._ElementLifecycle.initial = C28 || CT.C28;
  framework._ElementLifecycle.active = C29 || CT.C29;
  framework._ElementLifecycle.inactive = C30 || CT.C30;
  framework._ElementLifecycle.defunct = C31 || CT.C31;
  framework._ElementLifecycle.values = C32 || CT.C32;
  var _locked = dart.privateName(framework, "_locked");
  var _elements = dart.privateName(framework, "_elements");
  var _unmount = dart.privateName(framework, "_unmount");
  var C33;
  var _unmountAll = dart.privateName(framework, "_unmountAll");
  var C34;
  var _active = dart.privateName(framework, "_active");
  framework._InactiveElements = class _InactiveElements extends core.Object {
    [_unmount](element) {
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1910, 12, "element._debugLifecycleState == _ElementLifecycle.inactive");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) {
          if (GlobalKeyOfStateOfStatefulWidget().is(element.widget.key)) print.debugPrint("Discarding " + dart.str(element) + " from inactive elements list.");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1911, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle) {\r\n        if (element.widget.key is GlobalKey)\r\n          debugPrint('Discarding $element from inactive elements list.');\r\n      }\r\n      return true;\r\n    }()");
      element.visitChildren(dart.fn(child => {
        if (!dart.equals(child[_parent], element)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1919, 14, "child._parent == element");
        this[_unmount](child);
      }, ElementToNull()));
      element.unmount();
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.defunct)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1923, 12, "element._debugLifecycleState == _ElementLifecycle.defunct");
    }
    [_unmountAll]() {
      let t1;
      this[_locked] = true;
      let elements = (t1 = this[_elements][$toList](), t1[$sort](C33 || CT.C33), t1);
      this[_elements].clear();
      try {
        elements[$reversed][$forEach](dart.bind(this, _unmount));
      } finally {
        if (!dart.test(this[_elements][$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1933, 14, "_elements.isEmpty");
        this[_locked] = false;
      }
    }
    static _deactivateRecursively(element) {
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1939, 12, "element._debugLifecycleState == _ElementLifecycle.active");
      element.deactivate();
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1941, 12, "element._debugLifecycleState == _ElementLifecycle.inactive");
      element.visitChildren(C34 || CT.C34);
      if (!dart.test(dart.fn(() => {
        element.debugDeactivated();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1943, 12, "() {\r\n      element.debugDeactivated();\r\n      return true;\r\n    }()");
    }
    add(element) {
      if (!!dart.test(this[_locked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1950, 12, "!_locked");
      if (!!dart.test(this[_elements].contains(element))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1951, 12, "!_elements.contains(element)");
      if (!(element[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1952, 12, "element._parent == null");
      if (dart.test(element[_active])) framework._InactiveElements._deactivateRecursively(element);
      this[_elements].add(element);
    }
    remove(element) {
      if (!!dart.test(this[_locked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1959, 12, "!_locked");
      if (!dart.test(this[_elements].contains(element))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1960, 12, "_elements.contains(element)");
      if (!(element[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1961, 12, "element._parent == null");
      this[_elements].remove(element);
      if (!!dart.test(element[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1963, 12, "!element._active");
    }
    debugContains(element) {
      let result = null;
      if (!dart.test(dart.fn(() => {
        result = this[_elements].contains(element);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 1968, 12, "() {\r\n      result = _elements.contains(element);\r\n      return true;\r\n    }()");
      return result;
    }
  };
  (framework._InactiveElements.new = function() {
    this[_locked] = false;
    this[_elements] = new (_HashSetOfElement()).new();
    ;
  }).prototype = framework._InactiveElements.prototype;
  dart.addTypeTests(framework._InactiveElements);
  dart.setMethodSignature(framework._InactiveElements, () => ({
    __proto__: dart.getMethods(framework._InactiveElements.__proto__),
    [_unmount]: dart.fnType(dart.void, [framework.Element]),
    [_unmountAll]: dart.fnType(dart.void, []),
    add: dart.fnType(dart.void, [framework.Element]),
    remove: dart.fnType(dart.void, [framework.Element]),
    debugContains: dart.fnType(core.bool, [framework.Element])
  }));
  dart.setLibraryUri(framework._InactiveElements, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework._InactiveElements, () => ({
    __proto__: dart.getFields(framework._InactiveElements.__proto__),
    [_locked]: dart.fieldType(core.bool),
    [_elements]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  framework.BuildContext = class BuildContext extends core.Object {};
  (framework.BuildContext.new = function() {
    ;
  }).prototype = framework.BuildContext.prototype;
  dart.addTypeTests(framework.BuildContext);
  dart.setLibraryUri(framework.BuildContext, "package:flutter/src/widgets/framework.dart");
  var _inactiveElements = dart.privateName(framework, "_inactiveElements");
  var _dirtyElements = dart.privateName(framework, "_dirtyElements");
  var _scheduledFlushDirtyElements = dart.privateName(framework, "_scheduledFlushDirtyElements");
  var _dirtyElementsNeedsResorting = dart.privateName(framework, "_dirtyElementsNeedsResorting");
  var _debugStateLockLevel = dart.privateName(framework, "_debugStateLockLevel");
  var _debugBuilding = dart.privateName(framework, "_debugBuilding");
  var _debugCurrentBuildTarget = dart.privateName(framework, "_debugCurrentBuildTarget");
  var _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = dart.privateName(framework, "_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans");
  var _debugIsInBuildScope = dart.privateName(framework, "_debugIsInBuildScope");
  var _inDirtyList = dart.privateName(framework, "_inDirtyList");
  var _debugStateLocked = dart.privateName(framework, "_debugStateLocked");
  var _debugSetAllowIgnoredCallsToMarkNeedsBuild = dart.privateName(framework, "_debugSetAllowIgnoredCallsToMarkNeedsBuild");
  var _debugElementWasRebuilt = dart.privateName(framework, "_debugElementWasRebuilt");
  var _debugIsInScope = dart.privateName(framework, "_debugIsInScope");
  var _debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = dart.privateName(framework, "_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans");
  var onBuildScheduled$ = dart.privateName(framework, "BuildOwner.onBuildScheduled");
  var focusManager = dart.privateName(framework, "BuildOwner.focusManager");
  framework.BuildOwner = class BuildOwner extends core.Object {
    get onBuildScheduled() {
      return this[onBuildScheduled$];
    }
    set onBuildScheduled(value) {
      this[onBuildScheduled$] = value;
    }
    get focusManager() {
      return this[focusManager];
    }
    set focusManager(value) {
      this[focusManager] = value;
    }
    get [_debugIsInBuildScope]() {
      return this[_dirtyElementsNeedsResorting] != null;
    }
    scheduleBuildFor(element) {
      if (!(element != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2452, 12, "element != null");
      if (!dart.equals(element.owner, this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2453, 12, "element.owner == this");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) assertions.debugPrintStack({label: "scheduleBuildFor() called for " + dart.str(element) + (dart.test(this[_dirtyElements][$contains](element)) ? " (ALREADY IN LIST)" : "")});
        if (!dart.test(element.dirty)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("scheduleBuildFor() called for a widget that is not marked as dirty."), element.describeElement("The method was called for the following element"), new assertions.ErrorDescription.new("This element is not current marked as dirty. Make sure to set the dirty flag before " + "calling scheduleBuildFor()."), new assertions.ErrorHint.new("If you did not attempt to call scheduleBuildFor() yourself, then this probably " + "indicates a bug in the widgets framework. Please report it:\n" + "  https://github.com/flutter/flutter/issues/new?template=BUG.md")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2454, 12, "() {\r\n      if (debugPrintScheduleBuildForStacks)\r\n        debugPrintStack(label: 'scheduleBuildFor() called for $element${_dirtyElements.contains(element) ? \" (ALREADY IN LIST)\" : \"\"}');\r\n      if (!element.dirty) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('scheduleBuildFor() called for a widget that is not marked as dirty.'),\r\n          element.describeElement('The method was called for the following element'),\r\n          ErrorDescription(\r\n            'This element is not current marked as dirty. Make sure to set the dirty flag before '\r\n            'calling scheduleBuildFor().'),\r\n          ErrorHint(\r\n            'If you did not attempt to call scheduleBuildFor() yourself, then this probably '\r\n            'indicates a bug in the widgets framework. Please report it:\\n'\r\n            '  https://github.com/flutter/flutter/issues/new?template=BUG.md'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.test(element[_inDirtyList])) {
        if (!dart.test(dart.fn(() => {
          if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) assertions.debugPrintStack({label: "BuildOwner.scheduleBuildFor() called; _dirtyElementsNeedsResorting was " + dart.str(this[_dirtyElementsNeedsResorting]) + " (now true); dirty list is: " + dart.str(this[_dirtyElements])});
          if (!dart.test(this[_debugIsInBuildScope])) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("BuildOwner.scheduleBuildFor() called inappropriately."), new assertions.ErrorHint.new("The BuildOwner.scheduleBuildFor() method should only be called while the " + "buildScope() method is actively rebuilding the widget tree.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2474, 14, "() {\r\n        if (debugPrintScheduleBuildForStacks)\r\n          debugPrintStack(label: 'BuildOwner.scheduleBuildFor() called; _dirtyElementsNeedsResorting was $_dirtyElementsNeedsResorting (now true); dirty list is: $_dirtyElements');\r\n        if (!_debugIsInBuildScope) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('BuildOwner.scheduleBuildFor() called inappropriately.'),\r\n            ErrorHint(\r\n              'The BuildOwner.scheduleBuildFor() method should only be called while the '\r\n              'buildScope() method is actively rebuilding the widget tree.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        this[_dirtyElementsNeedsResorting] = true;
        return;
      }
      if (!dart.test(this[_scheduledFlushDirtyElements]) && this.onBuildScheduled != null) {
        this[_scheduledFlushDirtyElements] = true;
        this.onBuildScheduled();
      }
      this[_dirtyElements][$add](element);
      element[_inDirtyList] = true;
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintScheduleBuildForStacks)) print.debugPrint("...dirty list is now: " + dart.str(this[_dirtyElements]));
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2497, 12, "() {\r\n      if (debugPrintScheduleBuildForStacks)\r\n        debugPrint('...dirty list is now: $_dirtyElements');\r\n      return true;\r\n    }()");
    }
    get [_debugStateLocked]() {
      return dart.notNull(this[_debugStateLockLevel]) > 0;
    }
    get debugBuilding() {
      return this[_debugBuilding];
    }
    lockState(callback) {
      if (!(callback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2520, 12, "callback != null");
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2521, 12, "_debugStateLockLevel >= 0");
      if (!dart.test(dart.fn(() => {
        this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) + 1;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2522, 12, "() {\r\n      _debugStateLockLevel += 1;\r\n      return true;\r\n    }()");
      try {
        callback();
      } finally {
        if (!dart.test(dart.fn(() => {
          this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) - 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2529, 14, "() {\r\n        _debugStateLockLevel -= 1;\r\n        return true;\r\n      }()");
      }
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2534, 12, "_debugStateLockLevel >= 0");
    }
    buildScope(context, callback = null) {
      if (callback == null && dart.test(this[_dirtyElements][$isEmpty])) return;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2565, 12, "context != null");
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2566, 12, "_debugStateLockLevel >= 0");
      if (!!dart.test(this[_debugBuilding])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2567, 12, "!_debugBuilding");
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintBuildScope)) print.debugPrint("buildScope called with context " + dart.str(context) + "; dirty list is: " + dart.str(this[_dirtyElements]));
        this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) + 1;
        this[_debugBuilding] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2568, 12, "() {\r\n      if (debugPrintBuildScope)\r\n        debugPrint('buildScope called with context $context; dirty list is: $_dirtyElements');\r\n      _debugStateLockLevel += 1;\r\n      _debugBuilding = true;\r\n      return true;\r\n    }()");
      developer.Timeline.startSync("Build", {arguments: debug.timelineWhitelistArguments});
      try {
        this[_scheduledFlushDirtyElements] = true;
        if (callback != null) {
          if (!dart.test(this[_debugStateLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2579, 16, "_debugStateLocked");
          let debugPreviousBuildTarget = null;
          if (!dart.test(dart.fn(() => {
            context[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
            debugPreviousBuildTarget = this[_debugCurrentBuildTarget];
            this[_debugCurrentBuildTarget] = context;
            return true;
          }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2581, 16, "() {\r\n          context._debugSetAllowIgnoredCallsToMarkNeedsBuild(true);\r\n          debugPreviousBuildTarget = _debugCurrentBuildTarget;\r\n          _debugCurrentBuildTarget = context;\r\n          return true;\r\n        }()");
          this[_dirtyElementsNeedsResorting] = false;
          try {
            callback();
          } finally {
            if (!dart.test(dart.fn(() => {
              context[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
              if (!dart.equals(this[_debugCurrentBuildTarget], context)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2593, 20, "_debugCurrentBuildTarget == context");
              this[_debugCurrentBuildTarget] = debugPreviousBuildTarget;
              this[_debugElementWasRebuilt](context);
              return true;
            }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2591, 18, "() {\r\n            context._debugSetAllowIgnoredCallsToMarkNeedsBuild(false);\r\n            assert(_debugCurrentBuildTarget == context);\r\n            _debugCurrentBuildTarget = debugPreviousBuildTarget;\r\n            _debugElementWasRebuilt(context);\r\n            return true;\r\n          }()");
          }
        }
        this[_dirtyElements][$sort](C33 || CT.C33);
        this[_dirtyElementsNeedsResorting] = false;
        let dirtyCount = this[_dirtyElements][$length];
        let index = 0;
        while (index < dart.notNull(dirtyCount)) {
          if (!(this[_dirtyElements][$_get](index) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2605, 16, "_dirtyElements[index] != null");
          if (!dart.test(this[_dirtyElements][$_get](index)[_inDirtyList])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2606, 16, "_dirtyElements[index]._inDirtyList");
          if (!(!dart.test(this[_dirtyElements][$_get](index)[_active]) || dart.test(this[_dirtyElements][$_get](index)[_debugIsInScope](context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2607, 16, "!_dirtyElements[index]._active || _dirtyElements[index]._debugIsInScope(context)");
          try {
            this[_dirtyElements][$_get](index).rebuild();
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            framework._debugReportException(new assertions.ErrorDescription.new("while rebuilding dirty elements"), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsNode()).new((function*() {
                yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this[_dirtyElements][$_get](index)));
                yield this[_dirtyElements][$_get](index).describeElement("The element being rebuilt at the time was index " + dart.str(index) + " of " + dart.str(dirtyCount));
              }).bind(this)), VoidToIterableOfDiagnosticsNode())});
          }
          index = index + 1;
          if (dart.notNull(dirtyCount) < dart.notNull(this[_dirtyElements][$length]) || dart.test(this[_dirtyElementsNeedsResorting])) {
            this[_dirtyElements][$sort](C33 || CT.C33);
            this[_dirtyElementsNeedsResorting] = false;
            dirtyCount = this[_dirtyElements][$length];
            while (index > 0 && dart.test(this[_dirtyElements][$_get](index - 1).dirty)) {
              index = index - 1;
            }
          }
        }
        if (!dart.test(dart.fn(() => {
          if (dart.test(this[_dirtyElements][$any](dart.fn(element => dart.test(element[_active]) && dart.test(element.dirty), ElementTobool())))) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("buildScope missed some dirty elements."), new assertions.ErrorHint.new("This probably indicates that the dirty list should have been resorted but was not."), framework.Element.describeElements("The list of dirty elements at the end of the buildScope call was", this[_dirtyElements])])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2638, 14, "() {\r\n        if (_dirtyElements.any((Element element) => element._active && element.dirty)) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('buildScope missed some dirty elements.'),\r\n            ErrorHint('This probably indicates that the dirty list should have been resorted but was not.'),\r\n            Element.describeElements('The list of dirty elements at the end of the buildScope call was', _dirtyElements),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        for (let element of this[_dirtyElements]) {
          if (!dart.test(element[_inDirtyList])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2650, 16, "element._inDirtyList");
          element[_inDirtyList] = false;
        }
        this[_dirtyElements][$clear]();
        this[_scheduledFlushDirtyElements] = false;
        this[_dirtyElementsNeedsResorting] = null;
        developer.Timeline.finishSync();
        if (!dart.test(this[_debugBuilding])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2657, 14, "_debugBuilding");
        if (!dart.test(dart.fn(() => {
          this[_debugBuilding] = false;
          this[_debugStateLockLevel] = dart.notNull(this[_debugStateLockLevel]) - 1;
          if (dart.test(debug$0.debugPrintBuildScope)) print.debugPrint("buildScope finished");
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2658, 14, "() {\r\n        _debugBuilding = false;\r\n        _debugStateLockLevel -= 1;\r\n        if (debugPrintBuildScope)\r\n          debugPrint('buildScope finished');\r\n        return true;\r\n      }()");
      }
      if (!(dart.notNull(this[_debugStateLockLevel]) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2666, 12, "_debugStateLockLevel >= 0");
    }
    [_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans](node, key) {
      this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] == null ? this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] = new (LinkedMapOfElement$SetOfGlobalKeyOfStateOfStatefulWidget()).new() : null;
      let keys = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans][$putIfAbsent](node, dart.fn(() => new (_HashSetOfGlobalKeyOfStateOfStatefulWidget()).new(), VoidToHashSetOfGlobalKeyOfStateOfStatefulWidget()));
      keys.add(key);
    }
    [_debugElementWasRebuilt](node) {
      let t2;
      t2 = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans];
      t2 == null ? null : t2[$remove](node);
    }
    finalizeTree() {
      developer.Timeline.startSync("Finalize tree", {arguments: debug.timelineWhitelistArguments});
      try {
        this.lockState(dart.fn(() => {
          this[_inactiveElements][_unmountAll]();
        }, VoidToNull()));
        if (!dart.test(dart.fn(() => {
          let t3, t2, t3$, t2$, t2$0;
          try {
            framework.GlobalKey._debugVerifyGlobalKeyReservation();
            framework.GlobalKey._debugVerifyIllFatedPopulation();
            if (this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] != null && dart.test(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans][$isNotEmpty])) {
              let keys = new (_HashSetOfGlobalKeyOfStateOfStatefulWidget()).new();
              for (let element of this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans][$keys]) {
                if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.defunct)) keys.addAll(this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans][$_get](element));
              }
              if (dart.test(keys[$isNotEmpty])) {
                let keyStringCount = new (IdentityMapOfString$int()).new();
                let iter = keys[$map](core.String, dart.fn(key => dart.toString(key), GlobalKeyOfStateOfStatefulWidgetToString()));
                for (let key of iter) {
                  if (dart.test(keyStringCount[$containsKey](key))) {
                    t2 = keyStringCount;
                    t3 = key;
                    t2[$_set](t3, dart.notNull(t2[$_get](t3)) + 1);
                  } else {
                    keyStringCount[$_set](key, 1);
                  }
                }
                let keyLabels = JSArrayOfString().of([]);
                keyStringCount[$forEach](dart.fn((key, count) => {
                  if (count === 1) {
                    keyLabels[$add](key);
                  } else {
                    keyLabels[$add](dart.str(key) + " (" + dart.str(count) + " different affected keys had this toString representation)");
                  }
                }, StringAndintToNull()));
                let elements = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans][$keys];
                let elementStringCount = new (IdentityMapOfString$int()).new();
                let iter$ = elements[$map](core.String, dart.fn(element => dart.toString(element), ElementToString()));
                for (let element of iter$) {
                  if (dart.test(elementStringCount[$containsKey](element))) {
                    t2$ = elementStringCount;
                    t3$ = element;
                    t2$[$_set](t3$, dart.notNull(t2$[$_get](t3$)) + 1);
                  } else {
                    elementStringCount[$_set](element, 1);
                  }
                }
                let elementLabels = JSArrayOfString().of([]);
                elementStringCount[$forEach](dart.fn((element, count) => {
                  if (count === 1) {
                    elementLabels[$add](element);
                  } else {
                    elementLabels[$add](dart.str(element) + " (" + dart.str(count) + " different affected elements had this toString representation)");
                  }
                }, StringAndintToNull()));
                if (!dart.test(keyLabels[$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2743, 22, "keyLabels.isNotEmpty");
                let the = keys[$length] === 1 ? " the" : "";
                let s = keys[$length] === 1 ? "" : "s";
                let were = keys[$length] === 1 ? "was" : "were";
                let their = keys[$length] === 1 ? "its" : "their";
                let respective = elementLabels[$length] === 1 ? "" : " respective";
                let those = keys[$length] === 1 ? "that" : "those";
                let s2 = elementLabels[$length] === 1 ? "" : "s";
                let those2 = elementLabels[$length] === 1 ? "that" : "those";
                let they = elementLabels[$length] === 1 ? "it" : "they";
                let think = elementLabels[$length] === 1 ? "thinks" : "think";
                let are = elementLabels[$length] === 1 ? "is" : "are";
                dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Duplicate GlobalKey" + s + " detected in widget tree."), new assertions.ErrorDescription.new("The following GlobalKey" + s + " " + were + " specified multiple times in the widget tree. This will lead to " + "parts of the widget tree being truncated unexpectedly, because the second time a key is seen, " + "the previous instance is moved to the new location. The key" + s + " " + were + ":\n" + "- " + dart.str(keyLabels[$join]("\n  ")) + "\n" + "This was determined by noticing that after" + the + " widget" + s + " with the above global key" + s + " " + were + " moved " + "out of " + their + respective + " previous parent" + s2 + ", " + those2 + " previous parent" + s2 + " never updated during this frame, meaning " + "that " + they + " either did not update at all or updated before the widget" + s + " " + were + " moved, in either case " + "implying that " + they + " still " + think + " that " + they + " should have a child with " + those + " global key" + s + ".\n" + "The specific parent" + s2 + " that did not update after having one or more children forcibly removed " + "due to GlobalKey reparenting " + are + ":\n" + "- " + dart.str(elementLabels[$join]("\n  ")) + "\nA GlobalKey can only be specified on one widget at a time in the widget tree.")])));
              }
            }
          } finally {
            t2$0 = this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans];
            t2$0 == null ? null : t2$0[$clear]();
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2698, 14, "() {\r\n        try {\r\n          GlobalKey._debugVerifyGlobalKeyReservation();\r\n          GlobalKey._debugVerifyIllFatedPopulation();\r\n          if (_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans != null &&\r\n              _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans.isNotEmpty) {\r\n            final Set<GlobalKey> keys = HashSet<GlobalKey>();\r\n            for (final Element element in _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans.keys) {\r\n              if (element._debugLifecycleState != _ElementLifecycle.defunct)\r\n                keys.addAll(_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans[element]);\r\n            }\r\n            if (keys.isNotEmpty) {\r\n              final Map<String, int> keyStringCount = HashMap<String, int>();\r\n              for (final String key in keys.map<String>((GlobalKey key) => key.toString())) {\r\n                if (keyStringCount.containsKey(key)) {\r\n                  keyStringCount[key] += 1;\r\n                } else {\r\n                  keyStringCount[key] = 1;\r\n                }\r\n              }\r\n              final List<String> keyLabels = <String>[];\r\n              keyStringCount.forEach((String key, int count) {\r\n                if (count == 1) {\r\n                  keyLabels.add(key);\r\n                } else {\r\n                  keyLabels.add('$key ($count different affected keys had this toString representation)');\r\n                }\r\n              });\r\n              final Iterable<Element> elements = _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans.keys;\r\n              final Map<String, int> elementStringCount = HashMap<String, int>();\r\n              for (final String element in elements.map<String>((Element element) => element.toString())) {\r\n                if (elementStringCount.containsKey(element)) {\r\n                  elementStringCount[element] += 1;\r\n                } else {\r\n                  elementStringCount[element] = 1;\r\n                }\r\n              }\r\n              final List<String> elementLabels = <String>[];\r\n              elementStringCount.forEach((String element, int count) {\r\n                if (count == 1) {\r\n                  elementLabels.add(element);\r\n                } else {\r\n                  elementLabels.add('$element ($count different affected elements had this toString representation)');\r\n                }\r\n              });\r\n              assert(keyLabels.isNotEmpty);\r\n              final String the = keys.length == 1 ? ' the' : '';\r\n              final String s = keys.length == 1 ? '' : 's';\r\n              final String were = keys.length == 1 ? 'was' : 'were';\r\n              final String their = keys.length == 1 ? 'its' : 'their';\r\n              final String respective = elementLabels.length == 1 ? '' : ' respective';\r\n              final String those = keys.length == 1 ? 'that' : 'those';\r\n              final String s2 = elementLabels.length == 1 ? '' : 's';\r\n              final String those2 = elementLabels.length == 1 ? 'that' : 'those';\r\n              final String they = elementLabels.length == 1 ? 'it' : 'they';\r\n              final String think = elementLabels.length == 1 ? 'thinks' : 'think';\r\n              final String are = elementLabels.length == 1 ? 'is' : 'are';\r\n              // TODO(jacobr): make this error more structured to better expose which widgets had problems.\r\n              throw FlutterError.fromParts(<DiagnosticsNode>[\r\n                ErrorSummary('Duplicate GlobalKey$s detected in widget tree.'),\r\n                // TODO(jacobr): refactor this code so the elements are clickable\r\n                // in GUI debug tools.\r\n                ErrorDescription(\r\n                  'The following GlobalKey$s $were specified multiple times in the widget tree. This will lead to '\r\n                  'parts of the widget tree being truncated unexpectedly, because the second time a key is seen, '\r\n                  'the previous instance is moved to the new location. The key$s $were:\\n'\r\n                  '- ${keyLabels.join(\"\\n  \")}\\n'\r\n                  'This was determined by noticing that after$the widget$s with the above global key$s $were moved '\r\n                  'out of $their$respective previous parent$s2, $those2 previous parent$s2 never updated during this frame, meaning '\r\n                  'that $they either did not update at all or updated before the widget$s $were moved, in either case '\r\n                  'implying that $they still $think that $they should have a child with $those global key$s.\\n'\r\n                  'The specific parent$s2 that did not update after having one or more children forcibly removed '\r\n                  'due to GlobalKey reparenting $are:\\n'\r\n                  '- ${elementLabels.join(\"\\n  \")}'\r\n                  '\\nA GlobalKey can only be specified on one widget at a time in the widget tree.'\r\n                ),\r\n              ]);\r\n            }\r\n          }\r\n        } finally {\r\n          _debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans?.clear();\r\n        }\r\n        return true;\r\n      }()");
      } catch (e$) {
        let e = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        framework._debugReportException(new assertions.ErrorSummary.new("while finalizing the widget tree"), e, stack);
      } finally {
        developer.Timeline.finishSync();
      }
    }
    reassemble(root) {
      developer.Timeline.startSync("Dirty Element Tree");
      try {
        if (!(root[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2801, 14, "root._parent == null");
        if (!dart.equals(root.owner, this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2802, 14, "root.owner == this");
        root.reassemble();
      } finally {
        developer.Timeline.finishSync();
      }
    }
  };
  (framework.BuildOwner.new = function(opts) {
    let onBuildScheduled = opts && 'onBuildScheduled' in opts ? opts.onBuildScheduled : null;
    this[_inactiveElements] = new framework._InactiveElements.new();
    this[_dirtyElements] = JSArrayOfElement().of([]);
    this[_scheduledFlushDirtyElements] = false;
    this[_dirtyElementsNeedsResorting] = null;
    this[focusManager] = new focus_manager.FocusManager.new();
    this[_debugStateLockLevel] = 0;
    this[_debugBuilding] = false;
    this[_debugCurrentBuildTarget] = null;
    this[_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans] = null;
    this[onBuildScheduled$] = onBuildScheduled;
    ;
  }).prototype = framework.BuildOwner.prototype;
  dart.addTypeTests(framework.BuildOwner);
  dart.setMethodSignature(framework.BuildOwner, () => ({
    __proto__: dart.getMethods(framework.BuildOwner.__proto__),
    scheduleBuildFor: dart.fnType(dart.void, [framework.Element]),
    lockState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
    buildScope: dart.fnType(dart.void, [framework.Element], [dart.fnType(dart.void, [])]),
    [_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans]: dart.fnType(dart.void, [framework.Element, framework.GlobalKey$(framework.State$(framework.StatefulWidget))]),
    [_debugElementWasRebuilt]: dart.fnType(dart.void, [framework.Element]),
    finalizeTree: dart.fnType(dart.void, []),
    reassemble: dart.fnType(dart.void, [framework.Element])
  }));
  dart.setGetterSignature(framework.BuildOwner, () => ({
    __proto__: dart.getGetters(framework.BuildOwner.__proto__),
    [_debugIsInBuildScope]: core.bool,
    [_debugStateLocked]: core.bool,
    debugBuilding: core.bool
  }));
  dart.setLibraryUri(framework.BuildOwner, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.BuildOwner, () => ({
    __proto__: dart.getFields(framework.BuildOwner.__proto__),
    onBuildScheduled: dart.fieldType(dart.fnType(dart.void, [])),
    [_inactiveElements]: dart.finalFieldType(framework._InactiveElements),
    [_dirtyElements]: dart.finalFieldType(core.List$(framework.Element)),
    [_scheduledFlushDirtyElements]: dart.fieldType(core.bool),
    [_dirtyElementsNeedsResorting]: dart.fieldType(core.bool),
    focusManager: dart.fieldType(focus_manager.FocusManager),
    [_debugStateLockLevel]: dart.fieldType(core.int),
    [_debugBuilding]: dart.fieldType(core.bool),
    [_debugCurrentBuildTarget]: dart.fieldType(framework.Element),
    [_debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans]: dart.fieldType(core.Map$(framework.Element, core.Set$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))))
  }));
  var _cachedHash = dart.privateName(framework, "_cachedHash");
  var _slot = dart.privateName(framework, "_slot");
  var _depth = dart.privateName(framework, "_depth");
  var _owner = dart.privateName(framework, "_owner");
  var _debugForgottenChildrenWithGlobalKey = dart.privateName(framework, "_debugForgottenChildrenWithGlobalKey");
  var _inheritedWidgets = dart.privateName(framework, "_inheritedWidgets");
  var _dependencies = dart.privateName(framework, "_dependencies");
  var _hadUnsatisfiedDependencies = dart.privateName(framework, "_hadUnsatisfiedDependencies");
  var _dirty = dart.privateName(framework, "_dirty");
  var _debugBuiltOnce = dart.privateName(framework, "_debugBuiltOnce");
  var _debugAllowIgnoredCallsToMarkNeedsBuild = dart.privateName(framework, "_debugAllowIgnoredCallsToMarkNeedsBuild");
  var _name$1 = dart.privateName(diagnostics$, "_name");
  var C35;
  var _debugRemoveGlobalKeyReservation = dart.privateName(framework, "_debugRemoveGlobalKeyReservation");
  var _updateInheritance = dart.privateName(framework, "_updateInheritance");
  var _updateSlot = dart.privateName(framework, "_updateSlot");
  var _updateDepth = dart.privateName(framework, "_updateDepth");
  var _retakeInactiveElement = dart.privateName(framework, "_retakeInactiveElement");
  var _debugCheckForCycles = dart.privateName(framework, "_debugCheckForCycles");
  var _activateWithParent = dart.privateName(framework, "_activateWithParent");
  var C36;
  var _dependents = dart.privateName(framework, "_dependents");
  var _debugCheckStateIsActiveForAncestorLookup = dart.privateName(framework, "_debugCheckStateIsActiveForAncestorLookup");
  var _debugCheckOwnerBuildTargetExists = dart.privateName(framework, "_debugCheckOwnerBuildTargetExists");
  framework.Element = class Element extends diagnostics$.DiagnosticableTree {
    _equals(other) {
      if (other == null) return false;
      return this === other;
    }
    get hashCode() {
      return this[_cachedHash];
    }
    get slot() {
      return this[_slot];
    }
    get depth() {
      return this[_depth];
    }
    static _sort(a, b) {
      if (dart.notNull(a.depth) < dart.notNull(b.depth)) return -1;
      if (dart.notNull(b.depth) < dart.notNull(a.depth)) return 1;
      if (dart.test(b.dirty) && !dart.test(a.dirty)) return -1;
      if (dart.test(a.dirty) && !dart.test(b.dirty)) return 1;
      return 0;
    }
    static _debugConcreteSubtype(element) {
      return framework.StatefulElement.is(element) ? 1 : framework.StatelessElement.is(element) ? 2 : 0;
    }
    get widget() {
      return this[_widget];
    }
    get owner() {
      return this[_owner];
    }
    reassemble() {
      this.markNeedsBuild();
      this.visitChildren(dart.fn(child => {
        child.reassemble();
      }, ElementToNull()));
    }
    [_debugIsInScope](target) {
      let current = this;
      while (current != null) {
        if (dart.equals(target, current)) return true;
        current = current[_parent];
      }
      return false;
    }
    get renderObject() {
      let result = null;
      function visit(element) {
        if (!(result == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2995, 14, "result == null");
        if (framework.RenderObjectElement.is(element))
          result = element.renderObject;
        else
          element.visitChildren(visit);
      }
      dart.fn(visit, ElementTovoid());
      visit(this);
      return result;
    }
    describeMissingAncestor(opts) {
      let expectedAncestorType = opts && 'expectedAncestorType' in opts ? opts.expectedAncestorType : null;
      let information = JSArrayOfDiagnosticsNode().of([]);
      let ancestors = JSArrayOfElement().of([]);
      this.visitAncestorElements(dart.fn(element => {
        ancestors[$add](element);
        return true;
      }, ElementTobool()));
      information[$add](new (DiagnosticsPropertyOfElement()).new("The specific widget that could not find a " + dart.str(expectedAncestorType) + " ancestor was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}));
      if (dart.test(ancestors[$isNotEmpty])) {
        information[$add](framework.Element.describeElements("The ancestors of this widget were", ancestors));
      } else {
        information[$add](new assertions.ErrorDescription.new("This widget is the root of the tree, so it has no " + "ancestors, let alone a \"" + dart.str(expectedAncestorType) + "\" ancestor."));
      }
      return information;
    }
    static describeElements(name, elements) {
      return new diagnostics$.DiagnosticsBlock.new({name: name, children: elements[$map](diagnostics$.DiagnosticsNode, dart.fn(element => new (DiagnosticsPropertyOfElement()).new("", element), ElementToDiagnosticsPropertyOfElement()))[$toList](), allowTruncate: true});
    }
    describeElement(name, opts) {
      let style = opts && 'style' in opts ? opts.style : C35 || CT.C35;
      return new (DiagnosticsPropertyOfElement()).new(name, this, {style: style});
    }
    describeWidget(name, opts) {
      let style = opts && 'style' in opts ? opts.style : C35 || CT.C35;
      return new (DiagnosticsPropertyOfElement()).new(name, this, {style: style});
    }
    describeOwnershipChain(name) {
      return new diagnostics$.StringProperty.new(name, this.debugGetCreatorChain(10));
    }
    visitChildren(visitor) {
    }
    debugVisitOnstageChildren(visitor) {
      return this.visitChildren(visitor);
    }
    visitChildElements(visitor) {
      if (!dart.test(dart.fn(() => {
        if (this.owner == null || !dart.test(this.owner[_debugStateLocked])) return true;
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("visitChildElements() called during build."), new assertions.ErrorDescription.new("The BuildContext.visitChildElements() method can't be called during " + "build because the child list is still being updated at that point, " + "so the children might not be constructed yet, or might be old children " + "that are going to be replaced.")])));
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3099, 12, "() {\r\n      if (owner == null || !owner._debugStateLocked)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('visitChildElements() called during build.'),\r\n        ErrorDescription(\r\n          'The BuildContext.visitChildElements() method can\\'t be called during '\r\n          'build because the child list is still being updated at that point, '\r\n          'so the children might not be constructed yet, or might be old children '\r\n          'that are going to be replaced.'\r\n        ),\r\n      ]);\r\n    }()");
      this.visitChildren(visitor);
    }
    updateChild(child, newWidget, newSlot) {
      if (newWidget == null) {
        if (child != null) this.deactivateChild(child);
        return null;
      }
      let newChild = null;
      if (child != null) {
        let hasSameSuperclass = true;
        if (!dart.test(dart.fn(() => {
          let oldElementClass = framework.Element._debugConcreteSubtype(child);
          let newWidgetClass = framework.Widget._debugConcreteSubtype(newWidget);
          hasSameSuperclass = oldElementClass == newWidgetClass;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3170, 14, "() {\r\n        final int oldElementClass = Element._debugConcreteSubtype(child);\r\n        final int newWidgetClass = Widget._debugConcreteSubtype(newWidget);\r\n        hasSameSuperclass = oldElementClass == newWidgetClass;\r\n        return true;\r\n      }()");
        if (hasSameSuperclass && dart.equals(child.widget, newWidget)) {
          if (!dart.equals(child.slot, newSlot)) this.updateSlotForChild(child, newSlot);
          newChild = child;
        } else if (hasSameSuperclass && dart.test(framework.Widget.canUpdate(child.widget, newWidget))) {
          if (!dart.equals(child.slot, newSlot)) this.updateSlotForChild(child, newSlot);
          child.update(newWidget);
          if (!dart.equals(child.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3184, 16, "child.widget == newWidget");
          if (!dart.test(dart.fn(() => {
            child.owner[_debugElementWasRebuilt](child);
            return true;
          }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3185, 16, "() {\r\n          child.owner._debugElementWasRebuilt(child);\r\n          return true;\r\n        }()");
          newChild = child;
        } else {
          this.deactivateChild(child);
          if (!(child[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3192, 16, "child._parent == null");
          newChild = this.inflateWidget(newWidget, newSlot);
        }
      } else {
        newChild = this.inflateWidget(newWidget, newSlot);
      }
      if (!dart.test(dart.fn(() => {
        let t3;
        if (child != null) this[_debugRemoveGlobalKeyReservation](child);
        let key = (t3 = newWidget, t3 == null ? null : t3.key);
        if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
          key[_debugReserveFor](this, newChild);
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3199, 12, "() {\r\n      if (child != null)\r\n        _debugRemoveGlobalKeyReservation(child);\r\n      final Key key = newWidget?.key;\r\n      if (key is GlobalKey) {\r\n        key._debugReserveFor(this, newChild);\r\n      }\r\n      return true;\r\n    }()");
      return newChild;
    }
    mount(parent, newSlot) {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.initial)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3223, 12, "_debugLifecycleState == _ElementLifecycle.initial");
      if (!(this.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3224, 12, "widget != null");
      if (!(this[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3225, 12, "_parent == null");
      if (!(parent == null || dart.equals(parent[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3226, 12, "parent == null || parent._debugLifecycleState == _ElementLifecycle.active");
      if (!(this.slot == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3227, 12, "slot == null");
      if (!(this.depth == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3228, 12, "depth == null");
      if (!!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3229, 12, "!_active");
      this[_parent] = parent;
      this[_slot] = newSlot;
      this[_depth] = this[_parent] != null ? dart.notNull(this[_parent].depth) + 1 : 1;
      this[_active] = true;
      if (parent != null) this[_owner] = parent.owner;
      let key = this.widget.key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        key[_register](this);
      }
      this[_updateInheritance]();
      if (!dart.test(dart.fn(() => {
        this[_debugLifecycleState] = framework._ElementLifecycle.active;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3241, 12, "() {\r\n      _debugLifecycleState = _ElementLifecycle.active;\r\n      return true;\r\n    }()");
    }
    [_debugRemoveGlobalKeyReservation](child) {
      framework.GlobalKey._debugRemoveReservationFor(this, child);
    }
    update(newWidget) {
      framework.Widget._check(newWidget);
      if (!(dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active) && this.widget != null && newWidget != null && !dart.equals(newWidget, this.widget) && this.depth != null && dart.test(this[_active]) && dart.test(framework.Widget.canUpdate(this.widget, newWidget)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3261, 12, "_debugLifecycleState == _ElementLifecycle.active\r\n        && widget != null\r\n        && newWidget != null\r\n        && newWidget != widget\r\n        && depth != null\r\n        && _active\r\n        && Widget.canUpdate(widget, newWidget)");
      if (!dart.test(dart.fn(() => {
        this[_debugForgottenChildrenWithGlobalKey][$forEach](dart.bind(this, _debugRemoveGlobalKeyReservation));
        this[_debugForgottenChildrenWithGlobalKey].clear();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3273, 12, "() {\r\n      _debugForgottenChildrenWithGlobalKey.forEach(_debugRemoveGlobalKeyReservation);\r\n      _debugForgottenChildrenWithGlobalKey.clear();\r\n      return true;\r\n    }()");
      this[_widget] = newWidget;
    }
    updateSlotForChild(child, newSlot) {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3288, 12, "_debugLifecycleState == _ElementLifecycle.active");
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3289, 12, "child != null");
      if (!dart.equals(child[_parent], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3290, 12, "child._parent == this");
      function visit(element) {
        element[_updateSlot](newSlot);
        if (!framework.RenderObjectElement.is(element)) element.visitChildren(visit);
      }
      dart.fn(visit, ElementTovoid());
      visit(child);
    }
    [_updateSlot](newSlot) {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3300, 12, "_debugLifecycleState == _ElementLifecycle.active");
      if (!(this.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3301, 12, "widget != null");
      if (!(this[_parent] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3302, 12, "_parent != null");
      if (!dart.equals(this[_parent][_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3303, 12, "_parent._debugLifecycleState == _ElementLifecycle.active");
      if (!(this.depth != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3304, 12, "depth != null");
      this[_slot] = newSlot;
    }
    [_updateDepth](parentDepth) {
      let expectedDepth = dart.notNull(parentDepth) + 1;
      if (dart.notNull(this[_depth]) < expectedDepth) {
        this[_depth] = expectedDepth;
        this.visitChildren(dart.fn(child => {
          child[_updateDepth](expectedDepth);
        }, ElementToNull()));
      }
    }
    detachRenderObject() {
      this.visitChildren(dart.fn(child => {
        child.detachRenderObject();
      }, ElementToNull()));
      this[_slot] = null;
    }
    attachRenderObject(newSlot) {
      if (!(this[_slot] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3340, 12, "_slot == null");
      this.visitChildren(dart.fn(child => {
        child.attachRenderObject(newSlot);
      }, ElementToNull()));
      this[_slot] = newSlot;
    }
    [_retakeInactiveElement](key, newWidget) {
      let element = key[_currentElement];
      if (element == null) return null;
      if (!dart.test(framework.Widget.canUpdate(element.widget, newWidget))) return null;
      if (!dart.test(dart.fn(() => {
        let t3;
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) print.debugPrint("Attempting to take " + dart.str(element) + " from " + dart.str((t3 = element[_parent], t3 == null ? "inactive elements list" : t3)) + " to put in " + dart.str(this) + ".");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3359, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle)\r\n        debugPrint('Attempting to take $element from ${element._parent ?? \"inactive elements list\"} to put in $this.');\r\n      return true;\r\n    }()");
      let parent = element[_parent];
      if (parent != null) {
        if (!dart.test(dart.fn(() => {
          if (dart.equals(parent, this)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A GlobalKey was used multiple times inside one widget's child list."), new (DiagnosticsPropertyOfGlobalKeyOfStateOfStatefulWidget()).new("The offending GlobalKey was", key), parent.describeElement("The parent of the widgets with that key was"), element.describeElement("The first child to get instantiated with that key became"), new (DiagnosticsPropertyOfWidget()).new("The second child that was to be instantiated with that key was", this.widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("A GlobalKey can only be specified on one widget at a time in the widget tree.")])));
          }
          parent.owner[_debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans](parent, key);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3366, 14, "() {\r\n        if (parent == this) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('A GlobalKey was used multiple times inside one widget\\'s child list.'),\r\n            DiagnosticsProperty<GlobalKey>('The offending GlobalKey was', key),\r\n            parent.describeElement('The parent of the widgets with that key was'),\r\n            element.describeElement('The first child to get instantiated with that key became'),\r\n            DiagnosticsProperty<Widget>('The second child that was to be instantiated with that key was', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n            ErrorDescription('A GlobalKey can only be specified on one widget at a time in the widget tree.'),\r\n          ]);\r\n        }\r\n        parent.owner._debugTrackElementThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans(\r\n          parent,\r\n          key,\r\n        );\r\n        return true;\r\n      }()");
        parent.forgetChild(element);
        parent.deactivateChild(element);
      }
      if (!(element[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3386, 12, "element._parent == null");
      this.owner[_inactiveElements].remove(element);
      return element;
    }
    inflateWidget(newWidget, newSlot) {
      if (!(newWidget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3407, 12, "newWidget != null");
      let key = newWidget.key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        let newChild = this[_retakeInactiveElement](key, newWidget);
        if (newChild != null) {
          if (!(newChild[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3412, 16, "newChild._parent == null");
          if (!dart.test(dart.fn(() => {
            this[_debugCheckForCycles](newChild);
            return true;
          }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3413, 16, "() {\r\n          _debugCheckForCycles(newChild);\r\n          return true;\r\n        }()");
          newChild[_activateWithParent](this, newSlot);
          let updatedChild = this.updateChild(newChild, newWidget, newSlot);
          if (!dart.equals(newChild, updatedChild)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3419, 16, "newChild == updatedChild");
          return updatedChild;
        }
      }
      let newChild = newWidget.createElement();
      if (!dart.test(dart.fn(() => {
        this[_debugCheckForCycles](newChild);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3424, 12, "() {\r\n      _debugCheckForCycles(newChild);\r\n      return true;\r\n    }()");
      newChild.mount(this, newSlot);
      if (!dart.equals(newChild[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3429, 12, "newChild._debugLifecycleState == _ElementLifecycle.active");
      return newChild;
    }
    [_debugCheckForCycles](newChild) {
      if (!(newChild[_parent] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3434, 12, "newChild._parent == null");
      if (!dart.test(dart.fn(() => {
        let node = this;
        while (node[_parent] != null)
          node = node[_parent];
        if (!!dart.equals(node, newChild)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3439, 14, "node != newChild");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3435, 12, "() {\r\n      Element node = this;\r\n      while (node._parent != null)\r\n        node = node._parent;\r\n      assert(node != newChild); // indicates we are about to create a cycle\r\n      return true;\r\n    }()");
    }
    deactivateChild(child) {
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3460, 12, "child != null");
      if (!dart.equals(child[_parent], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3461, 12, "child._parent == this");
      child[_parent] = null;
      child.detachRenderObject();
      this.owner[_inactiveElements].add(child);
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) {
          if (GlobalKeyOfStateOfStatefulWidget().is(child.widget.key)) print.debugPrint("Deactivated " + dart.str(child) + " (keyed child of " + dart.str(this) + ")");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3465, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle) {\r\n        if (child.widget.key is GlobalKey)\r\n          debugPrint('Deactivated $child (keyed child of $this)');\r\n      }\r\n      return true;\r\n    }()");
    }
    forgetChild(child) {
      if (!dart.test(dart.fn(() => {
        if (GlobalKeyOfStateOfStatefulWidget().is(child.widget.key)) this[_debugForgottenChildrenWithGlobalKey].add(child);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3498, 12, "() {\r\n      if (child.widget.key is GlobalKey)\r\n        _debugForgottenChildrenWithGlobalKey.add(child);\r\n      return true;\r\n    }()");
    }
    [_activateWithParent](parent, newSlot) {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3506, 12, "_debugLifecycleState == _ElementLifecycle.inactive");
      this[_parent] = parent;
      if (!dart.test(dart.fn(() => {
        if (dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle)) print.debugPrint("Reactivating " + dart.str(this) + " (now child of " + dart.str(this[_parent]) + ").");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3508, 12, "() {\r\n      if (debugPrintGlobalKeyedWidgetLifecycle)\r\n        debugPrint('Reactivating $this (now child of $_parent).');\r\n      return true;\r\n    }()");
      this[_updateDepth](this[_parent].depth);
      framework.Element._activateRecursively(this);
      this.attachRenderObject(newSlot);
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3516, 12, "_debugLifecycleState == _ElementLifecycle.active");
    }
    static _activateRecursively(element) {
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3520, 12, "element._debugLifecycleState == _ElementLifecycle.inactive");
      element.activate();
      if (!dart.equals(element[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3522, 12, "element._debugLifecycleState == _ElementLifecycle.active");
      element.visitChildren(C36 || CT.C36);
    }
    activate() {
      let t3;
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3536, 12, "_debugLifecycleState == _ElementLifecycle.inactive");
      if (!(this.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3537, 12, "widget != null");
      if (!(this.owner != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3538, 12, "owner != null");
      if (!(this.depth != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3539, 12, "depth != null");
      if (!!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3540, 12, "!_active");
      let hadDependencies = this[_dependencies] != null && dart.test(this[_dependencies][$isNotEmpty]) || dart.test(this[_hadUnsatisfiedDependencies]);
      this[_active] = true;
      t3 = this[_dependencies];
      t3 == null ? null : t3.clear();
      this[_hadUnsatisfiedDependencies] = false;
      this[_updateInheritance]();
      if (!dart.test(dart.fn(() => {
        this[_debugLifecycleState] = framework._ElementLifecycle.active;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3548, 12, "() {\r\n      _debugLifecycleState = _ElementLifecycle.active;\r\n      return true;\r\n    }()");
      if (dart.test(this[_dirty])) this.owner.scheduleBuildFor(this);
      if (hadDependencies) this.didChangeDependencies();
    }
    deactivate() {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3572, 12, "_debugLifecycleState == _ElementLifecycle.active");
      if (!(this[_widget] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3573, 12, "_widget != null");
      if (!(this.depth != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3574, 12, "depth != null");
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3575, 12, "_active");
      if (this[_dependencies] != null && dart.test(this[_dependencies][$isNotEmpty])) {
        for (let dependency of this[_dependencies])
          dependency[_dependents][$remove](this);
      }
      this[_inheritedWidgets] = null;
      this[_active] = false;
      if (!dart.test(dart.fn(() => {
        this[_debugLifecycleState] = framework._ElementLifecycle.inactive;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3588, 12, "() {\r\n      _debugLifecycleState = _ElementLifecycle.inactive;\r\n      return true;\r\n    }()");
    }
    debugDeactivated() {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3599, 12, "_debugLifecycleState == _ElementLifecycle.inactive");
    }
    unmount() {
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.inactive)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3615, 12, "_debugLifecycleState == _ElementLifecycle.inactive");
      if (!(this[_widget] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3616, 12, "_widget != null");
      if (!(this.depth != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3617, 12, "depth != null");
      if (!!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3618, 12, "!_active");
      let key = this[_widget].key;
      if (GlobalKeyOfStateOfStatefulWidget().is(key)) {
        key[_unregister](this);
      }
      if (!dart.test(dart.fn(() => {
        this[_debugLifecycleState] = framework._ElementLifecycle.defunct;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3624, 12, "() {\r\n      _debugLifecycleState = _ElementLifecycle.defunct;\r\n      return true;\r\n    }()");
    }
    findRenderObject() {
      return this.renderObject;
    }
    get size() {
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size of inactive element."), new assertions.ErrorDescription.new("In order for an element to have a valid size, the element must be " + "active, which means it is part of the tree.\n" + "Instead, this element is in the " + dart.str(this[_debugLifecycleState]) + " state."), this.describeElement("The size getter was called for the following element")])));
        }
        if (dart.test(this.owner[_debugBuilding])) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size during build."), new assertions.ErrorDescription.new("The size of this render object has not yet been determined because " + "the framework is still in the process of building widgets, which " + "means the render tree for this frame has not yet been determined. " + "The size getter should only be called from paint callbacks or " + "interaction event handlers (e.g. gesture callbacks)."), new assertions.ErrorSpacer.new(), new assertions.ErrorHint.new("If you need some sizing information during build to decide which " + "widgets to build, consider using a LayoutBuilder widget, which can " + "tell you the layout constraints at a given location in the tree. See " + "<https://api.flutter.dev/flutter/widgets/LayoutBuilder-class.html> " + "for more details."), new assertions.ErrorSpacer.new(), this.describeElement("The size getter was called for the following element")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3635, 12, "() {\r\n      if (_debugLifecycleState != _ElementLifecycle.active) {\r\n        // TODO(jacobr): is this a good separation into contract and violation?\r\n        // I have added a line of white space.\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size of inactive element.'),\r\n          ErrorDescription(\r\n            'In order for an element to have a valid size, the element must be '\r\n            'active, which means it is part of the tree.\\n'\r\n            'Instead, this element is in the $_debugLifecycleState state.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      if (owner._debugBuilding) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size during build.'),\r\n          ErrorDescription(\r\n            'The size of this render object has not yet been determined because '\r\n            'the framework is still in the process of building widgets, which '\r\n            'means the render tree for this frame has not yet been determined. '\r\n            'The size getter should only be called from paint callbacks or '\r\n            'interaction event handlers (e.g. gesture callbacks).'\r\n          ),\r\n          ErrorSpacer(),\r\n          ErrorHint(\r\n            'If you need some sizing information during build to decide which '\r\n            'widgets to build, consider using a LayoutBuilder widget, which can '\r\n            'tell you the layout constraints at a given location in the tree. See '\r\n            '<https://api.flutter.dev/flutter/widgets/LayoutBuilder-class.html> '\r\n            'for more details.'\r\n          ),\r\n          ErrorSpacer(),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      let renderObject = this.findRenderObject();
      if (!dart.test(dart.fn(() => {
        if (renderObject == null) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size without a render object."), new assertions.ErrorHint.new("In order for an element to have a valid size, the element must have " + "an associated render object. This element does not have an associated " + "render object, which typically means that the size getter was called " + "too early in the pipeline (e.g., during the build phase) before the " + "framework has created the render tree."), this.describeElement("The size getter was called for the following element")])));
        }
        if (sliver.RenderSliver.is(renderObject)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a RenderSliver."), new assertions.ErrorHint.new("The render object associated with this element is a " + dart.str(dart.runtimeType(renderObject)) + ", which is a subtype of RenderSliver. " + "Slivers do not have a size per se. They have a more elaborate " + "geometry description, which can be accessed by calling " + "findRenderObject and then using the \"geometry\" getter on the " + "resulting object."), this.describeElement("The size getter was called for the following element"), renderObject.describeForError("The associated render sliver was")])));
        }
        if (!box$.RenderBox.is(renderObject)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that is not a RenderBox."), new assertions.ErrorHint.new("Instead of being a subtype of RenderBox, the render object associated " + "with this element is a " + dart.str(dart.runtimeType(renderObject)) + ". If this type of " + "render object does have a size, consider calling findRenderObject " + "and extracting its size manually."), this.describeElement("The size getter was called for the following element"), renderObject.describeForError("The associated render object was")])));
        }
        let box = box$.RenderBox.as(renderObject);
        if (!dart.test(box.hasSize)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that has not been through layout."), new assertions.ErrorHint.new("The size of this render object has not yet been determined because " + "this render object has not yet been through layout, which typically " + "means that the size getter was called too early in the pipeline " + "(e.g., during the build phase) before the framework has determined " + "the size and position of the render objects during layout."), this.describeElement("The size getter was called for the following element"), box.describeForError("The render object from which the size was to be obtained was")])));
        }
        if (dart.test(box.debugNeedsLayout)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get size from a render object that has been marked dirty for layout."), new assertions.ErrorHint.new("The size of this render object is ambiguous because this render object has " + "been modified since it was last laid out, which typically means that the size " + "getter was called too early in the pipeline (e.g., during the build phase) " + "before the framework has determined the size and position of the render " + "objects during layout."), this.describeElement("The size getter was called for the following element"), box.describeForError("The render object from which the size was to be obtained was"), new assertions.ErrorHint.new("Consider using debugPrintMarkNeedsLayoutStacks to determine why the render " + "object in question is dirty, if you did not expect this.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3674, 12, "() {\r\n      if (renderObject == null) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size without a render object.'),\r\n          ErrorHint(\r\n            'In order for an element to have a valid size, the element must have '\r\n            'an associated render object. This element does not have an associated '\r\n            'render object, which typically means that the size getter was called '\r\n            'too early in the pipeline (e.g., during the build phase) before the '\r\n            'framework has created the render tree.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n        ]);\r\n      }\r\n      if (renderObject is RenderSliver) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a RenderSliver.'),\r\n          ErrorHint(\r\n            'The render object associated with this element is a '\r\n            '${renderObject.runtimeType}, which is a subtype of RenderSliver. '\r\n            'Slivers do not have a size per se. They have a more elaborate '\r\n            'geometry description, which can be accessed by calling '\r\n            'findRenderObject and then using the \"geometry\" getter on the '\r\n            'resulting object.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          renderObject.describeForError('The associated render sliver was'),\r\n        ]);\r\n      }\r\n      if (renderObject is! RenderBox) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that is not a RenderBox.'),\r\n          ErrorHint(\r\n            'Instead of being a subtype of RenderBox, the render object associated '\r\n            'with this element is a ${renderObject.runtimeType}. If this type of '\r\n            'render object does have a size, consider calling findRenderObject '\r\n            'and extracting its size manually.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          renderObject.describeForError('The associated render object was'),\r\n        ]);\r\n      }\r\n      final RenderBox box = renderObject as RenderBox;\r\n      if (!box.hasSize) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that has not been through layout.'),\r\n          ErrorHint(\r\n            'The size of this render object has not yet been determined because '\r\n            'this render object has not yet been through layout, which typically '\r\n            'means that the size getter was called too early in the pipeline '\r\n            '(e.g., during the build phase) before the framework has determined '\r\n           'the size and position of the render objects during layout.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          box.describeForError('The render object from which the size was to be obtained was'),\r\n        ]);\r\n      }\r\n      if (box.debugNeedsLayout) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Cannot get size from a render object that has been marked dirty for layout.'),\r\n          ErrorHint(\r\n            'The size of this render object is ambiguous because this render object has '\r\n            'been modified since it was last laid out, which typically means that the size '\r\n            'getter was called too early in the pipeline (e.g., during the build phase) '\r\n            'before the framework has determined the size and position of the render '\r\n            'objects during layout.'\r\n          ),\r\n          describeElement('The size getter was called for the following element'),\r\n          box.describeForError('The render object from which the size was to be obtained was'),\r\n          ErrorHint(\r\n            'Consider using debugPrintMarkNeedsLayoutStacks to determine why the render '\r\n            'object in question is dirty, if you did not expect this.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (box$.RenderBox.is(renderObject)) return renderObject.size;
      return null;
    }
    [_debugCheckStateIsActiveForAncestorLookup]() {
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Looking up a deactivated widget's ancestor is unsafe."), new assertions.ErrorDescription.new("At this point the state of the widget's element tree is no longer " + "stable."), new assertions.ErrorHint.new("To safely refer to a widget's ancestor in its dispose() method, " + "save a reference to the ancestor by calling dependOnInheritedWidgetOfExactType() " + "in the widget's didChangeDependencies() method.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3761, 12, "() {\r\n      if (_debugLifecycleState != _ElementLifecycle.active) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Looking up a deactivated widget\\'s ancestor is unsafe.'),\r\n          ErrorDescription(\r\n            'At this point the state of the widget\\'s element tree is no longer '\r\n            'stable.'\r\n          ),\r\n          ErrorHint(\r\n            'To safely refer to a widget\\'s ancestor in its dispose() method, '\r\n            'save a reference to the ancestor by calling dependOnInheritedWidgetOfExactType() '\r\n            'in the widget\\'s didChangeDependencies() method.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
    inheritFromElement(ancestor, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      return this.dependOnInheritedElement(ancestor, {aspect: aspect});
    }
    dependOnInheritedElement(ancestor, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!(ancestor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3793, 12, "ancestor != null");
      this[_dependencies] == null ? this[_dependencies] = new (_HashSetOfInheritedElement()).new() : null;
      this[_dependencies].add(ancestor);
      ancestor.updateDependencies(this, aspect);
      return ancestor.widget;
    }
    inheritFromWidgetOfExactType(targetType, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3807, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : this[_inheritedWidgets][$_get](targetType);
      if (ancestor != null) {
        if (!framework.InheritedElement.is(ancestor)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3810, 14, "ancestor is InheritedElement");
        return this.inheritFromElement(ancestor, {aspect: aspect});
      }
      this[_hadUnsatisfiedDependencies] = true;
      return null;
    }
    dependOnInheritedWidgetOfExactType(T, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3819, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : this[_inheritedWidgets][$_get](dart.wrapType(T));
      if (ancestor != null) {
        if (!framework.InheritedElement.is(ancestor)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3822, 14, "ancestor is InheritedElement");
        return T.as(this.dependOnInheritedElement(ancestor, {aspect: aspect}));
      }
      this[_hadUnsatisfiedDependencies] = true;
      return null;
    }
    ancestorInheritedElementForWidgetOfExactType(targetType) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3836, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : this[_inheritedWidgets][$_get](targetType);
      return ancestor;
    }
    getElementForInheritedWidgetOfExactType(T) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3843, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_inheritedWidgets] == null ? null : this[_inheritedWidgets][$_get](dart.wrapType(T));
      return ancestor;
    }
    [_updateInheritance]() {
      let t3;
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3849, 12, "_active");
      this[_inheritedWidgets] = (t3 = this[_parent], t3 == null ? null : t3[_inheritedWidgets]);
    }
    ancestorWidgetOfExactType(targetType) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3860, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && !dart.equals(dart.runtimeType(ancestor.widget), targetType))
        ancestor = ancestor[_parent];
      t3 = ancestor;
      return t3 == null ? null : t3.widget;
    }
    findAncestorWidgetOfExactType(T) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3869, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && !dart.equals(dart.runtimeType(ancestor.widget), dart.wrapType(T)))
        ancestor = ancestor[_parent];
      return T.as((t3 = ancestor, t3 == null ? null : t3.widget));
    }
    ancestorStateOfType(matcher) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3883, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && dart.test(matcher.check(ancestor.state))) break;
        ancestor = ancestor[_parent];
      }
      let statefulAncestor = framework.StatefulElement.as(ancestor);
      t3 = statefulAncestor;
      return t3 == null ? null : t3.state;
    }
    findAncestorStateOfType(T) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3896, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && T.is(ancestor.state)) break;
        ancestor = ancestor[_parent];
      }
      let statefulAncestor = framework.StatefulElement.as(ancestor);
      return T.as((t3 = statefulAncestor, t3 == null ? null : t3.state));
    }
    rootAncestorStateOfType(matcher) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3914, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      let statefulAncestor = null;
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && dart.test(matcher.check(ancestor.state))) statefulAncestor = ancestor;
        ancestor = ancestor[_parent];
      }
      t3 = statefulAncestor;
      return t3 == null ? null : t3.state;
    }
    findRootAncestorStateOfType(T) {
      let t3;
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3927, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      let statefulAncestor = null;
      while (ancestor != null) {
        if (framework.StatefulElement.is(ancestor) && T.is(ancestor.state)) statefulAncestor = ancestor;
        ancestor = ancestor[_parent];
      }
      return T.as((t3 = statefulAncestor, t3 == null ? null : t3.state));
    }
    ancestorRenderObjectOfType(matcher) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3945, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.RenderObjectElement.is(ancestor) && dart.test(matcher.check(ancestor.renderObject))) return ancestor.renderObject;
        ancestor = ancestor[_parent];
      }
      return null;
    }
    findAncestorRenderObjectOfType(T) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3957, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null) {
        if (framework.RenderObjectElement.is(ancestor) && T.is(ancestor.renderObject)) return T.as(ancestor.renderObject);
        ancestor = ancestor[_parent];
      }
      return null;
    }
    visitAncestorElements(visitor) {
      if (!dart.test(this[_debugCheckStateIsActiveForAncestorLookup]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3969, 12, "_debugCheckStateIsActiveForAncestorLookup()");
      let ancestor = this[_parent];
      while (ancestor != null && dart.test(visitor(ancestor)))
        ancestor = ancestor[_parent];
    }
    didChangeDependencies() {
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3985, 12, "_active");
      if (!dart.test(this[_debugCheckOwnerBuildTargetExists]("didChangeDependencies"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3986, 12, "_debugCheckOwnerBuildTargetExists('didChangeDependencies')");
      this.markNeedsBuild();
    }
    [_debugCheckOwnerBuildTargetExists](methodName) {
      if (!dart.test(dart.fn(() => {
        if (this.owner[_debugCurrentBuildTarget] == null) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(methodName) + " for " + dart.str(dart.runtimeType(this.widget)) + " was called at an " + "inappropriate time."), new assertions.ErrorDescription.new("It may only be called while the widgets are being built."), new assertions.ErrorHint.new("A possible cause of this error is when " + dart.str(methodName) + " is called during " + "one of:\n" + " * network I/O event\n" + " * file I/O event\n" + " * timer\n" + " * microtask (caused by Future.then, async/await, scheduleMicrotask)")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 3991, 12, "() {\r\n      if (owner._debugCurrentBuildTarget == null) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary(\r\n            '$methodName for ${widget.runtimeType} was called at an '\r\n            'inappropriate time.'\r\n          ),\r\n          ErrorDescription('It may only be called while the widgets are being built.'),\r\n          ErrorHint(\r\n            'A possible cause of this error is when $methodName is called during '\r\n            'one of:\\n'\r\n            ' * network I/O event\\n'\r\n            ' * file I/O event\\n'\r\n            ' * timer\\n'\r\n            ' * microtask (caused by Future.then, async/await, scheduleMicrotask)'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
    debugGetCreatorChain(limit) {
      let chain = JSArrayOfString().of([]);
      let node = this;
      while (dart.notNull(chain[$length]) < dart.notNull(limit) && node != null) {
        chain[$add](node.toStringShort());
        node = node[_parent];
      }
      if (node != null) chain[$add]("⋯");
      return chain[$join](" ← ");
    }
    debugGetDiagnosticChain() {
      let chain = JSArrayOfElement().of([this]);
      let node = this[_parent];
      while (node != null) {
        chain[$add](node);
        node = node[_parent];
      }
      return chain;
    }
    toStringShort() {
      return this.widget != null ? this.widget.toStringShort() : "[" + dart.str(object.objectRuntimeType(this, "Element")) + "]";
    }
    toDiagnosticsNode(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let style = opts && 'style' in opts ? opts.style : null;
      return new framework._ElementDiagnosticableTreeNode.new({name: name, value: this, style: style});
    }
    debugFillProperties(properties) {
      let t3;
      super.debugFillProperties(properties);
      properties.defaultDiagnosticsTreeStyle = diagnostics$.DiagnosticsTreeStyle.dense;
      properties.add(new (ObjectFlagPropertyOfint()).new("depth", this.depth, {ifNull: "no depth"}));
      properties.add(new (ObjectFlagPropertyOfWidget()).new("widget", this.widget, {ifNull: "no widget"}));
      if (this.widget != null) {
        properties.add(new (DiagnosticsPropertyOfKey()).new("key", (t3 = this.widget, t3 == null ? null : t3.key), {showName: false, defaultValue: null, level: diagnostics$.DiagnosticLevel.hidden}));
        this.widget.debugFillProperties(properties);
      }
      properties.add(new diagnostics$.FlagProperty.new("dirty", {value: this.dirty, ifTrue: "dirty"}));
      if (this[_dependencies] != null && dart.test(this[_dependencies][$isNotEmpty])) {
        let diagnosticsDependencies = this[_dependencies][$map](diagnostics$.DiagnosticsNode, dart.fn(element => element.widget.toDiagnosticsNode({style: diagnostics$.DiagnosticsTreeStyle.sparse}), InheritedElementToDiagnosticsNode()))[$toList]();
        properties.add(new (DiagnosticsPropertyOfListOfDiagnosticsNode()).new("dependencies", diagnosticsDependencies));
      }
    }
    debugDescribeChildren() {
      let children = JSArrayOfDiagnosticsNode().of([]);
      this.visitChildren(dart.fn(child => {
        if (child != null) {
          children[$add](child.toDiagnosticsNode());
        } else {
          children[$add](diagnostics$.DiagnosticsNode.message("<null child>"));
        }
      }, ElementToNull()));
      return children;
    }
    get dirty() {
      return this[_dirty];
    }
    [_debugSetAllowIgnoredCallsToMarkNeedsBuild](value) {
      if (!dart.equals(this[_debugAllowIgnoredCallsToMarkNeedsBuild], !dart.test(value))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4107, 12, "_debugAllowIgnoredCallsToMarkNeedsBuild == !value");
      this[_debugAllowIgnoredCallsToMarkNeedsBuild] = value;
      return true;
    }
    markNeedsBuild() {
      if (!!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.defunct)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4120, 12, "_debugLifecycleState != _ElementLifecycle.defunct");
      if (!dart.test(this[_active])) return;
      if (!(this.owner != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4123, 12, "owner != null");
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4124, 12, "_debugLifecycleState == _ElementLifecycle.active");
      if (!dart.test(dart.fn(() => {
        if (dart.test(this.owner[_debugBuilding])) {
          if (!(this.owner[_debugCurrentBuildTarget] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4127, 16, "owner._debugCurrentBuildTarget != null");
          if (!dart.test(this.owner[_debugStateLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4128, 16, "owner._debugStateLocked");
          if (dart.test(this[_debugIsInScope](this.owner[_debugCurrentBuildTarget]))) return true;
          if (!dart.test(this[_debugAllowIgnoredCallsToMarkNeedsBuild])) {
            let information = JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() or markNeedsBuild() called during build."), new assertions.ErrorDescription.new("This " + dart.str(dart.runtimeType(this.widget)) + " widget cannot be marked as needing to build because the framework " + "is already in the process of building widgets.  A widget can be marked as " + "needing to be built during the build phase only if one of its ancestors " + "is currently building. This exception is allowed because the framework " + "builds parent widgets before children, which means a dirty descendant " + "will always be built. Otherwise, the framework might not visit this " + "widget during this build phase."), this.describeElement("The widget on which setState() or markNeedsBuild() was called was")]);
            if (this.owner[_debugCurrentBuildTarget] != null) information[$add](this.owner[_debugCurrentBuildTarget].describeWidget("The widget which was currently being built when the offending call was made was"));
            dart.throw(new assertions.FlutterError.fromParts(information));
          }
          if (!dart.test(this.dirty)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4151, 16, "dirty");
        } else if (dart.test(this.owner[_debugStateLocked])) {
          if (!!dart.test(this[_debugAllowIgnoredCallsToMarkNeedsBuild])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4153, 16, "!_debugAllowIgnoredCallsToMarkNeedsBuild");
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("setState() or markNeedsBuild() called when widget tree was locked."), new assertions.ErrorDescription.new("This " + dart.str(dart.runtimeType(this.widget)) + " widget cannot be marked as needing to build " + "because the framework is locked."), this.describeElement("The widget on which setState() or markNeedsBuild() was called was")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4125, 12, "() {\r\n      if (owner._debugBuilding) {\r\n        assert(owner._debugCurrentBuildTarget != null);\r\n        assert(owner._debugStateLocked);\r\n        if (_debugIsInScope(owner._debugCurrentBuildTarget))\r\n          return true;\r\n        if (!_debugAllowIgnoredCallsToMarkNeedsBuild) {\r\n          final List<DiagnosticsNode> information = <DiagnosticsNode>[\r\n            ErrorSummary('setState() or markNeedsBuild() called during build.'),\r\n            ErrorDescription(\r\n              'This ${widget.runtimeType} widget cannot be marked as needing to build because the framework '\r\n              'is already in the process of building widgets.  A widget can be marked as '\r\n              'needing to be built during the build phase only if one of its ancestors '\r\n              'is currently building. This exception is allowed because the framework '\r\n              'builds parent widgets before children, which means a dirty descendant '\r\n              'will always be built. Otherwise, the framework might not visit this '\r\n              'widget during this build phase.'\r\n            ),\r\n            describeElement(\r\n              'The widget on which setState() or markNeedsBuild() was called was',\r\n            ),\r\n          ];\r\n          if (owner._debugCurrentBuildTarget != null)\r\n            information.add(owner._debugCurrentBuildTarget.describeWidget('The widget which was currently being built when the offending call was made was'));\r\n          throw FlutterError.fromParts(information);\r\n        }\r\n        assert(dirty); // can only get here if we're not in scope, but ignored calls are allowed, and our call would somehow be ignored (since we're already dirty)\r\n      } else if (owner._debugStateLocked) {\r\n        assert(!_debugAllowIgnoredCallsToMarkNeedsBuild);\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('setState() or markNeedsBuild() called when widget tree was locked.'),\r\n          ErrorDescription(\r\n            'This ${widget.runtimeType} widget cannot be marked as needing to build '\r\n            'because the framework is locked.'\r\n          ),\r\n          describeElement('The widget on which setState() or markNeedsBuild() was called was'),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.test(this.dirty)) return;
      this[_dirty] = true;
      this.owner.scheduleBuildFor(this);
    }
    rebuild() {
      if (!!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.initial)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4175, 12, "_debugLifecycleState != _ElementLifecycle.initial");
      if (!dart.test(this[_active]) || !dart.test(this[_dirty])) return;
      if (!dart.test(dart.fn(() => {
        if (debug$0.debugOnRebuildDirtyWidget != null) {
          debug$0.debugOnRebuildDirtyWidget(this, this[_debugBuiltOnce]);
        }
        if (dart.test(debug$0.debugPrintRebuildDirtyWidgets)) {
          if (!dart.test(this[_debugBuiltOnce])) {
            print.debugPrint("Building " + dart.str(this));
            this[_debugBuiltOnce] = true;
          } else {
            print.debugPrint("Rebuilding " + dart.str(this));
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4178, 12, "() {\r\n      if (debugOnRebuildDirtyWidget != null) {\r\n        debugOnRebuildDirtyWidget(this, _debugBuiltOnce);\r\n      }\r\n      if (debugPrintRebuildDirtyWidgets) {\r\n        if (!_debugBuiltOnce) {\r\n          debugPrint('Building $this');\r\n          _debugBuiltOnce = true;\r\n        } else {\r\n          debugPrint('Rebuilding $this');\r\n        }\r\n      }\r\n      return true;\r\n    }()");
      if (!dart.equals(this[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4192, 12, "_debugLifecycleState == _ElementLifecycle.active");
      if (!dart.test(this.owner[_debugStateLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4193, 12, "owner._debugStateLocked");
      let debugPreviousBuildTarget = null;
      if (!dart.test(dart.fn(() => {
        debugPreviousBuildTarget = this.owner[_debugCurrentBuildTarget];
        this.owner[_debugCurrentBuildTarget] = this;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4195, 12, "() {\r\n      debugPreviousBuildTarget = owner._debugCurrentBuildTarget;\r\n      owner._debugCurrentBuildTarget = this;\r\n      return true;\r\n    }()");
      this.performRebuild();
      if (!dart.test(dart.fn(() => {
        if (!dart.equals(this.owner[_debugCurrentBuildTarget], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4202, 14, "owner._debugCurrentBuildTarget == this");
        this.owner[_debugCurrentBuildTarget] = debugPreviousBuildTarget;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4201, 12, "() {\r\n      assert(owner._debugCurrentBuildTarget == this);\r\n      owner._debugCurrentBuildTarget = debugPreviousBuildTarget;\r\n      return true;\r\n    }()");
      if (!!dart.test(this[_dirty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4206, 12, "!_dirty");
    }
  };
  (framework.Element.new = function(widget) {
    this[_parent] = null;
    this[_cachedHash] = framework.Element._nextHashCode = (dart.notNull(framework.Element._nextHashCode) + 1)[$modulo](16777215);
    this[_slot] = null;
    this[_depth] = null;
    this[_owner] = null;
    this[_active] = false;
    this[_debugLifecycleState] = framework._ElementLifecycle.initial;
    this[_debugForgottenChildrenWithGlobalKey] = new (_HashSetOfElement()).new();
    this[_inheritedWidgets] = null;
    this[_dependencies] = null;
    this[_hadUnsatisfiedDependencies] = false;
    this[_dirty] = true;
    this[_inDirtyList] = false;
    this[_debugBuiltOnce] = false;
    this[_debugAllowIgnoredCallsToMarkNeedsBuild] = false;
    if (!(widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 2865, 14, "widget != null");
    this[_widget] = widget;
    framework.Element.__proto__.new.call(this);
    ;
  }).prototype = framework.Element.prototype;
  dart.addTypeTests(framework.Element);
  framework.Element[dart.implements] = () => [framework.BuildContext];
  dart.setMethodSignature(framework.Element, () => ({
    __proto__: dart.getMethods(framework.Element.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object]),
    reassemble: dart.fnType(dart.void, []),
    [_debugIsInScope]: dart.fnType(core.bool, [framework.Element]),
    describeMissingAncestor: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [], {expectedAncestorType: core.Type}, {}),
    describeElement: dart.fnType(diagnostics$.DiagnosticsNode, [core.String], {style: diagnostics$.DiagnosticsTreeStyle}, {}),
    describeWidget: dart.fnType(diagnostics$.DiagnosticsNode, [core.String], {style: diagnostics$.DiagnosticsTreeStyle}, {}),
    describeOwnershipChain: dart.fnType(diagnostics$.DiagnosticsNode, [core.String]),
    visitChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    debugVisitOnstageChildren: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    visitChildElements: dart.fnType(dart.void, [dart.fnType(dart.void, [framework.Element])]),
    updateChild: dart.fnType(framework.Element, [framework.Element, framework.Widget, dart.dynamic]),
    mount: dart.fnType(dart.void, [framework.Element, dart.dynamic]),
    [_debugRemoveGlobalKeyReservation]: dart.fnType(dart.void, [framework.Element]),
    update: dart.fnType(dart.void, [core.Object]),
    updateSlotForChild: dart.fnType(dart.void, [framework.Element, dart.dynamic]),
    [_updateSlot]: dart.fnType(dart.void, [dart.dynamic]),
    [_updateDepth]: dart.fnType(dart.void, [core.int]),
    detachRenderObject: dart.fnType(dart.void, []),
    attachRenderObject: dart.fnType(dart.void, [dart.dynamic]),
    [_retakeInactiveElement]: dart.fnType(framework.Element, [framework.GlobalKey$(framework.State$(framework.StatefulWidget)), framework.Widget]),
    inflateWidget: dart.fnType(framework.Element, [framework.Widget, dart.dynamic]),
    [_debugCheckForCycles]: dart.fnType(dart.void, [framework.Element]),
    deactivateChild: dart.fnType(dart.void, [framework.Element]),
    forgetChild: dart.fnType(dart.void, [framework.Element]),
    [_activateWithParent]: dart.fnType(dart.void, [framework.Element, dart.dynamic]),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    debugDeactivated: dart.fnType(dart.void, []),
    unmount: dart.fnType(dart.void, []),
    findRenderObject: dart.fnType(object$.RenderObject, []),
    [_debugCheckStateIsActiveForAncestorLookup]: dart.fnType(core.bool, []),
    inheritFromElement: dart.fnType(framework.InheritedWidget, [framework.InheritedElement], {aspect: core.Object}, {}),
    dependOnInheritedElement: dart.fnType(framework.InheritedWidget, [framework.InheritedElement], {aspect: core.Object}, {}),
    inheritFromWidgetOfExactType: dart.fnType(framework.InheritedWidget, [core.Type], {aspect: core.Object}, {}),
    dependOnInheritedWidgetOfExactType: dart.gFnType(T => [T, [], {aspect: core.Object}, {}], T => [framework.InheritedWidget]),
    ancestorInheritedElementForWidgetOfExactType: dart.fnType(framework.InheritedElement, [core.Type]),
    getElementForInheritedWidgetOfExactType: dart.gFnType(T => [framework.InheritedElement, []], T => [framework.InheritedWidget]),
    [_updateInheritance]: dart.fnType(dart.void, []),
    ancestorWidgetOfExactType: dart.fnType(framework.Widget, [core.Type]),
    findAncestorWidgetOfExactType: dart.gFnType(T => [T, []], T => [framework.Widget]),
    ancestorStateOfType: dart.fnType(framework.State$(framework.StatefulWidget), [framework.TypeMatcher]),
    findAncestorStateOfType: dart.gFnType(T => [T, []], T => [framework.State$(framework.StatefulWidget)]),
    rootAncestorStateOfType: dart.fnType(framework.State$(framework.StatefulWidget), [framework.TypeMatcher]),
    findRootAncestorStateOfType: dart.gFnType(T => [T, []], T => [framework.State$(framework.StatefulWidget)]),
    ancestorRenderObjectOfType: dart.fnType(object$.RenderObject, [framework.TypeMatcher]),
    findAncestorRenderObjectOfType: dart.gFnType(T => [T, []], T => [object$.RenderObject]),
    visitAncestorElements: dart.fnType(dart.void, [dart.fnType(core.bool, [framework.Element])]),
    didChangeDependencies: dart.fnType(dart.void, []),
    [_debugCheckOwnerBuildTargetExists]: dart.fnType(core.bool, [core.String]),
    debugGetCreatorChain: dart.fnType(core.String, [core.int]),
    debugGetDiagnosticChain: dart.fnType(core.List$(framework.Element), []),
    [_debugSetAllowIgnoredCallsToMarkNeedsBuild]: dart.fnType(core.bool, [core.bool]),
    markNeedsBuild: dart.fnType(dart.void, []),
    rebuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(framework.Element, () => ({
    __proto__: dart.getGetters(framework.Element.__proto__),
    slot: dart.dynamic,
    depth: core.int,
    widget: framework.Widget,
    owner: framework.BuildOwner,
    renderObject: object$.RenderObject,
    size: ui.Size,
    dirty: core.bool
  }));
  dart.setLibraryUri(framework.Element, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.Element, () => ({
    __proto__: dart.getFields(framework.Element.__proto__),
    [_parent]: dart.fieldType(framework.Element),
    [_cachedHash]: dart.finalFieldType(core.int),
    [_slot]: dart.fieldType(dart.dynamic),
    [_depth]: dart.fieldType(core.int),
    [_widget]: dart.fieldType(framework.Widget),
    [_owner]: dart.fieldType(framework.BuildOwner),
    [_active]: dart.fieldType(core.bool),
    [_debugLifecycleState]: dart.fieldType(framework._ElementLifecycle),
    [_debugForgottenChildrenWithGlobalKey]: dart.finalFieldType(core.Set$(framework.Element)),
    [_inheritedWidgets]: dart.fieldType(core.Map$(core.Type, framework.InheritedElement)),
    [_dependencies]: dart.fieldType(core.Set$(framework.InheritedElement)),
    [_hadUnsatisfiedDependencies]: dart.fieldType(core.bool),
    [_dirty]: dart.fieldType(core.bool),
    [_inDirtyList]: dart.fieldType(core.bool),
    [_debugBuiltOnce]: dart.fieldType(core.bool),
    [_debugAllowIgnoredCallsToMarkNeedsBuild]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(framework.Element, ['_equals']);
  dart.defineExtensionAccessors(framework.Element, ['hashCode']);
  dart.defineLazy(framework.Element, {
    /*framework.Element._nextHashCode*/get _nextHashCode() {
      return 1;
    },
    set _nextHashCode(_) {}
  });
  framework._ElementDiagnosticableTreeNode = class _ElementDiagnosticableTreeNode extends diagnostics$.DiagnosticableTreeNode {
    toJsonMap(delegate) {
      let t3, t3$;
      let json = super.toJsonMap(delegate);
      let element = framework.Element.as(this.value);
      json[$_set]("widgetRuntimeType", (t3$ = (t3 = element.widget, t3 == null ? null : dart.runtimeType(t3)), t3$ == null ? null : dart.toString(t3$)));
      json[$_set]("stateful", this.stateful);
      return json;
    }
  };
  (framework._ElementDiagnosticableTreeNode.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let stateful = opts && 'stateful' in opts ? opts.stateful : false;
    this.stateful = stateful;
    framework._ElementDiagnosticableTreeNode.__proto__.new.call(this, {name: name, value: value, style: style});
    ;
  }).prototype = framework._ElementDiagnosticableTreeNode.prototype;
  dart.addTypeTests(framework._ElementDiagnosticableTreeNode);
  dart.setLibraryUri(framework._ElementDiagnosticableTreeNode, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework._ElementDiagnosticableTreeNode, () => ({
    __proto__: dart.getFields(framework._ElementDiagnosticableTreeNode.__proto__),
    stateful: dart.finalFieldType(core.bool)
  }));
  var _flutterError = dart.privateName(framework, "_flutterError");
  var C39;
  var C40;
  var C38;
  var C37;
  var message$ = dart.privateName(framework, "ErrorWidget.message");
  var C41;
  framework.ErrorWidget = class ErrorWidget extends framework.LeafRenderObjectWidget {
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    static _defaultErrorWidgetBuilder(details) {
      let message = "";
      if (!dart.test(dart.fn(() => {
        message = dart.notNull(framework.ErrorWidget._stringify(details.exception)) + "\nSee also: https://flutter.dev/docs/testing/errors";
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4356, 12, "() {\r\n      message = _stringify(details.exception) + '\\nSee also: https://flutter.dev/docs/testing/errors';\r\n      return true;\r\n    }()");
      let exception = details.exception;
      return new framework.ErrorWidget.withDetails({message: message, error: assertions.FlutterError.is(exception) ? exception : null, $creationLocationd_0dea112b090073317d4: C37 || CT.C37});
    }
    static _stringify(exception) {
      try {
        return dart.toString(exception);
      } catch (e$) {
        let e = dart.getThrown(e$);
      }
      return "Error";
    }
    createRenderObject(context) {
      return new error.RenderErrorBox.new(this.message);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      if (this[_flutterError] == null)
        properties.add(new diagnostics$.StringProperty.new("message", this.message, {quoted: false}));
      else
        properties.add(this[_flutterError].toDiagnosticsNode({style: diagnostics$.DiagnosticsTreeStyle.whitespace}));
    }
  };
  (framework.ErrorWidget.new = function(exception, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$] = framework.ErrorWidget._stringify(exception);
    this[_flutterError] = assertions.FlutterError.is(exception) ? exception : null;
    framework.ErrorWidget.__proto__.new.call(this, {key: new framework.UniqueKey.new(), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ErrorWidget.prototype;
  (framework.ErrorWidget.withDetails = function(opts) {
    let message = opts && 'message' in opts ? opts.message : "";
    let error = opts && 'error' in opts ? opts.error : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[message$] = message;
    this[_flutterError] = error;
    framework.ErrorWidget.__proto__.new.call(this, {key: new framework.UniqueKey.new(), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = framework.ErrorWidget.prototype;
  dart.addTypeTests(framework.ErrorWidget);
  dart.setMethodSignature(framework.ErrorWidget, () => ({
    __proto__: dart.getMethods(framework.ErrorWidget.__proto__),
    createRenderObject: dart.fnType(box$.RenderBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(framework.ErrorWidget, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.ErrorWidget, () => ({
    __proto__: dart.getFields(framework.ErrorWidget.__proto__),
    message: dart.finalFieldType(core.String),
    [_flutterError]: dart.finalFieldType(assertions.FlutterError)
  }));
  dart.defineLazy(framework.ErrorWidget, {
    /*framework.ErrorWidget.builder*/get builder() {
      return C41 || CT.C41;
    },
    set builder(_) {}
  });
  var _child = dart.privateName(framework, "_child");
  var _firstBuild = dart.privateName(framework, "_firstBuild");
  framework.ComponentElement = class ComponentElement extends framework.Element {
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      if (!(this[_child] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4452, 12, "_child == null");
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4453, 12, "_active");
      this[_firstBuild]();
      if (!(this[_child] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4455, 12, "_child != null");
    }
    [_firstBuild]() {
      this.rebuild();
    }
    performRebuild() {
      if (!false && dart.test(debug$0.debugProfileBuildsEnabled)) developer.Timeline.startSync(dart.str(dart.runtimeType(this.widget)), {arguments: debug.timelineWhitelistArguments});
      if (!dart.test(this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4473, 12, "_debugSetAllowIgnoredCallsToMarkNeedsBuild(true)");
      let built = null;
      try {
        built = this.build();
        debug$0.debugWidgetBuilderValue(this.widget, built);
      } catch (e$) {
        let e = dart.getThrown(e$);
        let stack = dart.stackTrace(e$);
        built = framework.ErrorWidget.builder(framework._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsDebugCreator()).new((function*() {
            yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
          }).bind(this)), VoidToIterableOfDiagnosticsDebugCreator())}));
      } finally {
        this[_dirty] = false;
        if (!dart.test(this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4493, 14, "_debugSetAllowIgnoredCallsToMarkNeedsBuild(false)");
      }
      try {
        this[_child] = this.updateChild(this[_child], built, this.slot);
        if (!(this[_child] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4497, 14, "_child != null");
      } catch (e$0) {
        let e = dart.getThrown(e$0);
        let stack = dart.stackTrace(e$0);
        built = framework.ErrorWidget.builder(framework._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsDebugCreator()).new((function*() {
            yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
          }).bind(this)), VoidToIterableOfDiagnosticsDebugCreator())}));
        this[_child] = this.updateChild(null, built, this.slot);
      }
      if (!false && dart.test(debug$0.debugProfileBuildsEnabled)) developer.Timeline.finishSync();
    }
    visitChildren(visitor) {
      if (this[_child] != null) visitor(this[_child]);
    }
    forgetChild(child) {
      if (!dart.equals(child, this[_child])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4530, 12, "child == _child");
      this[_child] = null;
      super.forgetChild(child);
    }
  };
  (framework.ComponentElement.new = function(widget) {
    this[_child] = null;
    framework.ComponentElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.ComponentElement.prototype;
  dart.addTypeTests(framework.ComponentElement);
  dart.setMethodSignature(framework.ComponentElement, () => ({
    __proto__: dart.getMethods(framework.ComponentElement.__proto__),
    [_firstBuild]: dart.fnType(dart.void, []),
    performRebuild: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(framework.ComponentElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.ComponentElement, () => ({
    __proto__: dart.getFields(framework.ComponentElement.__proto__),
    [_child]: dart.fieldType(framework.Element)
  }));
  framework.StatelessElement = class StatelessElement extends framework.ComponentElement {
    get widget() {
      return framework.StatelessWidget.as(super.widget);
    }
    build() {
      return this.widget.build(this);
    }
    update(newWidget) {
      framework.StatelessWidget._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4550, 12, "widget == newWidget");
      this[_dirty] = true;
      this.rebuild();
    }
  };
  (framework.StatelessElement.new = function(widget) {
    framework.StatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.StatelessElement.prototype;
  dart.addTypeTests(framework.StatelessElement);
  dart.setMethodSignature(framework.StatelessElement, () => ({
    __proto__: dart.getMethods(framework.StatelessElement.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setGetterSignature(framework.StatelessElement, () => ({
    __proto__: dart.getGetters(framework.StatelessElement.__proto__),
    widget: framework.StatelessWidget
  }));
  dart.setLibraryUri(framework.StatelessElement, "package:flutter/src/widgets/framework.dart");
  var _didChangeDependencies = dart.privateName(framework, "_didChangeDependencies");
  var _state = dart.privateName(framework, "_state");
  framework.StatefulElement = class StatefulElement extends framework.ComponentElement {
    build() {
      return this[_state].build(this);
    }
    get state() {
      return this[_state];
    }
    reassemble() {
      this.state.reassemble();
      super.reassemble();
    }
    [_firstBuild]() {
      if (!dart.equals(this[_state][_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4606, 12, "_state._debugLifecycleState == _StateLifecycle.created");
      try {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
        let debugCheckForReturnedFuture = this[_state].initState();
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(debugCheckForReturnedFuture)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this[_state])) + ".initState() returned a Future."), new assertions.ErrorDescription.new("State.initState() must be a void method without an `async` keyword."), new assertions.ErrorHint.new("Rather than awaiting on asynchronous work directly inside of initState, " + "call a separate method to do this work without awaiting it.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4610, 14, "() {\r\n        if (debugCheckForReturnedFuture is Future) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('${_state.runtimeType}.initState() returned a Future.'),\r\n            ErrorDescription('State.initState() must be a void method without an `async` keyword.'),\r\n            ErrorHint(\r\n              'Rather than awaiting on asynchronous work directly inside of initState, '\r\n              'call a separate method to do this work without awaiting it.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
      }
      if (!dart.test(dart.fn(() => {
        this[_state][_debugLifecycleState] = framework._StateLifecycle.initialized;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4626, 12, "() {\r\n      _state._debugLifecycleState = _StateLifecycle.initialized;\r\n      return true;\r\n    }()");
      this[_state].didChangeDependencies();
      if (!dart.test(dart.fn(() => {
        this[_state][_debugLifecycleState] = framework._StateLifecycle.ready;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4631, 12, "() {\r\n      _state._debugLifecycleState = _StateLifecycle.ready;\r\n      return true;\r\n    }()");
      super[_firstBuild]();
    }
    performRebuild() {
      if (dart.test(this[_didChangeDependencies])) {
        this[_state].didChangeDependencies();
        this[_didChangeDependencies] = false;
      }
      super.performRebuild();
    }
    update(newWidget) {
      framework.StatefulWidget._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4650, 12, "widget == newWidget");
      let oldWidget = this[_state][_widget];
      this[_dirty] = true;
      this[_state][_widget] = framework.StatefulWidget.as(this.widget);
      try {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](true);
        let debugCheckForReturnedFuture = this[_state].didUpdateWidget(oldWidget);
        if (!dart.test(dart.fn(() => {
          if (async.Future.is(debugCheckForReturnedFuture)) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this[_state])) + ".didUpdateWidget() returned a Future."), new assertions.ErrorDescription.new("State.didUpdateWidget() must be a void method without an `async` keyword."), new assertions.ErrorHint.new("Rather than awaiting on asynchronous work directly inside of didUpdateWidget, " + "call a separate method to do this work without awaiting it.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4660, 14, "() {\r\n        if (debugCheckForReturnedFuture is Future) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('${_state.runtimeType}.didUpdateWidget() returned a Future.'),\r\n            ErrorDescription( 'State.didUpdateWidget() must be a void method without an `async` keyword.'),\r\n            ErrorHint(\r\n              'Rather than awaiting on asynchronous work directly inside of didUpdateWidget, '\r\n              'call a separate method to do this work without awaiting it.'\r\n            ),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      } finally {
        this[_debugSetAllowIgnoredCallsToMarkNeedsBuild](false);
      }
      this.rebuild();
    }
    activate() {
      super.activate();
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4685, 12, "_active");
      this.markNeedsBuild();
    }
    deactivate() {
      this[_state].deactivate();
      super.deactivate();
    }
    unmount() {
      super.unmount();
      this[_state].dispose();
      if (!dart.test(dart.fn(() => {
        if (dart.equals(this[_state][_debugLifecycleState], framework._StateLifecycle.defunct)) return true;
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this[_state])) + ".dispose failed to call super.dispose."), new assertions.ErrorDescription.new("dispose() implementations must always call their superclass dispose() method, to ensure " + "that all the resources used by the widget are fully released.")])));
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4699, 12, "() {\r\n      if (_state._debugLifecycleState == _StateLifecycle.defunct)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('${_state.runtimeType}.dispose failed to call super.dispose.'),\r\n        ErrorDescription(\r\n          'dispose() implementations must always call their superclass dispose() method, to ensure '\r\n         'that all the resources used by the widget are fully released.'\r\n        ),\r\n      ]);\r\n    }()");
      this[_state][_element] = null;
      this[_state] = null;
    }
    inheritFromElement(ancestor, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      return this.dependOnInheritedElement(ancestor, {aspect: aspect});
    }
    dependOnInheritedElement(ancestor, opts) {
      let aspect = opts && 'aspect' in opts ? opts.aspect : null;
      if (!(ancestor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4726, 12, "ancestor != null");
      if (!dart.test(dart.fn(() => {
        let targetType = dart.runtimeType(ancestor.widget);
        if (dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.created)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("dependOnInheritedWidgetOfExactType<" + dart.str(targetType) + ">() or dependOnInheritedElement() was called before " + dart.str(dart.runtimeType(this[_state])) + ".initState() completed."), new assertions.ErrorDescription.new("When an inherited widget changes, for example if the value of Theme.of() changes, " + "its dependent widgets are rebuilt. If the dependent widget's reference to " + "the inherited widget is in a constructor or an initState() method, " + "then the rebuilt dependent widget will not reflect the changes in the " + "inherited widget."), new assertions.ErrorHint.new("Typically references to inherited widgets should occur in widget build() methods. Alternatively, " + "initialization based on inherited widgets can be placed in the didChangeDependencies method, which " + "is called after initState and whenever the dependencies change thereafter.")])));
        }
        if (dart.equals(this.state[_debugLifecycleState], framework._StateLifecycle.defunct)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("dependOnInheritedWidgetOfExactType<" + dart.str(targetType) + ">() or dependOnInheritedElement() was called after dispose(): " + dart.str(this)), new assertions.ErrorDescription.new("This error happens if you call dependOnInheritedWidgetOfExactType() on the " + "BuildContext for a widget that no longer appears in the widget tree " + "(e.g., whose parent widget no longer includes the widget in its " + "build). This error can occur when code calls " + "dependOnInheritedWidgetOfExactType() from a timer or an animation callback."), new assertions.ErrorHint.new("The preferred solution is to cancel the timer or stop listening to the " + "animation in the dispose() callback. Another solution is to check the " + "\"mounted\" property of this object before calling " + "dependOnInheritedWidgetOfExactType() to ensure the object is still in the " + "tree."), new assertions.ErrorHint.new("This error might indicate a memory leak if " + "dependOnInheritedWidgetOfExactType() is being called because another object " + "is retaining a reference to this State object after it has been " + "removed from the tree. To avoid memory leaks, consider breaking the " + "reference to this object during dispose().")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4727, 12, "() {\r\n      final Type targetType = ancestor.widget.runtimeType;\r\n      if (state._debugLifecycleState == _StateLifecycle.created) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('dependOnInheritedWidgetOfExactType<$targetType>() or dependOnInheritedElement() was called before ${_state.runtimeType}.initState() completed.'),\r\n          ErrorDescription(\r\n            'When an inherited widget changes, for example if the value of Theme.of() changes, '\r\n            'its dependent widgets are rebuilt. If the dependent widget\\'s reference to '\r\n            'the inherited widget is in a constructor or an initState() method, '\r\n            'then the rebuilt dependent widget will not reflect the changes in the '\r\n            'inherited widget.',\r\n          ),\r\n          ErrorHint(\r\n            'Typically references to inherited widgets should occur in widget build() methods. Alternatively, '\r\n            'initialization based on inherited widgets can be placed in the didChangeDependencies method, which '\r\n            'is called after initState and whenever the dependencies change thereafter.'\r\n          ),\r\n        ]);\r\n      }\r\n      if (state._debugLifecycleState == _StateLifecycle.defunct) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('dependOnInheritedWidgetOfExactType<$targetType>() or dependOnInheritedElement() was called after dispose(): $this'),\r\n          ErrorDescription(\r\n            'This error happens if you call dependOnInheritedWidgetOfExactType() on the '\r\n            'BuildContext for a widget that no longer appears in the widget tree '\r\n            '(e.g., whose parent widget no longer includes the widget in its '\r\n            'build). This error can occur when code calls '\r\n            'dependOnInheritedWidgetOfExactType() from a timer or an animation callback.'\r\n          ),\r\n          ErrorHint(\r\n            'The preferred solution is to cancel the timer or stop listening to the '\r\n            'animation in the dispose() callback. Another solution is to check the '\r\n            '\"mounted\" property of this object before calling '\r\n            'dependOnInheritedWidgetOfExactType() to ensure the object is still in the '\r\n            'tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This error might indicate a memory leak if '\r\n            'dependOnInheritedWidgetOfExactType() is being called because another object '\r\n            'is retaining a reference to this State object after it has been '\r\n            'removed from the tree. To avoid memory leaks, consider breaking the '\r\n            'reference to this object during dispose().'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return super.dependOnInheritedElement(framework.InheritedElement.as(ancestor), {aspect: aspect});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_didChangeDependencies] = true;
    }
    toDiagnosticsNode(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let style = opts && 'style' in opts ? opts.style : null;
      return new framework._ElementDiagnosticableTreeNode.new({name: name, value: this, style: style, stateful: true});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfStateOfStatefulWidget()).new("state", this.state, {defaultValue: null}));
    }
  };
  (framework.StatefulElement.new = function(widget) {
    this[_didChangeDependencies] = false;
    this[_state] = widget.createState();
    framework.StatefulElement.__proto__.new.call(this, widget);
    if (!dart.test(dart.fn(() => {
      if (!dart.test(this[_state][_debugTypesAreRight](widget))) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("StatefulWidget.createState must return a subtype of State<" + dart.str(dart.runtimeType(widget)) + ">"), new assertions.ErrorDescription.new("The createState function for " + dart.str(dart.runtimeType(widget)) + " returned a state " + "of type " + dart.str(dart.runtimeType(this[_state])) + ", which is not a subtype of " + "State<" + dart.str(dart.runtimeType(widget)) + ">, violating the contract for createState.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4562, 12, "() {\r\n      if (!_state._debugTypesAreRight(widget)) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('StatefulWidget.createState must return a subtype of State<${widget.runtimeType}>'),\r\n          ErrorDescription(\r\n            'The createState function for ${widget.runtimeType} returned a state '\r\n            'of type ${_state.runtimeType}, which is not a subtype of '\r\n            'State<${widget.runtimeType}>, violating the contract for createState.'\r\n          ),\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
    if (!(this[_state][_element] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4575, 12, "_state._element == null");
    this[_state][_element] = this;
    if (!(this[_state][_widget] == null)) dart.assertFailed("The createState function for " + dart.str(widget) + " returned an old or invalid state " + "instance: " + dart.str(this[_state][_widget]) + ", which is not null, violating the contract " + "for createState.", "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4578, 7, "_state._widget == null");
    this[_state][_widget] = widget;
    if (!dart.equals(this[_state][_debugLifecycleState], framework._StateLifecycle.created)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4584, 12, "_state._debugLifecycleState == _StateLifecycle.created");
  }).prototype = framework.StatefulElement.prototype;
  dart.addTypeTests(framework.StatefulElement);
  dart.setMethodSignature(framework.StatefulElement, () => ({
    __proto__: dart.getMethods(framework.StatefulElement.__proto__),
    build: dart.fnType(framework.Widget, []),
    inheritFromElement: dart.fnType(framework.InheritedWidget, [framework.Element], {aspect: core.Object}, {}),
    dependOnInheritedElement: dart.fnType(framework.InheritedWidget, [framework.Element], {aspect: core.Object}, {})
  }));
  dart.setGetterSignature(framework.StatefulElement, () => ({
    __proto__: dart.getGetters(framework.StatefulElement.__proto__),
    state: framework.State$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(framework.StatefulElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.StatefulElement, () => ({
    __proto__: dart.getFields(framework.StatefulElement.__proto__),
    [_state]: dart.fieldType(framework.State$(framework.StatefulWidget)),
    [_didChangeDependencies]: dart.fieldType(core.bool)
  }));
  framework.ProxyElement = class ProxyElement extends framework.ComponentElement {
    get widget() {
      return framework.ProxyWidget.as(super.widget);
    }
    build() {
      return this.widget.child;
    }
    update(newWidget) {
      framework.ProxyWidget._check(newWidget);
      let oldWidget = this.widget;
      if (!(this.widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4825, 12, "widget != null");
      if (!!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4826, 12, "widget != newWidget");
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4828, 12, "widget == newWidget");
      this.updated(oldWidget);
      this[_dirty] = true;
      this.rebuild();
    }
    updated(oldWidget) {
      framework.ProxyWidget._check(oldWidget);
      this.notifyClients(oldWidget);
    }
  };
  (framework.ProxyElement.new = function(widget) {
    framework.ProxyElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.ProxyElement.prototype;
  dart.addTypeTests(framework.ProxyElement);
  dart.setMethodSignature(framework.ProxyElement, () => ({
    __proto__: dart.getMethods(framework.ProxyElement.__proto__),
    build: dart.fnType(framework.Widget, []),
    updated: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(framework.ProxyElement, () => ({
    __proto__: dart.getGetters(framework.ProxyElement.__proto__),
    widget: framework.ProxyWidget
  }));
  dart.setLibraryUri(framework.ProxyElement, "package:flutter/src/widgets/framework.dart");
  var _updateParentData = dart.privateName(framework, "_updateParentData");
  var _applyParentData = dart.privateName(framework, "_applyParentData");
  const _is_ParentDataElement_default = Symbol('_is_ParentDataElement_default');
  framework.ParentDataElement$ = dart.generic(T => {
    var ParentDataWidgetOfT = () => (ParentDataWidgetOfT = dart.constFn(framework.ParentDataWidget$(T)))();
    class ParentDataElement extends framework.ProxyElement {
      get widget() {
        return ParentDataWidgetOfT().as(super.widget);
      }
      [_applyParentData](widget) {
        function applyParentDataToChild(child) {
          if (framework.RenderObjectElement.is(child)) {
            child[_updateParentData](widget);
          } else {
            if (!!ParentDataElementOfParentData().is(child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4866, 16, "child is! ParentDataElement<ParentData>");
            child.visitChildren(applyParentDataToChild);
          }
        }
        dart.fn(applyParentDataToChild, ElementTovoid());
        this.visitChildren(applyParentDataToChild);
      }
      applyWidgetOutOfTurn(newWidget) {
        ParentDataWidgetOfT()._check(newWidget);
        if (!(newWidget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4906, 12, "newWidget != null");
        if (!dart.test(newWidget.debugCanApplyOutOfTurn())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4907, 12, "newWidget.debugCanApplyOutOfTurn()");
        if (!dart.equals(newWidget.child, this.widget.child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4908, 12, "newWidget.child == widget.child");
        this[_applyParentData](newWidget);
      }
      notifyClients(oldWidget) {
        ParentDataWidgetOfT()._check(oldWidget);
        this[_applyParentData](this.widget);
      }
    }
    (ParentDataElement.new = function(widget) {
      ParentDataElement.__proto__.new.call(this, widget);
      ;
    }).prototype = ParentDataElement.prototype;
    dart.addTypeTests(ParentDataElement);
    ParentDataElement.prototype[_is_ParentDataElement_default] = true;
    dart.setMethodSignature(ParentDataElement, () => ({
      __proto__: dart.getMethods(ParentDataElement.__proto__),
      [_applyParentData]: dart.fnType(dart.void, [framework.ParentDataWidget$(T)]),
      applyWidgetOutOfTurn: dart.fnType(dart.void, [core.Object]),
      notifyClients: dart.fnType(dart.void, [core.Object])
    }));
    dart.setGetterSignature(ParentDataElement, () => ({
      __proto__: dart.getGetters(ParentDataElement.__proto__),
      widget: framework.ParentDataWidget$(T)
    }));
    dart.setLibraryUri(ParentDataElement, "package:flutter/src/widgets/framework.dart");
    return ParentDataElement;
  });
  framework.ParentDataElement = framework.ParentDataElement$();
  dart.addTypeTests(framework.ParentDataElement, _is_ParentDataElement_default);
  framework.InheritedElement = class InheritedElement extends framework.ProxyElement {
    get widget() {
      return framework.InheritedWidget.as(super.widget);
    }
    [_updateInheritance]() {
      let t6;
      if (!dart.test(this[_active])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4930, 12, "_active");
      let incomingWidgets = (t6 = this[_parent], t6 == null ? null : t6[_inheritedWidgets]);
      if (incomingWidgets != null)
        this[_inheritedWidgets] = HashMapOfType$InheritedElement().from(incomingWidgets);
      else
        this[_inheritedWidgets] = new (LinkedMapOfType$InheritedElement()).new();
      this[_inheritedWidgets][$_set](dart.runtimeType(this.widget), this);
    }
    debugDeactivated() {
      if (!dart.test(dart.fn(() => {
        if (!dart.test(this[_dependents][$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4942, 14, "_dependents.isEmpty");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 4941, 12, "() {\r\n      assert(_dependents.isEmpty);\r\n      return true;\r\n    }()");
      super.debugDeactivated();
    }
    getDependencies(dependent) {
      return this[_dependents][$_get](dependent);
    }
    setDependencies(dependent, value) {
      this[_dependents][$_set](dependent, value);
    }
    updateDependencies(dependent, aspect) {
      this.setDependencies(dependent, null);
    }
    notifyDependent(oldWidget, dependent) {
      framework.InheritedWidget._check(oldWidget);
      dependent.didChangeDependencies();
    }
    updated(oldWidget) {
      framework.InheritedWidget._check(oldWidget);
      if (dart.test(this.widget.updateShouldNotify(oldWidget))) super.updated(oldWidget);
    }
    notifyClients(oldWidget) {
      framework.InheritedWidget._check(oldWidget);
      if (!dart.test(this[_debugCheckOwnerBuildTargetExists]("notifyClients"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5077, 12, "_debugCheckOwnerBuildTargetExists('notifyClients')");
      for (let dependent of this[_dependents][$keys]) {
        if (!dart.test(dart.fn(() => {
          let ancestor = dependent[_parent];
          while (!dart.equals(ancestor, this) && ancestor != null)
            ancestor = ancestor[_parent];
          return dart.equals(ancestor, this);
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5079, 14, "() {\r\n        // check that it really is our descendant\r\n        Element ancestor = dependent._parent;\r\n        while (ancestor != this && ancestor != null)\r\n          ancestor = ancestor._parent;\r\n        return ancestor == this;\r\n      }()");
        if (!dart.test(dependent[_dependencies].contains(this))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5087, 14, "dependent._dependencies.contains(this)");
        this.notifyDependent(oldWidget, dependent);
      }
    }
  };
  (framework.InheritedElement.new = function(widget) {
    this[_dependents] = new (LinkedMapOfElement$Object()).new();
    framework.InheritedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.InheritedElement.prototype;
  dart.addTypeTests(framework.InheritedElement);
  dart.setMethodSignature(framework.InheritedElement, () => ({
    __proto__: dart.getMethods(framework.InheritedElement.__proto__),
    getDependencies: dart.fnType(core.Object, [framework.Element]),
    setDependencies: dart.fnType(dart.void, [framework.Element, core.Object]),
    updateDependencies: dart.fnType(dart.void, [framework.Element, core.Object]),
    notifyDependent: dart.fnType(dart.void, [core.Object, framework.Element]),
    notifyClients: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(framework.InheritedElement, () => ({
    __proto__: dart.getGetters(framework.InheritedElement.__proto__),
    widget: framework.InheritedWidget
  }));
  dart.setLibraryUri(framework.InheritedElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.InheritedElement, () => ({
    __proto__: dart.getFields(framework.InheritedElement.__proto__),
    [_dependents]: dart.finalFieldType(core.Map$(framework.Element, core.Object))
  }));
  var _renderObject = dart.privateName(framework, "_renderObject");
  var _ancestorRenderObjectElement = dart.privateName(framework, "_ancestorRenderObjectElement");
  var _findAncestorRenderObjectElement = dart.privateName(framework, "_findAncestorRenderObjectElement");
  var _findAncestorParentDataElement = dart.privateName(framework, "_findAncestorParentDataElement");
  var _debugUpdateRenderObjectOwner = dart.privateName(framework, "_debugUpdateRenderObjectOwner");
  framework.RenderObjectElement = class RenderObjectElement extends framework.Element {
    get widget() {
      return framework.RenderObjectWidget.as(super.widget);
    }
    get renderObject() {
      return this[_renderObject];
    }
    [_findAncestorRenderObjectElement]() {
      let ancestor = this[_parent];
      while (ancestor != null && !framework.RenderObjectElement.is(ancestor))
        ancestor = ancestor[_parent];
      return framework.RenderObjectElement.as(ancestor);
    }
    [_findAncestorParentDataElement]() {
      let ancestor = this[_parent];
      let result = null;
      while (ancestor != null && !framework.RenderObjectElement.is(ancestor)) {
        if (ParentDataElementOfParentData().is(ancestor)) {
          result = ParentDataElementOfParentData().as(ancestor);
          break;
        }
        ancestor = ancestor[_parent];
      }
      if (!dart.test(dart.fn(() => {
        if (result == null || ancestor == null) {
          return true;
        }
        let badAncestors = JSArrayOfParentDataElementOfParentData().of([]);
        ancestor = ancestor[_parent];
        while (ancestor != null && !framework.RenderObjectElement.is(ancestor)) {
          if (ParentDataElementOfParentData().is(ancestor)) {
            badAncestors[$add](ParentDataElementOfParentData().as(ancestor));
          }
          ancestor = ancestor[_parent];
        }
        if (dart.test(badAncestors[$isNotEmpty])) {
          badAncestors[$insert](0, result);
          try {
            dart.throw(new assertions.FlutterError.fromParts((() => {
              let t6 = JSArrayOfDiagnosticsNode().of([]);
              t6[$add](new assertions.ErrorSummary.new("Incorrect use of ParentDataWidget."));
              t6[$add](new assertions.ErrorDescription.new("The following ParentDataWidgets are providing parent data to the same RenderObject:"));
              for (let ancestor of badAncestors)
                t6[$add](new assertions.ErrorDescription.new("- " + dart.str(ancestor.widget) + " (typically placed directly inside a " + dart.str(ancestor.widget.debugTypicalAncestorWidgetClass) + " widget)"));
              t6[$add](new assertions.ErrorDescription.new("However, a RenderObject can only receive parent data from at most one ParentDataWidget."));
              t6[$add](new assertions.ErrorHint.new("Usually, this indicates that at least one of the offending ParentDataWidgets listed above is not placed directly inside a compatible ancestor widget."));
              t6[$add](new assertions.ErrorDescription.new("The ownership chain for the RenderObject that received the parent data was:\n  " + dart.str(this.debugGetCreatorChain(10))));
              return t6;
            })()));
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (assertions.FlutterError.is(e)) {
              framework._debugReportException(new assertions.ErrorSummary.new("while looking for parent data."), e, e[$stackTrace]);
            } else
              throw e$;
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5290, 12, "() {\r\n      if (result == null || ancestor == null) {\r\n        return true;\r\n      }\r\n      // Check that no other ParentDataWidgets want to provide parent data.\r\n      final List<ParentDataElement<ParentData>> badAncestors = <ParentDataElement<ParentData>>[];\r\n      ancestor = ancestor._parent;\r\n      while (ancestor != null && ancestor is! RenderObjectElement) {\r\n        if (ancestor is ParentDataElement<ParentData>) {\r\n          badAncestors.add(ancestor as ParentDataElement<ParentData>);\r\n        }\r\n        ancestor = ancestor._parent;\r\n      }\r\n      if (badAncestors.isNotEmpty) {\r\n        badAncestors.insert(0, result);\r\n        try {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Incorrect use of ParentDataWidget.'),\r\n            ErrorDescription('The following ParentDataWidgets are providing parent data to the same RenderObject:'),\r\n            for (final ParentDataElement<ParentData> ancestor in badAncestors)\r\n              ErrorDescription('- ${ancestor.widget} (typically placed directly inside a ${ancestor.widget.debugTypicalAncestorWidgetClass} widget)'),\r\n            ErrorDescription('However, a RenderObject can only receive parent data from at most one ParentDataWidget.'),\r\n            ErrorHint('Usually, this indicates that at least one of the offending ParentDataWidgets listed above is not placed directly inside a compatible ancestor widget.'),\r\n            ErrorDescription('The ownership chain for the RenderObject that received the parent data was:\\n  ${debugGetCreatorChain(10)}'),\r\n          ]);\r\n        } on FlutterError catch (e) {\r\n          _debugReportException(ErrorSummary('while looking for parent data.'), e, e.stackTrace);\r\n        }\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_renderObject] = this.widget.createRenderObject(this);
      if (!dart.test(dart.fn(() => {
        this[_debugUpdateRenderObjectOwner]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5328, 12, "() {\r\n      _debugUpdateRenderObjectOwner();\r\n      return true;\r\n    }()");
      if (!dart.equals(this[_slot], newSlot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5332, 12, "_slot == newSlot");
      this.attachRenderObject(newSlot);
      this[_dirty] = false;
    }
    update(newWidget) {
      framework.RenderObjectWidget._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5340, 12, "widget == newWidget");
      if (!dart.test(dart.fn(() => {
        this[_debugUpdateRenderObjectOwner]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5341, 12, "() {\r\n      _debugUpdateRenderObjectOwner();\r\n      return true;\r\n    }()");
      this.widget.updateRenderObject(this, this.renderObject);
      this[_dirty] = false;
    }
    [_debugUpdateRenderObjectOwner]() {
      if (!dart.test(dart.fn(() => {
        this[_renderObject].debugCreator = new framework.DebugCreator.new(this);
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5350, 12, "() {\r\n      _renderObject.debugCreator = DebugCreator(this);\r\n      return true;\r\n    }()");
    }
    performRebuild() {
      this.widget.updateRenderObject(this, this.renderObject);
      this[_dirty] = false;
    }
    updateChildren(oldChildren, newWidgets, opts) {
      let forgottenChildren = opts && 'forgottenChildren' in opts ? opts.forgottenChildren : null;
      if (!(oldChildren != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5381, 12, "oldChildren != null");
      if (!(newWidgets != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5382, 12, "newWidgets != null");
      function replaceWithNullIfForgotten(child) {
        return forgottenChildren != null && dart.test(forgottenChildren.contains(child)) ? null : child;
      }
      dart.fn(replaceWithNullIfForgotten, ElementToElement());
      let newChildrenTop = 0;
      let oldChildrenTop = 0;
      let newChildrenBottom = dart.notNull(newWidgets[$length]) - 1;
      let oldChildrenBottom = dart.notNull(oldChildren[$length]) - 1;
      let newChildren = oldChildren[$length] == newWidgets[$length] ? oldChildren : ListOfElement().new(newWidgets[$length]);
      let previousChild = null;
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenTop));
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (!(oldChild == null || dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5433, 14, "oldChild == null || oldChild._debugLifecycleState == _ElementLifecycle.active");
        if (oldChild == null || !dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) break;
        let newChild = this.updateChild(oldChild, newWidget, previousChild);
        if (!dart.equals(newChild[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5437, 14, "newChild._debugLifecycleState == _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
        oldChildrenTop = oldChildrenTop + 1;
      }
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenBottom));
        let newWidget = newWidgets[$_get](newChildrenBottom);
        if (!(oldChild == null || dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5448, 14, "oldChild == null || oldChild._debugLifecycleState == _ElementLifecycle.active");
        if (oldChild == null || !dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) break;
        oldChildrenBottom = oldChildrenBottom - 1;
        newChildrenBottom = newChildrenBottom - 1;
      }
      let haveOldChildren = oldChildrenTop <= oldChildrenBottom;
      let oldKeyedChildren = null;
      if (haveOldChildren) {
        oldKeyedChildren = new (LinkedMapOfKey$Element()).new();
        while (oldChildrenTop <= oldChildrenBottom) {
          let oldChild = replaceWithNullIfForgotten(oldChildren[$_get](oldChildrenTop));
          if (!(oldChild == null || dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5462, 16, "oldChild == null || oldChild._debugLifecycleState == _ElementLifecycle.active");
          if (oldChild != null) {
            if (oldChild.widget.key != null)
              oldKeyedChildren[$_set](oldChild.widget.key, oldChild);
            else
              this.deactivateChild(oldChild);
          }
          oldChildrenTop = oldChildrenTop + 1;
        }
      }
      while (newChildrenTop <= newChildrenBottom) {
        let oldChild = null;
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (haveOldChildren) {
          let key = newWidget.key;
          if (key != null) {
            oldChild = oldKeyedChildren[$_get](key);
            if (oldChild != null) {
              if (dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) {
                oldKeyedChildren[$remove](key);
              } else {
                oldChild = null;
              }
            }
          }
        }
        if (!(oldChild == null || dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5493, 14, "oldChild == null || Widget.canUpdate(oldChild.widget, newWidget)");
        let newChild = this.updateChild(oldChild, newWidget, previousChild);
        if (!dart.equals(newChild[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5495, 14, "newChild._debugLifecycleState == _ElementLifecycle.active");
        if (!(dart.equals(oldChild, newChild) || oldChild == null || !dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5496, 14, "oldChild == newChild || oldChild == null || oldChild._debugLifecycleState != _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
      }
      if (!(oldChildrenTop === oldChildrenBottom + 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5503, 12, "oldChildrenTop == oldChildrenBottom + 1");
      if (!(newChildrenTop === newChildrenBottom + 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5504, 12, "newChildrenTop == newChildrenBottom + 1");
      if (!(dart.notNull(newWidgets[$length]) - newChildrenTop === dart.notNull(oldChildren[$length]) - oldChildrenTop)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5505, 12, "newWidgets.length - newChildrenTop == oldChildren.length - oldChildrenTop");
      newChildrenBottom = dart.notNull(newWidgets[$length]) - 1;
      oldChildrenBottom = dart.notNull(oldChildren[$length]) - 1;
      while (oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom) {
        let oldChild = oldChildren[$_get](oldChildrenTop);
        if (!(replaceWithNullIfForgotten(oldChild) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5512, 14, "replaceWithNullIfForgotten(oldChild) != null");
        if (!dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5513, 14, "oldChild._debugLifecycleState == _ElementLifecycle.active");
        let newWidget = newWidgets[$_get](newChildrenTop);
        if (!dart.test(framework.Widget.canUpdate(oldChild.widget, newWidget))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5515, 14, "Widget.canUpdate(oldChild.widget, newWidget)");
        let newChild = this.updateChild(oldChild, newWidget, previousChild);
        if (!dart.equals(newChild[_debugLifecycleState], framework._ElementLifecycle.active)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5517, 14, "newChild._debugLifecycleState == _ElementLifecycle.active");
        if (!(dart.equals(oldChild, newChild) || oldChild == null || !dart.equals(oldChild[_debugLifecycleState], framework._ElementLifecycle.active))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5518, 14, "oldChild == newChild || oldChild == null || oldChild._debugLifecycleState != _ElementLifecycle.active");
        newChildren[$_set](newChildrenTop, newChild);
        previousChild = newChild;
        newChildrenTop = newChildrenTop + 1;
        oldChildrenTop = oldChildrenTop + 1;
      }
      if (haveOldChildren && dart.test(oldKeyedChildren[$isNotEmpty])) {
        for (let oldChild of oldKeyedChildren[$values]) {
          if (forgottenChildren == null || !dart.test(forgottenChildren.contains(oldChild))) this.deactivateChild(oldChild);
        }
      }
      return newChildren;
    }
    deactivate() {
      super.deactivate();
      if (!!dart.test(this.renderObject.attached)) dart.assertFailed("A RenderObject was still attached when attempting to deactivate its " + "RenderObjectElement: " + dart.str(this.renderObject), "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5539, 12, "!renderObject.attached");
    }
    unmount() {
      super.unmount();
      if (!!dart.test(this.renderObject.attached)) dart.assertFailed("A RenderObject was still attached when attempting to unmount its " + "RenderObjectElement: " + dart.str(this.renderObject), "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5547, 12, "!renderObject.attached");
      this.widget.didUnmountRenderObject(this.renderObject);
    }
    [_updateParentData](parentDataWidget) {
      let applyParentData = true;
      if (!dart.test(dart.fn(() => {
        try {
          if (!dart.test(parentDataWidget.debugIsValidRenderObject(this.renderObject))) {
            applyParentData = false;
            dart.throw(new assertions.FlutterError.fromParts((() => {
              let t8 = JSArrayOfDiagnosticsNode().of([]);
              t8[$add](new assertions.ErrorSummary.new("Incorrect use of ParentDataWidget."));
              for (let t9 of parentDataWidget[_debugDescribeIncorrectParentDataType]({parentData: this.renderObject.parentData, parentDataCreator: this[_ancestorRenderObjectElement].widget, ownershipChain: new assertions.ErrorDescription.new(this.debugGetCreatorChain(10))}))
                t8[$add](t9);
              return t8;
            })()));
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (assertions.FlutterError.is(e)) {
            framework._debugReportException(new assertions.ErrorSummary.new("while applying parent data."), e, e[$stackTrace]);
          } else
            throw e$;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5555, 12, "() {\r\n      try {\r\n        if (!parentDataWidget.debugIsValidRenderObject(renderObject)) {\r\n          applyParentData = false;\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Incorrect use of ParentDataWidget.'),\r\n            ...parentDataWidget._debugDescribeIncorrectParentDataType(\r\n              parentData: renderObject.parentData,\r\n              parentDataCreator: _ancestorRenderObjectElement.widget,\r\n              ownershipChain: ErrorDescription(debugGetCreatorChain(10)),\r\n            ),\r\n          ]);\r\n        }\r\n      } on FlutterError catch (e) {\r\n        // Catching the exception directly to avoid activating the ErrorWidget.\r\n        // Since the tree is in a broken state, adding the ErrorWidget would\r\n        // cause more exceptions.\r\n        _debugReportException(ErrorSummary('while applying parent data.'), e, e.stackTrace);\r\n      }\r\n      return true;\r\n    }()");
      if (applyParentData) parentDataWidget.applyParentData(this.renderObject);
    }
    [_updateSlot](newSlot) {
      if (!!dart.equals(this.slot, newSlot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5582, 12, "slot != newSlot");
      super[_updateSlot](newSlot);
      if (!dart.equals(this.slot, newSlot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5584, 12, "slot == newSlot");
      this[_ancestorRenderObjectElement].moveChildRenderObject(this.renderObject, this.slot);
    }
    attachRenderObject(newSlot) {
      let t11;
      if (!(this[_ancestorRenderObjectElement] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5590, 12, "_ancestorRenderObjectElement == null");
      this[_slot] = newSlot;
      this[_ancestorRenderObjectElement] = this[_findAncestorRenderObjectElement]();
      t11 = this[_ancestorRenderObjectElement];
      t11 == null ? null : t11.insertChildRenderObject(this.renderObject, newSlot);
      let parentDataElement = this[_findAncestorParentDataElement]();
      if (parentDataElement != null) this[_updateParentData](parentDataElement.widget);
    }
    detachRenderObject() {
      if (this[_ancestorRenderObjectElement] != null) {
        this[_ancestorRenderObjectElement].removeChildRenderObject(this.renderObject);
        this[_ancestorRenderObjectElement] = null;
      }
      this[_slot] = null;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfRenderObject()).new("renderObject", this.renderObject, {defaultValue: null}));
    }
  };
  (framework.RenderObjectElement.new = function(widget) {
    this[_renderObject] = null;
    this[_ancestorRenderObjectElement] = null;
    framework.RenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.RenderObjectElement.prototype;
  dart.addTypeTests(framework.RenderObjectElement);
  dart.setMethodSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.RenderObjectElement.__proto__),
    [_findAncestorRenderObjectElement]: dart.fnType(framework.RenderObjectElement, []),
    [_findAncestorParentDataElement]: dart.fnType(framework.ParentDataElement$(object$.ParentData), []),
    [_debugUpdateRenderObjectOwner]: dart.fnType(dart.void, []),
    performRebuild: dart.fnType(dart.void, []),
    updateChildren: dart.fnType(core.List$(framework.Element), [core.List$(framework.Element), core.List$(framework.Widget)], {forgottenChildren: core.Set$(framework.Element)}, {}),
    [_updateParentData]: dart.fnType(dart.void, [framework.ParentDataWidget$(object$.ParentData)])
  }));
  dart.setGetterSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.RenderObjectElement.__proto__),
    widget: framework.RenderObjectWidget
  }));
  dart.setLibraryUri(framework.RenderObjectElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.RenderObjectElement, () => ({
    __proto__: dart.getFields(framework.RenderObjectElement.__proto__),
    [_renderObject]: dart.fieldType(object$.RenderObject),
    [_ancestorRenderObjectElement]: dart.fieldType(framework.RenderObjectElement)
  }));
  framework.RootRenderObjectElement = class RootRenderObjectElement extends framework.RenderObjectElement {
    assignOwner(owner) {
      this[_owner] = owner;
    }
    mount(parent, newSlot) {
      if (!(parent == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5675, 12, "parent == null");
      if (!(newSlot == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5676, 12, "newSlot == null");
      super.mount(parent, newSlot);
    }
  };
  (framework.RootRenderObjectElement.new = function(widget) {
    framework.RootRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.RootRenderObjectElement.prototype;
  dart.addTypeTests(framework.RootRenderObjectElement);
  dart.setMethodSignature(framework.RootRenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.RootRenderObjectElement.__proto__),
    assignOwner: dart.fnType(dart.void, [framework.BuildOwner])
  }));
  dart.setLibraryUri(framework.RootRenderObjectElement, "package:flutter/src/widgets/framework.dart");
  framework.LeafRenderObjectElement = class LeafRenderObjectElement extends framework.RenderObjectElement {
    forgetChild(child) {
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5688, 12, "false");
      super.forgetChild(child);
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5694, 12, "false");
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5699, 12, "false");
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5704, 12, "false");
    }
    debugDescribeChildren() {
      return this.widget.debugDescribeChildren();
    }
  };
  (framework.LeafRenderObjectElement.new = function(widget) {
    framework.LeafRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.LeafRenderObjectElement.prototype;
  dart.addTypeTests(framework.LeafRenderObjectElement);
  dart.setMethodSignature(framework.LeafRenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.LeafRenderObjectElement.__proto__),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setLibraryUri(framework.LeafRenderObjectElement, "package:flutter/src/widgets/framework.dart");
  framework.SingleChildRenderObjectElement = class SingleChildRenderObjectElement extends framework.RenderObjectElement {
    get widget() {
      return framework.SingleChildRenderObjectWidget.as(super.widget);
    }
    visitChildren(visitor) {
      if (this[_child] != null) visitor(this[_child]);
    }
    forgetChild(child) {
      if (!dart.equals(child, this[_child])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5737, 12, "child == _child");
      this[_child] = null;
      super.forgetChild(child);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_child] = this.updateChild(this[_child], this.widget.child, null);
    }
    update(newWidget) {
      framework.SingleChildRenderObjectWidget._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5751, 12, "widget == newWidget");
      this[_child] = this.updateChild(this[_child], this.widget.child, null);
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      let renderObject = RenderObjectWithChildMixinOfRenderObject().as(this.renderObject);
      if (!(slot == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5758, 12, "slot == null");
      if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5759, 12, "renderObject.debugValidateChild(child)");
      renderObject.child = child;
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5761, 12, "renderObject == this.renderObject");
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5766, 12, "false");
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      let renderObject = RenderObjectWithChildMixinOfRenderObject().as(this.renderObject);
      if (!dart.equals(renderObject.child, child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5772, 12, "renderObject.child == child");
      renderObject.child = null;
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5774, 12, "renderObject == this.renderObject");
    }
  };
  (framework.SingleChildRenderObjectElement.new = function(widget) {
    this[_child] = null;
    framework.SingleChildRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.SingleChildRenderObjectElement.prototype;
  dart.addTypeTests(framework.SingleChildRenderObjectElement);
  dart.setMethodSignature(framework.SingleChildRenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.SingleChildRenderObjectElement.__proto__),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(framework.SingleChildRenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.SingleChildRenderObjectElement.__proto__),
    widget: framework.SingleChildRenderObjectWidget
  }));
  dart.setLibraryUri(framework.SingleChildRenderObjectElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.SingleChildRenderObjectElement, () => ({
    __proto__: dart.getFields(framework.SingleChildRenderObjectElement.__proto__),
    [_child]: dart.fieldType(framework.Element)
  }));
  var _children = dart.privateName(framework, "_children");
  var _forgottenChildren = dart.privateName(framework, "_forgottenChildren");
  framework.MultiChildRenderObjectElement = class MultiChildRenderObjectElement extends framework.RenderObjectElement {
    get widget() {
      return framework.MultiChildRenderObjectWidget.as(super.widget);
    }
    get children() {
      return this[_children][$where](dart.fn(child => !dart.test(this[_forgottenChildren].contains(child)), ElementTobool()));
    }
    insertChildRenderObject(child, slot) {
      let t11;
      object$.RenderObject._check(child);
      framework.Element._check(slot);
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5810, 12, "renderObject.debugValidateChild(child)");
      renderObject.insert(child, {after: (t11 = slot, t11 == null ? null : t11.renderObject)});
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5812, 12, "renderObject == this.renderObject");
    }
    moveChildRenderObject(child, slot) {
      let t11;
      object$.RenderObject._check(child);
      framework.Element._check(slot);
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.equals(child.parent, renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5819, 12, "child.parent == renderObject");
      renderObject.move(child, {after: (t11 = slot, t11 == null ? null : t11.renderObject)});
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5821, 12, "renderObject == this.renderObject");
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      let renderObject = ContainerRenderObjectMixinOfRenderObject$ContainerParentDataMixinOfRenderObject().as(this.renderObject);
      if (!dart.equals(child.parent, renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5828, 12, "child.parent == renderObject");
      renderObject.remove(child);
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5830, 12, "renderObject == this.renderObject");
    }
    visitChildren(visitor) {
      for (let child of this[_children]) {
        if (!dart.test(this[_forgottenChildren].contains(child))) visitor(child);
      }
    }
    forgetChild(child) {
      if (!dart.test(this[_children][$contains](child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5843, 12, "_children.contains(child)");
      if (!!dart.test(this[_forgottenChildren].contains(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5844, 12, "!_forgottenChildren.contains(child)");
      this[_forgottenChildren].add(child);
      super.forgetChild(child);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_children] = ListOfElement().new(this.widget.children[$length]);
      let previousChild = null;
      for (let i = 0; i < dart.notNull(this[_children][$length]); i = i + 1) {
        let newChild = this.inflateWidget(this.widget.children[$_get](i), previousChild);
        this[_children][$_set](i, newChild);
        previousChild = newChild;
      }
    }
    update(newWidget) {
      framework.MultiChildRenderObjectWidget._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5864, 12, "widget == newWidget");
      this[_children] = this.updateChildren(this[_children], this.widget.children, {forgottenChildren: this[_forgottenChildren]});
      this[_forgottenChildren].clear();
    }
  };
  (framework.MultiChildRenderObjectElement.new = function(widget) {
    this[_children] = null;
    this[_forgottenChildren] = new (_HashSetOfElement()).new();
    if (!!dart.test(debug$0.debugChildrenHaveDuplicateKeys(widget, widget.children))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/framework.dart", 5787, 14, "!debugChildrenHaveDuplicateKeys(widget, widget.children)");
    framework.MultiChildRenderObjectElement.__proto__.new.call(this, widget);
    ;
  }).prototype = framework.MultiChildRenderObjectElement.prototype;
  dart.addTypeTests(framework.MultiChildRenderObjectElement);
  dart.setMethodSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getMethods(framework.MultiChildRenderObjectElement.__proto__),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getGetters(framework.MultiChildRenderObjectElement.__proto__),
    widget: framework.MultiChildRenderObjectWidget,
    children: core.Iterable$(framework.Element)
  }));
  dart.setLibraryUri(framework.MultiChildRenderObjectElement, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.MultiChildRenderObjectElement, () => ({
    __proto__: dart.getFields(framework.MultiChildRenderObjectElement.__proto__),
    [_children]: dart.fieldType(core.List$(framework.Element)),
    [_forgottenChildren]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  var element$ = dart.privateName(framework, "DebugCreator.element");
  framework.DebugCreator = class DebugCreator extends core.Object {
    get element() {
      return this[element$];
    }
    set element(value) {
      super.element = value;
    }
    toString() {
      return this.element.debugGetCreatorChain(12);
    }
  };
  (framework.DebugCreator.new = function(element) {
    this[element$] = element;
    ;
  }).prototype = framework.DebugCreator.prototype;
  dart.addTypeTests(framework.DebugCreator);
  dart.setLibraryUri(framework.DebugCreator, "package:flutter/src/widgets/framework.dart");
  dart.setFieldSignature(framework.DebugCreator, () => ({
    __proto__: dart.getFields(framework.DebugCreator.__proto__),
    element: dart.finalFieldType(framework.Element)
  }));
  dart.defineExtensionMethods(framework.DebugCreator, ['toString']);
  framework._debugReportException = function _debugReportException(context, exception, stack, opts) {
    let informationCollector = opts && 'informationCollector' in opts ? opts.informationCollector : null;
    let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: context, informationCollector: informationCollector});
    assertions.FlutterError.reportError(details);
    return details;
  };
  const _is_InheritedModel_default = Symbol('_is_InheritedModel_default');
  inherited_model.InheritedModel$ = dart.generic(T => {
    var InheritedModelElementOfT = () => (InheritedModelElementOfT = dart.constFn(inherited_model.InheritedModelElement$(T)))();
    class InheritedModel extends framework.InheritedWidget {
      createElement() {
        return new (InheritedModelElementOfT()).new(this);
      }
      isSupportedAspect(aspect) {
        return true;
      }
      static _findModels(T, context, aspect, results) {
        let model = context.getElementForInheritedWidgetOfExactType(T);
        if (model == null) return;
        results[$add](model);
        if (!T.is(model.widget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_model.dart", 129, 12, "model.widget is T");
        let modelWidget = T.as(model.widget);
        if (dart.test(modelWidget.isSupportedAspect(aspect))) return;
        let modelParent = null;
        model.visitAncestorElements(dart.fn(ancestor => {
          modelParent = ancestor;
          return false;
        }, ElementTobool()));
        if (modelParent == null) return;
        inherited_model.InheritedModel._findModels(T, modelParent, aspect, results);
      }
      static inheritFrom(T, context, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (aspect == null) return context.dependOnInheritedWidgetOfExactType(T);
        let models = JSArrayOfInheritedElement().of([]);
        inherited_model.InheritedModel._findModels(T, context, aspect, models);
        if (dart.test(models[$isEmpty])) {
          return null;
        }
        let lastModel = models[$last];
        for (let model of models) {
          let value = T.as(context.dependOnInheritedElement(model, {aspect: aspect}));
          if (dart.equals(model, lastModel)) return value;
        }
        if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_model.dart", 179, 12, "false");
        return null;
      }
    }
    (InheritedModel.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      InheritedModel.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = InheritedModel.prototype;
    dart.addTypeTests(InheritedModel);
    InheritedModel.prototype[_is_InheritedModel_default] = true;
    dart.setMethodSignature(InheritedModel, () => ({
      __proto__: dart.getMethods(InheritedModel.__proto__),
      createElement: dart.fnType(inherited_model.InheritedModelElement$(T), []),
      isSupportedAspect: dart.fnType(core.bool, [core.Object])
    }));
    dart.setLibraryUri(InheritedModel, "package:flutter/src/widgets/inherited_model.dart");
    return InheritedModel;
  });
  inherited_model.InheritedModel = inherited_model.InheritedModel$();
  dart.addTypeTests(inherited_model.InheritedModel, _is_InheritedModel_default);
  const _is_InheritedModelElement_default = Symbol('_is_InheritedModelElement_default');
  inherited_model.InheritedModelElement$ = dart.generic(T => {
    var InheritedModelOfT = () => (InheritedModelOfT = dart.constFn(inherited_model.InheritedModel$(T)))();
    var SetOfT = () => (SetOfT = dart.constFn(core.Set$(T)))();
    var _HashSetOfT = () => (_HashSetOfT = dart.constFn(collection._HashSet$(T)))();
    class InheritedModelElement extends framework.InheritedElement {
      get widget() {
        return InheritedModelOfT().as(super.widget);
      }
      updateDependencies(dependent, aspect) {
        let t11, t11$;
        let dependencies = SetOfT().as(this.getDependencies(dependent));
        if (dependencies != null && dart.test(dependencies[$isEmpty])) return;
        if (aspect == null) {
          this.setDependencies(dependent, new (_HashSetOfT()).new());
        } else {
          if (!T.is(aspect)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_model.dart", 201, 14, "aspect is T");
          this.setDependencies(dependent, (t11$ = (t11 = dependencies, t11 == null ? new (_HashSetOfT()).new() : t11), t11$.add(T.as(aspect)), t11$));
        }
      }
      notifyDependent(oldWidget, dependent) {
        InheritedModelOfT()._check(oldWidget);
        let dependencies = SetOfT().as(this.getDependencies(dependent));
        if (dependencies == null) return;
        if (dart.test(dependencies[$isEmpty]) || dart.test(this.widget.updateShouldNotifyDependent(oldWidget, dependencies))) dependent.didChangeDependencies();
      }
    }
    (InheritedModelElement.new = function(widget) {
      InheritedModelElement.__proto__.new.call(this, widget);
      ;
    }).prototype = InheritedModelElement.prototype;
    dart.addTypeTests(InheritedModelElement);
    InheritedModelElement.prototype[_is_InheritedModelElement_default] = true;
    dart.setGetterSignature(InheritedModelElement, () => ({
      __proto__: dart.getGetters(InheritedModelElement.__proto__),
      widget: inherited_model.InheritedModel$(T)
    }));
    dart.setLibraryUri(InheritedModelElement, "package:flutter/src/widgets/inherited_model.dart");
    return InheritedModelElement;
  });
  inherited_model.InheritedModelElement = inherited_model.InheritedModelElement$();
  dart.addTypeTests(inherited_model.InheritedModelElement, _is_InheritedModelElement_default);
  var _node$ = dart.privateName(focus_manager, "_node");
  var _attachment = dart.privateName(focus_manager, "_attachment");
  var _manager = dart.privateName(focus_manager, "_manager");
  var _nextFocus = dart.privateName(focus_manager, "_nextFocus");
  var _dirtyNodes = dart.privateName(focus_manager, "_dirtyNodes");
  var _parent$ = dart.privateName(focus_manager, "_parent");
  var _removeChild = dart.privateName(focus_manager, "_removeChild");
  var _reparent = dart.privateName(focus_manager, "_reparent");
  focus_manager.FocusAttachment = class FocusAttachment extends core.Object {
    get isAttached() {
      return dart.equals(this[_node$][_attachment], this);
    }
    detach() {
      let t11, t11$, t11$0, t11$1;
      if (!(this[_node$] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 81, 12, "_node != null");
      if (!dart.test(focus_manager._focusDebug("Detaching node:", JSArrayOfString().of([dart.toString(this[_node$]), "With enclosing scope " + dart.str(this[_node$].enclosingScope)])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 82, 12, "_focusDebug('Detaching node:', <String>[_node.toString(), 'With enclosing scope ${_node.enclosingScope}'])");
      if (dart.test(this.isAttached)) {
        if (dart.test(this[_node$].hasPrimaryFocus) || this[_node$][_manager] != null && dart.equals(this[_node$][_manager][_nextFocus], this[_node$])) {
          this[_node$].unfocus({focusPrevious: true});
        }
        if (!!dart.equals((t11 = this[_node$][_manager], t11 == null ? null : t11[_nextFocus]), this[_node$])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 87, 14, "_node._manager?._nextFocus != _node");
        if (!!dart.test(this[_node$].hasPrimaryFocus)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 88, 14, "!_node.hasPrimaryFocus");
        t11$0 = (t11$ = this[_node$][_manager], t11$ == null ? null : t11$[_dirtyNodes]);
        t11$0 == null ? null : t11$0.remove(this[_node$]);
        t11$1 = this[_node$][_parent$];
        t11$1 == null ? null : t11$1[_removeChild](this[_node$]);
        this[_node$][_attachment] = null;
      }
      if (!!dart.test(this.isAttached)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 93, 12, "!isAttached");
    }
    reparent(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      if (!(this[_node$] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 119, 12, "_node != null");
      if (dart.test(this.isAttached)) {
        if (!(this[_node$].context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 121, 14, "_node.context != null");
        parent == null ? parent = focus_scope.Focus.of(this[_node$].context, {nullOk: true, scopeOk: true}) : null;
        parent == null ? parent = this[_node$].context.owner.focusManager.rootScope : null;
        if (!(parent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 124, 14, "parent != null");
        parent[_reparent](this[_node$]);
      }
    }
  };
  (focus_manager.FocusAttachment.__ = function(_node) {
    this[_node$] = _node;
    if (!(_node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 63, 42, "_node != null");
    ;
  }).prototype = focus_manager.FocusAttachment.prototype;
  dart.addTypeTests(focus_manager.FocusAttachment);
  dart.setMethodSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getMethods(focus_manager.FocusAttachment.__proto__),
    detach: dart.fnType(dart.void, []),
    reparent: dart.fnType(dart.void, [], {parent: focus_manager.FocusNode}, {})
  }));
  dart.setGetterSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getGetters(focus_manager.FocusAttachment.__proto__),
    isAttached: core.bool
  }));
  dart.setLibraryUri(focus_manager.FocusAttachment, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusAttachment, () => ({
    __proto__: dart.getFields(focus_manager.FocusAttachment.__proto__),
    [_node$]: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var _context = dart.privateName(focus_manager, "_context");
  var _ancestors = dart.privateName(focus_manager, "_ancestors");
  var _descendants = dart.privateName(focus_manager, "_descendants");
  var _hasKeyboardToken = dart.privateName(focus_manager, "_hasKeyboardToken");
  var _children$ = dart.privateName(focus_manager, "_children");
  var _debugLabel = dart.privateName(focus_manager, "_debugLabel");
  var _requestFocusWhenReparented = dart.privateName(focus_manager, "_requestFocusWhenReparented");
  var _skipTraversal = dart.privateName(focus_manager, "_skipTraversal");
  var _canRequestFocus = dart.privateName(focus_manager, "_canRequestFocus");
  var _onKey = dart.privateName(focus_manager, "_onKey");
  var _markNeedsUpdate = dart.privateName(focus_manager, "_markNeedsUpdate");
  var C42;
  var _willUnfocusNode = dart.privateName(focus_manager, "_willUnfocusNode");
  var _focusedChildren = dart.privateName(focus_manager, "_focusedChildren");
  var _doRequestFocus = dart.privateName(focus_manager, "_doRequestFocus");
  var _setAsFocusedChild = dart.privateName(focus_manager, "_setAsFocusedChild");
  var _notify = dart.privateName(focus_manager, "_notify");
  var _markAsDirty = dart.privateName(focus_manager, "_markAsDirty");
  var _updateManager = dart.privateName(focus_manager, "_updateManager");
  const Object_DiagnosticableTreeMixin$36 = class Object_DiagnosticableTreeMixin extends core.Object {};
  (Object_DiagnosticableTreeMixin$36.new = function() {
  }).prototype = Object_DiagnosticableTreeMixin$36.prototype;
  dart.applyMixin(Object_DiagnosticableTreeMixin$36, diagnostics$.DiagnosticableTreeMixin);
  const Object_ChangeNotifier$36 = class Object_ChangeNotifier extends Object_DiagnosticableTreeMixin$36 {};
  (Object_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36.prototype;
  dart.applyMixin(Object_ChangeNotifier$36, change_notifier.ChangeNotifier);
  focus_manager.FocusNode = class FocusNode extends Object_ChangeNotifier$36 {
    get skipTraversal() {
      return this[_skipTraversal];
    }
    set skipTraversal(value) {
      let t11, t11$, t11$0;
      if (!dart.equals(value, this[_skipTraversal])) {
        this[_skipTraversal] = value;
        t11$ = (t11 = this[_manager], t11 == null ? null : t11[_dirtyNodes]);
        t11$ == null ? null : t11$.add(this);
        t11$0 = this[_manager];
        t11$0 == null ? null : t11$0[_markNeedsUpdate]();
      }
    }
    get canRequestFocus() {
      let scope = this.enclosingScope;
      return dart.test(this[_canRequestFocus]) && (scope == null || dart.test(scope.canRequestFocus));
    }
    set canRequestFocus(value) {
      let t11, t11$, t11$0;
      if (!dart.equals(value, this[_canRequestFocus])) {
        if (!dart.test(value)) {
          this.unfocus({focusPrevious: true});
        }
        this[_canRequestFocus] = value;
        t11$ = (t11 = this[_manager], t11 == null ? null : t11[_dirtyNodes]);
        t11$ == null ? null : t11$.add(this);
        t11$0 = this[_manager];
        t11$0 == null ? null : t11$0[_markNeedsUpdate]();
      }
    }
    get context() {
      return this[_context];
    }
    get onKey() {
      return this[_onKey];
    }
    get parent() {
      return this[_parent$];
    }
    get children() {
      return this[_children$];
    }
    get traversalChildren() {
      if (!dart.test(this.canRequestFocus)) {
        return C42 || CT.C42;
      }
      return this.children[$where](dart.fn(node => !dart.test(node.skipTraversal) && dart.test(node.canRequestFocus), FocusNodeTobool()));
    }
    get debugLabel() {
      return this[_debugLabel];
    }
    set debugLabel(value) {
      if (!dart.test(dart.fn(() => {
        this[_debugLabel] = value;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 498, 12, "() {\r\n      // Only set the value in debug builds.\r\n      _debugLabel = value;\r\n      return true;\r\n    }()");
    }
    get descendants() {
      if (this[_descendants] == null) {
        let result = JSArrayOfFocusNode().of([]);
        for (let child of this[_children$]) {
          result[$addAll](child.descendants);
          result[$add](child);
        }
        this[_descendants] = result;
      }
      return this[_descendants];
    }
    get traversalDescendants() {
      return this.descendants[$where](dart.fn(node => !dart.test(node.skipTraversal) && dart.test(node.canRequestFocus), FocusNodeTobool()));
    }
    get ancestors() {
      if (this[_ancestors] == null) {
        let result = JSArrayOfFocusNode().of([]);
        let parent = this[_parent$];
        while (parent != null) {
          result[$add](parent);
          parent = parent[_parent$];
        }
        this[_ancestors] = result;
      }
      return this[_ancestors];
    }
    get hasFocus() {
      let t11;
      if ((t11 = this[_manager], t11 == null ? null : t11.primaryFocus) == null) {
        return false;
      }
      if (dart.test(this.hasPrimaryFocus)) {
        return true;
      }
      return this[_manager].primaryFocus.ancestors[$contains](this);
    }
    get hasPrimaryFocus() {
      let t11;
      return dart.equals((t11 = this[_manager], t11 == null ? null : t11.primaryFocus), this);
    }
    get highlightMode() {
      return focus_manager.FocusManager.instance.highlightMode;
    }
    get nearestScope() {
      return this.enclosingScope;
    }
    get enclosingScope() {
      return focus_manager.FocusScopeNode.as(this.ancestors[$firstWhere](dart.fn(node => focus_manager.FocusScopeNode.is(node), FocusNodeTobool()), {orElse: dart.fn(() => null, VoidToNull())}));
    }
    get size() {
      if (!(this.context != null)) dart.assertFailed("Tried to get the size of a focus node that didn't have its context set yet.\n" + "The context needs to be set before trying to evaluate traversal policies. This " + "is typically done with the attach method.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 614, 9, "context != null");
      return this.context.findRenderObject().semanticBounds.size;
    }
    get offset() {
      if (!(this.context != null)) dart.assertFailed("Tried to get the offset of a focus node that didn't have its context set yet.\n" + "The context needs to be set before trying to evaluate traversal policies. This " + "is typically done with the attach method.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 625, 9, "context != null");
      let object = this.context.findRenderObject();
      return matrix_utils.MatrixUtils.transformPoint(object.getTransformTo(null), object.semanticBounds.topLeft);
    }
    get rect() {
      if (!(this.context != null)) dart.assertFailed("Tried to get the bounds of a focus node that didn't have its context set yet.\n" + "The context needs to be set before trying to evaluate traversal policies. This " + "is typically done with the attach method.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 637, 9, "context != null");
      let object = this.context.findRenderObject();
      let globalOffset = matrix_utils.MatrixUtils.transformPoint(object.getTransformTo(null), object.semanticBounds.topLeft);
      return globalOffset['&'](object.semanticBounds.size);
    }
    unfocus(opts) {
      let t11, t11$, t11$0;
      let focusPrevious = opts && 'focusPrevious' in opts ? opts.focusPrevious : false;
      if (!(focusPrevious != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 665, 12, "focusPrevious != null");
      if (!dart.test(this.hasFocus) && this[_manager] != null && !dart.equals(this[_manager][_nextFocus], this)) {
        return;
      }
      if (!dart.test(this.hasPrimaryFocus)) {
        t11$ = (t11 = this[_manager], t11 == null ? null : t11.primaryFocus);
        t11$ == null ? null : t11$.unfocus({focusPrevious: focusPrevious});
      }
      t11$0 = this[_manager];
      t11$0 == null ? null : t11$0[_willUnfocusNode](this);
      let scope = this.enclosingScope;
      if (scope != null) {
        scope[_focusedChildren][$remove](this);
        if (dart.test(focusPrevious)) {
          scope[_doRequestFocus]();
        }
      }
    }
    consumeKeyboardToken() {
      if (!dart.test(this[_hasKeyboardToken])) {
        return false;
      }
      this[_hasKeyboardToken] = false;
      return true;
    }
    [_markAsDirty](opts) {
      let t11, t11$, t11$0;
      let newFocus = opts && 'newFocus' in opts ? opts.newFocus : null;
      if (this[_manager] != null) {
        this[_manager][_markNeedsUpdate]({newFocus: newFocus});
        t11 = this[_manager][_dirtyNodes];
        t11 == null ? null : t11.add(this);
      } else {
        t11$ = newFocus;
        t11$ == null ? null : t11$[_setAsFocusedChild]();
        t11$0 = newFocus;
        t11$0 == null ? null : t11$0[_notify]();
        if (!dart.equals(newFocus, this)) {
          this[_notify]();
        }
      }
    }
    [_removeChild](node, opts) {
      let t11, t11$;
      let removeScopeFocus = opts && 'removeScopeFocus' in opts ? opts.removeScopeFocus : true;
      if (!(node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 726, 12, "node != null");
      if (!dart.test(this[_children$][$contains](node))) dart.assertFailed("Tried to remove a node that wasn't a child.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 727, 12, "_children.contains(node)");
      if (!dart.equals(node[_parent$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 728, 12, "node._parent == this");
      if (!dart.equals(node[_manager], this[_manager])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 729, 12, "node._manager == _manager");
      if (dart.test(removeScopeFocus)) {
        t11$ = (t11 = node.enclosingScope, t11 == null ? null : t11[_focusedChildren]);
        t11$ == null ? null : t11$[$remove](node);
      }
      node[_parent$] = null;
      this[_children$][$remove](node);
      for (let ancestor of this.ancestors) {
        ancestor[_descendants] = null;
      }
      this[_descendants] = null;
      if (!(this[_manager] == null || !dart.test(this[_manager].rootScope.descendants[$contains](node)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 741, 12, "_manager == null || !_manager.rootScope.descendants.contains(node)");
    }
    [_updateManager](manager) {
      this[_manager] = manager;
      for (let descendant of this.descendants) {
        descendant[_manager] = manager;
        descendant[_ancestors] = null;
      }
    }
    [_reparent](child) {
      let t11, t11$, t11$0, t11$1;
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 755, 12, "child != null");
      if (!!dart.equals(child, this)) dart.assertFailed("Tried to make a child into a parent of itself.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 756, 12, "child != this");
      if (dart.equals(child[_parent$], this)) {
        if (!dart.test(this[_children$][$contains](child))) dart.assertFailed("Found a node that says it's a child, but doesn't appear in the child list.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 758, 14, "_children.contains(child)");
        return;
      }
      if (!(this[_manager] == null || !dart.equals(child, this[_manager].rootScope))) dart.assertFailed("Reparenting the root node isn't allowed.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 762, 12, "_manager == null || child != _manager.rootScope");
      if (!!dart.test(this.ancestors[$contains](child))) dart.assertFailed("The supplied child is already an ancestor of this node. Loops are not allowed.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 763, 12, "!ancestors.contains(child)");
      let oldScope = child.enclosingScope;
      let hadFocus = child.hasFocus;
      t11 = child[_parent$];
      t11 == null ? null : t11[_removeChild](child, {removeScopeFocus: !dart.equals(oldScope, this.nearestScope)});
      this[_children$][$add](child);
      child[_parent$] = this;
      child[_ancestors] = null;
      child[_updateManager](this[_manager]);
      for (let ancestor of child.ancestors) {
        ancestor[_descendants] = null;
      }
      if (dart.test(hadFocus)) {
        t11$0 = (t11$ = this[_manager], t11$ == null ? null : t11$.primaryFocus);
        t11$0 == null ? null : t11$0[_setAsFocusedChild]();
      }
      if (oldScope != null && child.context != null && !dart.equals(child.enclosingScope, oldScope)) {
        t11$1 = focus_traversal.DefaultFocusTraversal.of(child.context, {nullOk: true});
        t11$1 == null ? null : t11$1.changedScope({node: child, oldScope: oldScope});
      }
      if (dart.test(child[_requestFocusWhenReparented])) {
        child[_doRequestFocus]();
        child[_requestFocusWhenReparented] = false;
      }
    }
    attach(context, opts) {
      let t11;
      let onKey = opts && 'onKey' in opts ? opts.onKey : null;
      this[_context] = context;
      this[_onKey] = (t11 = onKey, t11 == null ? this[_onKey] : t11);
      this[_attachment] = new focus_manager.FocusAttachment.__(this);
      return this[_attachment];
    }
    dispose() {
      let t11;
      t11 = this[_attachment];
      t11 == null ? null : t11.detach();
      super.dispose();
    }
    [_notify]() {
      if (this[_parent$] == null) {
        return;
      }
      if (dart.test(this.hasPrimaryFocus)) {
        this[_setAsFocusedChild]();
      }
      this.notifyListeners();
    }
    requestFocus(node = null) {
      if (node != null) {
        if (node[_parent$] == null) {
          this[_reparent](node);
        }
        if (!dart.test(node.ancestors[$contains](this))) dart.assertFailed("Focus was requested for a node that is not a descendant of the scope from which it was requested.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 848, 14, "node.ancestors.contains(this)");
        node[_doRequestFocus]();
        return;
      }
      this[_doRequestFocus]();
    }
    [_doRequestFocus]() {
      if (!dart.test(this.canRequestFocus)) {
        if (!dart.test(focus_manager._focusDebug("Node NOT requesting focus because canRequestFocus is false: " + dart.str(this)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 858, 14, "_focusDebug('Node NOT requesting focus because canRequestFocus is false: $this')");
        return;
      }
      if (this[_parent$] == null) {
        this[_requestFocusWhenReparented] = true;
        return;
      }
      this[_setAsFocusedChild]();
      if (dart.test(this.hasPrimaryFocus)) {
        return;
      }
      this[_hasKeyboardToken] = true;
      if (!dart.test(focus_manager._focusDebug("Node requesting focus: " + dart.str(this)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 873, 12, "_focusDebug('Node requesting focus: $this')");
      this[_markAsDirty]({newFocus: this});
    }
    [_setAsFocusedChild]() {
      let scopeFocus = this;
      for (let ancestor of this.ancestors[$whereType](focus_manager.FocusScopeNode)) {
        if (!!dart.equals(scopeFocus, ancestor)) dart.assertFailed("Somehow made a loop by setting focusedChild to its scope.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 903, 14, "scopeFocus != ancestor");
        if (!dart.test(focus_manager._focusDebug("Setting " + dart.str(scopeFocus) + " as focused child for scope:", JSArrayOfString().of([dart.toString(ancestor)])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 904, 14, "_focusDebug('Setting $scopeFocus as focused child for scope:', <String>[ancestor.toString()])");
        ancestor[_focusedChildren][$remove](scopeFocus);
        ancestor[_focusedChildren][$add](scopeFocus);
        scopeFocus = ancestor;
      }
    }
    nextFocus() {
      return focus_traversal.DefaultFocusTraversal.of(this.context).next(this);
    }
    previousFocus() {
      return focus_traversal.DefaultFocusTraversal.of(this.context).previous(this);
    }
    focusInDirection(direction) {
      return focus_traversal.DefaultFocusTraversal.of(this.context).inDirection(this, direction);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBuildContext()).new("context", this.context, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("canRequestFocus", {value: this.canRequestFocus, ifFalse: "NOT FOCUSABLE", defaultValue: true}));
      properties.add(new diagnostics$.FlagProperty.new("hasFocus", {value: dart.test(this.hasFocus) && !dart.test(this.hasPrimaryFocus), ifTrue: "IN FOCUS PATH", defaultValue: false}));
      properties.add(new diagnostics$.FlagProperty.new("hasPrimaryFocus", {value: this.hasPrimaryFocus, ifTrue: "PRIMARY FOCUS", defaultValue: false}));
    }
    debugDescribeChildren() {
      let count = 1;
      return this[_children$][$map](diagnostics$.DiagnosticsNode, dart.fn(child => {
        let t11;
        return child.toDiagnosticsNode({name: "Child " + dart.str((t11 = count, count = t11 + 1, t11))});
      }, FocusNodeToDiagnosticsNode()))[$toList]();
    }
    toStringShort() {
      let hasDebugLabel = this.debugLabel != null && this.debugLabel[$isNotEmpty];
      let extraData = dart.str(hasDebugLabel ? this.debugLabel : "") + (dart.test(this.hasFocus) && hasDebugLabel ? " " : "") + (dart.test(this.hasFocus) && !dart.test(this.hasPrimaryFocus) ? "[IN FOCUS PATH]" : "") + (dart.test(this.hasPrimaryFocus) ? "[PRIMARY FOCUS]" : "");
      return dart.str(diagnostics$.describeIdentity(this)) + (extraData[$isNotEmpty] ? "(" + extraData + ")" : "");
    }
  };
  (focus_manager.FocusNode.new = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : false;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    this[_context] = null;
    this[_manager] = null;
    this[_ancestors] = null;
    this[_descendants] = null;
    this[_hasKeyboardToken] = false;
    this[_parent$] = null;
    this[_children$] = JSArrayOfFocusNode().of([]);
    this[_debugLabel] = null;
    this[_attachment] = null;
    this[_requestFocusWhenReparented] = false;
    if (!(skipTraversal != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 377, 16, "skipTraversal != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 378, 16, "canRequestFocus != null");
    this[_skipTraversal] = skipTraversal;
    this[_canRequestFocus] = canRequestFocus;
    this[_onKey] = onKey;
    focus_manager.FocusNode.__proto__.new.call(this);
    this.debugLabel = debugLabel;
  }).prototype = focus_manager.FocusNode.prototype;
  dart.addTypeTests(focus_manager.FocusNode);
  dart.setMethodSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getMethods(focus_manager.FocusNode.__proto__),
    unfocus: dart.fnType(dart.void, [], {focusPrevious: core.bool}, {}),
    consumeKeyboardToken: dart.fnType(core.bool, []),
    [_markAsDirty]: dart.fnType(dart.void, [], {newFocus: focus_manager.FocusNode}, {}),
    [_removeChild]: dart.fnType(dart.void, [focus_manager.FocusNode], {removeScopeFocus: core.bool}, {}),
    [_updateManager]: dart.fnType(dart.void, [focus_manager.FocusManager]),
    [_reparent]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    attach: dart.fnType(focus_manager.FocusAttachment, [framework.BuildContext], {onKey: dart.fnType(core.bool, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent])}, {}),
    [_notify]: dart.fnType(dart.void, []),
    requestFocus: dart.fnType(dart.void, [], [focus_manager.FocusNode]),
    [_doRequestFocus]: dart.fnType(dart.void, []),
    [_setAsFocusedChild]: dart.fnType(dart.void, []),
    nextFocus: dart.fnType(core.bool, []),
    previousFocus: dart.fnType(core.bool, []),
    focusInDirection: dart.fnType(core.bool, [focus_traversal.TraversalDirection])
  }));
  dart.setGetterSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getGetters(focus_manager.FocusNode.__proto__),
    skipTraversal: core.bool,
    canRequestFocus: core.bool,
    context: framework.BuildContext,
    onKey: dart.fnType(core.bool, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]),
    parent: focus_manager.FocusNode,
    children: core.Iterable$(focus_manager.FocusNode),
    traversalChildren: core.Iterable$(focus_manager.FocusNode),
    debugLabel: core.String,
    descendants: core.Iterable$(focus_manager.FocusNode),
    traversalDescendants: core.Iterable$(focus_manager.FocusNode),
    ancestors: core.Iterable$(focus_manager.FocusNode),
    hasFocus: core.bool,
    hasPrimaryFocus: core.bool,
    highlightMode: focus_manager.FocusHighlightMode,
    nearestScope: focus_manager.FocusScopeNode,
    enclosingScope: focus_manager.FocusScopeNode,
    size: ui.Size,
    offset: ui.Offset,
    rect: ui.Rect
  }));
  dart.setSetterSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getSetters(focus_manager.FocusNode.__proto__),
    skipTraversal: core.bool,
    canRequestFocus: core.bool,
    debugLabel: core.String
  }));
  dart.setLibraryUri(focus_manager.FocusNode, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusNode, () => ({
    __proto__: dart.getFields(focus_manager.FocusNode.__proto__),
    [_skipTraversal]: dart.fieldType(core.bool),
    [_canRequestFocus]: dart.fieldType(core.bool),
    [_context]: dart.fieldType(framework.BuildContext),
    [_onKey]: dart.fieldType(dart.fnType(core.bool, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent])),
    [_manager]: dart.fieldType(focus_manager.FocusManager),
    [_ancestors]: dart.fieldType(core.List$(focus_manager.FocusNode)),
    [_descendants]: dart.fieldType(core.List$(focus_manager.FocusNode)),
    [_hasKeyboardToken]: dart.fieldType(core.bool),
    [_parent$]: dart.fieldType(focus_manager.FocusNode),
    [_children$]: dart.finalFieldType(core.List$(focus_manager.FocusNode)),
    [_debugLabel]: dart.fieldType(core.String),
    [_attachment]: dart.fieldType(focus_manager.FocusAttachment),
    [_requestFocusWhenReparented]: dart.fieldType(core.bool)
  }));
  focus_manager.FocusScopeNode = class FocusScopeNode extends focus_manager.FocusNode {
    get nearestScope() {
      return this;
    }
    get isFirstFocus() {
      return dart.equals(this.enclosingScope.focusedChild, this);
    }
    get focusedChild() {
      if (!(dart.test(this[_focusedChildren][$isEmpty]) || dart.equals(this[_focusedChildren][$last].enclosingScope, this))) dart.assertFailed("Focused child does not have the same idea of its enclosing scope as the scope does.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1022, 12, "_focusedChildren.isEmpty || _focusedChildren.last.enclosingScope == this");
      return dart.test(this[_focusedChildren][$isNotEmpty]) ? this[_focusedChildren][$last] : null;
    }
    setFirstFocus(scope) {
      if (!(scope != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1036, 12, "scope != null");
      if (!!dart.equals(scope, this)) dart.assertFailed("Unexpected self-reference in setFirstFocus.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1037, 12, "scope != this");
      if (!dart.test(focus_manager._focusDebug("Setting scope as first focus in " + dart.str(this) + " to node:", JSArrayOfString().of([dart.toString(scope)])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1038, 12, "_focusDebug('Setting scope as first focus in $this to node:', <String>[scope.toString()])");
      if (scope[_parent$] == null) {
        this[_reparent](scope);
      }
      if (!dart.test(scope.ancestors[$contains](this))) dart.assertFailed(dart.str(dart.wrapType(focus_manager.FocusScopeNode)) + " " + dart.str(scope) + " must be a child of " + dart.str(this) + " to set it as first focus.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1042, 12, "scope.ancestors.contains(this)");
      if (dart.test(this.hasFocus)) {
        scope[_doRequestFocus]();
      } else {
        scope[_setAsFocusedChild]();
      }
    }
    autofocus(node) {
      if (!dart.test(focus_manager._focusDebug("Node autofocusing: " + dart.str(node)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1061, 12, "_focusDebug('Node autofocusing: $node')");
      if (this.focusedChild == null) {
        if (node[_parent$] == null) {
          this[_reparent](node);
        }
        if (!dart.test(node.ancestors[$contains](this))) dart.assertFailed("Autofocus was requested for a node that is not a descendant of the scope from which it was requested.", "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1066, 14, "node.ancestors.contains(this)");
        node[_doRequestFocus]();
      }
    }
    [_doRequestFocus]() {
      let t11;
      let primaryFocus = (t11 = this.focusedChild, t11 == null ? this : t11);
      while (focus_manager.FocusScopeNode.is(primaryFocus) && primaryFocus.focusedChild != null) {
        let scope = focus_manager.FocusScopeNode.as(primaryFocus);
        primaryFocus = scope.focusedChild;
      }
      if (primaryFocus === this) {
        if (dart.test(primaryFocus.canRequestFocus)) {
          this[_setAsFocusedChild]();
          this[_markAsDirty]({newFocus: this});
        }
      } else {
        primaryFocus[_doRequestFocus]();
      }
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      if (dart.test(this[_focusedChildren][$isEmpty])) {
        return;
      }
      let childList = this[_focusedChildren][$reversed][$map](core.String, dart.fn(child => child.toStringShort(), FocusNodeToString()))[$toList]();
      properties.add(new (IterablePropertyOfString()).new("focusedChildren", childList, {defaultValue: JSArrayOfString().of([])}));
    }
  };
  (focus_manager.FocusScopeNode.new = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : false;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    this[_focusedChildren] = JSArrayOfFocusNode().of([]);
    if (!(skipTraversal != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 999, 16, "skipTraversal != null");
    if (!(canRequestFocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1000, 16, "canRequestFocus != null");
    focus_manager.FocusScopeNode.__proto__.new.call(this, {debugLabel: debugLabel, onKey: onKey, canRequestFocus: canRequestFocus, skipTraversal: skipTraversal});
    ;
  }).prototype = focus_manager.FocusScopeNode.prototype;
  dart.addTypeTests(focus_manager.FocusScopeNode);
  dart.setMethodSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getMethods(focus_manager.FocusScopeNode.__proto__),
    setFirstFocus: dart.fnType(dart.void, [focus_manager.FocusScopeNode]),
    autofocus: dart.fnType(dart.void, [focus_manager.FocusNode])
  }));
  dart.setGetterSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getGetters(focus_manager.FocusScopeNode.__proto__),
    isFirstFocus: core.bool,
    focusedChild: focus_manager.FocusNode
  }));
  dart.setLibraryUri(focus_manager.FocusScopeNode, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusScopeNode, () => ({
    __proto__: dart.getFields(focus_manager.FocusScopeNode.__proto__),
    [_focusedChildren]: dart.finalFieldType(core.List$(focus_manager.FocusNode))
  }));
  var _name$2 = dart.privateName(focus_manager, "_name");
  var C43;
  var C44;
  var C45;
  focus_manager.FocusHighlightMode = class FocusHighlightMode extends core.Object {
    toString() {
      return this[_name$2];
    }
  };
  (focus_manager.FocusHighlightMode.new = function(index, _name) {
    this.index = index;
    this[_name$2] = _name;
    ;
  }).prototype = focus_manager.FocusHighlightMode.prototype;
  dart.addTypeTests(focus_manager.FocusHighlightMode);
  dart.setLibraryUri(focus_manager.FocusHighlightMode, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusHighlightMode, () => ({
    __proto__: dart.getFields(focus_manager.FocusHighlightMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$2]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.FocusHighlightMode, ['toString']);
  focus_manager.FocusHighlightMode.touch = C43 || CT.C43;
  focus_manager.FocusHighlightMode.traditional = C44 || CT.C44;
  focus_manager.FocusHighlightMode.values = C45 || CT.C45;
  var C46;
  var C47;
  var C48;
  var C49;
  focus_manager.FocusHighlightStrategy = class FocusHighlightStrategy extends core.Object {
    toString() {
      return this[_name$2];
    }
  };
  (focus_manager.FocusHighlightStrategy.new = function(index, _name) {
    this.index = index;
    this[_name$2] = _name;
    ;
  }).prototype = focus_manager.FocusHighlightStrategy.prototype;
  dart.addTypeTests(focus_manager.FocusHighlightStrategy);
  dart.setLibraryUri(focus_manager.FocusHighlightStrategy, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusHighlightStrategy, () => ({
    __proto__: dart.getFields(focus_manager.FocusHighlightStrategy.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$2]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_manager.FocusHighlightStrategy, ['toString']);
  focus_manager.FocusHighlightStrategy.automatic = C46 || CT.C46;
  focus_manager.FocusHighlightStrategy.alwaysTouch = C47 || CT.C47;
  focus_manager.FocusHighlightStrategy.alwaysTraditional = C48 || CT.C48;
  focus_manager.FocusHighlightStrategy.values = C49 || CT.C49;
  var _lastInteractionWasTouch = dart.privateName(focus_manager, "_lastInteractionWasTouch");
  var _highlightStrategy = dart.privateName(focus_manager, "_highlightStrategy");
  var _highlightMode = dart.privateName(focus_manager, "_highlightMode");
  var _listeners = dart.privateName(focus_manager, "_listeners");
  var _primaryFocus = dart.privateName(focus_manager, "_primaryFocus");
  var _haveScheduledUpdate = dart.privateName(focus_manager, "_haveScheduledUpdate");
  var _handleRawKeyEvent = dart.privateName(focus_manager, "_handleRawKeyEvent");
  var _handlePointerEvent = dart.privateName(focus_manager, "_handlePointerEvent");
  var _updateHighlightMode = dart.privateName(focus_manager, "_updateHighlightMode");
  var _notifyHighlightModeListeners = dart.privateName(focus_manager, "_notifyHighlightModeListeners");
  var C50;
  var C51;
  var C52;
  var C53;
  var C54;
  var _applyFocusChange = dart.privateName(focus_manager, "_applyFocusChange");
  var rootScope = dart.privateName(focus_manager, "FocusManager.rootScope");
  const Object_DiagnosticableTreeMixin$36$ = class Object_DiagnosticableTreeMixin extends core.Object {};
  (Object_DiagnosticableTreeMixin$36$.new = function() {
  }).prototype = Object_DiagnosticableTreeMixin$36$.prototype;
  dart.applyMixin(Object_DiagnosticableTreeMixin$36$, diagnostics$.DiagnosticableTreeMixin);
  const Object_ChangeNotifier$36$ = class Object_ChangeNotifier extends Object_DiagnosticableTreeMixin$36$ {};
  (Object_ChangeNotifier$36$.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36$.prototype;
  dart.applyMixin(Object_ChangeNotifier$36$, change_notifier.ChangeNotifier);
  focus_manager.FocusManager = class FocusManager extends Object_ChangeNotifier$36$ {
    get rootScope() {
      return this[rootScope];
    }
    set rootScope(value) {
      super.rootScope = value;
    }
    static get instance() {
      return binding$5.WidgetsBinding.instance.focusManager;
    }
    get highlightStrategy() {
      return this[_highlightStrategy];
    }
    set highlightStrategy(highlightStrategy) {
      this[_highlightStrategy] = highlightStrategy;
      this[_updateHighlightMode]();
    }
    get highlightMode() {
      return this[_highlightMode];
    }
    [_updateHighlightMode]() {
      this[_lastInteractionWasTouch] == null ? this[_lastInteractionWasTouch] = dart.test(io.Platform.isAndroid) || dart.test(io.Platform.isIOS) || !dart.test(binding$5.WidgetsBinding.instance.mouseTracker.mouseIsConnected) : null;
      let newMode = null;
      switch (this.highlightStrategy) {
        case C46 || CT.C46:
        {
          if (dart.test(this[_lastInteractionWasTouch])) {
            newMode = focus_manager.FocusHighlightMode.touch;
          } else {
            newMode = focus_manager.FocusHighlightMode.traditional;
          }
          break;
        }
        case C47 || CT.C47:
        {
          newMode = focus_manager.FocusHighlightMode.touch;
          break;
        }
        case C48 || CT.C48:
        {
          newMode = focus_manager.FocusHighlightMode.traditional;
          break;
        }
      }
      if (!dart.equals(newMode, this[_highlightMode])) {
        this[_highlightMode] = newMode;
        this[_notifyHighlightModeListeners]();
      }
    }
    addHighlightModeListener(listener) {
      return this[_listeners].add(listener);
    }
    removeHighlightModeListener(listener) {
      let t11;
      t11 = this[_listeners];
      return t11 == null ? null : t11.remove(listener);
    }
    [_notifyHighlightModeListeners]() {
      if (dart.test(this[_listeners].isEmpty)) {
        return;
      }
      let localListeners = ListOfFocusHighlightModeTovoid().from(this[_listeners]);
      for (let listener of localListeners) {
        try {
          if (dart.test(this[_listeners].contains(listener))) {
            listener(this[_highlightMode]);
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: new assertions.ErrorDescription.new("while dispatching notifications for " + dart.str(this[$runtimeType])), informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsPropertyOfFocusManager()).new((function*() {
              yield new (DiagnosticsPropertyOfFocusManager()).new("The " + dart.str(this[$runtimeType]) + " sending notification was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty});
            }).bind(this)), VoidToIterableOfDiagnosticsPropertyOfFocusManager())}));
        }
      }
    }
    [_handlePointerEvent](event) {
      let currentInteractionIsTouch = null;
      switch (event.kind) {
        case C50 || CT.C50:
        case C51 || CT.C51:
        case C52 || CT.C52:
        {
          currentInteractionIsTouch = true;
          break;
        }
        case C53 || CT.C53:
        case C54 || CT.C54:
        {
          currentInteractionIsTouch = false;
          break;
        }
      }
      if (!dart.equals(this[_lastInteractionWasTouch], currentInteractionIsTouch)) {
        this[_lastInteractionWasTouch] = currentInteractionIsTouch;
        this[_updateHighlightMode]();
      }
    }
    [_handleRawKeyEvent](event) {
      if (dart.test(this[_lastInteractionWasTouch])) {
        this[_lastInteractionWasTouch] = false;
        this[_updateHighlightMode]();
      }
      if (!dart.test(focus_manager._focusDebug("Received key event " + dart.str(event.logicalKey)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1356, 12, "_focusDebug('Received key event ${event.logicalKey}')");
      if (this[_primaryFocus] == null) {
        if (!dart.test(focus_manager._focusDebug("No primary focus for key event, ignored: " + dart.str(event)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1360, 14, "_focusDebug('No primary focus for key event, ignored: $event')");
        return;
      }
      let handled = false;
      for (let node of (() => {
        let t12 = JSArrayOfFocusNode().of([]);
        t12[$add](this[_primaryFocus]);
        for (let t13 of this[_primaryFocus].ancestors)
          t12[$add](t13);
        return t12;
      })()) {
        if (node.onKey != null && dart.test(node.onKey(node, event))) {
          if (!dart.test(focus_manager._focusDebug("Node " + dart.str(node) + " handled key event " + dart.str(event) + "."))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1366, 16, "_focusDebug('Node $node handled key event $event.')");
          handled = true;
          break;
        }
      }
      if (!handled) {
        if (!dart.test(focus_manager._focusDebug("Key event not handled by anyone: " + dart.str(event) + "."))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1372, 14, "_focusDebug('Key event not handled by anyone: $event.')");
      }
    }
    get primaryFocus() {
      return this[_primaryFocus];
    }
    [_willUnfocusNode](node) {
      if (!(node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1390, 12, "node != null");
      if (!dart.test(focus_manager._focusDebug("Unfocusing node " + dart.str(node)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1391, 12, "_focusDebug('Unfocusing node $node')");
      if (dart.equals(this[_primaryFocus], node) || dart.equals(this[_nextFocus], node)) {
        if (dart.equals(this[_primaryFocus], node)) {
          this[_primaryFocus] = null;
        }
        if (dart.equals(this[_nextFocus], node)) {
          this[_nextFocus] = null;
        }
        this[_dirtyNodes].add(node);
        this[_markNeedsUpdate]();
      }
      if (!dart.test(focus_manager._focusDebug("Unfocused node " + dart.str(node) + ":", JSArrayOfString().of(["primary focus is " + dart.str(this[_primaryFocus]), "next focus will be " + dart.str(this[_nextFocus])])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1402, 12, "_focusDebug('Unfocused node $node:', <String>['primary focus is $_primaryFocus', 'next focus will be $_nextFocus'])");
    }
    [_markNeedsUpdate](opts) {
      let t14;
      let newFocus = opts && 'newFocus' in opts ? opts.newFocus : null;
      this[_nextFocus] = (t14 = newFocus, t14 == null ? this[_nextFocus] : t14);
      if (!dart.test(focus_manager._focusDebug("Scheduling update, next focus will be " + dart.str(this[_nextFocus])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1414, 12, "_focusDebug('Scheduling update, next focus will be $_nextFocus')");
      if (dart.test(this[_haveScheduledUpdate])) {
        return;
      }
      this[_haveScheduledUpdate] = true;
      async.scheduleMicrotask(dart.bind(this, _applyFocusChange));
    }
    [_applyFocusChange]() {
      let t14, t14$, t14$0;
      this[_haveScheduledUpdate] = false;
      if (!dart.test(focus_manager._focusDebug("Refreshing focus state. Next focus will be " + dart.str(this[_nextFocus])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1424, 12, "_focusDebug('Refreshing focus state. Next focus will be $_nextFocus')");
      let previousFocus = this[_primaryFocus];
      if (this[_primaryFocus] == null && this[_nextFocus] == null) {
        this[_nextFocus] = this.rootScope;
      }
      if (this[_nextFocus] != null && !dart.equals(this[_nextFocus], this[_primaryFocus])) {
        this[_primaryFocus] = this[_nextFocus];
        let previousPath = (t14$0 = (t14$ = (t14 = previousFocus, t14 == null ? null : t14.ancestors), t14$ == null ? null : t14$[$toSet]()), t14$0 == null ? LinkedHashSetOfFocusNode().new() : t14$0);
        let nextPath = this[_nextFocus].ancestors[$toSet]();
        this[_dirtyNodes].addAll(nextPath.difference(previousPath));
        this[_dirtyNodes].addAll(previousPath.difference(nextPath));
        this[_nextFocus] = null;
      }
      if (!dart.equals(previousFocus, this[_primaryFocus])) {
        if (!dart.test(focus_manager._focusDebug("Updating focus from " + dart.str(previousFocus) + " to " + dart.str(this[_primaryFocus])))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1442, 14, "_focusDebug('Updating focus from $previousFocus to $_primaryFocus')");
        if (previousFocus != null) {
          this[_dirtyNodes].add(previousFocus);
        }
        if (this[_primaryFocus] != null) {
          this[_dirtyNodes].add(this[_primaryFocus]);
        }
      }
      if (!dart.test(focus_manager._focusDebug("Notifying " + dart.str(this[_dirtyNodes][$length]) + " dirty nodes:", this[_dirtyNodes][$toList]()[$map](core.String, dart.fn(node => dart.toString(node), FocusNodeToString()))))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1450, 12, "_focusDebug('Notifying ${_dirtyNodes.length} dirty nodes:', _dirtyNodes.toList().map<String>((FocusNode node) => node.toString()))");
      for (let node of this[_dirtyNodes]) {
        node[_notify]();
      }
      this[_dirtyNodes].clear();
      if (!dart.equals(previousFocus, this[_primaryFocus])) {
        this.notifyListeners();
      }
      if (!dart.test(dart.fn(() => {
        if (false) {
          focus_manager.debugDumpFocusTree();
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1458, 12, "() {\r\n      if (_kDebugFocus) {\r\n        debugDumpFocusTree();\r\n      }\r\n      return true;\r\n    }()");
    }
    debugDescribeChildren() {
      return JSArrayOfDiagnosticsNode().of([this.rootScope.toDiagnosticsNode({name: "rootScope"})]);
    }
    debugFillProperties(properties) {
      let t14;
      properties.add(new diagnostics$.FlagProperty.new("haveScheduledUpdate", {value: this[_haveScheduledUpdate], ifTrue: "UPDATE SCHEDULED"}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("primaryFocus", this.primaryFocus, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("nextFocus", this[_nextFocus], {defaultValue: null}));
      let element = framework.Element.as((t14 = this.primaryFocus, t14 == null ? null : t14.context));
      if (element != null) {
        properties.add(new (DiagnosticsPropertyOfString()).new("primaryFocusCreator", element.debugGetCreatorChain(20)));
      }
    }
  };
  (focus_manager.FocusManager.new = function() {
    this[_lastInteractionWasTouch] = true;
    this[_highlightStrategy] = focus_manager.FocusHighlightStrategy.automatic;
    this[_highlightMode] = focus_manager.FocusHighlightMode.touch;
    this[_listeners] = new (HashedObserverListOfFocusHighlightModeTovoid()).new();
    this[rootScope] = new focus_manager.FocusScopeNode.new({debugLabel: "Root Focus Scope"});
    this[_primaryFocus] = null;
    this[_nextFocus] = null;
    this[_dirtyNodes] = LinkedHashSetOfFocusNode().new();
    this[_haveScheduledUpdate] = false;
    focus_manager.FocusManager.__proto__.new.call(this);
    this.rootScope[_manager] = this;
    raw_keyboard.RawKeyboard.instance.addListener(dart.bind(this, _handleRawKeyEvent));
    binding$1.GestureBinding.instance.pointerRouter.addGlobalRoute(dart.bind(this, _handlePointerEvent));
  }).prototype = focus_manager.FocusManager.prototype;
  dart.addTypeTests(focus_manager.FocusManager);
  focus_manager.FocusManager[dart.implements] = () => [diagnostics$.Diagnosticable];
  dart.setMethodSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getMethods(focus_manager.FocusManager.__proto__),
    [_updateHighlightMode]: dart.fnType(dart.void, []),
    addHighlightModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [focus_manager.FocusHighlightMode])]),
    removeHighlightModeListener: dart.fnType(dart.void, [dart.fnType(dart.void, [focus_manager.FocusHighlightMode])]),
    [_notifyHighlightModeListeners]: dart.fnType(dart.void, []),
    [_handlePointerEvent]: dart.fnType(dart.void, [events.PointerEvent]),
    [_handleRawKeyEvent]: dart.fnType(dart.void, [raw_keyboard.RawKeyEvent]),
    [_willUnfocusNode]: dart.fnType(dart.void, [focus_manager.FocusNode]),
    [_markNeedsUpdate]: dart.fnType(dart.void, [], {newFocus: focus_manager.FocusNode}, {}),
    [_applyFocusChange]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getGetters(focus_manager.FocusManager.__proto__),
    highlightStrategy: focus_manager.FocusHighlightStrategy,
    highlightMode: focus_manager.FocusHighlightMode,
    primaryFocus: focus_manager.FocusNode
  }));
  dart.setSetterSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getSetters(focus_manager.FocusManager.__proto__),
    highlightStrategy: focus_manager.FocusHighlightStrategy
  }));
  dart.setLibraryUri(focus_manager.FocusManager, "package:flutter/src/widgets/focus_manager.dart");
  dart.setFieldSignature(focus_manager.FocusManager, () => ({
    __proto__: dart.getFields(focus_manager.FocusManager.__proto__),
    [_lastInteractionWasTouch]: dart.fieldType(core.bool),
    [_highlightStrategy]: dart.fieldType(focus_manager.FocusHighlightStrategy),
    [_highlightMode]: dart.fieldType(focus_manager.FocusHighlightMode),
    [_listeners]: dart.finalFieldType(observer_list.HashedObserverList$(dart.fnType(dart.void, [focus_manager.FocusHighlightMode]))),
    rootScope: dart.finalFieldType(focus_manager.FocusScopeNode),
    [_primaryFocus]: dart.fieldType(focus_manager.FocusNode),
    [_nextFocus]: dart.fieldType(focus_manager.FocusNode),
    [_dirtyNodes]: dart.finalFieldType(core.Set$(focus_manager.FocusNode)),
    [_haveScheduledUpdate]: dart.fieldType(core.bool)
  }));
  focus_manager._focusDebug = function _focusDebug(message, details = null) {
    if (false) {
      print.debugPrint("FOCUS: " + dart.str(message));
      if (details != null && dart.test(details[$isNotEmpty])) {
        for (let detail of details) {
          print.debugPrint("    " + dart.str(detail));
        }
      }
    }
    return true;
  };
  focus_manager.debugDescribeFocusTree = function debugDescribeFocusTree() {
    let t14;
    if (!(binding$5.WidgetsBinding.instance != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1494, 10, "WidgetsBinding.instance != null");
    let result = null;
    if (!dart.test(dart.fn(() => {
      result = focus_manager.FocusManager.instance.toStringDeep();
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1496, 10, "() {\r\n    result = FocusManager.instance.toStringDeep();\r\n    return true;\r\n  }()");
    t14 = result;
    return t14 == null ? "" : t14;
  };
  focus_manager.debugDumpFocusTree = function debugDumpFocusTree() {
    if (!dart.test(dart.fn(() => {
      print.debugPrint(focus_manager.debugDescribeFocusTree());
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_manager.dart", 1508, 10, "() {\r\n    debugPrint(debugDescribeFocusTree());\r\n    return true;\r\n  }()");
  };
  dart.copyProperties(focus_manager, {
    get primaryFocus() {
      return binding$5.WidgetsBinding.instance.focusManager.primaryFocus;
    }
  });
  dart.defineLazy(focus_manager, {
    /*focus_manager._kDebugFocus*/get _kDebugFocus() {
      return false;
    }
  });
  var _name$3 = dart.privateName(focus_traversal, "_name");
  var C55;
  var C56;
  var C57;
  var C58;
  var C59;
  focus_traversal.TraversalDirection = class TraversalDirection extends core.Object {
    toString() {
      return this[_name$3];
    }
  };
  (focus_traversal.TraversalDirection.new = function(index, _name) {
    this.index = index;
    this[_name$3] = _name;
    ;
  }).prototype = focus_traversal.TraversalDirection.prototype;
  dart.addTypeTests(focus_traversal.TraversalDirection);
  dart.setLibraryUri(focus_traversal.TraversalDirection, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal.TraversalDirection, () => ({
    __proto__: dart.getFields(focus_traversal.TraversalDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$3]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(focus_traversal.TraversalDirection, ['toString']);
  focus_traversal.TraversalDirection.up = C55 || CT.C55;
  focus_traversal.TraversalDirection.right = C56 || CT.C56;
  focus_traversal.TraversalDirection.down = C57 || CT.C57;
  focus_traversal.TraversalDirection.left = C58 || CT.C58;
  focus_traversal.TraversalDirection.values = C59 || CT.C59;
  focus_traversal.FocusTraversalPolicy = class FocusTraversalPolicy extends core.Object {
    invalidateScopeData(node) {
    }
    changedScope(opts) {
      let node = opts && 'node' in opts ? opts.node : null;
      let oldScope = opts && 'oldScope' in opts ? opts.oldScope : null;
    }
  };
  (focus_traversal.FocusTraversalPolicy.new = function() {
    ;
  }).prototype = focus_traversal.FocusTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.FocusTraversalPolicy);
  dart.setMethodSignature(focus_traversal.FocusTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.FocusTraversalPolicy.__proto__),
    invalidateScopeData: dart.fnType(dart.void, [focus_manager.FocusScopeNode]),
    changedScope: dart.fnType(dart.void, [], {node: focus_manager.FocusNode, oldScope: focus_manager.FocusScopeNode}, {})
  }));
  dart.setLibraryUri(focus_traversal.FocusTraversalPolicy, "package:flutter/src/widgets/focus_traversal.dart");
  var direction$ = dart.privateName(focus_traversal, "_DirectionalPolicyDataEntry.direction");
  var node$ = dart.privateName(focus_traversal, "_DirectionalPolicyDataEntry.node");
  focus_traversal._DirectionalPolicyDataEntry = class _DirectionalPolicyDataEntry extends core.Object {
    get direction() {
      return this[direction$];
    }
    set direction(value) {
      super.direction = value;
    }
    get node() {
      return this[node$];
    }
    set node(value) {
      super.node = value;
    }
  };
  (focus_traversal._DirectionalPolicyDataEntry.new = function(opts) {
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let node = opts && 'node' in opts ? opts.node : null;
    this[direction$] = direction;
    this[node$] = node;
    if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 160, 16, "direction != null");
    if (!(node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 161, 16, "node != null");
    ;
  }).prototype = focus_traversal._DirectionalPolicyDataEntry.prototype;
  dart.addTypeTests(focus_traversal._DirectionalPolicyDataEntry);
  dart.setLibraryUri(focus_traversal._DirectionalPolicyDataEntry, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal._DirectionalPolicyDataEntry, () => ({
    __proto__: dart.getFields(focus_traversal._DirectionalPolicyDataEntry.__proto__),
    direction: dart.finalFieldType(focus_traversal.TraversalDirection),
    node: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var history$ = dart.privateName(focus_traversal, "_DirectionalPolicyData.history");
  focus_traversal._DirectionalPolicyData = class _DirectionalPolicyData extends core.Object {
    get history() {
      return this[history$];
    }
    set history(value) {
      super.history = value;
    }
  };
  (focus_traversal._DirectionalPolicyData.new = function(opts) {
    let history = opts && 'history' in opts ? opts.history : null;
    this[history$] = history;
    if (!(history != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 168, 67, "history != null");
    ;
  }).prototype = focus_traversal._DirectionalPolicyData.prototype;
  dart.addTypeTests(focus_traversal._DirectionalPolicyData);
  dart.setLibraryUri(focus_traversal._DirectionalPolicyData, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal._DirectionalPolicyData, () => ({
    __proto__: dart.getFields(focus_traversal._DirectionalPolicyData.__proto__),
    history: dart.finalFieldType(core.List$(focus_traversal._DirectionalPolicyDataEntry))
  }));
  var _policyData = dart.privateName(focus_traversal, "_policyData");
  var _sortAndFindInitial = dart.privateName(focus_traversal, "_sortAndFindInitial");
  var _sortAndFilterHorizontally = dart.privateName(focus_traversal, "_sortAndFilterHorizontally");
  var _sortAndFilterVertically = dart.privateName(focus_traversal, "_sortAndFilterVertically");
  var _popPolicyDataIfNeeded = dart.privateName(focus_traversal, "_popPolicyDataIfNeeded");
  var _pushPolicyData = dart.privateName(focus_traversal, "_pushPolicyData");
  focus_traversal.DirectionalFocusTraversalPolicyMixin = class DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinOn] = FocusTraversalPolicy => class DirectionalFocusTraversalPolicyMixin extends FocusTraversalPolicy {
    invalidateScopeData(node) {
      super.invalidateScopeData(node);
      this[_policyData][$remove](node);
    }
    changedScope(opts) {
      let t14, t14$;
      let node = opts && 'node' in opts ? opts.node : null;
      let oldScope = opts && 'oldScope' in opts ? opts.oldScope : null;
      super.changedScope({node: node, oldScope: oldScope});
      if (oldScope != null) {
        t14$ = (t14 = this[_policyData][$_get](oldScope), t14 == null ? null : t14.history);
        t14$ == null ? null : t14$[$removeWhere](dart.fn(entry => dart.equals(entry.node, node), _DirectionalPolicyDataEntryTobool()));
      }
    }
    findFirstFocusInDirection(currentNode, direction) {
      if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 222, 12, "direction != null");
      if (!(currentNode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 223, 12, "currentNode != null");
      switch (direction) {
        case C55 || CT.C55:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: true, first: false});
        }
        case C57 || CT.C57:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: true, first: true});
        }
        case C58 || CT.C58:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: false, first: false});
        }
        case C56 || CT.C56:
        {
          return this[_sortAndFindInitial](currentNode, {vertical: false, first: true});
        }
      }
      return null;
    }
    [_sortAndFindInitial](currentNode, opts) {
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      let first = opts && 'first' in opts ? opts.first : null;
      let nodes = currentNode.nearestScope.traversalDescendants;
      let sorted = nodes[$toList]();
      sorted[$sort](dart.fn((a, b) => {
        if (dart.test(vertical)) {
          if (dart.test(first)) {
            return a.rect.top[$compareTo](b.rect.top);
          } else {
            return b.rect.bottom[$compareTo](a.rect.bottom);
          }
        } else {
          if (dart.test(first)) {
            return a.rect.left[$compareTo](b.rect.left);
          } else {
            return b.rect.right[$compareTo](a.rect.right);
          }
        }
      }, FocusNodeAndFocusNodeToint()));
      if (dart.test(sorted[$isNotEmpty])) return sorted[$first];
      return null;
    }
    [_sortAndFilterHorizontally](direction, target, nearestScope) {
      if (!(dart.equals(direction, focus_traversal.TraversalDirection.left) || dart.equals(direction, focus_traversal.TraversalDirection.right))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 279, 12, "direction == TraversalDirection.left || direction == TraversalDirection.right");
      let nodes = nearestScope.traversalDescendants;
      if (!!dart.test(nodes[$contains](nearestScope))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 281, 12, "!nodes.contains(nearestScope)");
      let sorted = nodes[$toList]();
      sorted[$sort](dart.fn((a, b) => a.rect.center.dx[$compareTo](b.rect.center.dx), FocusNodeAndFocusNodeToint()));
      let result = null;
      switch (direction) {
        case C58 || CT.C58:
        {
          result = sorted[$where](dart.fn(node => !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dx) <= dart.notNull(target.left), FocusNodeTobool()));
          break;
        }
        case C56 || CT.C56:
        {
          result = sorted[$where](dart.fn(node => !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dx) >= dart.notNull(target.right), FocusNodeTobool()));
          break;
        }
        case C55 || CT.C55:
        case C57 || CT.C57:
        {
          break;
        }
      }
      return result;
    }
    [_sortAndFilterVertically](direction, target, nodes) {
      let sorted = nodes[$toList]();
      sorted[$sort](dart.fn((a, b) => a.rect.center.dy[$compareTo](b.rect.center.dy), FocusNodeAndFocusNodeToint()));
      switch (direction) {
        case C55 || CT.C55:
        {
          return sorted[$where](dart.fn(node => !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dy) <= dart.notNull(target.top), FocusNodeTobool()));
        }
        case C57 || CT.C57:
        {
          return sorted[$where](dart.fn(node => !dart.equals(node.rect, target) && dart.notNull(node.rect.center.dy) >= dart.notNull(target.bottom), FocusNodeTobool()));
        }
        case C58 || CT.C58:
        case C56 || CT.C56:
        {
          break;
        }
      }
      if (!(dart.equals(direction, focus_traversal.TraversalDirection.up) || dart.equals(direction, focus_traversal.TraversalDirection.down))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 318, 12, "direction == TraversalDirection.up || direction == TraversalDirection.down");
      return null;
    }
    [_popPolicyDataIfNeeded](direction, nearestScope, focusedChild) {
      let policyData = this[_policyData][$_get](nearestScope);
      if (policyData != null && dart.test(policyData.history[$isNotEmpty]) && !dart.equals(policyData.history[$first].direction, direction)) {
        if (policyData.history[$last].node.parent == null) {
          this.invalidateScopeData(nearestScope);
          return false;
        }
        const popOrInvalidate = direction => {
          let lastNode = policyData.history[$removeLast]().node;
          if (!dart.equals(scrollable$.Scrollable.of(lastNode.context), scrollable$.Scrollable.of(focus_manager.primaryFocus.context))) {
            this.invalidateScopeData(nearestScope);
            return false;
          }
          let alignmentPolicy = null;
          switch (direction) {
            case C55 || CT.C55:
            case C58 || CT.C58:
            {
              alignmentPolicy = scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart;
              break;
            }
            case C56 || CT.C56:
            case C57 || CT.C57:
            {
              alignmentPolicy = scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd;
              break;
            }
          }
          focus_traversal._focusAndEnsureVisible(lastNode, {alignmentPolicy: alignmentPolicy});
          return true;
        };
        dart.fn(popOrInvalidate, TraversalDirectionTobool());
        switch (direction) {
          case C57 || CT.C57:
          case C55 || CT.C55:
          {
            switch (policyData.history[$first].direction) {
              case C58 || CT.C58:
              case C56 || CT.C56:
              {
                this.invalidateScopeData(nearestScope);
                break;
              }
              case C55 || CT.C55:
              case C57 || CT.C57:
              {
                if (dart.test(popOrInvalidate(direction))) {
                  return true;
                }
                break;
              }
            }
            break;
          }
          case C58 || CT.C58:
          case C56 || CT.C56:
          {
            switch (policyData.history[$first].direction) {
              case C58 || CT.C58:
              case C56 || CT.C56:
              {
                if (dart.test(popOrInvalidate(direction))) {
                  return true;
                }
                break;
              }
              case C55 || CT.C55:
              case C57 || CT.C57:
              {
                this.invalidateScopeData(nearestScope);
                break;
              }
            }
          }
        }
      }
      if (policyData != null && dart.test(policyData.history[$isEmpty])) {
        this.invalidateScopeData(nearestScope);
      }
      return false;
    }
    [_pushPolicyData](direction, nearestScope, focusedChild) {
      let policyData = this[_policyData][$_get](nearestScope);
      if (policyData != null && !focus_traversal._DirectionalPolicyData.is(policyData)) {
        return;
      }
      let newEntry = new focus_traversal._DirectionalPolicyDataEntry.new({node: focusedChild, direction: direction});
      if (policyData != null) {
        policyData.history[$add](newEntry);
      } else {
        this[_policyData][$_set](nearestScope, new focus_traversal._DirectionalPolicyData.new({history: JSArrayOf_DirectionalPolicyDataEntry().of([newEntry])}));
      }
    }
    inDirection(currentNode, direction) {
      let t14;
      let nearestScope = currentNode.nearestScope;
      let focusedChild = nearestScope.focusedChild;
      if (focusedChild == null) {
        let firstFocus = (t14 = this.findFirstFocusInDirection(currentNode, direction), t14 == null ? currentNode : t14);
        switch (direction) {
          case C55 || CT.C55:
          case C58 || CT.C58:
          {
            focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
            break;
          }
          case C56 || CT.C56:
          case C57 || CT.C57:
          {
            focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
            break;
          }
        }
        return true;
      }
      if (dart.test(this[_popPolicyDataIfNeeded](direction, nearestScope, focusedChild))) {
        return true;
      }
      let found = null;
      let focusedScrollable = scrollable$.Scrollable.of(focusedChild.context);
      switch (direction) {
        case C57 || CT.C57:
        case C55 || CT.C55:
        {
          let eligibleNodes = this[_sortAndFilterVertically](direction, focusedChild.rect, nearestScope.traversalDescendants);
          if (focusedScrollable != null && !dart.test(focusedScrollable.position.atEdge)) {
            let filteredEligibleNodes = eligibleNodes[$where](dart.fn(node => dart.equals(scrollable$.Scrollable.of(node.context), focusedScrollable), FocusNodeTobool()));
            if (dart.test(filteredEligibleNodes[$isNotEmpty])) {
              eligibleNodes = filteredEligibleNodes;
            }
          }
          if (dart.test(eligibleNodes[$isEmpty])) {
            break;
          }
          let sorted = eligibleNodes[$toList]();
          if (dart.equals(direction, focus_traversal.TraversalDirection.up)) {
            sorted = sorted[$reversed][$toList]();
          }
          let band = new ui.Rect.fromLTRB(focusedChild.rect.left, -(1 / 0), focusedChild.rect.right, 1 / 0);
          let inBand = sorted[$where](dart.fn(node => !dart.test(node.rect.intersect(band).isEmpty), FocusNodeTobool()));
          if (dart.test(inBand[$isNotEmpty])) {
            found = inBand[$first];
            break;
          }
          sorted[$sort](dart.fn((a, b) => (dart.notNull(a.rect.center.dx) - dart.notNull(focusedChild.rect.center.dx))[$abs]()[$compareTo]((dart.notNull(b.rect.center.dx) - dart.notNull(focusedChild.rect.center.dx))[$abs]()), FocusNodeAndFocusNodeToint()));
          found = sorted[$first];
          break;
        }
        case C56 || CT.C56:
        case C58 || CT.C58:
        {
          let eligibleNodes = this[_sortAndFilterHorizontally](direction, focusedChild.rect, nearestScope);
          if (focusedScrollable != null && !dart.test(focusedScrollable.position.atEdge)) {
            let filteredEligibleNodes = eligibleNodes[$where](dart.fn(node => dart.equals(scrollable$.Scrollable.of(node.context), focusedScrollable), FocusNodeTobool()));
            if (dart.test(filteredEligibleNodes[$isNotEmpty])) {
              eligibleNodes = filteredEligibleNodes;
            }
          }
          if (dart.test(eligibleNodes[$isEmpty])) {
            break;
          }
          let sorted = eligibleNodes[$toList]();
          if (dart.equals(direction, focus_traversal.TraversalDirection.left)) {
            sorted = sorted[$reversed][$toList]();
          }
          let band = new ui.Rect.fromLTRB(-(1 / 0), focusedChild.rect.top, 1 / 0, focusedChild.rect.bottom);
          let inBand = sorted[$where](dart.fn(node => !dart.test(node.rect.intersect(band).isEmpty), FocusNodeTobool()));
          if (dart.test(inBand[$isNotEmpty])) {
            found = inBand[$first];
            break;
          }
          sorted[$sort](dart.fn((a, b) => (dart.notNull(a.rect.center.dy) - dart.notNull(focusedChild.rect.center.dy))[$abs]()[$compareTo]((dart.notNull(b.rect.center.dy) - dart.notNull(focusedChild.rect.center.dy))[$abs]()), FocusNodeAndFocusNodeToint()));
          found = sorted[$first];
          break;
        }
      }
      if (found != null) {
        this[_pushPolicyData](direction, nearestScope, focusedChild);
        switch (direction) {
          case C55 || CT.C55:
          case C58 || CT.C58:
          {
            focus_traversal._focusAndEnsureVisible(found, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
            break;
          }
          case C57 || CT.C57:
          case C56 || CT.C56:
          {
            focus_traversal._focusAndEnsureVisible(found, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
            break;
          }
        }
        return true;
      }
      return false;
    }
  };
  (focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew] = function() {
    this[_policyData] = new (LinkedMapOfFocusScopeNode$_DirectionalPolicyData()).new();
  }).prototype = focus_traversal.DirectionalFocusTraversalPolicyMixin.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.implements] = () => [focus_traversal.FocusTraversalPolicy];
  dart.setMethodSignature(focus_traversal.DirectionalFocusTraversalPolicyMixin, () => ({
    __proto__: dart.getMethods(focus_traversal.DirectionalFocusTraversalPolicyMixin.__proto__),
    findFirstFocusInDirection: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode, focus_traversal.TraversalDirection]),
    [_sortAndFindInitial]: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode], {first: core.bool, vertical: core.bool}, {}),
    [_sortAndFilterHorizontally]: dart.fnType(core.Iterable$(focus_manager.FocusNode), [focus_traversal.TraversalDirection, ui.Rect, focus_manager.FocusNode]),
    [_sortAndFilterVertically]: dart.fnType(core.Iterable$(focus_manager.FocusNode), [focus_traversal.TraversalDirection, ui.Rect, core.Iterable$(focus_manager.FocusNode)]),
    [_popPolicyDataIfNeeded]: dart.fnType(core.bool, [focus_traversal.TraversalDirection, focus_manager.FocusScopeNode, focus_manager.FocusNode]),
    [_pushPolicyData]: dart.fnType(dart.void, [focus_traversal.TraversalDirection, focus_manager.FocusScopeNode, focus_manager.FocusNode]),
    inDirection: dart.fnType(core.bool, [focus_manager.FocusNode, focus_traversal.TraversalDirection])
  }));
  dart.setLibraryUri(focus_traversal.DirectionalFocusTraversalPolicyMixin, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal.DirectionalFocusTraversalPolicyMixin, () => ({
    __proto__: dart.getFields(focus_traversal.DirectionalFocusTraversalPolicyMixin.__proto__),
    [_policyData]: dart.finalFieldType(core.Map$(focus_manager.FocusScopeNode, focus_traversal._DirectionalPolicyData))
  }));
  var _move = dart.privateName(focus_traversal, "_move");
  const FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36 = class FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  (FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36.new = function() {
    focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew].call(this);
  }).prototype = FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36.prototype;
  dart.applyMixin(FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36, focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.WidgetOrderFocusTraversalPolicy = class WidgetOrderFocusTraversalPolicy extends FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36 {
    findFirstFocus(currentNode) {
      if (!(currentNode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 575, 12, "currentNode != null");
      let scope = currentNode.nearestScope;
      let candidate = scope.focusedChild;
      if (candidate == null) {
        if (dart.test(scope.traversalChildren[$isNotEmpty])) {
          candidate = scope.traversalChildren[$first];
        } else {
          candidate = currentNode;
        }
      }
      while (focus_manager.FocusScopeNode.is(candidate) && candidate.focusedChild != null) {
        let candidateScope = focus_manager.FocusScopeNode.as(candidate);
        candidate = candidateScope.focusedChild;
      }
      return candidate;
    }
    [_move](currentNode, opts) {
      let forward = opts && 'forward' in opts ? opts.forward : null;
      if (currentNode == null) {
        return false;
      }
      let nearestScope = currentNode.nearestScope;
      this.invalidateScopeData(nearestScope);
      let focusedChild = nearestScope.focusedChild;
      if (focusedChild == null) {
        let firstFocus = this.findFirstFocus(currentNode);
        if (firstFocus != null) {
          focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: dart.test(forward) ? scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd : scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
          return true;
        }
      }
      let previousNode = null;
      let firstNode = null;
      let lastNode = null;
      function visit(node) {
        for (let visited of node.traversalChildren) {
          firstNode == null ? firstNode = visited : null;
          if (!dart.test(visit(visited))) {
            return false;
          }
          if (dart.test(forward)) {
            if (dart.equals(previousNode, focusedChild)) {
              focus_traversal._focusAndEnsureVisible(visited, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
              return false;
            }
          } else {
            if (previousNode != null && dart.equals(visited, focusedChild)) {
              focus_traversal._focusAndEnsureVisible(previousNode, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
              return false;
            }
          }
          previousNode = visited;
          lastNode = visited;
        }
        return true;
      }
      dart.fn(visit, FocusNodeTobool());
      if (dart.test(visit(nearestScope))) {
        if (dart.test(forward)) {
          if (firstNode != null) {
            focus_traversal._focusAndEnsureVisible(firstNode, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
            return true;
          }
        } else {
          if (lastNode != null) {
            focus_traversal._focusAndEnsureVisible(lastNode, {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
            return true;
          }
        }
        return false;
      }
      return true;
    }
    next(currentNode) {
      return this[_move](currentNode, {forward: true});
    }
    previous(currentNode) {
      return this[_move](currentNode, {forward: false});
    }
  };
  (focus_traversal.WidgetOrderFocusTraversalPolicy.new = function() {
    focus_traversal.WidgetOrderFocusTraversalPolicy.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.WidgetOrderFocusTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.WidgetOrderFocusTraversalPolicy);
  dart.setMethodSignature(focus_traversal.WidgetOrderFocusTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.WidgetOrderFocusTraversalPolicy.__proto__),
    findFirstFocus: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode]),
    [_move]: dart.fnType(core.bool, [focus_manager.FocusNode], {forward: core.bool}, {}),
    next: dart.fnType(core.bool, [focus_manager.FocusNode]),
    previous: dart.fnType(core.bool, [focus_manager.FocusNode])
  }));
  dart.setLibraryUri(focus_traversal.WidgetOrderFocusTraversalPolicy, "package:flutter/src/widgets/focus_traversal.dart");
  focus_traversal._SortData = class _SortData extends core.Object {};
  (focus_traversal._SortData.new = function(node) {
    this.node = node;
    this.rect = node.rect;
    ;
  }).prototype = focus_traversal._SortData.prototype;
  dart.addTypeTests(focus_traversal._SortData);
  dart.setLibraryUri(focus_traversal._SortData, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal._SortData, () => ({
    __proto__: dart.getFields(focus_traversal._SortData.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    node: dart.finalFieldType(focus_manager.FocusNode)
  }));
  var _sortByGeometry = dart.privateName(focus_traversal, "_sortByGeometry");
  const FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$ = class FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin extends focus_traversal.FocusTraversalPolicy {};
  (FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$.new = function() {
    focus_traversal.DirectionalFocusTraversalPolicyMixin[dart.mixinNew].call(this);
  }).prototype = FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$.prototype;
  dart.applyMixin(FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$, focus_traversal.DirectionalFocusTraversalPolicyMixin);
  focus_traversal.ReadingOrderTraversalPolicy = class ReadingOrderTraversalPolicy extends FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin$36$ {
    findFirstFocus(currentNode) {
      if (!(currentNode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 700, 12, "currentNode != null");
      let scope = currentNode.nearestScope;
      let candidate = scope.focusedChild;
      if (candidate == null && dart.test(scope.traversalChildren[$isNotEmpty])) {
        candidate = this[_sortByGeometry](scope)[$first];
      }
      candidate == null ? candidate = currentNode : null;
      candidate == null ? candidate = focus_manager.FocusManager.instance.rootScope : null;
      return candidate;
    }
    [_sortByGeometry](scope) {
      let nodes = scope.traversalDescendants;
      if (dart.notNull(nodes[$length]) <= 1) {
        return nodes;
      }
      function inBand(current, candidates) {
        let wide = new ui.Rect.fromLTRB(-1 / 0, current.rect.top, 1 / 0, current.rect.bottom);
        return candidates[$where](dart.fn(item => !dart.test(item.rect.intersect(wide).isEmpty), _SortDataTobool()));
      }
      dart.fn(inBand, _SortDataAndIterableOf_SortDataToIterableOf_SortData());
      let textDirection = scope.context == null ? ui.TextDirection.ltr : basic.Directionality.of(scope.context);
      function pickFirst(candidates) {
        function compareBeginningSide(a, b) {
          return dart.equals(textDirection, ui.TextDirection.ltr) ? a.rect.left[$compareTo](b.rect.left) : -a.rect.right[$compareTo](b.rect.right);
        }
        dart.fn(compareBeginningSide, _SortDataAnd_SortDataToint());
        function compareTopSide(a, b) {
          return a.rect.top[$compareTo](b.rect.top);
        }
        dart.fn(compareTopSide, _SortDataAnd_SortDataToint());
        candidates[$sort](compareTopSide);
        let topmost = candidates[$first];
        let inBandOfTop = inBand(topmost, candidates)[$toList]();
        inBandOfTop[$sort](compareBeginningSide);
        if (dart.test(inBandOfTop[$isNotEmpty])) {
          return inBandOfTop[$first];
        }
        return topmost;
      }
      dart.fn(pickFirst, ListOf_SortDataTo_SortData());
      let data = (() => {
        let t14 = JSArrayOf_SortData().of([]);
        for (let node of nodes)
          t14[$add](new focus_traversal._SortData.new(node));
        return t14;
      })();
      let sortedList = JSArrayOf_SortData().of([]);
      let unplaced = data[$toList]();
      let current = pickFirst(unplaced);
      sortedList[$add](current);
      unplaced[$remove](current);
      while (dart.test(unplaced[$isNotEmpty])) {
        let next = pickFirst(unplaced);
        current = next;
        sortedList[$add](current);
        unplaced[$remove](current);
      }
      return sortedList[$map](focus_manager.FocusNode, dart.fn(item => item.node, _SortDataToFocusNode()));
    }
    [_move](currentNode, opts) {
      let forward = opts && 'forward' in opts ? opts.forward : null;
      let nearestScope = currentNode.nearestScope;
      this.invalidateScopeData(nearestScope);
      let focusedChild = nearestScope.focusedChild;
      if (focusedChild == null) {
        let firstFocus = this.findFirstFocus(currentNode);
        if (firstFocus != null) {
          focus_traversal._focusAndEnsureVisible(firstFocus, {alignmentPolicy: dart.test(forward) ? scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd : scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
          return true;
        }
      }
      let sortedNodes = this[_sortByGeometry](nearestScope)[$toList]();
      if (dart.test(forward) && dart.equals(focusedChild, sortedNodes[$last])) {
        focus_traversal._focusAndEnsureVisible(sortedNodes[$first], {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd});
        return true;
      }
      if (!dart.test(forward) && dart.equals(focusedChild, sortedNodes[$first])) {
        focus_traversal._focusAndEnsureVisible(sortedNodes[$last], {alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
        return true;
      }
      let maybeFlipped = dart.test(forward) ? sortedNodes : sortedNodes[$reversed];
      let previousNode = null;
      for (let node of maybeFlipped) {
        if (dart.equals(previousNode, focusedChild)) {
          focus_traversal._focusAndEnsureVisible(node, {alignmentPolicy: dart.test(forward) ? scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd : scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart});
          return true;
        }
        previousNode = node;
      }
      return false;
    }
    next(currentNode) {
      return this[_move](currentNode, {forward: true});
    }
    previous(currentNode) {
      return this[_move](currentNode, {forward: false});
    }
  };
  (focus_traversal.ReadingOrderTraversalPolicy.new = function() {
    focus_traversal.ReadingOrderTraversalPolicy.__proto__.new.call(this);
    ;
  }).prototype = focus_traversal.ReadingOrderTraversalPolicy.prototype;
  dart.addTypeTests(focus_traversal.ReadingOrderTraversalPolicy);
  dart.setMethodSignature(focus_traversal.ReadingOrderTraversalPolicy, () => ({
    __proto__: dart.getMethods(focus_traversal.ReadingOrderTraversalPolicy.__proto__),
    findFirstFocus: dart.fnType(focus_manager.FocusNode, [focus_manager.FocusNode]),
    [_sortByGeometry]: dart.fnType(core.Iterable$(focus_manager.FocusNode), [focus_manager.FocusScopeNode]),
    [_move]: dart.fnType(core.bool, [focus_manager.FocusNode], {forward: core.bool}, {}),
    next: dart.fnType(core.bool, [focus_manager.FocusNode]),
    previous: dart.fnType(core.bool, [focus_manager.FocusNode])
  }));
  dart.setLibraryUri(focus_traversal.ReadingOrderTraversalPolicy, "package:flutter/src/widgets/focus_traversal.dart");
  var policy$ = dart.privateName(focus_traversal, "DefaultFocusTraversal.policy");
  focus_traversal.DefaultFocusTraversal = class DefaultFocusTraversal extends framework.InheritedWidget {
    get policy() {
      return this[policy$];
    }
    set policy(value) {
      super.policy = value;
    }
    static of(context, opts) {
      let t15, t15$;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 870, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(focus_traversal.DefaultFocusTraversal);
      if (!dart.test(dart.fn(() => {
        if (dart.test(nullOk)) {
          return true;
        }
        if (inherited == null) {
          dart.throw(assertions.FlutterError.new("Unable to find a DefaultFocusTraversal widget in the context.\n" + "DefaultFocusTraversal.of() was called with a context that does not contain a " + "DefaultFocusTraversal.\n" + "No DefaultFocusTraversal ancestor could be found starting from the context that was " + "passed to DefaultFocusTraversal.of(). This can happen because there is not a " + "WidgetsApp or MaterialApp widget (those widgets introduce a DefaultFocusTraversal), " + "or it can happen if the context comes from a widget above those widgets.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 872, 12, "() {\r\n      if (nullOk) {\r\n        return true;\r\n      }\r\n      if (inherited == null) {\r\n        throw FlutterError('Unable to find a DefaultFocusTraversal widget in the context.\\n'\r\n            'DefaultFocusTraversal.of() was called with a context that does not contain a '\r\n            'DefaultFocusTraversal.\\n'\r\n            'No DefaultFocusTraversal ancestor could be found starting from the context that was '\r\n            'passed to DefaultFocusTraversal.of(). This can happen because there is not a '\r\n            'WidgetsApp or MaterialApp widget (those widgets introduce a DefaultFocusTraversal), '\r\n            'or it can happen if the context comes from a widget above those widgets.\\n'\r\n            'The context used was:\\n'\r\n            '  $context');\r\n      }\r\n      return true;\r\n    }()");
      t15$ = (t15 = inherited, t15 == null ? null : t15.policy);
      return t15$ == null ? new focus_traversal.ReadingOrderTraversalPolicy.new() : t15$;
    }
    updateShouldNotify(oldWidget) {
      focus_traversal.DefaultFocusTraversal._check(oldWidget);
      return !dart.equals(this.policy, oldWidget.policy);
    }
  };
  (focus_traversal.DefaultFocusTraversal.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let policy = opts && 'policy' in opts ? opts.policy : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[policy$] = policy;
    focus_traversal.DefaultFocusTraversal.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_traversal.DefaultFocusTraversal.prototype;
  dart.addTypeTests(focus_traversal.DefaultFocusTraversal);
  dart.setMethodSignature(focus_traversal.DefaultFocusTraversal, () => ({
    __proto__: dart.getMethods(focus_traversal.DefaultFocusTraversal.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(focus_traversal.DefaultFocusTraversal, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal.DefaultFocusTraversal, () => ({
    __proto__: dart.getFields(focus_traversal.DefaultFocusTraversal.__proto__),
    policy: dart.finalFieldType(focus_traversal.FocusTraversalPolicy)
  }));
  var _previousFocus = dart.privateName(focus_traversal, "_previousFocus");
  var intentKey$ = dart.privateName(actions$, "Action.intentKey");
  actions$.Action = class Action extends diagnostics$.Diagnosticable {
    get intentKey() {
      return this[intentKey$];
    }
    set intentKey(value) {
      super.intentKey = value;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfLocalKey()).new("intentKey", this.intentKey));
    }
  };
  (actions$.Action.new = function(intentKey) {
    this[intentKey$] = intentKey;
    if (!(intentKey != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 80, 41, "intentKey != null");
    actions$.Action.__proto__.new.call(this);
    ;
  }).prototype = actions$.Action.prototype;
  dart.addTypeTests(actions$.Action);
  dart.setLibraryUri(actions$.Action, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$.Action, () => ({
    __proto__: dart.getFields(actions$.Action.__proto__),
    intentKey: dart.finalFieldType(key.LocalKey)
  }));
  focus_traversal._RequestFocusActionBase = class _RequestFocusActionBase extends actions$.Action {
    invoke(node, intent) {
      actions$.Intent._check(intent);
      this[_previousFocus] = focus_manager.primaryFocus;
      node.requestFocus();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("previous", this[_previousFocus]));
    }
  };
  (focus_traversal._RequestFocusActionBase.new = function(name) {
    this[_previousFocus] = null;
    focus_traversal._RequestFocusActionBase.__proto__.new.call(this, name);
    ;
  }).prototype = focus_traversal._RequestFocusActionBase.prototype;
  dart.addTypeTests(focus_traversal._RequestFocusActionBase);
  dart.setMethodSignature(focus_traversal._RequestFocusActionBase, () => ({
    __proto__: dart.getMethods(focus_traversal._RequestFocusActionBase.__proto__),
    invoke: dart.fnType(dart.void, [focus_manager.FocusNode, core.Object])
  }));
  dart.setLibraryUri(focus_traversal._RequestFocusActionBase, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal._RequestFocusActionBase, () => ({
    __proto__: dart.getFields(focus_traversal._RequestFocusActionBase.__proto__),
    [_previousFocus]: dart.fieldType(focus_manager.FocusNode)
  }));
  var C61;
  var ValueKey_value = dart.privateName(key, "ValueKey.value");
  var C60;
  focus_traversal.RequestFocusAction = class RequestFocusAction extends focus_traversal._RequestFocusActionBase {
    invoke(node, intent) {
      actions$.Intent._check(intent);
      return focus_traversal._focusAndEnsureVisible(node);
    }
  };
  (focus_traversal.RequestFocusAction.new = function() {
    focus_traversal.RequestFocusAction.__proto__.new.call(this, focus_traversal.RequestFocusAction.key);
    ;
  }).prototype = focus_traversal.RequestFocusAction.prototype;
  dart.addTypeTests(focus_traversal.RequestFocusAction);
  dart.setLibraryUri(focus_traversal.RequestFocusAction, "package:flutter/src/widgets/focus_traversal.dart");
  dart.defineLazy(focus_traversal.RequestFocusAction, {
    /*focus_traversal.RequestFocusAction.key*/get key() {
      return C60 || CT.C60;
    }
  });
  var C63;
  var C62;
  focus_traversal.NextFocusAction = class NextFocusAction extends focus_traversal._RequestFocusActionBase {
    invoke(node, intent) {
      actions$.Intent._check(intent);
      return node.nextFocus();
    }
  };
  (focus_traversal.NextFocusAction.new = function() {
    focus_traversal.NextFocusAction.__proto__.new.call(this, focus_traversal.NextFocusAction.key);
    ;
  }).prototype = focus_traversal.NextFocusAction.prototype;
  dart.addTypeTests(focus_traversal.NextFocusAction);
  dart.setLibraryUri(focus_traversal.NextFocusAction, "package:flutter/src/widgets/focus_traversal.dart");
  dart.defineLazy(focus_traversal.NextFocusAction, {
    /*focus_traversal.NextFocusAction.key*/get key() {
      return C62 || CT.C62;
    }
  });
  var C65;
  var C64;
  focus_traversal.PreviousFocusAction = class PreviousFocusAction extends focus_traversal._RequestFocusActionBase {
    invoke(node, intent) {
      actions$.Intent._check(intent);
      return node.previousFocus();
    }
  };
  (focus_traversal.PreviousFocusAction.new = function() {
    focus_traversal.PreviousFocusAction.__proto__.new.call(this, focus_traversal.PreviousFocusAction.key);
    ;
  }).prototype = focus_traversal.PreviousFocusAction.prototype;
  dart.addTypeTests(focus_traversal.PreviousFocusAction);
  dart.setLibraryUri(focus_traversal.PreviousFocusAction, "package:flutter/src/widgets/focus_traversal.dart");
  dart.defineLazy(focus_traversal.PreviousFocusAction, {
    /*focus_traversal.PreviousFocusAction.key*/get key() {
      return C64 || CT.C64;
    }
  });
  var key$0 = dart.privateName(actions$, "Intent.key");
  var C68;
  var C67;
  var C66;
  actions$.Intent = class Intent extends diagnostics$.Diagnosticable {
    get key() {
      return this[key$0];
    }
    set key(value) {
      super.key = value;
    }
    isEnabled(context) {
      return true;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfLocalKey()).new("key", this.key));
    }
  };
  (actions$.Intent.new = function(key) {
    this[key$0] = key;
    if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 32, 35, "key != null");
    actions$.Intent.__proto__.new.call(this);
    ;
  }).prototype = actions$.Intent.prototype;
  dart.addTypeTests(actions$.Intent);
  dart.setMethodSignature(actions$.Intent, () => ({
    __proto__: dart.getMethods(actions$.Intent.__proto__),
    isEnabled: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setLibraryUri(actions$.Intent, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$.Intent, () => ({
    __proto__: dart.getFields(actions$.Intent.__proto__),
    key: dart.finalFieldType(key.LocalKey)
  }));
  dart.defineLazy(actions$.Intent, {
    /*actions$.Intent.doNothing*/get doNothing() {
      return C66 || CT.C66;
    }
  });
  var direction$0 = dart.privateName(focus_traversal, "DirectionalFocusIntent.direction");
  var ignoreTextFields$ = dart.privateName(focus_traversal, "DirectionalFocusIntent.ignoreTextFields");
  focus_traversal.DirectionalFocusIntent = class DirectionalFocusIntent extends actions$.Intent {
    get direction() {
      return this[direction$0];
    }
    set direction(value) {
      super.direction = value;
    }
    get ignoreTextFields() {
      return this[ignoreTextFields$];
    }
    set ignoreTextFields(value) {
      super.ignoreTextFields = value;
    }
  };
  (focus_traversal.DirectionalFocusIntent.new = function(direction, opts) {
    let ignoreTextFields = opts && 'ignoreTextFields' in opts ? opts.ignoreTextFields : true;
    this[direction$0] = direction;
    this[ignoreTextFields$] = ignoreTextFields;
    if (!(ignoreTextFields != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_traversal.dart", 991, 16, "ignoreTextFields != null");
    focus_traversal.DirectionalFocusIntent.__proto__.new.call(this, focus_traversal.DirectionalFocusAction.key);
    ;
  }).prototype = focus_traversal.DirectionalFocusIntent.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusIntent);
  dart.setLibraryUri(focus_traversal.DirectionalFocusIntent, "package:flutter/src/widgets/focus_traversal.dart");
  dart.setFieldSignature(focus_traversal.DirectionalFocusIntent, () => ({
    __proto__: dart.getFields(focus_traversal.DirectionalFocusIntent.__proto__),
    direction: dart.finalFieldType(focus_traversal.TraversalDirection),
    ignoreTextFields: dart.finalFieldType(core.bool)
  }));
  var C70;
  var C69;
  focus_traversal.DirectionalFocusAction = class DirectionalFocusAction extends focus_traversal._RequestFocusActionBase {
    invoke(node, intent) {
      focus_traversal.DirectionalFocusIntent._check(intent);
      if (!dart.test(intent.ignoreTextFields) || !editable_text.EditableText.is(node.context.widget)) {
        node.focusInDirection(intent.direction);
      }
    }
  };
  (focus_traversal.DirectionalFocusAction.new = function() {
    focus_traversal.DirectionalFocusAction.__proto__.new.call(this, focus_traversal.DirectionalFocusAction.key);
    ;
  }).prototype = focus_traversal.DirectionalFocusAction.prototype;
  dart.addTypeTests(focus_traversal.DirectionalFocusAction);
  dart.setLibraryUri(focus_traversal.DirectionalFocusAction, "package:flutter/src/widgets/focus_traversal.dart");
  dart.defineLazy(focus_traversal.DirectionalFocusAction, {
    /*focus_traversal.DirectionalFocusAction.key*/get key() {
      return C69 || CT.C69;
    }
  });
  var _name$4 = dart.privateName(scroll_position, "_name");
  var C71;
  focus_traversal._focusAndEnsureVisible = function _focusAndEnsureVisible(node, opts) {
    let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C71 || CT.C71;
    node.requestFocus();
    scrollable$.Scrollable.ensureVisible(node.context, {alignment: 1.0, alignmentPolicy: alignmentPolicy});
  };
  var _name$5 = dart.privateName(basic_types$, "_name");
  var C72;
  var _name$6 = dart.privateName(recognizer, "_name");
  var C73;
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var C74;
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var C75;
  var axisDirection$ = dart.privateName(scrollable$, "Scrollable.axisDirection");
  var controller$ = dart.privateName(scrollable$, "Scrollable.controller");
  var physics$ = dart.privateName(scrollable$, "Scrollable.physics");
  var viewportBuilder$ = dart.privateName(scrollable$, "Scrollable.viewportBuilder");
  var incrementCalculator$ = dart.privateName(scrollable$, "Scrollable.incrementCalculator");
  var excludeFromSemantics$ = dart.privateName(scrollable$, "Scrollable.excludeFromSemantics");
  var semanticChildCount$ = dart.privateName(scrollable$, "Scrollable.semanticChildCount");
  var dragStartBehavior$ = dart.privateName(scrollable$, "Scrollable.dragStartBehavior");
  scrollable$.Scrollable = class Scrollable extends framework.StatefulWidget {
    get axisDirection() {
      return this[axisDirection$];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get physics() {
      return this[physics$];
    }
    set physics(value) {
      super.physics = value;
    }
    get viewportBuilder() {
      return this[viewportBuilder$];
    }
    set viewportBuilder(value) {
      super.viewportBuilder = value;
    }
    get incrementCalculator() {
      return this[incrementCalculator$];
    }
    set incrementCalculator(value) {
      super.incrementCalculator = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get semanticChildCount() {
      return this[semanticChildCount$];
    }
    set semanticChildCount(value) {
      super.semanticChildCount = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get axis() {
      return basic_types$.axisDirectionToAxis(this.axisDirection);
    }
    createState() {
      return new scrollable$.ScrollableState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("physics", this.physics));
    }
    static of(context) {
      let t15;
      let widget = context.dependOnInheritedWidgetOfExactType(scrollable$._ScrollableScope);
      t15 = widget;
      return t15 == null ? null : t15.scrollable;
    }
    static recommendDeferredLoadingForContext(context) {
      let t15;
      let widget = scrollable$._ScrollableScope.as((t15 = context.getElementForInheritedWidgetOfExactType(scrollable$._ScrollableScope), t15 == null ? null : t15.widget));
      if (widget == null) {
        return false;
      }
      return widget.position.recommendDeferredLoading(context);
    }
    static ensureVisible(context, opts) {
      let alignment = opts && 'alignment' in opts ? opts.alignment : 0;
      let duration = opts && 'duration' in opts ? opts.duration : C74 || CT.C74;
      let curve = opts && 'curve' in opts ? opts.curve : C75 || CT.C75;
      let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C71 || CT.C71;
      let futures = JSArrayOfFutureOfvoid().of([]);
      let scrollable = scrollable$.Scrollable.of(context);
      while (scrollable != null) {
        futures[$add](scrollable.position.ensureVisible(context.findRenderObject(), {alignment: alignment, duration: duration, curve: curve, alignmentPolicy: alignmentPolicy}));
        context = scrollable.context;
        scrollable = scrollable$.Scrollable.of(context);
      }
      if (dart.test(futures[$isEmpty]) || dart.equals(duration, core.Duration.zero)) return FutureOfvoid().value();
      if (futures[$length] === 1) return futures[$single];
      return async.Future.wait(dart.void, futures).then(dart.void, dart.fn(_ => null, ListOfvoidToNull()));
    }
  };
  (scrollable$.Scrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let viewportBuilder = opts && 'viewportBuilder' in opts ? opts.viewportBuilder : null;
    let incrementCalculator = opts && 'incrementCalculator' in opts ? opts.incrementCalculator : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$] = axisDirection;
    this[controller$] = controller;
    this[physics$] = physics;
    this[viewportBuilder$] = viewportBuilder;
    this[incrementCalculator$] = incrementCalculator;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[semanticChildCount$] = semanticChildCount;
    this[dragStartBehavior$] = dragStartBehavior;
    if (!(axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 91, 15, "axisDirection != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 92, 15, "dragStartBehavior != null");
    if (!(viewportBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 93, 15, "viewportBuilder != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 94, 15, "excludeFromSemantics != null");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 95, 15, "semanticChildCount == null || semanticChildCount >= 0");
    scrollable$.Scrollable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$.Scrollable.prototype;
  dart.addTypeTests(scrollable$.Scrollable);
  dart.setMethodSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getMethods(scrollable$.Scrollable.__proto__),
    createState: dart.fnType(scrollable$.ScrollableState, [])
  }));
  dart.setGetterSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getGetters(scrollable$.Scrollable.__proto__),
    axis: basic_types$.Axis
  }));
  dart.setLibraryUri(scrollable$.Scrollable, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$.Scrollable, () => ({
    __proto__: dart.getFields(scrollable$.Scrollable.__proto__),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    viewportBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, viewport_offset.ViewportOffset])),
    incrementCalculator: dart.finalFieldType(dart.fnType(core.double, [scrollable$.ScrollIncrementDetails])),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    semanticChildCount: dart.finalFieldType(core.int),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var scrollable$0 = dart.privateName(scrollable$, "_ScrollableScope.scrollable");
  var position$ = dart.privateName(scrollable$, "_ScrollableScope.position");
  scrollable$._ScrollableScope = class _ScrollableScope extends framework.InheritedWidget {
    get scrollable() {
      return this[scrollable$0];
    }
    set scrollable(value) {
      super.scrollable = value;
    }
    get position() {
      return this[position$];
    }
    set position(value) {
      super.position = value;
    }
    updateShouldNotify(old) {
      scrollable$._ScrollableScope._check(old);
      return !dart.equals(this.position, old.position);
    }
  };
  (scrollable$._ScrollableScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollable = opts && 'scrollable' in opts ? opts.scrollable : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollable$0] = scrollable;
    this[position$] = position;
    if (!(scrollable != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 318, 15, "scrollable != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 319, 15, "child != null");
    scrollable$._ScrollableScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$._ScrollableScope.prototype;
  dart.addTypeTests(scrollable$._ScrollableScope);
  dart.setMethodSignature(scrollable$._ScrollableScope, () => ({
    __proto__: dart.getMethods(scrollable$._ScrollableScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(scrollable$._ScrollableScope, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$._ScrollableScope, () => ({
    __proto__: dart.getFields(scrollable$._ScrollableScope.__proto__),
    scrollable: dart.finalFieldType(scrollable$.ScrollableState),
    position: dart.finalFieldType(scroll_position.ScrollPosition)
  }));
  var _position = dart.privateName(scrollable$, "_position");
  var _configuration = dart.privateName(scrollable$, "_configuration");
  var _physics = dart.privateName(scrollable$, "_physics");
  var _scrollSemanticsKey = dart.privateName(scrollable$, "_scrollSemanticsKey");
  var _gestureDetectorKey = dart.privateName(scrollable$, "_gestureDetectorKey");
  var _ignorePointerKey = dart.privateName(scrollable$, "_ignorePointerKey");
  var _gestureRecognizers = dart.privateName(scrollable$, "_gestureRecognizers");
  var C76;
  var _shouldIgnorePointer = dart.privateName(scrollable$, "_shouldIgnorePointer");
  var _lastCanDrag = dart.privateName(scrollable$, "_lastCanDrag");
  var _lastAxisDirection = dart.privateName(scrollable$, "_lastAxisDirection");
  var _drag = dart.privateName(scrollable$, "_drag");
  var _hold = dart.privateName(scrollable$, "_hold");
  var _updatePosition = dart.privateName(scrollable$, "_updatePosition");
  var _shouldUpdatePosition = dart.privateName(scrollable$, "_shouldUpdatePosition");
  var _handleDragDown = dart.privateName(scrollable$, "_handleDragDown");
  var _handleDragStart = dart.privateName(scrollable$, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(scrollable$, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(scrollable$, "_handleDragEnd");
  var _handleDragCancel = dart.privateName(scrollable$, "_handleDragCancel");
  var C77;
  var C78;
  var _disposeHold = dart.privateName(scrollable$, "_disposeHold");
  var _disposeDrag = dart.privateName(scrollable$, "_disposeDrag");
  var _targetScrollOffsetForPointerScroll = dart.privateName(scrollable$, "_targetScrollOffsetForPointerScroll");
  var _handlePointerScroll = dart.privateName(scrollable$, "_handlePointerScroll");
  var _receivedPointerSignal = dart.privateName(scrollable$, "_receivedPointerSignal");
  var C81;
  var C82;
  var C83;
  var C84;
  var C80;
  var C79;
  var C87;
  var C88;
  var C86;
  var C85;
  var C91;
  var C92;
  var C93;
  var C94;
  var C95;
  var C90;
  var C89;
  var C98;
  var C99;
  var C97;
  var C96;
  var C102;
  var C103;
  var C104;
  var C101;
  var C100;
  var C107;
  var C108;
  var C109;
  var C110;
  var C111;
  var C106;
  var C105;
  var _tickers = dart.privateName(ticker_provider, "_tickers");
  var _removeTicker = dart.privateName(ticker_provider, "_removeTicker");
  const _is_TickerProviderStateMixin_default = Symbol('_is_TickerProviderStateMixin_default');
  ticker_provider.TickerProviderStateMixin$ = dart.generic(T => {
    class TickerProviderStateMixin extends framework.State$(T) {}
    TickerProviderStateMixin[dart.mixinOn] = State => class TickerProviderStateMixin extends State {
      createTicker(onTick) {
        this[_tickers] == null ? this[_tickers] = LinkedHashSetOf_WidgetTicker().new() : null;
        let result = new ticker_provider._WidgetTicker.new(onTick, this, {debugLabel: "created by " + dart.str(this)});
        this[_tickers].add(result);
        return result;
      }
      [_removeTicker](ticker) {
        if (!(this[_tickers] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 208, 12, "_tickers != null");
        if (!dart.test(this[_tickers].contains(ticker))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 209, 12, "_tickers.contains(ticker)");
        this[_tickers].remove(ticker);
      }
      dispose() {
        if (!dart.test(dart.fn(() => {
          if (this[_tickers] != null) {
            for (let ticker of this[_tickers]) {
              if (dart.test(ticker.isActive)) {
                dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its TickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. All Tickers must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), ticker.describeForError("The offending ticker was")])));
              }
            }
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 215, 12, "() {\r\n      if (_tickers != null) {\r\n        for (final Ticker ticker in _tickers) {\r\n          if (ticker.isActive) {\r\n            throw FlutterError.fromParts(<DiagnosticsNode>[\r\n              ErrorSummary('$this was disposed with an active Ticker.'),\r\n              ErrorDescription(\r\n                '$runtimeType created a Ticker via its TickerProviderStateMixin, but at the time '\r\n                'dispose() was called on the mixin, that Ticker was still active. All Tickers must '\r\n                'be disposed before calling super.dispose().'\r\n              ),\r\n              ErrorHint(\r\n                'Tickers used by AnimationControllers '\r\n                'should be disposed by calling dispose() on the AnimationController itself. '\r\n                'Otherwise, the ticker will leak.'\r\n              ),\r\n              ticker.describeForError('The offending ticker was'),\r\n            ]);\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    }()");
        super.dispose();
      }
      didChangeDependencies() {
        let muted = !dart.test(ticker_provider.TickerMode.of(this.context));
        if (this[_tickers] != null) {
          for (let ticker of this[_tickers]) {
            ticker.muted = muted;
          }
        }
        super.didChangeDependencies();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (DiagnosticsPropertyOfSetOfTicker()).new("tickers", this[_tickers], {description: this[_tickers] != null ? "tracking " + dart.str(this[_tickers][$length]) + " ticker" + (this[_tickers][$length] === 1 ? "" : "s") : null, defaultValue: null}));
      }
    };
    (TickerProviderStateMixin[dart.mixinNew] = function() {
      this[_tickers] = null;
    }).prototype = TickerProviderStateMixin.prototype;
    dart.addTypeTests(TickerProviderStateMixin);
    TickerProviderStateMixin.prototype[_is_TickerProviderStateMixin_default] = true;
    TickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, framework.State$(T)];
    dart.setMethodSignature(TickerProviderStateMixin, () => ({
      __proto__: dart.getMethods(TickerProviderStateMixin.__proto__),
      createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])]),
      [_removeTicker]: dart.fnType(dart.void, [ticker_provider._WidgetTicker])
    }));
    dart.setLibraryUri(TickerProviderStateMixin, "package:flutter/src/widgets/ticker_provider.dart");
    dart.setFieldSignature(TickerProviderStateMixin, () => ({
      __proto__: dart.getFields(TickerProviderStateMixin.__proto__),
      [_tickers]: dart.fieldType(core.Set$(ticker.Ticker))
    }));
    return TickerProviderStateMixin;
  });
  ticker_provider.TickerProviderStateMixin = ticker_provider.TickerProviderStateMixin$();
  dart.addTypeTests(ticker_provider.TickerProviderStateMixin, _is_TickerProviderStateMixin_default);
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(scrollable$.Scrollable) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(scrollable$.Scrollable)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(scrollable$.Scrollable));
  scrollable$.ScrollableState = class ScrollableState extends State_TickerProviderStateMixin$36 {
    get position() {
      return this[_position];
    }
    get axisDirection() {
      return this.widget.axisDirection;
    }
    [_updatePosition]() {
      let t15, t15$, t15$0, t15$1;
      this[_configuration] = scroll_configuration.ScrollConfiguration.of(this.context);
      this[_physics] = this[_configuration].getScrollPhysics(this.context);
      if (this.widget.physics != null) this[_physics] = this.widget.physics.applyTo(this[_physics]);
      let controller = this.widget.controller;
      let oldPosition = this.position;
      if (oldPosition != null) {
        t15 = controller;
        t15 == null ? null : t15.detach(oldPosition);
        async.scheduleMicrotask(dart.bind(oldPosition, 'dispose'));
      }
      this[_position] = (t15$0 = (t15$ = controller, t15$ == null ? null : t15$.createScrollPosition(this[_physics], this, oldPosition)), t15$0 == null ? new scroll_position_with_single_context.ScrollPositionWithSingleContext.new({physics: this[_physics], context: this, oldPosition: oldPosition}) : t15$0);
      if (!(this.position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 375, 12, "position != null");
      t15$1 = controller;
      t15$1 == null ? null : t15$1.attach(this.position);
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_updatePosition]();
    }
    [_shouldUpdatePosition](oldWidget) {
      let t15, t15$, t15$0, t15$1, t15$2, t15$3;
      let newPhysics = this.widget.physics;
      let oldPhysics = oldWidget.physics;
      do {
        if (!dart.equals((t15 = newPhysics, t15 == null ? null : dart.runtimeType(t15)), (t15$ = oldPhysics, t15$ == null ? null : dart.runtimeType(t15$)))) return true;
        newPhysics = (t15$0 = newPhysics, t15$0 == null ? null : t15$0.parent);
        oldPhysics = (t15$1 = oldPhysics, t15$1 == null ? null : t15$1.parent);
      } while (newPhysics != null || oldPhysics != null);
      return !dart.equals((t15$2 = this.widget.controller, t15$2 == null ? null : dart.runtimeType(t15$2)), (t15$3 = oldWidget.controller, t15$3 == null ? null : dart.runtimeType(t15$3)));
    }
    didUpdateWidget(oldWidget) {
      let t15, t15$;
      scrollable$.Scrollable._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        t15 = oldWidget.controller;
        t15 == null ? null : t15.detach(this.position);
        t15$ = this.widget.controller;
        t15$ == null ? null : t15$.attach(this.position);
      }
      if (dart.test(this[_shouldUpdatePosition](oldWidget))) this[_updatePosition]();
    }
    dispose() {
      let t15;
      t15 = this.widget.controller;
      t15 == null ? null : t15.detach(this.position);
      this.position.dispose();
      super.dispose();
    }
    setSemanticsActions(actions) {
      if (this[_gestureDetectorKey].currentState != null) this[_gestureDetectorKey].currentState.replaceSemanticsActions(actions);
    }
    setCanDrag(canDrag) {
      if (dart.equals(canDrag, this[_lastCanDrag]) && (!dart.test(canDrag) || dart.equals(this.widget.axis, this[_lastAxisDirection]))) return;
      if (!dart.test(canDrag)) {
        this[_gestureRecognizers] = C76 || CT.C76;
      } else {
        switch (this.widget.axis) {
          case C77 || CT.C77:
          {
            this[_gestureRecognizers] = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(monodrag.VerticalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer()).new(dart.fn(() => new monodrag.VerticalDragGestureRecognizer.new(), VoidToVerticalDragGestureRecognizer()), dart.fn(instance => {
                let t16, t16$, t16$0, t15;
                t15 = instance;
                t15.onDown = dart.bind(this, _handleDragDown);
                t15.onStart = dart.bind(this, _handleDragStart);
                t15.onUpdate = dart.bind(this, _handleDragUpdate);
                t15.onEnd = dart.bind(this, _handleDragEnd);
                t15.onCancel = dart.bind(this, _handleDragCancel);
                t15.minFlingDistance = (t16 = this[_physics], t16 == null ? null : t16.minFlingDistance);
                t15.minFlingVelocity = (t16$ = this[_physics], t16$ == null ? null : t16$.minFlingVelocity);
                t15.maxFlingVelocity = (t16$0 = this[_physics], t16$0 == null ? null : t16$0.maxFlingVelocity);
                t15.dragStartBehavior = this.widget.dragStartBehavior;
                t15;
              }, VerticalDragGestureRecognizerToNull()))]);
            break;
          }
          case C78 || CT.C78:
          {
            this[_gestureRecognizers] = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new(), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
                let t16, t16$, t16$0, t15;
                t15 = instance;
                t15.onDown = dart.bind(this, _handleDragDown);
                t15.onStart = dart.bind(this, _handleDragStart);
                t15.onUpdate = dart.bind(this, _handleDragUpdate);
                t15.onEnd = dart.bind(this, _handleDragEnd);
                t15.onCancel = dart.bind(this, _handleDragCancel);
                t15.minFlingDistance = (t16 = this[_physics], t16 == null ? null : t16.minFlingDistance);
                t15.minFlingVelocity = (t16$ = this[_physics], t16$ == null ? null : t16$.minFlingVelocity);
                t15.maxFlingVelocity = (t16$0 = this[_physics], t16$0 == null ? null : t16$0.maxFlingVelocity);
                t15.dragStartBehavior = this.widget.dragStartBehavior;
                t15;
              }, HorizontalDragGestureRecognizerToNull()))]);
            break;
          }
        }
      }
      this[_lastCanDrag] = canDrag;
      this[_lastAxisDirection] = this.widget.axis;
      if (this[_gestureDetectorKey].currentState != null) this[_gestureDetectorKey].currentState.replaceGestureRecognizers(this[_gestureRecognizers]);
    }
    get vsync() {
      return this;
    }
    setIgnorePointer(value) {
      if (dart.equals(this[_shouldIgnorePointer], value)) return;
      this[_shouldIgnorePointer] = value;
      if (this[_ignorePointerKey].currentContext != null) {
        let renderBox = proxy_box.RenderIgnorePointer.as(this[_ignorePointerKey].currentContext.findRenderObject());
        renderBox.ignoring = this[_shouldIgnorePointer];
      }
    }
    get notificationContext() {
      return this[_gestureDetectorKey].currentContext;
    }
    get storageContext() {
      return this.context;
    }
    [_handleDragDown](details) {
      if (!(this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 525, 12, "_drag == null");
      if (!(this[_hold] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 526, 12, "_hold == null");
      this[_hold] = this.position.hold(dart.bind(this, _disposeHold));
    }
    [_handleDragStart](details) {
      if (!(this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 534, 12, "_drag == null");
      this[_drag] = this.position.drag(details, dart.bind(this, _disposeDrag));
      if (!(this[_drag] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 536, 12, "_drag != null");
      if (!(this[_hold] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 537, 12, "_hold == null");
    }
    [_handleDragUpdate](details) {
      let t15;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 542, 12, "_hold == null || _drag == null");
      t15 = this[_drag];
      t15 == null ? null : t15.update(details);
    }
    [_handleDragEnd](details) {
      let t15;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 548, 12, "_hold == null || _drag == null");
      t15 = this[_drag];
      t15 == null ? null : t15.end(details);
      if (!(this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 550, 12, "_drag == null");
    }
    [_handleDragCancel]() {
      let t15, t15$;
      if (!(this[_hold] == null || this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 556, 12, "_hold == null || _drag == null");
      t15 = this[_hold];
      t15 == null ? null : t15.cancel();
      t15$ = this[_drag];
      t15$ == null ? null : t15$.cancel();
      if (!(this[_hold] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 559, 12, "_hold == null");
      if (!(this[_drag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 560, 12, "_drag == null");
    }
    [_disposeHold]() {
      this[_hold] = null;
    }
    [_disposeDrag]() {
      this[_drag] = null;
    }
    [_targetScrollOffsetForPointerScroll](event) {
      let delta = dart.equals(this.widget.axis, basic_types$.Axis.horizontal) ? event.scrollDelta.dx : event.scrollDelta.dy;
      if (dart.test(basic_types$.axisDirectionIsReversed(this.widget.axisDirection))) {
        delta = dart.notNull(delta) * -1;
      }
      return math.min(core.double, math.max(core.double, dart.notNull(this.position.pixels) + dart.notNull(delta), this.position.minScrollExtent), this.position.maxScrollExtent);
    }
    [_receivedPointerSignal](event) {
      if (events.PointerScrollEvent.is(event) && this.position != null) {
        let targetScrollOffset = this[_targetScrollOffsetForPointerScroll](event);
        if (targetScrollOffset != this.position.pixels) {
          binding$1.GestureBinding.instance.pointerSignalResolver.register(event, dart.bind(this, _handlePointerScroll));
        }
      }
    }
    [_handlePointerScroll](event) {
      if (!events.PointerScrollEvent.is(event)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 599, 12, "event is PointerScrollEvent");
      if (this[_physics] != null && !dart.test(this[_physics].shouldAcceptUserOffset(this.position))) {
        return;
      }
      let targetScrollOffset = this[_targetScrollOffsetForPointerScroll](events.PointerScrollEvent.as(event));
      if (targetScrollOffset != this.position.pixels) {
        this.position.jumpTo(targetScrollOffset);
      }
    }
    build(context) {
      let t15, t15$, t15$0;
      if (!(this.position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 613, 12, "position != null");
      let result = new scrollable$._ScrollableScope.new({scrollable: this, position: this.position, child: new basic.Listener.new({onPointerSignal: dart.bind(this, _receivedPointerSignal), child: new gesture_detector.RawGestureDetector.new({key: this[_gestureDetectorKey], gestures: this[_gestureRecognizers], behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: this.widget.excludeFromSemantics, child: new basic.Semantics.new({explicitChildNodes: !dart.test(this.widget.excludeFromSemantics), child: new basic.IgnorePointer.new({key: this[_ignorePointerKey], ignoring: this[_shouldIgnorePointer], ignoringSemantics: false, child: this.widget.viewportBuilder(context, this.position), $creationLocationd_0dea112b090073317d4: C79 || CT.C79}), $creationLocationd_0dea112b090073317d4: C85 || CT.C85}), $creationLocationd_0dea112b090073317d4: C89 || CT.C89}), $creationLocationd_0dea112b090073317d4: C96 || CT.C96}), $creationLocationd_0dea112b090073317d4: C100 || CT.C100});
      if (!dart.test(this.widget.excludeFromSemantics)) {
        result = new scrollable$._ScrollSemantics.new({key: this[_scrollSemanticsKey], child: result, position: this.position, allowImplicitScrolling: (t15$0 = (t15$ = (t15 = this.widget, t15 == null ? null : t15.physics), t15$ == null ? null : t15$.allowImplicitScrolling), t15$0 == null ? this[_physics].allowImplicitScrolling : t15$0), semanticChildCount: this.widget.semanticChildCount, $creationLocationd_0dea112b090073317d4: C105 || CT.C105});
      }
      return this[_configuration].buildViewportChrome(context, result, this.widget.axisDirection);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollPosition()).new("position", this.position));
    }
  };
  (scrollable$.ScrollableState.new = function() {
    this[_position] = null;
    this[_configuration] = null;
    this[_physics] = null;
    this[_scrollSemanticsKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_gestureDetectorKey] = GlobalKeyOfRawGestureDetectorState().new();
    this[_ignorePointerKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_gestureRecognizers] = C76 || CT.C76;
    this[_shouldIgnorePointer] = false;
    this[_lastCanDrag] = null;
    this[_lastAxisDirection] = null;
    this[_drag] = null;
    this[_hold] = null;
    scrollable$.ScrollableState.__proto__.new.call(this);
    ;
  }).prototype = scrollable$.ScrollableState.prototype;
  dart.addTypeTests(scrollable$.ScrollableState);
  scrollable$.ScrollableState[dart.implements] = () => [scroll_context.ScrollContext];
  dart.setMethodSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getMethods(scrollable$.ScrollableState.__proto__),
    [_updatePosition]: dart.fnType(dart.void, []),
    [_shouldUpdatePosition]: dart.fnType(core.bool, [scrollable$.Scrollable]),
    setSemanticsActions: dart.fnType(dart.void, [core.Set$(ui.SemanticsAction)]),
    setCanDrag: dart.fnType(dart.void, [core.bool]),
    setIgnorePointer: dart.fnType(dart.void, [core.bool]),
    [_handleDragDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleDragCancel]: dart.fnType(dart.void, []),
    [_disposeHold]: dart.fnType(dart.void, []),
    [_disposeDrag]: dart.fnType(dart.void, []),
    [_targetScrollOffsetForPointerScroll]: dart.fnType(core.double, [events.PointerScrollEvent]),
    [_receivedPointerSignal]: dart.fnType(dart.void, [events.PointerSignalEvent]),
    [_handlePointerScroll]: dart.fnType(dart.void, [events.PointerEvent]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getGetters(scrollable$.ScrollableState.__proto__),
    position: scroll_position.ScrollPosition,
    axisDirection: basic_types$.AxisDirection,
    vsync: ticker.TickerProvider,
    notificationContext: framework.BuildContext,
    storageContext: framework.BuildContext
  }));
  dart.setLibraryUri(scrollable$.ScrollableState, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$.ScrollableState, () => ({
    __proto__: dart.getFields(scrollable$.ScrollableState.__proto__),
    [_position]: dart.fieldType(scroll_position.ScrollPosition),
    [_configuration]: dart.fieldType(scroll_configuration.ScrollBehavior),
    [_physics]: dart.fieldType(scroll_physics.ScrollPhysics),
    [_scrollSemanticsKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_gestureDetectorKey]: dart.finalFieldType(framework.GlobalKey$(gesture_detector.RawGestureDetectorState)),
    [_ignorePointerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_gestureRecognizers]: dart.fieldType(core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))),
    [_shouldIgnorePointer]: dart.fieldType(core.bool),
    [_lastCanDrag]: dart.fieldType(core.bool),
    [_lastAxisDirection]: dart.fieldType(basic_types$.Axis),
    [_drag]: dart.fieldType(drag.Drag),
    [_hold]: dart.fieldType(scroll_activity.ScrollHoldController)
  }));
  var position$0 = dart.privateName(scrollable$, "_ScrollSemantics.position");
  var allowImplicitScrolling$ = dart.privateName(scrollable$, "_ScrollSemantics.allowImplicitScrolling");
  var semanticChildCount$0 = dart.privateName(scrollable$, "_ScrollSemantics.semanticChildCount");
  scrollable$._ScrollSemantics = class _ScrollSemantics extends framework.SingleChildRenderObjectWidget {
    get position() {
      return this[position$0];
    }
    set position(value) {
      super.position = value;
    }
    get allowImplicitScrolling() {
      return this[allowImplicitScrolling$];
    }
    set allowImplicitScrolling(value) {
      super.allowImplicitScrolling = value;
    }
    get semanticChildCount() {
      return this[semanticChildCount$0];
    }
    set semanticChildCount(value) {
      super.semanticChildCount = value;
    }
    createRenderObject(context) {
      return new scrollable$._RenderScrollSemantics.new({position: this.position, allowImplicitScrolling: this.allowImplicitScrolling, semanticChildCount: this.semanticChildCount});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      scrollable$._RenderScrollSemantics._check(renderObject);
      t15 = renderObject;
      t15.allowImplicitScrolling = this.allowImplicitScrolling;
      t15.position = this.position;
      t15.semanticChildCount = this.semanticChildCount;
      t15;
    }
  };
  (scrollable$._ScrollSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[position$0] = position;
    this[allowImplicitScrolling$] = allowImplicitScrolling;
    this[semanticChildCount$0] = semanticChildCount;
    if (!(position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 687, 15, "position != null");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 688, 15, "semanticChildCount == null || semanticChildCount >= 0");
    scrollable$._ScrollSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollable$._ScrollSemantics.prototype;
  dart.addTypeTests(scrollable$._ScrollSemantics);
  dart.setMethodSignature(scrollable$._ScrollSemantics, () => ({
    __proto__: dart.getMethods(scrollable$._ScrollSemantics.__proto__),
    createRenderObject: dart.fnType(scrollable$._RenderScrollSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(scrollable$._ScrollSemantics, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$._ScrollSemantics, () => ({
    __proto__: dart.getFields(scrollable$._ScrollSemantics.__proto__),
    position: dart.finalFieldType(scroll_position.ScrollPosition),
    allowImplicitScrolling: dart.finalFieldType(core.bool),
    semanticChildCount: dart.finalFieldType(core.int)
  }));
  var _innerNode = dart.privateName(scrollable$, "_innerNode");
  var _allowImplicitScrolling = dart.privateName(scrollable$, "_allowImplicitScrolling");
  var _semanticChildCount = dart.privateName(scrollable$, "_semanticChildCount");
  scrollable$._RenderScrollSemantics = class _RenderScrollSemantics extends proxy_box.RenderProxyBox {
    get position() {
      return this[_position];
    }
    set position(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 731, 12, "value != null");
      if (dart.equals(value, this[_position])) return;
      this[_position].removeListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
      this[_position] = value;
      this[_position].addListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
      this.markNeedsSemanticsUpdate();
    }
    get allowImplicitScrolling() {
      return this[_allowImplicitScrolling];
    }
    set allowImplicitScrolling(value) {
      if (dart.equals(value, this[_allowImplicitScrolling])) return;
      this[_allowImplicitScrolling] = value;
      this.markNeedsSemanticsUpdate();
    }
    get semanticChildCount() {
      return this[_semanticChildCount];
    }
    set semanticChildCount(value) {
      if (value == this.semanticChildCount) return;
      this[_semanticChildCount] = value;
      this.markNeedsSemanticsUpdate();
    }
    describeSemanticsConfiguration(config) {
      let t15;
      super.describeSemanticsConfiguration(config);
      config.isSemanticBoundary = true;
      if (dart.test(this.position.haveDimensions)) {
        t15 = config;
        t15.hasImplicitScrolling = this.allowImplicitScrolling;
        t15.scrollPosition = this[_position].pixels;
        t15.scrollExtentMax = this[_position].maxScrollExtent;
        t15.scrollExtentMin = this[_position].minScrollExtent;
        t15.scrollChildCount = this.semanticChildCount;
        t15;
      }
    }
    assembleSemanticsNode(node, config, children) {
      let t15;
      if (dart.test(children[$isEmpty]) || !dart.test(children[$first].isTagged(viewport$.RenderViewport.useTwoPaneSemantics))) {
        super.assembleSemanticsNode(node, config, children);
        return;
      }
      this[_innerNode] == null ? this[_innerNode] = new semantics.SemanticsNode.new({showOnScreen: dart.bind(this, 'showOnScreen')}) : null;
      t15 = this[_innerNode];
      t15.isMergedIntoParent = node.isPartOfNodeMerging;
      t15.rect = ui.Offset.zero['&'](node.rect.size);
      t15;
      let firstVisibleIndex = null;
      let excluded = JSArrayOfSemanticsNode().of([this[_innerNode]]);
      let included = JSArrayOfSemanticsNode().of([]);
      for (let child of children) {
        if (!dart.test(child.isTagged(viewport$.RenderViewport.useTwoPaneSemantics))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 791, 14, "child.isTagged(RenderViewport.useTwoPaneSemantics)");
        if (dart.test(child.isTagged(viewport$.RenderViewport.excludeFromScrolling))) {
          excluded[$add](child);
        } else {
          if (!dart.test(child.hasFlag(ui.SemanticsFlag.isHidden))) firstVisibleIndex == null ? firstVisibleIndex = child.indexInParent : null;
          included[$add](child);
        }
      }
      config.scrollIndex = firstVisibleIndex;
      node.updateWith({config: null, childrenInInversePaintOrder: excluded});
      this[_innerNode].updateWith({config: config, childrenInInversePaintOrder: included});
    }
    clearSemantics() {
      super.clearSemantics();
      this[_innerNode] = null;
    }
  };
  (scrollable$._RenderScrollSemantics.new = function(opts) {
    let position = opts && 'position' in opts ? opts.position : null;
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_innerNode] = null;
    this[_position] = position;
    this[_allowImplicitScrolling] = allowImplicitScrolling;
    this[_semanticChildCount] = semanticChildCount;
    if (!(position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 722, 15, "position != null");
    scrollable$._RenderScrollSemantics.__proto__.new.call(this, child);
    position.addListener(dart.bind(this, 'markNeedsSemanticsUpdate'));
  }).prototype = scrollable$._RenderScrollSemantics.prototype;
  dart.addTypeTests(scrollable$._RenderScrollSemantics);
  dart.setGetterSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getGetters(scrollable$._RenderScrollSemantics.__proto__),
    position: scroll_position.ScrollPosition,
    allowImplicitScrolling: core.bool,
    semanticChildCount: core.int
  }));
  dart.setSetterSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getSetters(scrollable$._RenderScrollSemantics.__proto__),
    position: scroll_position.ScrollPosition,
    allowImplicitScrolling: core.bool,
    semanticChildCount: core.int
  }));
  dart.setLibraryUri(scrollable$._RenderScrollSemantics, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$._RenderScrollSemantics, () => ({
    __proto__: dart.getFields(scrollable$._RenderScrollSemantics.__proto__),
    [_position]: dart.fieldType(scroll_position.ScrollPosition),
    [_allowImplicitScrolling]: dart.fieldType(core.bool),
    [_semanticChildCount]: dart.fieldType(core.int),
    [_innerNode]: dart.fieldType(semantics.SemanticsNode)
  }));
  var _name$7 = dart.privateName(scrollable$, "_name");
  var C112;
  var C113;
  var C114;
  scrollable$.ScrollIncrementType = class ScrollIncrementType extends core.Object {
    toString() {
      return this[_name$7];
    }
  };
  (scrollable$.ScrollIncrementType.new = function(index, _name) {
    this.index = index;
    this[_name$7] = _name;
    ;
  }).prototype = scrollable$.ScrollIncrementType.prototype;
  dart.addTypeTests(scrollable$.ScrollIncrementType);
  dart.setLibraryUri(scrollable$.ScrollIncrementType, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$.ScrollIncrementType, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIncrementType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$7]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scrollable$.ScrollIncrementType, ['toString']);
  scrollable$.ScrollIncrementType.line = C112 || CT.C112;
  scrollable$.ScrollIncrementType.page = C113 || CT.C113;
  scrollable$.ScrollIncrementType.values = C114 || CT.C114;
  var type$ = dart.privateName(scrollable$, "ScrollIncrementDetails.type");
  var metrics$ = dart.privateName(scrollable$, "ScrollIncrementDetails.metrics");
  scrollable$.ScrollIncrementDetails = class ScrollIncrementDetails extends core.Object {
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get metrics() {
      return this[metrics$];
    }
    set metrics(value) {
      super.metrics = value;
    }
  };
  (scrollable$.ScrollIncrementDetails.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    this[type$] = type;
    this[metrics$] = metrics;
    if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 864, 16, "type != null");
    if (!(metrics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 865, 16, "metrics != null");
    ;
  }).prototype = scrollable$.ScrollIncrementDetails.prototype;
  dart.addTypeTests(scrollable$.ScrollIncrementDetails);
  dart.setLibraryUri(scrollable$.ScrollIncrementDetails, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$.ScrollIncrementDetails, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIncrementDetails.__proto__),
    type: dart.finalFieldType(scrollable$.ScrollIncrementType),
    metrics: dart.finalFieldType(scroll_metrics.ScrollMetrics)
  }));
  var direction$1 = dart.privateName(scrollable$, "ScrollIntent.direction");
  var type$0 = dart.privateName(scrollable$, "ScrollIntent.type");
  scrollable$.ScrollIntent = class ScrollIntent extends actions$.Intent {
    get direction() {
      return this[direction$1];
    }
    set direction(value) {
      super.direction = value;
    }
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
    isEnabled(context) {
      return scrollable$.Scrollable.of(context) != null;
    }
  };
  (scrollable$.ScrollIntent.new = function(opts) {
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let type = opts && 'type' in opts ? opts.type : C112 || CT.C112;
    this[direction$1] = direction;
    this[type$0] = type;
    if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 891, 16, "direction != null");
    if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 892, 16, "type != null");
    scrollable$.ScrollIntent.__proto__.new.call(this, scrollable$.ScrollAction.key);
    ;
  }).prototype = scrollable$.ScrollIntent.prototype;
  dart.addTypeTests(scrollable$.ScrollIntent);
  dart.setLibraryUri(scrollable$.ScrollIntent, "package:flutter/src/widgets/scrollable.dart");
  dart.setFieldSignature(scrollable$.ScrollIntent, () => ({
    __proto__: dart.getFields(scrollable$.ScrollIntent.__proto__),
    direction: dart.finalFieldType(basic_types$.AxisDirection),
    type: dart.finalFieldType(scrollable$.ScrollIncrementType)
  }));
  var _calculateScrollIncrement = dart.privateName(scrollable$, "_calculateScrollIncrement");
  var C115;
  var C116;
  var C117;
  var _getIncrement = dart.privateName(scrollable$, "_getIncrement");
  var C118;
  var C120;
  var C119;
  scrollable$.ScrollAction = class ScrollAction extends actions$.Action {
    [_calculateScrollIncrement](state, opts) {
      let type = opts && 'type' in opts ? opts.type : C112 || CT.C112;
      if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 930, 12, "type != null");
      if (!(state.position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 931, 12, "state.position != null");
      if (!(state.position.pixels != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 932, 12, "state.position.pixels != null");
      if (!(state.position.viewportDimension != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 933, 12, "state.position.viewportDimension != null");
      if (!(state.position.maxScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 934, 12, "state.position.maxScrollExtent != null");
      if (!(state.position.minScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 935, 12, "state.position.minScrollExtent != null");
      if (!(state.widget.physics == null || dart.test(state.widget.physics.shouldAcceptUserOffset(state.position)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 936, 12, "state.widget.physics == null || state.widget.physics.shouldAcceptUserOffset(state.position)");
      if (state.widget.incrementCalculator != null) {
        return state.widget.incrementCalculator(new scrollable$.ScrollIncrementDetails.new({type: type, metrics: state.position}));
      }
      switch (type) {
        case C112 || CT.C112:
        {
          return 50.0;
        }
        case C113 || CT.C113:
        {
          return 0.8 * dart.notNull(state.position.viewportDimension);
        }
      }
      return 0.0;
    }
    [_getIncrement](state, intent) {
      let increment = this[_calculateScrollIncrement](state, {type: intent.type});
      switch (intent.direction) {
        case C72 || CT.C72:
        {
          switch (state.axisDirection) {
            case C115 || CT.C115:
            {
              return -dart.notNull(increment);
              break;
            }
            case C72 || CT.C72:
            {
              return increment;
              break;
            }
            case C116 || CT.C116:
            case C117 || CT.C117:
            {
              return 0.0;
            }
          }
          break;
        }
        case C115 || CT.C115:
        {
          switch (state.axisDirection) {
            case C115 || CT.C115:
            {
              return increment;
              break;
            }
            case C72 || CT.C72:
            {
              return -dart.notNull(increment);
              break;
            }
            case C116 || CT.C116:
            case C117 || CT.C117:
            {
              return 0.0;
            }
          }
          break;
        }
        case C117 || CT.C117:
        {
          switch (state.axisDirection) {
            case C116 || CT.C116:
            {
              return -dart.notNull(increment);
              break;
            }
            case C117 || CT.C117:
            {
              return increment;
              break;
            }
            case C115 || CT.C115:
            case C72 || CT.C72:
            {
              return 0.0;
            }
          }
          break;
        }
        case C116 || CT.C116:
        {
          switch (state.axisDirection) {
            case C116 || CT.C116:
            {
              return increment;
              break;
            }
            case C117 || CT.C117:
            {
              return -dart.notNull(increment);
              break;
            }
            case C115 || CT.C115:
            case C72 || CT.C72:
            {
              return 0.0;
            }
          }
          break;
        }
      }
      return 0.0;
    }
    invoke(node, intent) {
      scrollable$.ScrollIntent._check(intent);
      let state = scrollable$.Scrollable.of(node.context);
      if (!(state != null)) dart.assertFailed(dart.str(dart.wrapType(scrollable$.ScrollAction)) + " was invoked on a context that has no scrollable parent", "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 1018, 12, "state != null");
      if (!(state.position.pixels != null)) dart.assertFailed("Scrollable must be laid out before it can be scrolled via a ScrollAction", "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 1019, 12, "state.position.pixels != null");
      if (!(state.position.viewportDimension != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 1020, 12, "state.position.viewportDimension != null");
      if (!(state.position.maxScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 1021, 12, "state.position.maxScrollExtent != null");
      if (!(state.position.minScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollable.dart", 1022, 12, "state.position.minScrollExtent != null");
      if (state.widget.physics != null && !dart.test(state.widget.physics.shouldAcceptUserOffset(state.position))) {
        return;
      }
      let increment = this[_getIncrement](state, intent);
      if (increment === 0.0) {
        return;
      }
      state.position.moveTo(dart.notNull(state.position.pixels) + dart.notNull(increment), {duration: C118 || CT.C118, curve: curves.Curves.easeInOut});
    }
  };
  (scrollable$.ScrollAction.new = function() {
    scrollable$.ScrollAction.__proto__.new.call(this, scrollable$.ScrollAction.key);
    ;
  }).prototype = scrollable$.ScrollAction.prototype;
  dart.addTypeTests(scrollable$.ScrollAction);
  dart.setMethodSignature(scrollable$.ScrollAction, () => ({
    __proto__: dart.getMethods(scrollable$.ScrollAction.__proto__),
    [_calculateScrollIncrement]: dart.fnType(core.double, [scrollable$.ScrollableState], {type: scrollable$.ScrollIncrementType}, {}),
    [_getIncrement]: dart.fnType(core.double, [scrollable$.ScrollableState, scrollable$.ScrollIntent]),
    invoke: dart.fnType(dart.void, [focus_manager.FocusNode, core.Object])
  }));
  dart.setLibraryUri(scrollable$.ScrollAction, "package:flutter/src/widgets/scrollable.dart");
  dart.defineLazy(scrollable$.ScrollAction, {
    /*scrollable$.ScrollAction.key*/get key() {
      return C119 || CT.C119;
    }
  });
  var _name$8 = dart.privateName(viewport$, "_name");
  var C121;
  var axisDirection$0 = dart.privateName(viewport, "Viewport.axisDirection");
  var crossAxisDirection$ = dart.privateName(viewport, "Viewport.crossAxisDirection");
  var anchor$ = dart.privateName(viewport, "Viewport.anchor");
  var offset$ = dart.privateName(viewport, "Viewport.offset");
  var center$ = dart.privateName(viewport, "Viewport.center");
  var cacheExtent$ = dart.privateName(viewport, "Viewport.cacheExtent");
  var cacheExtentStyle$ = dart.privateName(viewport, "Viewport.cacheExtentStyle");
  viewport.Viewport = class Viewport extends framework.MultiChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$0];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get crossAxisDirection() {
      return this[crossAxisDirection$];
    }
    set crossAxisDirection(value) {
      super.crossAxisDirection = value;
    }
    get anchor() {
      return this[anchor$];
    }
    set anchor(value) {
      super.anchor = value;
    }
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      super.offset = value;
    }
    get center() {
      return this[center$];
    }
    set center(value) {
      super.center = value;
    }
    get cacheExtent() {
      return this[cacheExtent$];
    }
    set cacheExtent(value) {
      super.cacheExtent = value;
    }
    get cacheExtentStyle() {
      return this[cacheExtentStyle$];
    }
    set cacheExtentStyle(value) {
      super.cacheExtentStyle = value;
    }
    static getDefaultCrossAxisDirection(context, axisDirection) {
      if (!(axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 127, 12, "axisDirection != null");
      switch (axisDirection) {
        case C115 || CT.C115:
        {
          return basic_types$.textDirectionToAxisDirection(basic.Directionality.of(context));
        }
        case C116 || CT.C116:
        {
          return basic_types$.AxisDirection.down;
        }
        case C72 || CT.C72:
        {
          return basic_types$.textDirectionToAxisDirection(basic.Directionality.of(context));
        }
        case C117 || CT.C117:
        {
          return basic_types$.AxisDirection.down;
        }
      }
      return null;
    }
    createRenderObject(context) {
      let t15;
      return new viewport$.RenderViewport.new({axisDirection: this.axisDirection, crossAxisDirection: (t15 = this.crossAxisDirection, t15 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t15), anchor: this.anchor, offset: this.offset, cacheExtent: this.cacheExtent, cacheExtentStyle: this.cacheExtentStyle});
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      viewport$.RenderViewport._check(renderObject);
      t15 = renderObject;
      t15.axisDirection = this.axisDirection;
      t15.crossAxisDirection = (t16 = this.crossAxisDirection, t16 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t16);
      t15.anchor = this.anchor;
      t15.offset = this.offset;
      t15.cacheExtent = this.cacheExtent;
      t15.cacheExtentStyle = this.cacheExtentStyle;
      t15;
    }
    createElement() {
      return new viewport._ViewportElement.new(this);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (EnumPropertyOfAxisDirection()).new("crossAxisDirection", this.crossAxisDirection, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("anchor", this.anchor));
      properties.add(new (DiagnosticsPropertyOfViewportOffset()).new("offset", this.offset));
      if (this.center != null) {
        properties.add(new (DiagnosticsPropertyOfKey()).new("center", this.center));
      } else if (dart.test(this.children[$isNotEmpty]) && this.children[$first].key != null) {
        properties.add(new (DiagnosticsPropertyOfKey()).new("center", this.children[$first].key, {tooltip: "implicit"}));
      }
      properties.add(new (DiagnosticsPropertyOfdouble()).new("cacheExtent", this.cacheExtent));
      properties.add(new (DiagnosticsPropertyOfCacheExtentStyle()).new("cacheExtentStyle", this.cacheExtentStyle));
    }
  };
  (viewport.Viewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let center = opts && 'center' in opts ? opts.center : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let cacheExtentStyle = opts && 'cacheExtentStyle' in opts ? opts.cacheExtentStyle : C121 || CT.C121;
    let slivers = opts && 'slivers' in opts ? opts.slivers : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$0] = axisDirection;
    this[crossAxisDirection$] = crossAxisDirection;
    this[anchor$] = anchor;
    this[offset$] = offset;
    this[center$] = center;
    this[cacheExtent$] = cacheExtent;
    this[cacheExtentStyle$] = cacheExtentStyle;
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 62, 15, "offset != null");
    if (!(slivers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 63, 15, "slivers != null");
    if (!(center == null || slivers[$where](dart.fn(child => dart.equals(child.key, center), WidgetTobool()))[$length] === 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 64, 15, "center == null || slivers.where((Widget child) => child.key == center).length == 1");
    if (!(cacheExtentStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 65, 15, "cacheExtentStyle != null");
    if (!(!dart.equals(cacheExtentStyle, viewport$.CacheExtentStyle.viewport) || cacheExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 66, 15, "cacheExtentStyle != CacheExtentStyle.viewport || cacheExtent != null");
    viewport.Viewport.__proto__.new.call(this, {key: key, children: slivers, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = viewport.Viewport.prototype;
  dart.addTypeTests(viewport.Viewport);
  dart.setMethodSignature(viewport.Viewport, () => ({
    __proto__: dart.getMethods(viewport.Viewport.__proto__),
    createRenderObject: dart.fnType(viewport$.RenderViewport, [framework.BuildContext]),
    createElement: dart.fnType(viewport._ViewportElement, [])
  }));
  dart.setLibraryUri(viewport.Viewport, "package:flutter/src/widgets/viewport.dart");
  dart.setFieldSignature(viewport.Viewport, () => ({
    __proto__: dart.getFields(viewport.Viewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    crossAxisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    anchor: dart.finalFieldType(core.double),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    center: dart.finalFieldType(key.Key),
    cacheExtent: dart.finalFieldType(core.double),
    cacheExtentStyle: dart.finalFieldType(viewport$.CacheExtentStyle)
  }));
  var _updateCenter = dart.privateName(viewport, "_updateCenter");
  viewport._ViewportElement = class _ViewportElement extends framework.MultiChildRenderObjectElement {
    get widget() {
      return viewport.Viewport.as(super.widget);
    }
    get renderObject() {
      return viewport$.RenderViewport.as(super.renderObject);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_updateCenter]();
    }
    update(newWidget) {
      framework.MultiChildRenderObjectWidget._check(newWidget);
      super.update(newWidget);
      this[_updateCenter]();
    }
    [_updateCenter]() {
      if (this.widget.center != null) {
        this.renderObject.center = sliver.RenderSliver.as(this.children[$singleWhere](dart.fn(element => dart.equals(element.widget.key, this.widget.center), ElementTobool())).renderObject);
      } else if (dart.test(this.children[$isNotEmpty])) {
        this.renderObject.center = sliver.RenderSliver.as(this.children[$first].renderObject);
      } else {
        this.renderObject.center = null;
      }
    }
    debugVisitOnstageChildren(visitor) {
      this.children[$where](dart.fn(e => {
        let renderSliver = sliver.RenderSliver.as(e.renderObject);
        return renderSliver.geometry.visible;
      }, ElementTobool()))[$forEach](visitor);
    }
  };
  (viewport._ViewportElement.new = function(widget) {
    viewport._ViewportElement.__proto__.new.call(this, widget);
    ;
  }).prototype = viewport._ViewportElement.prototype;
  dart.addTypeTests(viewport._ViewportElement);
  dart.setMethodSignature(viewport._ViewportElement, () => ({
    __proto__: dart.getMethods(viewport._ViewportElement.__proto__),
    [_updateCenter]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(viewport._ViewportElement, () => ({
    __proto__: dart.getGetters(viewport._ViewportElement.__proto__),
    widget: viewport.Viewport,
    renderObject: viewport$.RenderViewport
  }));
  dart.setLibraryUri(viewport._ViewportElement, "package:flutter/src/widgets/viewport.dart");
  var axisDirection$1 = dart.privateName(viewport, "ShrinkWrappingViewport.axisDirection");
  var crossAxisDirection$0 = dart.privateName(viewport, "ShrinkWrappingViewport.crossAxisDirection");
  var offset$0 = dart.privateName(viewport, "ShrinkWrappingViewport.offset");
  viewport.ShrinkWrappingViewport = class ShrinkWrappingViewport extends framework.MultiChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$1];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get crossAxisDirection() {
      return this[crossAxisDirection$0];
    }
    set crossAxisDirection(value) {
      super.crossAxisDirection = value;
    }
    get offset() {
      return this[offset$0];
    }
    set offset(value) {
      super.offset = value;
    }
    createRenderObject(context) {
      let t15;
      return new viewport$.RenderShrinkWrappingViewport.new({axisDirection: this.axisDirection, crossAxisDirection: (t15 = this.crossAxisDirection, t15 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t15), offset: this.offset});
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      viewport$.RenderShrinkWrappingViewport._check(renderObject);
      t15 = renderObject;
      t15.axisDirection = this.axisDirection;
      t15.crossAxisDirection = (t16 = this.crossAxisDirection, t16 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t16);
      t15.offset = this.offset;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      properties.add(new (EnumPropertyOfAxisDirection()).new("crossAxisDirection", this.crossAxisDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfViewportOffset()).new("offset", this.offset));
    }
  };
  (viewport.ShrinkWrappingViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let slivers = opts && 'slivers' in opts ? opts.slivers : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$1] = axisDirection;
    this[crossAxisDirection$0] = crossAxisDirection;
    this[offset$0] = offset;
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/viewport.dart", 267, 15, "offset != null");
    viewport.ShrinkWrappingViewport.__proto__.new.call(this, {key: key, children: slivers, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = viewport.ShrinkWrappingViewport.prototype;
  dart.addTypeTests(viewport.ShrinkWrappingViewport);
  dart.setMethodSignature(viewport.ShrinkWrappingViewport, () => ({
    __proto__: dart.getMethods(viewport.ShrinkWrappingViewport.__proto__),
    createRenderObject: dart.fnType(viewport$.RenderShrinkWrappingViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(viewport.ShrinkWrappingViewport, "package:flutter/src/widgets/viewport.dart");
  dart.setFieldSignature(viewport.ShrinkWrappingViewport, () => ({
    __proto__: dart.getFields(viewport.ShrinkWrappingViewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    crossAxisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset)
  }));
  var textDirection$ = dart.privateName(basic, "Directionality.textDirection");
  basic.Directionality = class Directionality extends framework.InheritedWidget {
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    static of(context) {
      let t15;
      let widget = context.dependOnInheritedWidgetOfExactType(basic.Directionality);
      t15 = widget;
      return t15 == null ? null : t15.textDirection;
    }
    updateShouldNotify(oldWidget) {
      basic.Directionality._check(oldWidget);
      return !dart.equals(this.textDirection, oldWidget.textDirection);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection));
    }
  };
  (basic.Directionality.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textDirection$] = textDirection;
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 91, 15, "textDirection != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 92, 15, "child != null");
    basic.Directionality.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Directionality.prototype;
  dart.addTypeTests(basic.Directionality);
  dart.setMethodSignature(basic.Directionality, () => ({
    __proto__: dart.getMethods(basic.Directionality.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(basic.Directionality, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Directionality, () => ({
    __proto__: dart.getFields(basic.Directionality.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  var opacity$ = dart.privateName(basic, "Opacity.opacity");
  var alwaysIncludeSemantics$ = dart.privateName(basic, "Opacity.alwaysIncludeSemantics");
  basic.Opacity = class Opacity extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderOpacity._check(renderObject);
      t15 = renderObject;
      t15.opacity = this.opacity;
      t15.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (basic.Opacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$] = opacity;
    this[alwaysIncludeSemantics$] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 215, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 216, 15, "alwaysIncludeSemantics != null");
    basic.Opacity.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Opacity.prototype;
  dart.addTypeTests(basic.Opacity);
  dart.setMethodSignature(basic.Opacity, () => ({
    __proto__: dart.getMethods(basic.Opacity.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Opacity, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Opacity, () => ({
    __proto__: dart.getFields(basic.Opacity.__proto__),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var C122;
  var shaderCallback$ = dart.privateName(basic, "ShaderMask.shaderCallback");
  var blendMode$ = dart.privateName(basic, "ShaderMask.blendMode");
  basic.ShaderMask = class ShaderMask extends framework.SingleChildRenderObjectWidget {
    get shaderCallback() {
      return this[shaderCallback$];
    }
    set shaderCallback(value) {
      super.shaderCallback = value;
    }
    get blendMode() {
      return this[blendMode$];
    }
    set blendMode(value) {
      super.blendMode = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderShaderMask.new({shaderCallback: this.shaderCallback, blendMode: this.blendMode});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderShaderMask._check(renderObject);
      t15 = renderObject;
      t15.shaderCallback = this.shaderCallback;
      t15.blendMode = this.blendMode;
      t15;
    }
  };
  (basic.ShaderMask.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let shaderCallback = opts && 'shaderCallback' in opts ? opts.shaderCallback : null;
    let blendMode = opts && 'blendMode' in opts ? opts.blendMode : C122 || CT.C122;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[shaderCallback$] = shaderCallback;
    this[blendMode$] = blendMode;
    if (!(shaderCallback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 303, 15, "shaderCallback != null");
    if (!(blendMode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 304, 15, "blendMode != null");
    basic.ShaderMask.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ShaderMask.prototype;
  dart.addTypeTests(basic.ShaderMask);
  dart.setMethodSignature(basic.ShaderMask, () => ({
    __proto__: dart.getMethods(basic.ShaderMask.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderShaderMask, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ShaderMask, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ShaderMask, () => ({
    __proto__: dart.getFields(basic.ShaderMask.__proto__),
    shaderCallback: dart.finalFieldType(dart.fnType(ui.Shader, [ui.Rect])),
    blendMode: dart.finalFieldType(ui.BlendMode)
  }));
  var filter$ = dart.privateName(basic, "BackdropFilter.filter");
  basic.BackdropFilter = class BackdropFilter extends framework.SingleChildRenderObjectWidget {
    get filter() {
      return this[filter$];
    }
    set filter(value) {
      super.filter = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderBackdropFilter.new({filter: this.filter});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderBackdropFilter._check(renderObject);
      renderObject.filter = this.filter;
    }
  };
  (basic.BackdropFilter.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let filter = opts && 'filter' in opts ? opts.filter : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[filter$] = filter;
    if (!(filter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 394, 15, "filter != null");
    basic.BackdropFilter.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.BackdropFilter.prototype;
  dart.addTypeTests(basic.BackdropFilter);
  dart.setMethodSignature(basic.BackdropFilter, () => ({
    __proto__: dart.getMethods(basic.BackdropFilter.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderBackdropFilter, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.BackdropFilter, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.BackdropFilter, () => ({
    __proto__: dart.getFields(basic.BackdropFilter.__proto__),
    filter: dart.finalFieldType(ui.ImageFilter)
  }));
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var C123;
  var painter$ = dart.privateName(basic, "CustomPaint.painter");
  var foregroundPainter$ = dart.privateName(basic, "CustomPaint.foregroundPainter");
  var size$ = dart.privateName(basic, "CustomPaint.size");
  var isComplex$ = dart.privateName(basic, "CustomPaint.isComplex");
  var willChange$ = dart.privateName(basic, "CustomPaint.willChange");
  basic.CustomPaint = class CustomPaint extends framework.SingleChildRenderObjectWidget {
    get painter() {
      return this[painter$];
    }
    set painter(value) {
      super.painter = value;
    }
    get foregroundPainter() {
      return this[foregroundPainter$];
    }
    set foregroundPainter(value) {
      super.foregroundPainter = value;
    }
    get size() {
      return this[size$];
    }
    set size(value) {
      super.size = value;
    }
    get isComplex() {
      return this[isComplex$];
    }
    set isComplex(value) {
      super.isComplex = value;
    }
    get willChange() {
      return this[willChange$];
    }
    set willChange(value) {
      super.willChange = value;
    }
    createRenderObject(context) {
      return new custom_paint.RenderCustomPaint.new({painter: this.painter, foregroundPainter: this.foregroundPainter, preferredSize: this.size, isComplex: this.isComplex, willChange: this.willChange});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      custom_paint.RenderCustomPaint._check(renderObject);
      t15 = renderObject;
      t15.painter = this.painter;
      t15.foregroundPainter = this.foregroundPainter;
      t15.preferredSize = this.size;
      t15.isComplex = this.isComplex;
      t15.willChange = this.willChange;
      t15;
    }
    didUnmountRenderObject(renderObject) {
      let t15;
      custom_paint.RenderCustomPaint._check(renderObject);
      t15 = renderObject;
      t15.painter = null;
      t15.foregroundPainter = null;
      t15;
    }
  };
  (basic.CustomPaint.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let painter = opts && 'painter' in opts ? opts.painter : null;
    let foregroundPainter = opts && 'foregroundPainter' in opts ? opts.foregroundPainter : null;
    let size = opts && 'size' in opts ? opts.size : C123 || CT.C123;
    let isComplex = opts && 'isComplex' in opts ? opts.isComplex : false;
    let willChange = opts && 'willChange' in opts ? opts.willChange : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[painter$] = painter;
    this[foregroundPainter$] = foregroundPainter;
    this[size$] = size;
    this[isComplex$] = isComplex;
    this[willChange$] = willChange;
    if (!(size != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 479, 15, "size != null");
    if (!(isComplex != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 480, 15, "isComplex != null");
    if (!(willChange != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 481, 15, "willChange != null");
    if (!(painter != null || foregroundPainter != null || !dart.test(isComplex) && !dart.test(willChange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 482, 15, "painter != null || foregroundPainter != null || (!isComplex && !willChange)");
    basic.CustomPaint.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomPaint.prototype;
  dart.addTypeTests(basic.CustomPaint);
  dart.setMethodSignature(basic.CustomPaint, () => ({
    __proto__: dart.getMethods(basic.CustomPaint.__proto__),
    createRenderObject: dart.fnType(custom_paint.RenderCustomPaint, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomPaint, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.CustomPaint, () => ({
    __proto__: dart.getFields(basic.CustomPaint.__proto__),
    painter: dart.finalFieldType(custom_paint.CustomPainter),
    foregroundPainter: dart.finalFieldType(custom_paint.CustomPainter),
    size: dart.finalFieldType(ui.Size),
    isComplex: dart.finalFieldType(core.bool),
    willChange: dart.finalFieldType(core.bool)
  }));
  var C124;
  var clipper$ = dart.privateName(basic, "ClipRect.clipper");
  var clipBehavior$ = dart.privateName(basic, "ClipRect.clipBehavior");
  basic.ClipRect = class ClipRect extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 608, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipRect.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderClipRect._check(renderObject);
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 614, 12, "clipBehavior != Clip.none");
      t15 = renderObject;
      t15.clipper = this.clipper;
      t15.clipBehavior = this.clipBehavior;
      t15;
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipRect._check(renderObject);
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipRect.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C124 || CT.C124;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$] = clipper;
    this[clipBehavior$] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 595, 16, "clipBehavior != null");
    basic.ClipRect.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipRect.prototype;
  dart.addTypeTests(basic.ClipRect);
  dart.setMethodSignature(basic.ClipRect, () => ({
    __proto__: dart.getMethods(basic.ClipRect.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipRect, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipRect, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ClipRect, () => ({
    __proto__: dart.getFields(basic.ClipRect.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Rect)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var C126;
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var C125;
  var C127;
  var borderRadius$ = dart.privateName(basic, "ClipRRect.borderRadius");
  var clipper$0 = dart.privateName(basic, "ClipRRect.clipper");
  var clipBehavior$0 = dart.privateName(basic, "ClipRRect.clipBehavior");
  basic.ClipRRect = class ClipRRect extends framework.SingleChildRenderObjectWidget {
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get clipper() {
      return this[clipper$0];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$0];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 683, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipRRect.new({borderRadius: this.borderRadius, clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderClipRRect._check(renderObject);
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 689, 12, "clipBehavior != Clip.none");
      t15 = renderObject;
      t15.borderRadius = this.borderRadius;
      t15.clipBehavior = this.clipBehavior;
      t15.clipper = this.clipper;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius, {showName: false, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipRRect.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C125 || CT.C125;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C127 || CT.C127;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[borderRadius$] = borderRadius;
    this[clipper$0] = clipper;
    this[clipBehavior$0] = clipBehavior;
    if (!(borderRadius != null || clipper != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 661, 15, "borderRadius != null || clipper != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 662, 15, "clipBehavior != null");
    basic.ClipRRect.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipRRect.prototype;
  dart.addTypeTests(basic.ClipRRect);
  dart.setMethodSignature(basic.ClipRRect, () => ({
    __proto__: dart.getMethods(basic.ClipRRect.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipRRect, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipRRect, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ClipRRect, () => ({
    __proto__: dart.getFields(basic.ClipRRect.__proto__),
    borderRadius: dart.finalFieldType(border_radius.BorderRadius),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.RRect)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var clipper$1 = dart.privateName(basic, "ClipOval.clipper");
  var clipBehavior$1 = dart.privateName(basic, "ClipOval.clipBehavior");
  basic.ClipOval = class ClipOval extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$1];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 745, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipOval.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderClipOval._check(renderObject);
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 751, 12, "clipBehavior != Clip.none");
      t15 = renderObject;
      t15.clipper = this.clipper;
      t15.clipBehavior = this.clipBehavior;
      t15;
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipOval._check(renderObject);
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfRect()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipOval.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C127 || CT.C127;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$1] = clipper;
    this[clipBehavior$1] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 724, 16, "clipBehavior != null");
    basic.ClipOval.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipOval.prototype;
  dart.addTypeTests(basic.ClipOval);
  dart.setMethodSignature(basic.ClipOval, () => ({
    __proto__: dart.getMethods(basic.ClipOval.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipOval, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipOval, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ClipOval, () => ({
    __proto__: dart.getFields(basic.ClipOval.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Rect)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var C130;
  var C131;
  var C132;
  var C129;
  var C128;
  var C135;
  var C136;
  var C134;
  var C133;
  var clipper$2 = dart.privateName(basic, "ClipPath.clipper");
  var clipBehavior$2 = dart.privateName(basic, "ClipPath.clipBehavior");
  basic.ClipPath = class ClipPath extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$2];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static shape(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C127 || CT.C127;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 812, 12, "clipBehavior != null");
      if (!!dart.equals(clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 813, 12, "clipBehavior != Clip.none");
      if (!(shape != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 814, 12, "shape != null");
      return new basic.Builder.new({key: key, builder: dart.fn(context => new basic.ClipPath.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.of(context)}), clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: C128 || CT.C128}), BuildContextToClipPath()), $creationLocationd_0dea112b090073317d4: C133 || CT.C133});
    }
    createRenderObject(context) {
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 844, 12, "clipBehavior != Clip.none");
      return new proxy_box.RenderClipPath.new({clipper: this.clipper, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderClipPath._check(renderObject);
      if (!!dart.equals(this.clipBehavior, ui.Clip.none)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 850, 12, "clipBehavior != Clip.none");
      t15 = renderObject;
      t15.clipper = this.clipper;
      t15.clipBehavior = this.clipBehavior;
      t15;
    }
    didUnmountRenderObject(renderObject) {
      proxy_box.RenderClipPath._check(renderObject);
      renderObject.clipper = null;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfPath()).new("clipper", this.clipper, {defaultValue: null}));
    }
  };
  (basic.ClipPath.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C127 || CT.C127;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$2] = clipper;
    this[clipBehavior$2] = clipBehavior;
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 799, 15, "clipBehavior != null");
    basic.ClipPath.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ClipPath.prototype;
  dart.addTypeTests(basic.ClipPath);
  dart.setMethodSignature(basic.ClipPath, () => ({
    __proto__: dart.getMethods(basic.ClipPath.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderClipPath, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ClipPath, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ClipPath, () => ({
    __proto__: dart.getFields(basic.ClipPath.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Path)),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _name$9 = dart.privateName(box_border, "_name");
  var C137;
  var C138;
  var Color_value = dart.privateName(ui, "Color.value");
  var C139;
  var shape$ = dart.privateName(basic, "PhysicalModel.shape");
  var clipBehavior$3 = dart.privateName(basic, "PhysicalModel.clipBehavior");
  var borderRadius$0 = dart.privateName(basic, "PhysicalModel.borderRadius");
  var elevation$ = dart.privateName(basic, "PhysicalModel.elevation");
  var color$ = dart.privateName(basic, "PhysicalModel.color");
  var shadowColor$ = dart.privateName(basic, "PhysicalModel.shadowColor");
  basic.PhysicalModel = class PhysicalModel extends framework.SingleChildRenderObjectWidget {
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get borderRadius() {
      return this[borderRadius$0];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get elevation() {
      return this[elevation$];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderPhysicalModel.new({shape: this.shape, clipBehavior: this.clipBehavior, borderRadius: this.borderRadius, elevation: this.elevation, color: this.color, shadowColor: this.shadowColor});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderPhysicalModel._check(renderObject);
      t15 = renderObject;
      t15.shape = this.shape;
      t15.clipBehavior = this.clipBehavior;
      t15.borderRadius = this.borderRadius;
      t15.elevation = this.elevation;
      t15.color = this.color;
      t15.shadowColor = this.shadowColor;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfBoxShape()).new("shape", this.shape));
      properties.add(new (DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius));
      properties.add(new diagnostics$.DoubleProperty.new("elevation", this.elevation));
      properties.add(new colors.ColorProperty.new("color", this.color));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (basic.PhysicalModel.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let shape = opts && 'shape' in opts ? opts.shape : C137 || CT.C137;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C138 || CT.C138;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : C139 || CT.C139;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[shape$] = shape;
    this[clipBehavior$3] = clipBehavior;
    this[borderRadius$0] = borderRadius;
    this[elevation$] = elevation;
    this[color$] = color;
    this[shadowColor$] = shadowColor;
    if (!(shape != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 898, 15, "shape != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 899, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 900, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 901, 15, "shadowColor != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 902, 15, "clipBehavior != null");
    basic.PhysicalModel.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PhysicalModel.prototype;
  dart.addTypeTests(basic.PhysicalModel);
  dart.setMethodSignature(basic.PhysicalModel, () => ({
    __proto__: dart.getMethods(basic.PhysicalModel.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPhysicalModel, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PhysicalModel, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.PhysicalModel, () => ({
    __proto__: dart.getFields(basic.PhysicalModel.__proto__),
    shape: dart.finalFieldType(box_border.BoxShape),
    clipBehavior: dart.finalFieldType(ui.Clip),
    borderRadius: dart.finalFieldType(border_radius.BorderRadius),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  var clipper$3 = dart.privateName(basic, "PhysicalShape.clipper");
  var clipBehavior$4 = dart.privateName(basic, "PhysicalShape.clipBehavior");
  var elevation$0 = dart.privateName(basic, "PhysicalShape.elevation");
  var color$0 = dart.privateName(basic, "PhysicalShape.color");
  var shadowColor$0 = dart.privateName(basic, "PhysicalShape.shadowColor");
  basic.PhysicalShape = class PhysicalShape extends framework.SingleChildRenderObjectWidget {
    get clipper() {
      return this[clipper$3];
    }
    set clipper(value) {
      super.clipper = value;
    }
    get clipBehavior() {
      return this[clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[elevation$0];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[shadowColor$0];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderPhysicalShape.new({clipper: this.clipper, clipBehavior: this.clipBehavior, elevation: this.elevation, color: this.color, shadowColor: this.shadowColor});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderPhysicalShape._check(renderObject);
      t15 = renderObject;
      t15.clipper = this.clipper;
      t15.clipBehavior = this.clipBehavior;
      t15.elevation = this.elevation;
      t15.color = this.color;
      t15.shadowColor = this.shadowColor;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfCustomClipperOfPath()).new("clipper", this.clipper));
      properties.add(new diagnostics$.DoubleProperty.new("elevation", this.elevation));
      properties.add(new colors.ColorProperty.new("color", this.color));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (basic.PhysicalShape.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let clipper = opts && 'clipper' in opts ? opts.clipper : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C138 || CT.C138;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : C139 || CT.C139;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[clipper$3] = clipper;
    this[clipBehavior$4] = clipBehavior;
    this[elevation$0] = elevation;
    this[color$0] = color;
    this[shadowColor$0] = shadowColor;
    if (!(clipper != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 993, 15, "clipper != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 994, 15, "clipBehavior != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 995, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 996, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 997, 15, "shadowColor != null");
    basic.PhysicalShape.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PhysicalShape.prototype;
  dart.addTypeTests(basic.PhysicalShape);
  dart.setMethodSignature(basic.PhysicalShape, () => ({
    __proto__: dart.getMethods(basic.PhysicalShape.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPhysicalShape, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PhysicalShape, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.PhysicalShape, () => ({
    __proto__: dart.getFields(basic.PhysicalShape.__proto__),
    clipper: dart.finalFieldType(proxy_box.CustomClipper$(ui.Path)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color)
  }));
  var Alignment_y = dart.privateName(alignment$, "Alignment.y");
  var Alignment_x = dart.privateName(alignment$, "Alignment.x");
  var C140;
  var transform$ = dart.privateName(basic, "Transform.transform");
  var origin$ = dart.privateName(basic, "Transform.origin");
  var alignment$0 = dart.privateName(basic, "Transform.alignment");
  var transformHitTests$ = dart.privateName(basic, "Transform.transformHitTests");
  basic.Transform = class Transform extends framework.SingleChildRenderObjectWidget {
    get transform() {
      return this[transform$];
    }
    set transform(value) {
      super.transform = value;
    }
    get origin() {
      return this[origin$];
    }
    set origin(value) {
      super.origin = value;
    }
    get alignment() {
      return this[alignment$0];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get transformHitTests() {
      return this[transformHitTests$];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderTransform.new({transform: this.transform, origin: this.origin, alignment: this.alignment, textDirection: basic.Directionality.of(context), transformHitTests: this.transformHitTests});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderTransform._check(renderObject);
      t15 = renderObject;
      t15.transform = this.transform;
      t15.origin = this.origin;
      t15.alignment = this.alignment;
      t15.textDirection = basic.Directionality.of(context);
      t15.transformHitTests = this.transformHitTests;
      t15;
    }
  };
  (basic.Transform.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transform$] = transform;
    this[origin$] = origin;
    this[alignment$0] = alignment;
    this[transformHitTests$] = transformHitTests;
    if (!(transform != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1106, 15, "transform != null");
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.rotate = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let angle = opts && 'angle' in opts ? opts.angle : null;
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[origin$] = origin;
    this[alignment$0] = alignment;
    this[transformHitTests$] = transformHitTests;
    this[transform$] = vector_math_64.Matrix4.rotationZ(angle);
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.translate = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transformHitTests$] = transformHitTests;
    this[transform$] = vector_math_64.Matrix4.translationValues(offset.dx, offset.dy, 0.0);
    this[origin$] = null;
    this[alignment$0] = null;
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  (basic.Transform.scale = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    let origin = opts && 'origin' in opts ? opts.origin : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[origin$] = origin;
    this[alignment$0] = alignment;
    this[transformHitTests$] = transformHitTests;
    this[transform$] = vector_math_64.Matrix4.diagonal3Values(scale, scale, 1.0);
    basic.Transform.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Transform.prototype;
  dart.addTypeTests(basic.Transform);
  dart.setMethodSignature(basic.Transform, () => ({
    __proto__: dart.getMethods(basic.Transform.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderTransform, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Transform, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Transform, () => ({
    __proto__: dart.getFields(basic.Transform.__proto__),
    transform: dart.finalFieldType(vector_math_64.Matrix4),
    origin: dart.finalFieldType(ui.Offset),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    transformHitTests: dart.finalFieldType(core.bool)
  }));
  var link$ = dart.privateName(basic, "CompositedTransformTarget.link");
  basic.CompositedTransformTarget = class CompositedTransformTarget extends framework.SingleChildRenderObjectWidget {
    get link() {
      return this[link$];
    }
    set link(value) {
      super.link = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderLeaderLayer.new({link: this.link});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderLeaderLayer._check(renderObject);
      t15 = renderObject;
      t15.link = this.link;
      t15;
    }
  };
  (basic.CompositedTransformTarget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let link = opts && 'link' in opts ? opts.link : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[link$] = link;
    if (!(link != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1289, 15, "link != null");
    basic.CompositedTransformTarget.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CompositedTransformTarget.prototype;
  dart.addTypeTests(basic.CompositedTransformTarget);
  dart.setMethodSignature(basic.CompositedTransformTarget, () => ({
    __proto__: dart.getMethods(basic.CompositedTransformTarget.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderLeaderLayer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CompositedTransformTarget, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.CompositedTransformTarget, () => ({
    __proto__: dart.getFields(basic.CompositedTransformTarget.__proto__),
    link: dart.finalFieldType(layer.LayerLink)
  }));
  var C141;
  var link$0 = dart.privateName(basic, "CompositedTransformFollower.link");
  var showWhenUnlinked$ = dart.privateName(basic, "CompositedTransformFollower.showWhenUnlinked");
  var offset$1 = dart.privateName(basic, "CompositedTransformFollower.offset");
  basic.CompositedTransformFollower = class CompositedTransformFollower extends framework.SingleChildRenderObjectWidget {
    get link() {
      return this[link$0];
    }
    set link(value) {
      super.link = value;
    }
    get showWhenUnlinked() {
      return this[showWhenUnlinked$];
    }
    set showWhenUnlinked(value) {
      super.showWhenUnlinked = value;
    }
    get offset() {
      return this[offset$1];
    }
    set offset(value) {
      super.offset = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderFollowerLayer.new({link: this.link, showWhenUnlinked: this.showWhenUnlinked, offset: this.offset});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderFollowerLayer._check(renderObject);
      t15 = renderObject;
      t15.link = this.link;
      t15.showWhenUnlinked = this.showWhenUnlinked;
      t15.offset = this.offset;
      t15;
    }
  };
  (basic.CompositedTransformFollower.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let link = opts && 'link' in opts ? opts.link : null;
    let showWhenUnlinked = opts && 'showWhenUnlinked' in opts ? opts.showWhenUnlinked : true;
    let offset = opts && 'offset' in opts ? opts.offset : C141 || CT.C141;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[link$0] = link;
    this[showWhenUnlinked$] = showWhenUnlinked;
    this[offset$1] = offset;
    if (!(link != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1352, 15, "link != null");
    if (!(showWhenUnlinked != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1353, 15, "showWhenUnlinked != null");
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1354, 15, "offset != null");
    basic.CompositedTransformFollower.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CompositedTransformFollower.prototype;
  dart.addTypeTests(basic.CompositedTransformFollower);
  dart.setMethodSignature(basic.CompositedTransformFollower, () => ({
    __proto__: dart.getMethods(basic.CompositedTransformFollower.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFollowerLayer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CompositedTransformFollower, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.CompositedTransformFollower, () => ({
    __proto__: dart.getFields(basic.CompositedTransformFollower.__proto__),
    link: dart.finalFieldType(layer.LayerLink),
    showWhenUnlinked: dart.finalFieldType(core.bool),
    offset: dart.finalFieldType(ui.Offset)
  }));
  var _name$10 = dart.privateName(box_fit, "_name");
  var C142;
  var fit$ = dart.privateName(basic, "FittedBox.fit");
  var alignment$1 = dart.privateName(basic, "FittedBox.alignment");
  basic.FittedBox = class FittedBox extends framework.SingleChildRenderObjectWidget {
    get fit() {
      return this[fit$];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderFittedBox.new({fit: this.fit, alignment: this.alignment, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderFittedBox._check(renderObject);
      t15 = renderObject;
      t15.fit = this.fit;
      t15.alignment = this.alignment;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
    }
  };
  (basic.FittedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let fit = opts && 'fit' in opts ? opts.fit : C142 || CT.C142;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[fit$] = fit;
    this[alignment$1] = alignment;
    if (!(fit != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1414, 15, "fit != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1415, 15, "alignment != null");
    basic.FittedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FittedBox.prototype;
  dart.addTypeTests(basic.FittedBox);
  dart.setMethodSignature(basic.FittedBox, () => ({
    __proto__: dart.getMethods(basic.FittedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFittedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FittedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.FittedBox, () => ({
    __proto__: dart.getFields(basic.FittedBox.__proto__),
    fit: dart.finalFieldType(box_fit.BoxFit),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry)
  }));
  var translation$ = dart.privateName(basic, "FractionalTranslation.translation");
  var transformHitTests$0 = dart.privateName(basic, "FractionalTranslation.transformHitTests");
  basic.FractionalTranslation = class FractionalTranslation extends framework.SingleChildRenderObjectWidget {
    get translation() {
      return this[translation$];
    }
    set translation(value) {
      super.translation = value;
    }
    get transformHitTests() {
      return this[transformHitTests$0];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderFractionalTranslation.new({translation: this.translation, transformHitTests: this.transformHitTests});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderFractionalTranslation._check(renderObject);
      t15 = renderObject;
      t15.translation = this.translation;
      t15.transformHitTests = this.transformHitTests;
      t15;
    }
  };
  (basic.FractionalTranslation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let translation = opts && 'translation' in opts ? opts.translation : null;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[translation$] = translation;
    this[transformHitTests$0] = transformHitTests;
    if (!(translation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1488, 15, "translation != null");
    basic.FractionalTranslation.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FractionalTranslation.prototype;
  dart.addTypeTests(basic.FractionalTranslation);
  dart.setMethodSignature(basic.FractionalTranslation, () => ({
    __proto__: dart.getMethods(basic.FractionalTranslation.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderFractionalTranslation, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FractionalTranslation, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.FractionalTranslation, () => ({
    __proto__: dart.getFields(basic.FractionalTranslation.__proto__),
    translation: dart.finalFieldType(ui.Offset),
    transformHitTests: dart.finalFieldType(core.bool)
  }));
  var quarterTurns$ = dart.privateName(basic, "RotatedBox.quarterTurns");
  basic.RotatedBox = class RotatedBox extends framework.SingleChildRenderObjectWidget {
    get quarterTurns() {
      return this[quarterTurns$];
    }
    set quarterTurns(value) {
      super.quarterTurns = value;
    }
    createRenderObject(context) {
      return new rotated_box.RenderRotatedBox.new({quarterTurns: this.quarterTurns});
    }
    updateRenderObject(context, renderObject) {
      rotated_box.RenderRotatedBox._check(renderObject);
      renderObject.quarterTurns = this.quarterTurns;
    }
  };
  (basic.RotatedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let quarterTurns = opts && 'quarterTurns' in opts ? opts.quarterTurns : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[quarterTurns$] = quarterTurns;
    if (!(quarterTurns != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1549, 15, "quarterTurns != null");
    basic.RotatedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RotatedBox.prototype;
  dart.addTypeTests(basic.RotatedBox);
  dart.setMethodSignature(basic.RotatedBox, () => ({
    __proto__: dart.getMethods(basic.RotatedBox.__proto__),
    createRenderObject: dart.fnType(rotated_box.RenderRotatedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RotatedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.RotatedBox, () => ({
    __proto__: dart.getFields(basic.RotatedBox.__proto__),
    quarterTurns: dart.finalFieldType(core.int)
  }));
  var padding$ = dart.privateName(basic, "Padding.padding");
  basic.Padding = class Padding extends framework.SingleChildRenderObjectWidget {
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderPadding.new({padding: this.padding, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderPadding._check(renderObject);
      t15 = renderObject;
      t15.padding = this.padding;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding));
    }
  };
  (basic.Padding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$] = padding;
    if (!(padding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1622, 15, "padding != null");
    basic.Padding.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Padding.prototype;
  dart.addTypeTests(basic.Padding);
  dart.setMethodSignature(basic.Padding, () => ({
    __proto__: dart.getMethods(basic.Padding.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderPadding, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Padding, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Padding, () => ({
    __proto__: dart.getFields(basic.Padding.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var alignment$2 = dart.privateName(basic, "Align.alignment");
  var widthFactor$ = dart.privateName(basic, "Align.widthFactor");
  var heightFactor$ = dart.privateName(basic, "Align.heightFactor");
  basic.Align = class Align extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get widthFactor() {
      return this[widthFactor$];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderPositionedBox.new({alignment: this.alignment, widthFactor: this.widthFactor, heightFactor: this.heightFactor, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderPositionedBox._check(renderObject);
      t15 = renderObject;
      t15.alignment = this.alignment;
      t15.widthFactor = this.widthFactor;
      t15.heightFactor = this.heightFactor;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("widthFactor", this.widthFactor, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("heightFactor", this.heightFactor, {defaultValue: null}));
    }
  };
  (basic.Align.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$2] = alignment;
    this[widthFactor$] = widthFactor;
    this[heightFactor$] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1788, 15, "alignment != null");
    if (!(widthFactor == null || dart.notNull(widthFactor) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1789, 15, "widthFactor == null || widthFactor >= 0.0");
    if (!(heightFactor == null || dart.notNull(heightFactor) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1790, 15, "heightFactor == null || heightFactor >= 0.0");
    basic.Align.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Align.prototype;
  dart.addTypeTests(basic.Align);
  dart.setMethodSignature(basic.Align, () => ({
    __proto__: dart.getMethods(basic.Align.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderPositionedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Align, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Align, () => ({
    __proto__: dart.getFields(basic.Align.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    widthFactor: dart.finalFieldType(core.double),
    heightFactor: dart.finalFieldType(core.double)
  }));
  basic.Center = class Center extends basic.Align {};
  (basic.Center.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Center.__proto__.new.call(this, {key: key, widthFactor: widthFactor, heightFactor: heightFactor, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Center.prototype;
  dart.addTypeTests(basic.Center);
  dart.setLibraryUri(basic.Center, "package:flutter/src/widgets/basic.dart");
  var delegate$ = dart.privateName(basic, "CustomSingleChildLayout.delegate");
  basic.CustomSingleChildLayout = class CustomSingleChildLayout extends framework.SingleChildRenderObjectWidget {
    get delegate() {
      return this[delegate$];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderCustomSingleChildLayoutBox.new({delegate: this.delegate});
    }
    updateRenderObject(context, renderObject) {
      shifted_box.RenderCustomSingleChildLayoutBox._check(renderObject);
      renderObject.delegate = this.delegate;
    }
  };
  (basic.CustomSingleChildLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1898, 15, "delegate != null");
    basic.CustomSingleChildLayout.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomSingleChildLayout.prototype;
  dart.addTypeTests(basic.CustomSingleChildLayout);
  dart.setMethodSignature(basic.CustomSingleChildLayout, () => ({
    __proto__: dart.getMethods(basic.CustomSingleChildLayout.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderCustomSingleChildLayoutBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomSingleChildLayout, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.CustomSingleChildLayout, () => ({
    __proto__: dart.getFields(basic.CustomSingleChildLayout.__proto__),
    delegate: dart.finalFieldType(shifted_box.SingleChildLayoutDelegate)
  }));
  var id$ = dart.privateName(basic, "LayoutId.id");
  basic.LayoutId = class LayoutId extends framework.ParentDataWidget$(custom_layout.MultiChildLayoutParentData) {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    applyParentData(renderObject) {
      if (!custom_layout.MultiChildLayoutParentData.is(renderObject.parentData)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1940, 12, "renderObject.parentData is MultiChildLayoutParentData");
      let parentData = custom_layout.MultiChildLayoutParentData.as(renderObject.parentData);
      if (!dart.equals(parentData.id, this.id)) {
        parentData.id = this.id;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.CustomMultiChildLayout);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfObject()).new("id", this.id));
    }
  };
  (basic.LayoutId.new = function(opts) {
    let t15;
    let key = opts && 'key' in opts ? opts.key : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[id$] = id;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1928, 15, "child != null");
    if (!(id != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1929, 15, "id != null");
    basic.LayoutId.__proto__.new.call(this, {key: (t15 = key, t15 == null ? new (ValueKeyOfObject()).new(id) : t15), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.LayoutId.prototype;
  dart.addTypeTests(basic.LayoutId);
  dart.setMethodSignature(basic.LayoutId, () => ({
    __proto__: dart.getMethods(basic.LayoutId.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.LayoutId, () => ({
    __proto__: dart.getGetters(basic.LayoutId.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.LayoutId, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.LayoutId, () => ({
    __proto__: dart.getFields(basic.LayoutId.__proto__),
    id: dart.finalFieldType(core.Object)
  }));
  var delegate$0 = dart.privateName(basic, "CustomMultiChildLayout.delegate");
  basic.CustomMultiChildLayout = class CustomMultiChildLayout extends framework.MultiChildRenderObjectWidget {
    get delegate() {
      return this[delegate$0];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createRenderObject(context) {
      return new custom_layout.RenderCustomMultiChildLayoutBox.new({delegate: this.delegate});
    }
    updateRenderObject(context, renderObject) {
      custom_layout.RenderCustomMultiChildLayoutBox._check(renderObject);
      renderObject.delegate = this.delegate;
    }
  };
  (basic.CustomMultiChildLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$0] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 1993, 15, "delegate != null");
    basic.CustomMultiChildLayout.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.CustomMultiChildLayout.prototype;
  dart.addTypeTests(basic.CustomMultiChildLayout);
  dart.setMethodSignature(basic.CustomMultiChildLayout, () => ({
    __proto__: dart.getMethods(basic.CustomMultiChildLayout.__proto__),
    createRenderObject: dart.fnType(custom_layout.RenderCustomMultiChildLayoutBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.CustomMultiChildLayout, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.CustomMultiChildLayout, () => ({
    __proto__: dart.getFields(basic.CustomMultiChildLayout.__proto__),
    delegate: dart.finalFieldType(custom_layout.MultiChildLayoutDelegate)
  }));
  var _additionalConstraints = dart.privateName(basic, "_additionalConstraints");
  var width$ = dart.privateName(basic, "SizedBox.width");
  var height$ = dart.privateName(basic, "SizedBox.height");
  basic.SizedBox = class SizedBox extends framework.SingleChildRenderObjectWidget {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderConstrainedBox.new({additionalConstraints: this[_additionalConstraints]});
    }
    get [_additionalConstraints]() {
      return new box$.BoxConstraints.tightFor({width: this.width, height: this.height});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderConstrainedBox._check(renderObject);
      renderObject.additionalConstraints = this[_additionalConstraints];
    }
    toStringShort() {
      let type = null;
      if (this.width === 1 / 0 && this.height === 1 / 0) {
        type = dart.str(object.objectRuntimeType(this, "SizedBox")) + ".expand";
      } else if (this.width === 0.0 && this.height === 0.0) {
        type = dart.str(object.objectRuntimeType(this, "SizedBox")) + ".shrink";
      } else {
        type = object.objectRuntimeType(this, "SizedBox");
      }
      return this.key == null ? type : dart.str(type) + "-" + dart.str(this.key);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let level = null;
      if (this.width === 1 / 0 && this.height === 1 / 0 || this.width === 0.0 && this.height === 0.0) {
        level = diagnostics$.DiagnosticLevel.hidden;
      } else {
        level = diagnostics$.DiagnosticLevel.info;
      }
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null, level: level}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null, level: level}));
    }
  };
  (basic.SizedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = width;
    this[height$] = height;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.expand = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = 1 / 0;
    this[height$] = 1 / 0;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.shrink = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = 0.0;
    this[height$] = 0.0;
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  (basic.SizedBox.fromSize = function(opts) {
    let t15, t15$;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = (t15 = size, t15 == null ? null : t15.width);
    this[height$] = (t15$ = size, t15$ == null ? null : t15$.height);
    basic.SizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedBox.prototype;
  dart.addTypeTests(basic.SizedBox);
  dart.setMethodSignature(basic.SizedBox, () => ({
    __proto__: dart.getMethods(basic.SizedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderConstrainedBox, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.SizedBox, () => ({
    __proto__: dart.getGetters(basic.SizedBox.__proto__),
    [_additionalConstraints]: box$.BoxConstraints
  }));
  dart.setLibraryUri(basic.SizedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.SizedBox, () => ({
    __proto__: dart.getFields(basic.SizedBox.__proto__),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double)
  }));
  var constraints$ = dart.privateName(basic, "ConstrainedBox.constraints");
  basic.ConstrainedBox = class ConstrainedBox extends framework.SingleChildRenderObjectWidget {
    get constraints() {
      return this[constraints$];
    }
    set constraints(value) {
      super.constraints = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderConstrainedBox.new({additionalConstraints: this.constraints});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderConstrainedBox._check(renderObject);
      renderObject.additionalConstraints = this.constraints;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {showName: false}));
    }
  };
  (basic.ConstrainedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[constraints$] = constraints;
    if (!(constraints != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2172, 15, "constraints != null");
    if (!dart.test(constraints.debugAssertIsValid())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2173, 15, "constraints.debugAssertIsValid()");
    basic.ConstrainedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ConstrainedBox.prototype;
  dart.addTypeTests(basic.ConstrainedBox);
  dart.setMethodSignature(basic.ConstrainedBox, () => ({
    __proto__: dart.getMethods(basic.ConstrainedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderConstrainedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ConstrainedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ConstrainedBox, () => ({
    __proto__: dart.getFields(basic.ConstrainedBox.__proto__),
    constraints: dart.finalFieldType(box$.BoxConstraints)
  }));
  var textDirection$0 = dart.privateName(basic, "UnconstrainedBox.textDirection");
  var alignment$3 = dart.privateName(basic, "UnconstrainedBox.alignment");
  var constrainedAxis$ = dart.privateName(basic, "UnconstrainedBox.constrainedAxis");
  basic.UnconstrainedBox = class UnconstrainedBox extends framework.SingleChildRenderObjectWidget {
    get textDirection() {
      return this[textDirection$0];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get alignment() {
      return this[alignment$3];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get constrainedAxis() {
      return this[constrainedAxis$];
    }
    set constrainedAxis(value) {
      super.constrainedAxis = value;
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      shifted_box.RenderUnconstrainedBox._check(renderObject);
      t15 = renderObject;
      t15.textDirection = (t16 = this.textDirection, t16 == null ? basic.Directionality.of(context) : t16);
      t15.alignment = this.alignment;
      t15.constrainedAxis = this.constrainedAxis;
      t15;
    }
    createRenderObject(context) {
      let t15;
      return new shifted_box.RenderUnconstrainedBox.new({textDirection: (t15 = this.textDirection, t15 == null ? basic.Directionality.of(context) : t15), alignment: this.alignment, constrainedAxis: this.constrainedAxis});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (EnumPropertyOfAxis()).new("constrainedAxis", this.constrainedAxis, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
    }
  };
  (basic.UnconstrainedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let constrainedAxis = opts && 'constrainedAxis' in opts ? opts.constrainedAxis : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textDirection$0] = textDirection;
    this[alignment$3] = alignment;
    this[constrainedAxis$] = constrainedAxis;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2230, 15, "alignment != null");
    basic.UnconstrainedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.UnconstrainedBox.prototype;
  dart.addTypeTests(basic.UnconstrainedBox);
  dart.setMethodSignature(basic.UnconstrainedBox, () => ({
    __proto__: dart.getMethods(basic.UnconstrainedBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderUnconstrainedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.UnconstrainedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.UnconstrainedBox, () => ({
    __proto__: dart.getFields(basic.UnconstrainedBox.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    constrainedAxis: dart.finalFieldType(basic_types$.Axis)
  }));
  var widthFactor$0 = dart.privateName(basic, "FractionallySizedBox.widthFactor");
  var heightFactor$0 = dart.privateName(basic, "FractionallySizedBox.heightFactor");
  var alignment$4 = dart.privateName(basic, "FractionallySizedBox.alignment");
  basic.FractionallySizedBox = class FractionallySizedBox extends framework.SingleChildRenderObjectWidget {
    get widthFactor() {
      return this[widthFactor$0];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$0];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    get alignment() {
      return this[alignment$4];
    }
    set alignment(value) {
      super.alignment = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderFractionallySizedOverflowBox.new({alignment: this.alignment, widthFactor: this.widthFactor, heightFactor: this.heightFactor, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderFractionallySizedOverflowBox._check(renderObject);
      t15 = renderObject;
      t15.alignment = this.alignment;
      t15.widthFactor = this.widthFactor;
      t15.heightFactor = this.heightFactor;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("widthFactor", this.widthFactor, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("heightFactor", this.heightFactor, {defaultValue: null}));
    }
  };
  (basic.FractionallySizedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$4] = alignment;
    this[widthFactor$0] = widthFactor;
    this[heightFactor$0] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2305, 15, "alignment != null");
    if (!(widthFactor == null || dart.notNull(widthFactor) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2306, 15, "widthFactor == null || widthFactor >= 0.0");
    if (!(heightFactor == null || dart.notNull(heightFactor) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2307, 15, "heightFactor == null || heightFactor >= 0.0");
    basic.FractionallySizedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.FractionallySizedBox.prototype;
  dart.addTypeTests(basic.FractionallySizedBox);
  dart.setMethodSignature(basic.FractionallySizedBox, () => ({
    __proto__: dart.getMethods(basic.FractionallySizedBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderFractionallySizedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.FractionallySizedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.FractionallySizedBox, () => ({
    __proto__: dart.getFields(basic.FractionallySizedBox.__proto__),
    widthFactor: dart.finalFieldType(core.double),
    heightFactor: dart.finalFieldType(core.double),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry)
  }));
  var maxWidth$ = dart.privateName(basic, "LimitedBox.maxWidth");
  var maxHeight$ = dart.privateName(basic, "LimitedBox.maxHeight");
  basic.LimitedBox = class LimitedBox extends framework.SingleChildRenderObjectWidget {
    get maxWidth() {
      return this[maxWidth$];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get maxHeight() {
      return this[maxHeight$];
    }
    set maxHeight(value) {
      super.maxHeight = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderLimitedBox.new({maxWidth: this.maxWidth, maxHeight: this.maxHeight});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderLimitedBox._check(renderObject);
      t15 = renderObject;
      t15.maxWidth = this.maxWidth;
      t15.maxHeight = this.maxHeight;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("maxWidth", this.maxWidth, {defaultValue: 1 / 0}));
      properties.add(new diagnostics$.DoubleProperty.new("maxHeight", this.maxHeight, {defaultValue: 1 / 0}));
    }
  };
  (basic.LimitedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[maxWidth$] = maxWidth;
    this[maxHeight$] = maxHeight;
    if (!(maxWidth != null && dart.notNull(maxWidth) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2411, 15, "maxWidth != null && maxWidth >= 0.0");
    if (!(maxHeight != null && dart.notNull(maxHeight) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2412, 15, "maxHeight != null && maxHeight >= 0.0");
    basic.LimitedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.LimitedBox.prototype;
  dart.addTypeTests(basic.LimitedBox);
  dart.setMethodSignature(basic.LimitedBox, () => ({
    __proto__: dart.getMethods(basic.LimitedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderLimitedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.LimitedBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.LimitedBox, () => ({
    __proto__: dart.getFields(basic.LimitedBox.__proto__),
    maxWidth: dart.finalFieldType(core.double),
    maxHeight: dart.finalFieldType(core.double)
  }));
  var alignment$5 = dart.privateName(basic, "OverflowBox.alignment");
  var minWidth$ = dart.privateName(basic, "OverflowBox.minWidth");
  var maxWidth$0 = dart.privateName(basic, "OverflowBox.maxWidth");
  var minHeight$ = dart.privateName(basic, "OverflowBox.minHeight");
  var maxHeight$0 = dart.privateName(basic, "OverflowBox.maxHeight");
  basic.OverflowBox = class OverflowBox extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$5];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get minWidth() {
      return this[minWidth$];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get maxWidth() {
      return this[maxWidth$0];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get minHeight() {
      return this[minHeight$];
    }
    set minHeight(value) {
      super.minHeight = value;
    }
    get maxHeight() {
      return this[maxHeight$0];
    }
    set maxHeight(value) {
      super.maxHeight = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderConstrainedOverflowBox.new({alignment: this.alignment, minWidth: this.minWidth, maxWidth: this.maxWidth, minHeight: this.minHeight, maxHeight: this.maxHeight, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderConstrainedOverflowBox._check(renderObject);
      t15 = renderObject;
      t15.alignment = this.alignment;
      t15.minWidth = this.minWidth;
      t15.maxWidth = this.maxWidth;
      t15.minHeight = this.minHeight;
      t15.maxHeight = this.maxHeight;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("maxWidth", this.maxWidth, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("minHeight", this.minHeight, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("maxHeight", this.maxHeight, {defaultValue: null}));
    }
  };
  (basic.OverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let minHeight = opts && 'minHeight' in opts ? opts.minHeight : null;
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$5] = alignment;
    this[minWidth$] = minWidth;
    this[maxWidth$0] = maxWidth;
    this[minHeight$] = minHeight;
    this[maxHeight$0] = maxHeight;
    basic.OverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.OverflowBox.prototype;
  dart.addTypeTests(basic.OverflowBox);
  dart.setMethodSignature(basic.OverflowBox, () => ({
    __proto__: dart.getMethods(basic.OverflowBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderConstrainedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.OverflowBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.OverflowBox, () => ({
    __proto__: dart.getFields(basic.OverflowBox.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    minWidth: dart.finalFieldType(core.double),
    maxWidth: dart.finalFieldType(core.double),
    minHeight: dart.finalFieldType(core.double),
    maxHeight: dart.finalFieldType(core.double)
  }));
  var alignment$6 = dart.privateName(basic, "SizedOverflowBox.alignment");
  var size$0 = dart.privateName(basic, "SizedOverflowBox.size");
  basic.SizedOverflowBox = class SizedOverflowBox extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$6];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get size() {
      return this[size$0];
    }
    set size(value) {
      super.size = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderSizedOverflowBox.new({alignment: this.alignment, requestedSize: this.size, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderSizedOverflowBox._check(renderObject);
      t15 = renderObject;
      t15.alignment = this.alignment;
      t15.requestedSize = this.size;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (DiagnosticsPropertyOfSize()).new("size", this.size, {defaultValue: null}));
    }
  };
  (basic.SizedOverflowBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[size$0] = size;
    this[alignment$6] = alignment;
    if (!(size != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2565, 15, "size != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2566, 15, "alignment != null");
    basic.SizedOverflowBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SizedOverflowBox.prototype;
  dart.addTypeTests(basic.SizedOverflowBox);
  dart.setMethodSignature(basic.SizedOverflowBox, () => ({
    __proto__: dart.getMethods(basic.SizedOverflowBox.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderSizedOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SizedOverflowBox, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.SizedOverflowBox, () => ({
    __proto__: dart.getFields(basic.SizedOverflowBox.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    size: dart.finalFieldType(ui.Size)
  }));
  var offstage$ = dart.privateName(basic, "Offstage.offstage");
  basic.Offstage = class Offstage extends framework.SingleChildRenderObjectWidget {
    get offstage() {
      return this[offstage$];
    }
    set offstage(value) {
      super.offstage = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderOffstage.new({offstage: this.offstage});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderOffstage._check(renderObject);
      renderObject.offstage = this.offstage;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("offstage", this.offstage));
    }
    createElement() {
      return new basic._OffstageElement.new(this);
    }
  };
  (basic.Offstage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offstage = opts && 'offstage' in opts ? opts.offstage : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[offstage$] = offstage;
    if (!(offstage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2641, 14, "offstage != null");
    basic.Offstage.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Offstage.prototype;
  dart.addTypeTests(basic.Offstage);
  dart.setMethodSignature(basic.Offstage, () => ({
    __proto__: dart.getMethods(basic.Offstage.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderOffstage, [framework.BuildContext]),
    createElement: dart.fnType(basic._OffstageElement, [])
  }));
  dart.setLibraryUri(basic.Offstage, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Offstage, () => ({
    __proto__: dart.getFields(basic.Offstage.__proto__),
    offstage: dart.finalFieldType(core.bool)
  }));
  basic._OffstageElement = class _OffstageElement extends framework.SingleChildRenderObjectElement {
    get widget() {
      return basic.Offstage.as(super.widget);
    }
    debugVisitOnstageChildren(visitor) {
      if (!dart.test(this.widget.offstage)) super.debugVisitOnstageChildren(visitor);
    }
  };
  (basic._OffstageElement.new = function(widget) {
    basic._OffstageElement.__proto__.new.call(this, widget);
    ;
  }).prototype = basic._OffstageElement.prototype;
  dart.addTypeTests(basic._OffstageElement);
  dart.setGetterSignature(basic._OffstageElement, () => ({
    __proto__: dart.getGetters(basic._OffstageElement.__proto__),
    widget: basic.Offstage
  }));
  dart.setLibraryUri(basic._OffstageElement, "package:flutter/src/widgets/basic.dart");
  var aspectRatio$ = dart.privateName(basic, "AspectRatio.aspectRatio");
  basic.AspectRatio = class AspectRatio extends framework.SingleChildRenderObjectWidget {
    get aspectRatio() {
      return this[aspectRatio$];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderAspectRatio.new({aspectRatio: this.aspectRatio});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderAspectRatio._check(renderObject);
      renderObject.aspectRatio = this.aspectRatio;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("aspectRatio", this.aspectRatio));
    }
  };
  (basic.AspectRatio.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[aspectRatio$] = aspectRatio;
    if (!(aspectRatio != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2736, 15, "aspectRatio != null");
    basic.AspectRatio.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.AspectRatio.prototype;
  dart.addTypeTests(basic.AspectRatio);
  dart.setMethodSignature(basic.AspectRatio, () => ({
    __proto__: dart.getMethods(basic.AspectRatio.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAspectRatio, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.AspectRatio, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.AspectRatio, () => ({
    __proto__: dart.getFields(basic.AspectRatio.__proto__),
    aspectRatio: dart.finalFieldType(core.double)
  }));
  var _stepWidth = dart.privateName(basic, "_stepWidth");
  var _stepHeight = dart.privateName(basic, "_stepHeight");
  var stepWidth$ = dart.privateName(basic, "IntrinsicWidth.stepWidth");
  var stepHeight$ = dart.privateName(basic, "IntrinsicWidth.stepHeight");
  basic.IntrinsicWidth = class IntrinsicWidth extends framework.SingleChildRenderObjectWidget {
    get stepWidth() {
      return this[stepWidth$];
    }
    set stepWidth(value) {
      super.stepWidth = value;
    }
    get stepHeight() {
      return this[stepHeight$];
    }
    set stepHeight(value) {
      super.stepHeight = value;
    }
    get [_stepWidth]() {
      return this.stepWidth === 0.0 ? null : this.stepWidth;
    }
    get [_stepHeight]() {
      return this.stepHeight === 0.0 ? null : this.stepHeight;
    }
    createRenderObject(context) {
      return new proxy_box.RenderIntrinsicWidth.new({stepWidth: this[_stepWidth], stepHeight: this[_stepHeight]});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderIntrinsicWidth._check(renderObject);
      t15 = renderObject;
      t15.stepWidth = this[_stepWidth];
      t15.stepHeight = this[_stepHeight];
      t15;
    }
  };
  (basic.IntrinsicWidth.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let stepWidth = opts && 'stepWidth' in opts ? opts.stepWidth : null;
    let stepHeight = opts && 'stepHeight' in opts ? opts.stepHeight : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[stepWidth$] = stepWidth;
    this[stepHeight$] = stepHeight;
    if (!(stepWidth == null || dart.notNull(stepWidth) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2784, 14, "stepWidth == null || stepWidth >= 0.0");
    if (!(stepHeight == null || dart.notNull(stepHeight) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2785, 14, "stepHeight == null || stepHeight >= 0.0");
    basic.IntrinsicWidth.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IntrinsicWidth.prototype;
  dart.addTypeTests(basic.IntrinsicWidth);
  dart.setMethodSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getMethods(basic.IntrinsicWidth.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIntrinsicWidth, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getGetters(basic.IntrinsicWidth.__proto__),
    [_stepWidth]: core.double,
    [_stepHeight]: core.double
  }));
  dart.setLibraryUri(basic.IntrinsicWidth, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.IntrinsicWidth, () => ({
    __proto__: dart.getFields(basic.IntrinsicWidth.__proto__),
    stepWidth: dart.finalFieldType(core.double),
    stepHeight: dart.finalFieldType(core.double)
  }));
  basic.IntrinsicHeight = class IntrinsicHeight extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new proxy_box.RenderIntrinsicHeight.new();
    }
  };
  (basic.IntrinsicHeight.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.IntrinsicHeight.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IntrinsicHeight.prototype;
  dart.addTypeTests(basic.IntrinsicHeight);
  dart.setMethodSignature(basic.IntrinsicHeight, () => ({
    __proto__: dart.getMethods(basic.IntrinsicHeight.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIntrinsicHeight, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IntrinsicHeight, "package:flutter/src/widgets/basic.dart");
  var baseline$ = dart.privateName(basic, "Baseline.baseline");
  var baselineType$ = dart.privateName(basic, "Baseline.baselineType");
  basic.Baseline = class Baseline extends framework.SingleChildRenderObjectWidget {
    get baseline() {
      return this[baseline$];
    }
    set baseline(value) {
      super.baseline = value;
    }
    get baselineType() {
      return this[baselineType$];
    }
    set baselineType(value) {
      super.baselineType = value;
    }
    createRenderObject(context) {
      return new shifted_box.RenderBaseline.new({baseline: this.baseline, baselineType: this.baselineType});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      shifted_box.RenderBaseline._check(renderObject);
      t15 = renderObject;
      t15.baseline = this.baseline;
      t15.baselineType = this.baselineType;
      t15;
    }
  };
  (basic.Baseline.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let baseline = opts && 'baseline' in opts ? opts.baseline : null;
    let baselineType = opts && 'baselineType' in opts ? opts.baselineType : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[baseline$] = baseline;
    this[baselineType$] = baselineType;
    if (!(baseline != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2872, 15, "baseline != null");
    if (!(baselineType != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2873, 15, "baselineType != null");
    basic.Baseline.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Baseline.prototype;
  dart.addTypeTests(basic.Baseline);
  dart.setMethodSignature(basic.Baseline, () => ({
    __proto__: dart.getMethods(basic.Baseline.__proto__),
    createRenderObject: dart.fnType(shifted_box.RenderBaseline, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Baseline, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Baseline, () => ({
    __proto__: dart.getFields(basic.Baseline.__proto__),
    baseline: dart.finalFieldType(core.double),
    baselineType: dart.finalFieldType(ui.TextBaseline)
  }));
  basic.SliverToBoxAdapter = class SliverToBoxAdapter extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver.RenderSliverToBoxAdapter.new();
    }
  };
  (basic.SliverToBoxAdapter.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.SliverToBoxAdapter.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SliverToBoxAdapter.prototype;
  dart.addTypeTests(basic.SliverToBoxAdapter);
  dart.setMethodSignature(basic.SliverToBoxAdapter, () => ({
    __proto__: dart.getMethods(basic.SliverToBoxAdapter.__proto__),
    createRenderObject: dart.fnType(sliver.RenderSliverToBoxAdapter, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SliverToBoxAdapter, "package:flutter/src/widgets/basic.dart");
  var padding$0 = dart.privateName(basic, "SliverPadding.padding");
  basic.SliverPadding = class SliverPadding extends framework.SingleChildRenderObjectWidget {
    get padding() {
      return this[padding$0];
    }
    set padding(value) {
      super.padding = value;
    }
    createRenderObject(context) {
      return new sliver_padding.RenderSliverPadding.new({padding: this.padding, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      sliver_padding.RenderSliverPadding._check(renderObject);
      t15 = renderObject;
      t15.padding = this.padding;
      t15.textDirection = basic.Directionality.of(context);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding));
    }
  };
  (basic.SliverPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$0] = padding;
    if (!(padding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 2956, 15, "padding != null");
    basic.SliverPadding.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.SliverPadding.prototype;
  dart.addTypeTests(basic.SliverPadding);
  dart.setMethodSignature(basic.SliverPadding, () => ({
    __proto__: dart.getMethods(basic.SliverPadding.__proto__),
    createRenderObject: dart.fnType(sliver_padding.RenderSliverPadding, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.SliverPadding, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.SliverPadding, () => ({
    __proto__: dart.getFields(basic.SliverPadding.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var _getDirection = dart.privateName(basic, "_getDirection");
  var mainAxis$ = dart.privateName(basic, "ListBody.mainAxis");
  var reverse$ = dart.privateName(basic, "ListBody.reverse");
  basic.ListBody = class ListBody extends framework.MultiChildRenderObjectWidget {
    get mainAxis() {
      return this[mainAxis$];
    }
    set mainAxis(value) {
      super.mainAxis = value;
    }
    get reverse() {
      return this[reverse$];
    }
    set reverse(value) {
      super.reverse = value;
    }
    [_getDirection](context) {
      return basic.getAxisDirectionFromAxisReverseAndDirectionality(context, this.mainAxis, this.reverse);
    }
    createRenderObject(context) {
      return new list_body.RenderListBody.new({axisDirection: this[_getDirection](context)});
    }
    updateRenderObject(context, renderObject) {
      list_body.RenderListBody._check(renderObject);
      renderObject.axisDirection = this[_getDirection](context);
    }
  };
  (basic.ListBody.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxis = opts && 'mainAxis' in opts ? opts.mainAxis : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[mainAxis$] = mainAxis;
    this[reverse$] = reverse;
    if (!(mainAxis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3051, 15, "mainAxis != null");
    basic.ListBody.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ListBody.prototype;
  dart.addTypeTests(basic.ListBody);
  dart.setMethodSignature(basic.ListBody, () => ({
    __proto__: dart.getMethods(basic.ListBody.__proto__),
    [_getDirection]: dart.fnType(basic_types$.AxisDirection, [framework.BuildContext]),
    createRenderObject: dart.fnType(list_body.RenderListBody, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ListBody, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ListBody, () => ({
    __proto__: dart.getFields(basic.ListBody.__proto__),
    mainAxis: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool)
  }));
  var AlignmentDirectional_y = dart.privateName(alignment$, "AlignmentDirectional.y");
  var AlignmentDirectional_start = dart.privateName(alignment$, "AlignmentDirectional.start");
  var C143;
  var _name$11 = dart.privateName(stack, "_name");
  var C144;
  var C145;
  var alignment$7 = dart.privateName(basic, "Stack.alignment");
  var textDirection$1 = dart.privateName(basic, "Stack.textDirection");
  var fit$0 = dart.privateName(basic, "Stack.fit");
  var overflow$ = dart.privateName(basic, "Stack.overflow");
  basic.Stack = class Stack extends framework.MultiChildRenderObjectWidget {
    get alignment() {
      return this[alignment$7];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get textDirection() {
      return this[textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get fit() {
      return this[fit$0];
    }
    set fit(value) {
      super.fit = value;
    }
    get overflow() {
      return this[overflow$];
    }
    set overflow(value) {
      super.overflow = value;
    }
    createRenderObject(context) {
      let t15;
      return new stack.RenderStack.new({alignment: this.alignment, textDirection: (t15 = this.textDirection, t15 == null ? basic.Directionality.of(context) : t15), fit: this.fit, overflow: this.overflow});
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      stack.RenderStack._check(renderObject);
      t15 = renderObject;
      t15.alignment = this.alignment;
      t15.textDirection = (t16 = this.textDirection, t16 == null ? basic.Directionality.of(context) : t16);
      t15.fit = this.fit;
      t15.overflow = this.overflow;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfStackFit()).new("fit", this.fit));
      properties.add(new (EnumPropertyOfOverflow()).new("overflow", this.overflow));
    }
  };
  (basic.Stack.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C143 || CT.C143;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fit = opts && 'fit' in opts ? opts.fit : C144 || CT.C144;
    let overflow = opts && 'overflow' in opts ? opts.overflow : C145 || CT.C145;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$7] = alignment;
    this[textDirection$1] = textDirection;
    this[fit$0] = fit;
    this[overflow$] = overflow;
    basic.Stack.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Stack.prototype;
  dart.addTypeTests(basic.Stack);
  dart.setMethodSignature(basic.Stack, () => ({
    __proto__: dart.getMethods(basic.Stack.__proto__),
    createRenderObject: dart.fnType(stack.RenderStack, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Stack, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Stack, () => ({
    __proto__: dart.getFields(basic.Stack.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    textDirection: dart.finalFieldType(ui.TextDirection),
    fit: dart.finalFieldType(stack.StackFit),
    overflow: dart.finalFieldType(stack.Overflow)
  }));
  var index$ = dart.privateName(basic, "IndexedStack.index");
  basic.IndexedStack = class IndexedStack extends basic.Stack {
    get index() {
      return this[index$];
    }
    set index(value) {
      super.index = value;
    }
    createRenderObject(context) {
      let t15;
      return new stack.RenderIndexedStack.new({index: this.index, alignment: this.alignment, textDirection: (t15 = this.textDirection, t15 == null ? basic.Directionality.of(context) : t15)});
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      stack.RenderIndexedStack._check(renderObject);
      t15 = renderObject;
      t15.index = this.index;
      t15.alignment = this.alignment;
      t15.textDirection = (t16 = this.textDirection, t16 == null ? basic.Directionality.of(context) : t16);
      t15;
    }
  };
  (basic.IndexedStack.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C143 || CT.C143;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let sizing = opts && 'sizing' in opts ? opts.sizing : C144 || CT.C144;
    let index = opts && 'index' in opts ? opts.index : 0;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[index$] = index;
    basic.IndexedStack.__proto__.new.call(this, {key: key, alignment: alignment, textDirection: textDirection, fit: sizing, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IndexedStack.prototype;
  dart.addTypeTests(basic.IndexedStack);
  dart.setMethodSignature(basic.IndexedStack, () => ({
    __proto__: dart.getMethods(basic.IndexedStack.__proto__),
    createRenderObject: dart.fnType(stack.RenderIndexedStack, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IndexedStack, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.IndexedStack, () => ({
    __proto__: dart.getFields(basic.IndexedStack.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  var left$ = dart.privateName(basic, "Positioned.left");
  var top$ = dart.privateName(basic, "Positioned.top");
  var right$ = dart.privateName(basic, "Positioned.right");
  var bottom$ = dart.privateName(basic, "Positioned.bottom");
  var width$0 = dart.privateName(basic, "Positioned.width");
  var height$0 = dart.privateName(basic, "Positioned.height");
  basic.Positioned = class Positioned extends framework.ParentDataWidget$(stack.StackParentData) {
    get left() {
      return this[left$];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    static directional(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let start = opts && 'start' in opts ? opts.start : null;
      let top = opts && 'top' in opts ? opts.top : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3468, 12, "textDirection != null");
      let left = null;
      let right = null;
      switch (textDirection) {
        case C20 || CT.C20:
        {
          left = end;
          right = start;
          break;
        }
        case C21 || CT.C21:
        {
          left = start;
          right = end;
          break;
        }
      }
      return new basic.Positioned.new({key: key, left: left, top: top, right: right, bottom: bottom, width: width, height: height, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    applyParentData(renderObject) {
      if (!stack.StackParentData.is(renderObject.parentData)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3549, 12, "renderObject.parentData is StackParentData");
      let parentData = stack.StackParentData.as(renderObject.parentData);
      let needsLayout = false;
      if (parentData.left != this.left) {
        parentData.left = this.left;
        needsLayout = true;
      }
      if (parentData.top != this.top) {
        parentData.top = this.top;
        needsLayout = true;
      }
      if (parentData.right != this.right) {
        parentData.right = this.right;
        needsLayout = true;
      }
      if (parentData.bottom != this.bottom) {
        parentData.bottom = this.bottom;
        needsLayout = true;
      }
      if (parentData.width != this.width) {
        parentData.width = this.width;
        needsLayout = true;
      }
      if (parentData.height != this.height) {
        parentData.height = this.height;
        needsLayout = true;
      }
      if (needsLayout) {
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.Stack);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("left", this.left, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("top", this.top, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("right", this.right, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("bottom", this.bottom, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
    }
  };
  (basic.Positioned.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let right = opts && 'right' in opts ? opts.right : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    this[width$0] = width;
    this[height$0] = height;
    if (!(left == null || right == null || width == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3389, 15, "left == null || right == null || width == null");
    if (!(top == null || bottom == null || height == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3390, 15, "top == null || bottom == null || height == null");
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fromRect = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = rect.left;
    this[top$] = rect.top;
    this[width$0] = rect.width;
    this[height$0] = rect.height;
    this[right$] = null;
    this[bottom$] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fromRelativeRect = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = rect.left;
    this[top$] = rect.top;
    this[right$] = rect.right;
    this[bottom$] = rect.bottom;
    this[width$0] = null;
    this[height$0] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  (basic.Positioned.fill = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : 0;
    let top = opts && 'top' in opts ? opts.top : 0;
    let right = opts && 'right' in opts ? opts.right : 0;
    let bottom = opts && 'bottom' in opts ? opts.bottom : 0;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$] = left;
    this[top$] = top;
    this[right$] = right;
    this[bottom$] = bottom;
    this[width$0] = null;
    this[height$0] = null;
    basic.Positioned.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Positioned.prototype;
  dart.addTypeTests(basic.Positioned);
  dart.setMethodSignature(basic.Positioned, () => ({
    __proto__: dart.getMethods(basic.Positioned.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.Positioned, () => ({
    __proto__: dart.getGetters(basic.Positioned.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.Positioned, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Positioned, () => ({
    __proto__: dart.getFields(basic.Positioned.__proto__),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double)
  }));
  var C148;
  var C149;
  var C150;
  var C151;
  var C152;
  var C153;
  var C154;
  var C155;
  var C147;
  var C146;
  var start$ = dart.privateName(basic, "PositionedDirectional.start");
  var top$0 = dart.privateName(basic, "PositionedDirectional.top");
  var end$ = dart.privateName(basic, "PositionedDirectional.end");
  var bottom$0 = dart.privateName(basic, "PositionedDirectional.bottom");
  var width$1 = dart.privateName(basic, "PositionedDirectional.width");
  var height$1 = dart.privateName(basic, "PositionedDirectional.height");
  var child$1 = dart.privateName(basic, "PositionedDirectional.child");
  basic.PositionedDirectional = class PositionedDirectional extends framework.StatelessWidget {
    get start() {
      return this[start$];
    }
    set start(value) {
      super.start = value;
    }
    get top() {
      return this[top$0];
    }
    set top(value) {
      super.top = value;
    }
    get end() {
      return this[end$];
    }
    set end(value) {
      super.end = value;
    }
    get bottom() {
      return this[bottom$0];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return basic.Positioned.directional({textDirection: basic.Directionality.of(context), start: this.start, top: this.top, end: this.end, bottom: this.bottom, width: this.width, height: this.height, child: this.child, $creationLocationd_0dea112b090073317d4: C146 || CT.C146});
    }
  };
  (basic.PositionedDirectional.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let start = opts && 'start' in opts ? opts.start : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let end = opts && 'end' in opts ? opts.end : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[start$] = start;
    this[top$0] = top;
    this[end$] = end;
    this[bottom$0] = bottom;
    this[width$1] = width;
    this[height$1] = height;
    this[child$1] = child;
    basic.PositionedDirectional.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.PositionedDirectional.prototype;
  dart.addTypeTests(basic.PositionedDirectional);
  dart.setMethodSignature(basic.PositionedDirectional, () => ({
    __proto__: dart.getMethods(basic.PositionedDirectional.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.PositionedDirectional, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.PositionedDirectional, () => ({
    __proto__: dart.getFields(basic.PositionedDirectional.__proto__),
    start: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    end: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _name$12 = dart.privateName(flex$, "_name");
  var C156;
  var C157;
  var C158;
  var C159;
  var _needTextDirection = dart.privateName(basic, "_needTextDirection");
  var direction$2 = dart.privateName(basic, "Flex.direction");
  var mainAxisAlignment$ = dart.privateName(basic, "Flex.mainAxisAlignment");
  var mainAxisSize$ = dart.privateName(basic, "Flex.mainAxisSize");
  var crossAxisAlignment$ = dart.privateName(basic, "Flex.crossAxisAlignment");
  var textDirection$2 = dart.privateName(basic, "Flex.textDirection");
  var verticalDirection$ = dart.privateName(basic, "Flex.verticalDirection");
  var textBaseline$ = dart.privateName(basic, "Flex.textBaseline");
  basic.Flex = class Flex extends framework.MultiChildRenderObjectWidget {
    get direction() {
      return this[direction$2];
    }
    set direction(value) {
      super.direction = value;
    }
    get mainAxisAlignment() {
      return this[mainAxisAlignment$];
    }
    set mainAxisAlignment(value) {
      super.mainAxisAlignment = value;
    }
    get mainAxisSize() {
      return this[mainAxisSize$];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get crossAxisAlignment() {
      return this[crossAxisAlignment$];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get textDirection() {
      return this[textDirection$2];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get verticalDirection() {
      return this[verticalDirection$];
    }
    set verticalDirection(value) {
      super.verticalDirection = value;
    }
    get textBaseline() {
      return this[textBaseline$];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get [_needTextDirection]() {
      if (!(this.direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3899, 12, "direction != null");
      switch (this.direction) {
        case C78 || CT.C78:
        {
          return true;
        }
        case C77 || CT.C77:
        {
          if (!(this.crossAxisAlignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3904, 16, "crossAxisAlignment != null");
          return dart.equals(this.crossAxisAlignment, flex$.CrossAxisAlignment.start) || dart.equals(this.crossAxisAlignment, flex$.CrossAxisAlignment.end);
        }
      }
      return null;
    }
    getEffectiveTextDirection(context) {
      let t15;
      t15 = this.textDirection;
      return t15 == null ? dart.test(this[_needTextDirection]) ? basic.Directionality.of(context) : null : t15;
    }
    createRenderObject(context) {
      return new flex$.RenderFlex.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: this.getEffectiveTextDirection(context), verticalDirection: this.verticalDirection, textBaseline: this.textBaseline});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      flex$.RenderFlex._check(renderObject);
      t15 = renderObject;
      t15.direction = this.direction;
      t15.mainAxisAlignment = this.mainAxisAlignment;
      t15.mainAxisSize = this.mainAxisSize;
      t15.crossAxisAlignment = this.crossAxisAlignment;
      t15.textDirection = this.getEffectiveTextDirection(context);
      t15.verticalDirection = this.verticalDirection;
      t15.textBaseline = this.textBaseline;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxis()).new("direction", this.direction));
      properties.add(new (EnumPropertyOfMainAxisAlignment()).new("mainAxisAlignment", this.mainAxisAlignment));
      properties.add(new (EnumPropertyOfMainAxisSize()).new("mainAxisSize", this.mainAxisSize, {defaultValue: flex$.MainAxisSize.max}));
      properties.add(new (EnumPropertyOfCrossAxisAlignment()).new("crossAxisAlignment", this.crossAxisAlignment));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfVerticalDirection()).new("verticalDirection", this.verticalDirection, {defaultValue: basic_types$.VerticalDirection.down}));
      properties.add(new (EnumPropertyOfTextBaseline()).new("textBaseline", this.textBaseline, {defaultValue: null}));
    }
  };
  (basic.Flex.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C156 || CT.C156;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C157 || CT.C157;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C158 || CT.C158;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C159 || CT.C159;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[direction$2] = direction;
    this[mainAxisAlignment$] = mainAxisAlignment;
    this[mainAxisSize$] = mainAxisSize;
    this[crossAxisAlignment$] = crossAxisAlignment;
    this[textDirection$2] = textDirection;
    this[verticalDirection$] = verticalDirection;
    this[textBaseline$] = textBaseline;
    if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3808, 15, "direction != null");
    if (!(mainAxisAlignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3809, 15, "mainAxisAlignment != null");
    if (!(mainAxisSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3810, 15, "mainAxisSize != null");
    if (!(crossAxisAlignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3811, 15, "crossAxisAlignment != null");
    if (!(verticalDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3812, 15, "verticalDirection != null");
    if (!(!dart.equals(crossAxisAlignment, flex$.CrossAxisAlignment.baseline) || textBaseline != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3813, 15, "crossAxisAlignment != CrossAxisAlignment.baseline || textBaseline != null");
    basic.Flex.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flex.prototype;
  dart.addTypeTests(basic.Flex);
  dart.setMethodSignature(basic.Flex, () => ({
    __proto__: dart.getMethods(basic.Flex.__proto__),
    getEffectiveTextDirection: dart.fnType(ui.TextDirection, [framework.BuildContext]),
    createRenderObject: dart.fnType(flex$.RenderFlex, [framework.BuildContext])
  }));
  dart.setGetterSignature(basic.Flex, () => ({
    __proto__: dart.getGetters(basic.Flex.__proto__),
    [_needTextDirection]: core.bool
  }));
  dart.setLibraryUri(basic.Flex, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Flex, () => ({
    __proto__: dart.getFields(basic.Flex.__proto__),
    direction: dart.finalFieldType(basic_types$.Axis),
    mainAxisAlignment: dart.finalFieldType(flex$.MainAxisAlignment),
    mainAxisSize: dart.finalFieldType(flex$.MainAxisSize),
    crossAxisAlignment: dart.finalFieldType(flex$.CrossAxisAlignment),
    textDirection: dart.finalFieldType(ui.TextDirection),
    verticalDirection: dart.finalFieldType(basic_types$.VerticalDirection),
    textBaseline: dart.finalFieldType(ui.TextBaseline)
  }));
  basic.Row = class Row extends basic.Flex {};
  (basic.Row.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C156 || CT.C156;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C157 || CT.C157;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C158 || CT.C158;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C159 || CT.C159;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Row.__proto__.new.call(this, {children: children, key: key, direction: basic_types$.Axis.horizontal, mainAxisAlignment: mainAxisAlignment, mainAxisSize: mainAxisSize, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Row.prototype;
  dart.addTypeTests(basic.Row);
  dart.setLibraryUri(basic.Row, "package:flutter/src/widgets/basic.dart");
  basic.Column = class Column extends basic.Flex {};
  (basic.Column.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : C156 || CT.C156;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : C157 || CT.C157;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C158 || CT.C158;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C159 || CT.C159;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Column.__proto__.new.call(this, {children: children, key: key, direction: basic_types$.Axis.vertical, mainAxisAlignment: mainAxisAlignment, mainAxisSize: mainAxisSize, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, textBaseline: textBaseline, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Column.prototype;
  dart.addTypeTests(basic.Column);
  dart.setLibraryUri(basic.Column, "package:flutter/src/widgets/basic.dart");
  var C160;
  var flex$0 = dart.privateName(basic, "Flexible.flex");
  var fit$1 = dart.privateName(basic, "Flexible.fit");
  basic.Flexible = class Flexible extends framework.ParentDataWidget$(flex$.FlexParentData) {
    get flex() {
      return this[flex$0];
    }
    set flex(value) {
      super.flex = value;
    }
    get fit() {
      return this[fit$1];
    }
    set fit(value) {
      super.fit = value;
    }
    applyParentData(renderObject) {
      if (!flex$.FlexParentData.is(renderObject.parentData)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 4408, 12, "renderObject.parentData is FlexParentData");
      let parentData = flex$.FlexParentData.as(renderObject.parentData);
      let needsLayout = false;
      if (parentData.flex != this.flex) {
        parentData.flex = this.flex;
        needsLayout = true;
      }
      if (!dart.equals(parentData.fit, this.fit)) {
        parentData.fit = this.fit;
        needsLayout = true;
      }
      if (needsLayout) {
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(basic.Flex);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("flex", this.flex));
    }
  };
  (basic.Flexible.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    let fit = opts && 'fit' in opts ? opts.fit : C160 || CT.C160;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[flex$0] = flex;
    this[fit$1] = fit;
    basic.Flexible.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flexible.prototype;
  dart.addTypeTests(basic.Flexible);
  dart.setMethodSignature(basic.Flexible, () => ({
    __proto__: dart.getMethods(basic.Flexible.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(basic.Flexible, () => ({
    __proto__: dart.getGetters(basic.Flexible.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(basic.Flexible, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Flexible, () => ({
    __proto__: dart.getFields(basic.Flexible.__proto__),
    flex: dart.finalFieldType(core.int),
    fit: dart.finalFieldType(flex$.FlexFit)
  }));
  basic.Expanded = class Expanded extends basic.Flexible {};
  (basic.Expanded.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Expanded.__proto__.new.call(this, {key: key, flex: flex, fit: flex$.FlexFit.tight, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Expanded.prototype;
  dart.addTypeTests(basic.Expanded);
  dart.setLibraryUri(basic.Expanded, "package:flutter/src/widgets/basic.dart");
  var _name$13 = dart.privateName(wrap, "_name");
  var C161;
  var C162;
  var direction$3 = dart.privateName(basic, "Wrap.direction");
  var alignment$8 = dart.privateName(basic, "Wrap.alignment");
  var spacing$ = dart.privateName(basic, "Wrap.spacing");
  var runAlignment$ = dart.privateName(basic, "Wrap.runAlignment");
  var runSpacing$ = dart.privateName(basic, "Wrap.runSpacing");
  var crossAxisAlignment$0 = dart.privateName(basic, "Wrap.crossAxisAlignment");
  var textDirection$3 = dart.privateName(basic, "Wrap.textDirection");
  var verticalDirection$0 = dart.privateName(basic, "Wrap.verticalDirection");
  basic.Wrap = class Wrap extends framework.MultiChildRenderObjectWidget {
    get direction() {
      return this[direction$3];
    }
    set direction(value) {
      super.direction = value;
    }
    get alignment() {
      return this[alignment$8];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get spacing() {
      return this[spacing$];
    }
    set spacing(value) {
      super.spacing = value;
    }
    get runAlignment() {
      return this[runAlignment$];
    }
    set runAlignment(value) {
      super.runAlignment = value;
    }
    get runSpacing() {
      return this[runSpacing$];
    }
    set runSpacing(value) {
      super.runSpacing = value;
    }
    get crossAxisAlignment() {
      return this[crossAxisAlignment$0];
    }
    set crossAxisAlignment(value) {
      super.crossAxisAlignment = value;
    }
    get textDirection() {
      return this[textDirection$3];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get verticalDirection() {
      return this[verticalDirection$0];
    }
    set verticalDirection(value) {
      super.verticalDirection = value;
    }
    createRenderObject(context) {
      let t15;
      return new wrap.RenderWrap.new({direction: this.direction, alignment: this.alignment, spacing: this.spacing, runAlignment: this.runAlignment, runSpacing: this.runSpacing, crossAxisAlignment: this.crossAxisAlignment, textDirection: (t15 = this.textDirection, t15 == null ? basic.Directionality.of(context) : t15), verticalDirection: this.verticalDirection});
    }
    updateRenderObject(context, renderObject) {
      let t16, t15;
      wrap.RenderWrap._check(renderObject);
      t15 = renderObject;
      t15.direction = this.direction;
      t15.alignment = this.alignment;
      t15.spacing = this.spacing;
      t15.runAlignment = this.runAlignment;
      t15.runSpacing = this.runSpacing;
      t15.crossAxisAlignment = this.crossAxisAlignment;
      t15.textDirection = (t16 = this.textDirection, t16 == null ? basic.Directionality.of(context) : t16);
      t15.verticalDirection = this.verticalDirection;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxis()).new("direction", this.direction));
      properties.add(new (EnumPropertyOfWrapAlignment()).new("alignment", this.alignment));
      properties.add(new diagnostics$.DoubleProperty.new("spacing", this.spacing));
      properties.add(new (EnumPropertyOfWrapAlignment()).new("runAlignment", this.runAlignment));
      properties.add(new diagnostics$.DoubleProperty.new("runSpacing", this.runSpacing));
      properties.add(new diagnostics$.DoubleProperty.new("crossAxisAlignment", this.runSpacing));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfVerticalDirection()).new("verticalDirection", this.verticalDirection, {defaultValue: basic_types$.VerticalDirection.down}));
    }
  };
  (basic.Wrap.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let direction = opts && 'direction' in opts ? opts.direction : C78 || CT.C78;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C161 || CT.C161;
    let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
    let runAlignment = opts && 'runAlignment' in opts ? opts.runAlignment : C161 || CT.C161;
    let runSpacing = opts && 'runSpacing' in opts ? opts.runSpacing : 0;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : C162 || CT.C162;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : C159 || CT.C159;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[direction$3] = direction;
    this[alignment$8] = alignment;
    this[spacing$] = spacing;
    this[runAlignment$] = runAlignment;
    this[runSpacing$] = runSpacing;
    this[crossAxisAlignment$0] = crossAxisAlignment;
    this[textDirection$3] = textDirection;
    this[verticalDirection$0] = verticalDirection;
    basic.Wrap.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Wrap.prototype;
  dart.addTypeTests(basic.Wrap);
  dart.setMethodSignature(basic.Wrap, () => ({
    __proto__: dart.getMethods(basic.Wrap.__proto__),
    createRenderObject: dart.fnType(wrap.RenderWrap, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Wrap, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Wrap, () => ({
    __proto__: dart.getFields(basic.Wrap.__proto__),
    direction: dart.finalFieldType(basic_types$.Axis),
    alignment: dart.finalFieldType(wrap.WrapAlignment),
    spacing: dart.finalFieldType(core.double),
    runAlignment: dart.finalFieldType(wrap.WrapAlignment),
    runSpacing: dart.finalFieldType(core.double),
    crossAxisAlignment: dart.finalFieldType(wrap.WrapCrossAlignment),
    textDirection: dart.finalFieldType(ui.TextDirection),
    verticalDirection: dart.finalFieldType(basic_types$.VerticalDirection)
  }));
  var delegate$1 = dart.privateName(basic, "Flow.delegate");
  basic.Flow = class Flow extends framework.MultiChildRenderObjectWidget {
    get delegate() {
      return this[delegate$1];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createRenderObject(context) {
      return new flow.RenderFlow.new({delegate: this.delegate});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      flow.RenderFlow._check(renderObject);
      t15 = renderObject;
      t15.delegate = this.delegate;
      t15;
    }
  };
  (basic.Flow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$1] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 4966, 15, "delegate != null");
    basic.Flow.__proto__.new.call(this, {key: key, children: basic.RepaintBoundary.wrapAll(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flow.prototype;
  (basic.Flow.unwrapped = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$1] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 4981, 15, "delegate != null");
    basic.Flow.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Flow.prototype;
  dart.addTypeTests(basic.Flow);
  dart.setMethodSignature(basic.Flow, () => ({
    __proto__: dart.getMethods(basic.Flow.__proto__),
    createRenderObject: dart.fnType(flow.RenderFlow, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Flow, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Flow, () => ({
    __proto__: dart.getFields(basic.Flow.__proto__),
    delegate: dart.finalFieldType(flow.FlowDelegate)
  }));
  var C163;
  var _name$14 = dart.privateName(paragraph, "_name");
  var C164;
  var _name$15 = dart.privateName(text_painter, "_name");
  var C165;
  var text$ = dart.privateName(basic, "RichText.text");
  var textAlign$ = dart.privateName(basic, "RichText.textAlign");
  var textDirection$4 = dart.privateName(basic, "RichText.textDirection");
  var softWrap$ = dart.privateName(basic, "RichText.softWrap");
  var overflow$0 = dart.privateName(basic, "RichText.overflow");
  var textScaleFactor$ = dart.privateName(basic, "RichText.textScaleFactor");
  var maxLines$ = dart.privateName(basic, "RichText.maxLines");
  var locale$ = dart.privateName(basic, "RichText.locale");
  var strutStyle$ = dart.privateName(basic, "RichText.strutStyle");
  var textWidthBasis$ = dart.privateName(basic, "RichText.textWidthBasis");
  var textHeightBehavior$ = dart.privateName(basic, "RichText.textHeightBehavior");
  basic.RichText = class RichText extends framework.MultiChildRenderObjectWidget {
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get textAlign() {
      return this[textAlign$];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$4];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get softWrap() {
      return this[softWrap$];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$0];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get maxLines() {
      return this[maxLines$];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get locale() {
      return this[locale$];
    }
    set locale(value) {
      super.locale = value;
    }
    get strutStyle() {
      return this[strutStyle$];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    static _extractChildren(span) {
      let result = JSArrayOfWidget().of([]);
      span.visitChildren(dart.fn(span => {
        if (widget_span.WidgetSpan.is(span)) {
          result[$add](span.child);
        }
        return true;
      }, InlineSpanTobool()));
      return result;
    }
    createRenderObject(context) {
      let t15, t15$;
      if (!(this.textDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5158, 12, "textDirection != null || debugCheckHasDirectionality(context)");
      return new paragraph.RenderParagraph.new(this.text, {textAlign: this.textAlign, textDirection: (t15 = this.textDirection, t15 == null ? basic.Directionality.of(context) : t15), softWrap: this.softWrap, overflow: this.overflow, textScaleFactor: this.textScaleFactor, maxLines: this.maxLines, strutStyle: this.strutStyle, textWidthBasis: this.textWidthBasis, textHeightBehavior: this.textHeightBehavior, locale: (t15$ = this.locale, t15$ == null ? localizations.Localizations.localeOf(context, {nullOk: true}) : t15$)});
    }
    updateRenderObject(context, renderObject) {
      let t16, t16$, t15;
      paragraph.RenderParagraph._check(renderObject);
      if (!(this.textDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5175, 12, "textDirection != null || debugCheckHasDirectionality(context)");
      t15 = renderObject;
      t15.text = this.text;
      t15.textAlign = this.textAlign;
      t15.textDirection = (t16 = this.textDirection, t16 == null ? basic.Directionality.of(context) : t16);
      t15.softWrap = this.softWrap;
      t15.overflow = this.overflow;
      t15.textScaleFactor = this.textScaleFactor;
      t15.maxLines = this.maxLines;
      t15.strutStyle = this.strutStyle;
      t15.textWidthBasis = this.textWidthBasis;
      t15.textHeightBehavior = this.textHeightBehavior;
      t15.locale = (t16$ = this.locale, t16$ == null ? localizations.Localizations.localeOf(context, {nullOk: true}) : t16$);
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: ui.TextAlign.start}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: paragraph.TextOverflow.clip}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: 1.0}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {ifNull: "unlimited"}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: text_painter.TextWidthBasis.parent}));
      properties.add(new diagnostics$.StringProperty.new("text", this.text.toPlainText()));
    }
  };
  (basic.RichText.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : C163 || CT.C163;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    let overflow = opts && 'overflow' in opts ? opts.overflow : C164 || CT.C164;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C165 || CT.C165;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$] = text;
    this[textAlign$] = textAlign;
    this[textDirection$4] = textDirection;
    this[softWrap$] = softWrap;
    this[overflow$0] = overflow;
    this[textScaleFactor$] = textScaleFactor;
    this[maxLines$] = maxLines;
    this[locale$] = locale;
    this[strutStyle$] = strutStyle;
    this[textWidthBasis$] = textWidthBasis;
    this[textHeightBehavior$] = textHeightBehavior;
    if (!(text != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5072, 15, "text != null");
    if (!(textAlign != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5073, 15, "textAlign != null");
    if (!(softWrap != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5074, 15, "softWrap != null");
    if (!(overflow != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5075, 15, "overflow != null");
    if (!(textScaleFactor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5076, 15, "textScaleFactor != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5077, 15, "maxLines == null || maxLines > 0");
    if (!(textWidthBasis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5078, 15, "textWidthBasis != null");
    basic.RichText.__proto__.new.call(this, {key: key, children: basic.RichText._extractChildren(text), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RichText.prototype;
  dart.addTypeTests(basic.RichText);
  dart.setMethodSignature(basic.RichText, () => ({
    __proto__: dart.getMethods(basic.RichText.__proto__),
    createRenderObject: dart.fnType(paragraph.RenderParagraph, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RichText, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.RichText, () => ({
    __proto__: dart.getFields(basic.RichText.__proto__),
    text: dart.finalFieldType(inline_span.InlineSpan),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(ui.TextDirection),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    textScaleFactor: dart.finalFieldType(core.double),
    maxLines: dart.finalFieldType(core.int),
    locale: dart.finalFieldType(ui.Locale),
    strutStyle: dart.finalFieldType(strut_style.StrutStyle),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    textHeightBehavior: dart.finalFieldType(ui.TextHeightBehavior)
  }));
  var _name$16 = dart.privateName(decoration_image, "_name");
  var C166;
  var C167;
  var image$0 = dart.privateName(basic, "RawImage.image");
  var width$2 = dart.privateName(basic, "RawImage.width");
  var height$2 = dart.privateName(basic, "RawImage.height");
  var scale$ = dart.privateName(basic, "RawImage.scale");
  var color$1 = dart.privateName(basic, "RawImage.color");
  var filterQuality$ = dart.privateName(basic, "RawImage.filterQuality");
  var colorBlendMode$ = dart.privateName(basic, "RawImage.colorBlendMode");
  var fit$2 = dart.privateName(basic, "RawImage.fit");
  var alignment$9 = dart.privateName(basic, "RawImage.alignment");
  var repeat$ = dart.privateName(basic, "RawImage.repeat");
  var centerSlice$ = dart.privateName(basic, "RawImage.centerSlice");
  var matchTextDirection$ = dart.privateName(basic, "RawImage.matchTextDirection");
  var invertColors$ = dart.privateName(basic, "RawImage.invertColors");
  basic.RawImage = class RawImage extends framework.LeafRenderObjectWidget {
    get image() {
      return this[image$0];
    }
    set image(value) {
      super.image = value;
    }
    get width() {
      return this[width$2];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$2];
    }
    set height(value) {
      super.height = value;
    }
    get scale() {
      return this[scale$];
    }
    set scale(value) {
      super.scale = value;
    }
    get color() {
      return this[color$1];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$2];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$9];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get invertColors() {
      return this[invertColors$];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    createRenderObject(context) {
      if (!(!dart.test(this.matchTextDirection) && alignment$.Alignment.is(this.alignment) || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5350, 12, "(!matchTextDirection && alignment is Alignment) || debugCheckHasDirectionality(context)");
      return new image.RenderImage.new({image: this.image, width: this.width, height: this.height, scale: this.scale, color: this.color, colorBlendMode: this.colorBlendMode, fit: this.fit, alignment: this.alignment, repeat: this.repeat, centerSlice: this.centerSlice, matchTextDirection: this.matchTextDirection, textDirection: dart.test(this.matchTextDirection) || !alignment$.Alignment.is(this.alignment) ? basic.Directionality.of(context) : null, invertColors: this.invertColors, filterQuality: this.filterQuality});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      image.RenderImage._check(renderObject);
      t15 = renderObject;
      t15.image = this.image;
      t15.width = this.width;
      t15.height = this.height;
      t15.scale = this.scale;
      t15.color = this.color;
      t15.colorBlendMode = this.colorBlendMode;
      t15.alignment = this.alignment;
      t15.fit = this.fit;
      t15.repeat = this.repeat;
      t15.centerSlice = this.centerSlice;
      t15.matchTextDirection = this.matchTextDirection;
      t15.textDirection = dart.test(this.matchTextDirection) || !alignment$.Alignment.is(this.alignment) ? basic.Directionality.of(context) : null;
      t15.invertColors = this.invertColors;
      t15.filterQuality = this.filterQuality;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImage()).new("image", this.image));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("scale", this.scale, {defaultValue: 1.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBlendMode()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (EnumPropertyOfImageRepeat()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (DiagnosticsPropertyOfRect()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("invertColors", this.invertColors));
      properties.add(new (EnumPropertyOfFilterQuality()).new("filterQuality", this.filterQuality));
    }
  };
  (basic.RawImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$0] = image;
    this[width$2] = width;
    this[height$2] = height;
    this[scale$] = scale;
    this[color$1] = color;
    this[colorBlendMode$] = colorBlendMode;
    this[fit$2] = fit;
    this[alignment$9] = alignment;
    this[repeat$] = repeat;
    this[centerSlice$] = centerSlice;
    this[matchTextDirection$] = matchTextDirection;
    this[invertColors$] = invertColors;
    this[filterQuality$] = filterQuality;
    if (!(scale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5230, 15, "scale != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5231, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5232, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5233, 15, "matchTextDirection != null");
    basic.RawImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RawImage.prototype;
  dart.addTypeTests(basic.RawImage);
  dart.setMethodSignature(basic.RawImage, () => ({
    __proto__: dart.getMethods(basic.RawImage.__proto__),
    createRenderObject: dart.fnType(image.RenderImage, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RawImage, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.RawImage, () => ({
    __proto__: dart.getFields(basic.RawImage.__proto__),
    image: dart.finalFieldType(ui.Image),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    scale: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    filterQuality: dart.finalFieldType(ui.FilterQuality),
    colorBlendMode: dart.finalFieldType(ui.BlendMode),
    fit: dart.finalFieldType(box_fit.BoxFit),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    repeat: dart.finalFieldType(decoration_image.ImageRepeat),
    centerSlice: dart.finalFieldType(ui.Rect),
    matchTextDirection: dart.finalFieldType(core.bool),
    invertColors: dart.finalFieldType(core.bool)
  }));
  var bundle$ = dart.privateName(basic, "DefaultAssetBundle.bundle");
  basic.DefaultAssetBundle = class DefaultAssetBundle extends framework.InheritedWidget {
    get bundle() {
      return this[bundle$];
    }
    set bundle(value) {
      super.bundle = value;
    }
    static of(context) {
      let t15, t15$;
      let result = context.dependOnInheritedWidgetOfExactType(basic.DefaultAssetBundle);
      t15$ = (t15 = result, t15 == null ? null : t15.bundle);
      return t15$ == null ? asset_bundle.rootBundle : t15$;
    }
    updateShouldNotify(oldWidget) {
      basic.DefaultAssetBundle._check(oldWidget);
      return !dart.equals(this.bundle, oldWidget.bundle);
    }
  };
  (basic.DefaultAssetBundle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[bundle$] = bundle;
    if (!(bundle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5463, 15, "bundle != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5464, 15, "child != null");
    basic.DefaultAssetBundle.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.DefaultAssetBundle.prototype;
  dart.addTypeTests(basic.DefaultAssetBundle);
  dart.setMethodSignature(basic.DefaultAssetBundle, () => ({
    __proto__: dart.getMethods(basic.DefaultAssetBundle.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(basic.DefaultAssetBundle, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.DefaultAssetBundle, () => ({
    __proto__: dart.getFields(basic.DefaultAssetBundle.__proto__),
    bundle: dart.finalFieldType(asset_bundle.AssetBundle)
  }));
  var renderBox$ = dart.privateName(basic, "WidgetToRenderBoxAdapter.renderBox");
  var onBuild$ = dart.privateName(basic, "WidgetToRenderBoxAdapter.onBuild");
  basic.WidgetToRenderBoxAdapter = class WidgetToRenderBoxAdapter extends framework.LeafRenderObjectWidget {
    get renderBox() {
      return this[renderBox$];
    }
    set renderBox(value) {
      super.renderBox = value;
    }
    get onBuild() {
      return this[onBuild$];
    }
    set onBuild(value) {
      super.onBuild = value;
    }
    createRenderObject(context) {
      return this.renderBox;
    }
    updateRenderObject(context, renderObject) {
      box$.RenderBox._check(renderObject);
      if (this.onBuild != null) this.onBuild();
    }
  };
  (basic.WidgetToRenderBoxAdapter.new = function(opts) {
    let renderBox = opts && 'renderBox' in opts ? opts.renderBox : null;
    let onBuild = opts && 'onBuild' in opts ? opts.onBuild : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[renderBox$] = renderBox;
    this[onBuild$] = onBuild;
    if (!(renderBox != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5502, 15, "renderBox != null");
    basic.WidgetToRenderBoxAdapter.__proto__.new.call(this, {key: new (GlobalObjectKeyOfStateOfStatefulWidget()).new(renderBox), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.WidgetToRenderBoxAdapter.prototype;
  dart.addTypeTests(basic.WidgetToRenderBoxAdapter);
  dart.setMethodSignature(basic.WidgetToRenderBoxAdapter, () => ({
    __proto__: dart.getMethods(basic.WidgetToRenderBoxAdapter.__proto__),
    createRenderObject: dart.fnType(box$.RenderBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.WidgetToRenderBoxAdapter, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.WidgetToRenderBoxAdapter, () => ({
    __proto__: dart.getFields(basic.WidgetToRenderBoxAdapter.__proto__),
    renderBox: dart.finalFieldType(box$.RenderBox),
    onBuild: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var _name$17 = dart.privateName(proxy_box, "_name");
  var C168;
  var _child$ = dart.privateName(basic, "_child");
  var C171;
  var C172;
  var C173;
  var C174;
  var C175;
  var C170;
  var C169;
  var C178;
  var C179;
  var C180;
  var C181;
  var C182;
  var C183;
  var C184;
  var C177;
  var C176;
  var onPointerDown$ = dart.privateName(basic, "Listener.onPointerDown");
  var onPointerMove$ = dart.privateName(basic, "Listener.onPointerMove");
  var onPointerEnter$ = dart.privateName(basic, "Listener.onPointerEnter");
  var onPointerHover$ = dart.privateName(basic, "Listener.onPointerHover");
  var onPointerExit$ = dart.privateName(basic, "Listener.onPointerExit");
  var onPointerUp$ = dart.privateName(basic, "Listener.onPointerUp");
  var onPointerCancel$ = dart.privateName(basic, "Listener.onPointerCancel");
  var onPointerSignal$ = dart.privateName(basic, "Listener.onPointerSignal");
  var behavior$ = dart.privateName(basic, "Listener.behavior");
  var _child$0 = dart.privateName(basic, "Listener._child");
  basic.Listener = class Listener extends framework.StatelessWidget {
    get onPointerDown() {
      return this[onPointerDown$];
    }
    set onPointerDown(value) {
      super.onPointerDown = value;
    }
    get onPointerMove() {
      return this[onPointerMove$];
    }
    set onPointerMove(value) {
      super.onPointerMove = value;
    }
    get onPointerEnter() {
      return this[onPointerEnter$];
    }
    set onPointerEnter(value) {
      super.onPointerEnter = value;
    }
    get onPointerHover() {
      return this[onPointerHover$];
    }
    set onPointerHover(value) {
      super.onPointerHover = value;
    }
    get onPointerExit() {
      return this[onPointerExit$];
    }
    set onPointerExit(value) {
      super.onPointerExit = value;
    }
    get onPointerUp() {
      return this[onPointerUp$];
    }
    set onPointerUp(value) {
      super.onPointerUp = value;
    }
    get onPointerCancel() {
      return this[onPointerCancel$];
    }
    set onPointerCancel(value) {
      super.onPointerCancel = value;
    }
    get onPointerSignal() {
      return this[onPointerSignal$];
    }
    set onPointerSignal(value) {
      super.onPointerSignal = value;
    }
    get behavior() {
      return this[behavior$];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      let result = this[_child$];
      if (this.onPointerEnter != null || this.onPointerExit != null || this.onPointerHover != null) {
        result = new basic.MouseRegion.new({onEnter: this.onPointerEnter, onExit: this.onPointerExit, onHover: this.onPointerHover, opaque: false, child: result, $creationLocationd_0dea112b090073317d4: C169 || CT.C169});
      }
      result = new basic._PointerListener.new({onPointerDown: this.onPointerDown, onPointerUp: this.onPointerUp, onPointerMove: this.onPointerMove, onPointerCancel: this.onPointerCancel, onPointerSignal: this.onPointerSignal, behavior: this.behavior, child: result, $creationLocationd_0dea112b090073317d4: C176 || CT.C176});
      return result;
    }
  };
  (basic.Listener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPointerDown = opts && 'onPointerDown' in opts ? opts.onPointerDown : null;
    let onPointerMove = opts && 'onPointerMove' in opts ? opts.onPointerMove : null;
    let onPointerEnter = opts && 'onPointerEnter' in opts ? opts.onPointerEnter : null;
    let onPointerExit = opts && 'onPointerExit' in opts ? opts.onPointerExit : null;
    let onPointerHover = opts && 'onPointerHover' in opts ? opts.onPointerHover : null;
    let onPointerUp = opts && 'onPointerUp' in opts ? opts.onPointerUp : null;
    let onPointerCancel = opts && 'onPointerCancel' in opts ? opts.onPointerCancel : null;
    let onPointerSignal = opts && 'onPointerSignal' in opts ? opts.onPointerSignal : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : C168 || CT.C168;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPointerDown$] = onPointerDown;
    this[onPointerMove$] = onPointerMove;
    this[onPointerEnter$] = onPointerEnter;
    this[onPointerExit$] = onPointerExit;
    this[onPointerHover$] = onPointerHover;
    this[onPointerUp$] = onPointerUp;
    this[onPointerCancel$] = onPointerCancel;
    this[onPointerSignal$] = onPointerSignal;
    this[behavior$] = behavior;
    if (!(behavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5645, 15, "behavior != null");
    this[_child$0] = child;
    basic.Listener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Listener.prototype;
  dart.addTypeTests(basic.Listener);
  dart.setMethodSignature(basic.Listener, () => ({
    __proto__: dart.getMethods(basic.Listener.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Listener, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Listener, () => ({
    __proto__: dart.getFields(basic.Listener.__proto__),
    onPointerDown: dart.finalFieldType(dart.fnType(dart.void, [events.PointerDownEvent])),
    onPointerMove: dart.finalFieldType(dart.fnType(dart.void, [events.PointerMoveEvent])),
    onPointerEnter: dart.finalFieldType(dart.fnType(dart.void, [events.PointerEnterEvent])),
    onPointerHover: dart.finalFieldType(dart.fnType(dart.void, [events.PointerHoverEvent])),
    onPointerExit: dart.finalFieldType(dart.fnType(dart.void, [events.PointerExitEvent])),
    onPointerUp: dart.finalFieldType(dart.fnType(dart.void, [events.PointerUpEvent])),
    onPointerCancel: dart.finalFieldType(dart.fnType(dart.void, [events.PointerCancelEvent])),
    onPointerSignal: dart.finalFieldType(dart.fnType(dart.void, [events.PointerSignalEvent])),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior),
    [_child$]: dart.finalFieldType(framework.Widget)
  }));
  var onPointerDown$0 = dart.privateName(basic, "_PointerListener.onPointerDown");
  var onPointerMove$0 = dart.privateName(basic, "_PointerListener.onPointerMove");
  var onPointerUp$0 = dart.privateName(basic, "_PointerListener.onPointerUp");
  var onPointerCancel$0 = dart.privateName(basic, "_PointerListener.onPointerCancel");
  var onPointerSignal$0 = dart.privateName(basic, "_PointerListener.onPointerSignal");
  var behavior$0 = dart.privateName(basic, "_PointerListener.behavior");
  basic._PointerListener = class _PointerListener extends framework.SingleChildRenderObjectWidget {
    get onPointerDown() {
      return this[onPointerDown$0];
    }
    set onPointerDown(value) {
      super.onPointerDown = value;
    }
    get onPointerMove() {
      return this[onPointerMove$0];
    }
    set onPointerMove(value) {
      super.onPointerMove = value;
    }
    get onPointerUp() {
      return this[onPointerUp$0];
    }
    set onPointerUp(value) {
      super.onPointerUp = value;
    }
    get onPointerCancel() {
      return this[onPointerCancel$0];
    }
    set onPointerCancel(value) {
      super.onPointerCancel = value;
    }
    get onPointerSignal() {
      return this[onPointerSignal$0];
    }
    set onPointerSignal(value) {
      super.onPointerSignal = value;
    }
    get behavior() {
      return this[behavior$0];
    }
    set behavior(value) {
      super.behavior = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderPointerListener.new({onPointerDown: this.onPointerDown, onPointerMove: this.onPointerMove, onPointerUp: this.onPointerUp, onPointerCancel: this.onPointerCancel, onPointerSignal: this.onPointerSignal, behavior: this.behavior});
    }
    updateRenderObject(context, renderObject) {
      let t15;
      proxy_box.RenderPointerListener._check(renderObject);
      t15 = renderObject;
      t15.onPointerDown = this.onPointerDown;
      t15.onPointerMove = this.onPointerMove;
      t15.onPointerUp = this.onPointerUp;
      t15.onPointerCancel = this.onPointerCancel;
      t15.onPointerSignal = this.onPointerSignal;
      t15.behavior = this.behavior;
      t15;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let listeners = (() => {
        let t15 = JSArrayOfString().of([]);
        if (this.onPointerDown != null) t15[$add]("down");
        if (this.onPointerMove != null) t15[$add]("move");
        if (this.onPointerUp != null) t15[$add]("up");
        if (this.onPointerCancel != null) t15[$add]("cancel");
        if (this.onPointerSignal != null) t15[$add]("signal");
        return t15;
      })();
      properties.add(new (IterablePropertyOfString()).new("listeners", listeners, {ifEmpty: "<none>"}));
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.behavior));
    }
  };
  (basic._PointerListener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPointerDown = opts && 'onPointerDown' in opts ? opts.onPointerDown : null;
    let onPointerMove = opts && 'onPointerMove' in opts ? opts.onPointerMove : null;
    let onPointerUp = opts && 'onPointerUp' in opts ? opts.onPointerUp : null;
    let onPointerCancel = opts && 'onPointerCancel' in opts ? opts.onPointerCancel : null;
    let onPointerSignal = opts && 'onPointerSignal' in opts ? opts.onPointerSignal : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : C168 || CT.C168;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onPointerDown$0] = onPointerDown;
    this[onPointerMove$0] = onPointerMove;
    this[onPointerUp$0] = onPointerUp;
    this[onPointerCancel$0] = onPointerCancel;
    this[onPointerSignal$0] = onPointerSignal;
    this[behavior$0] = behavior;
    if (!(behavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5742, 15, "behavior != null");
    basic._PointerListener.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic._PointerListener.prototype;
  dart.addTypeTests(basic._PointerListener);
  dart.setMethodSignature(basic._PointerListener, () => ({
    __proto__: dart.getMethods(basic._PointerListener.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderPointerListener, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._PointerListener, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic._PointerListener, () => ({
    __proto__: dart.getFields(basic._PointerListener.__proto__),
    onPointerDown: dart.finalFieldType(dart.fnType(dart.void, [events.PointerDownEvent])),
    onPointerMove: dart.finalFieldType(dart.fnType(dart.void, [events.PointerMoveEvent])),
    onPointerUp: dart.finalFieldType(dart.fnType(dart.void, [events.PointerUpEvent])),
    onPointerCancel: dart.finalFieldType(dart.fnType(dart.void, [events.PointerCancelEvent])),
    onPointerSignal: dart.finalFieldType(dart.fnType(dart.void, [events.PointerSignalEvent])),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior)
  }));
  var onEnter$ = dart.privateName(basic, "MouseRegion.onEnter");
  var onHover$ = dart.privateName(basic, "MouseRegion.onHover");
  var onExit$ = dart.privateName(basic, "MouseRegion.onExit");
  var opaque$ = dart.privateName(basic, "MouseRegion.opaque");
  var child$2 = dart.privateName(basic, "MouseRegion.child");
  basic.MouseRegion = class MouseRegion extends framework.StatefulWidget {
    get onEnter() {
      return this[onEnter$];
    }
    set onEnter(value) {
      super.onEnter = value;
    }
    get onHover() {
      return this[onHover$];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get onExit() {
      return this[onExit$];
    }
    set onExit(value) {
      super.onExit = value;
    }
    get opaque() {
      return this[opaque$];
    }
    set opaque(value) {
      super.opaque = value;
    }
    get child() {
      return this[child$2];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new basic._MouseRegionState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let listeners = JSArrayOfString().of([]);
      if (this.onEnter != null) listeners[$add]("enter");
      if (this.onExit != null) listeners[$add]("exit");
      if (this.onHover != null) listeners[$add]("hover");
      properties.add(new (IterablePropertyOfString()).new("listeners", listeners, {ifEmpty: "<none>"}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("opaque", this.opaque, {defaultValue: true}));
    }
  };
  (basic.MouseRegion.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onEnter = opts && 'onEnter' in opts ? opts.onEnter : null;
    let onExit = opts && 'onExit' in opts ? opts.onExit : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let opaque = opts && 'opaque' in opts ? opts.opaque : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onEnter$] = onEnter;
    this[onExit$] = onExit;
    this[onHover$] = onHover;
    this[opaque$] = opaque;
    this[child$2] = child;
    if (!(opaque != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 5877, 15, "opaque != null");
    basic.MouseRegion.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MouseRegion.prototype;
  dart.addTypeTests(basic.MouseRegion);
  dart.setMethodSignature(basic.MouseRegion, () => ({
    __proto__: dart.getMethods(basic.MouseRegion.__proto__),
    createState: dart.fnType(basic._MouseRegionState, [])
  }));
  dart.setLibraryUri(basic.MouseRegion, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.MouseRegion, () => ({
    __proto__: dart.getFields(basic.MouseRegion.__proto__),
    onEnter: dart.finalFieldType(dart.fnType(dart.void, [events.PointerEnterEvent])),
    onHover: dart.finalFieldType(dart.fnType(dart.void, [events.PointerHoverEvent])),
    onExit: dart.finalFieldType(dart.fnType(dart.void, [events.PointerExitEvent])),
    opaque: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C187;
  var C186;
  var C185;
  basic._MouseRegionState = class _MouseRegionState extends framework.State$(basic.MouseRegion) {
    handleExit(event) {
      if (this.widget.onExit != null && dart.test(this.mounted)) this.widget.onExit(event);
    }
    getHandleExit() {
      return this.widget.onExit == null ? null : dart.bind(this, 'handleExit');
    }
    build(context) {
      return new basic._RawMouseRegion.new(this, {$creationLocationd_0dea112b090073317d4: C185 || CT.C185});
    }
  };
  (basic._MouseRegionState.new = function() {
    basic._MouseRegionState.__proto__.new.call(this);
    ;
  }).prototype = basic._MouseRegionState.prototype;
  dart.addTypeTests(basic._MouseRegionState);
  dart.setMethodSignature(basic._MouseRegionState, () => ({
    __proto__: dart.getMethods(basic._MouseRegionState.__proto__),
    handleExit: dart.fnType(dart.void, [events.PointerExitEvent]),
    getHandleExit: dart.fnType(dart.fnType(dart.void, [events.PointerExitEvent]), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._MouseRegionState, "package:flutter/src/widgets/basic.dart");
  basic._RawMouseRegion = class _RawMouseRegion extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      let widget = this.owner.widget;
      return new proxy_box.RenderMouseRegion.new({onEnter: widget.onEnter, onHover: widget.onHover, onExit: this.owner.getHandleExit(), opaque: widget.opaque});
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderMouseRegion._check(renderObject);
      let widget = this.owner.widget;
      t16 = renderObject;
      t16.onEnter = widget.onEnter;
      t16.onHover = widget.onHover;
      t16.onExit = this.owner.getHandleExit();
      t16.opaque = widget.opaque;
      t16;
    }
  };
  (basic._RawMouseRegion.new = function(owner, opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.owner = owner;
    basic._RawMouseRegion.__proto__.new.call(this, {child: owner.widget.child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic._RawMouseRegion.prototype;
  dart.addTypeTests(basic._RawMouseRegion);
  dart.setMethodSignature(basic._RawMouseRegion, () => ({
    __proto__: dart.getMethods(basic._RawMouseRegion.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMouseRegion, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._RawMouseRegion, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic._RawMouseRegion, () => ({
    __proto__: dart.getFields(basic._RawMouseRegion.__proto__),
    owner: dart.finalFieldType(basic._MouseRegionState)
  }));
  var C190;
  var C191;
  var C189;
  var C188;
  basic.RepaintBoundary = class RepaintBoundary extends framework.SingleChildRenderObjectWidget {
    static wrap(child, childIndex, opts) {
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6228, 12, "child != null");
      let key = child.key != null ? new (ValueKeyOfKey()).new(child.key) : new (ValueKeyOfint()).new(childIndex);
      return new basic.RepaintBoundary.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static wrapAll(widgets) {
      let result = ListOfRepaintBoundary().new(widgets[$length]);
      for (let i = 0; i < dart.notNull(result[$length]); i = i + 1)
        result[$_set](i, basic.RepaintBoundary.wrap(widgets[$_get](i), i, {$creationLocationd_0dea112b090073317d4: C188 || CT.C188}));
      return result;
    }
    createRenderObject(context) {
      return new proxy_box.RenderRepaintBoundary.new();
    }
  };
  (basic.RepaintBoundary.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.RepaintBoundary.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.RepaintBoundary.prototype;
  dart.addTypeTests(basic.RepaintBoundary);
  dart.setMethodSignature(basic.RepaintBoundary, () => ({
    __proto__: dart.getMethods(basic.RepaintBoundary.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderRepaintBoundary, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.RepaintBoundary, "package:flutter/src/widgets/basic.dart");
  var ignoring$ = dart.privateName(basic, "IgnorePointer.ignoring");
  var ignoringSemantics$ = dart.privateName(basic, "IgnorePointer.ignoringSemantics");
  basic.IgnorePointer = class IgnorePointer extends framework.SingleChildRenderObjectWidget {
    get ignoring() {
      return this[ignoring$];
    }
    set ignoring(value) {
      super.ignoring = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderIgnorePointer.new({ignoring: this.ignoring, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderIgnorePointer._check(renderObject);
      t16 = renderObject;
      t16.ignoring = this.ignoring;
      t16.ignoringSemantics = this.ignoringSemantics;
      t16;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoring", this.ignoring));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (basic.IgnorePointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ignoring = opts && 'ignoring' in opts ? opts.ignoring : true;
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[ignoring$] = ignoring;
    this[ignoringSemantics$] = ignoringSemantics;
    if (!(ignoring != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6274, 15, "ignoring != null");
    basic.IgnorePointer.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IgnorePointer.prototype;
  dart.addTypeTests(basic.IgnorePointer);
  dart.setMethodSignature(basic.IgnorePointer, () => ({
    __proto__: dart.getMethods(basic.IgnorePointer.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIgnorePointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IgnorePointer, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.IgnorePointer, () => ({
    __proto__: dart.getFields(basic.IgnorePointer.__proto__),
    ignoring: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(core.bool)
  }));
  var absorbing$ = dart.privateName(basic, "AbsorbPointer.absorbing");
  var ignoringSemantics$0 = dart.privateName(basic, "AbsorbPointer.ignoringSemantics");
  basic.AbsorbPointer = class AbsorbPointer extends framework.SingleChildRenderObjectWidget {
    get absorbing() {
      return this[absorbing$];
    }
    set absorbing(value) {
      super.absorbing = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$0];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderAbsorbPointer.new({absorbing: this.absorbing, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderAbsorbPointer._check(renderObject);
      t16 = renderObject;
      t16.absorbing = this.absorbing;
      t16.ignoringSemantics = this.ignoringSemantics;
      t16;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("absorbing", this.absorbing));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (basic.AbsorbPointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let absorbing = opts && 'absorbing' in opts ? opts.absorbing : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[absorbing$] = absorbing;
    this[ignoringSemantics$0] = ignoringSemantics;
    if (!(absorbing != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6336, 15, "absorbing != null");
    basic.AbsorbPointer.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.AbsorbPointer.prototype;
  dart.addTypeTests(basic.AbsorbPointer);
  dart.setMethodSignature(basic.AbsorbPointer, () => ({
    __proto__: dart.getMethods(basic.AbsorbPointer.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAbsorbPointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.AbsorbPointer, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.AbsorbPointer, () => ({
    __proto__: dart.getFields(basic.AbsorbPointer.__proto__),
    absorbing: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(core.bool)
  }));
  var metaData$ = dart.privateName(basic, "MetaData.metaData");
  var behavior$1 = dart.privateName(basic, "MetaData.behavior");
  basic.MetaData = class MetaData extends framework.SingleChildRenderObjectWidget {
    get metaData() {
      return this[metaData$];
    }
    set metaData(value) {
      super.metaData = value;
    }
    get behavior() {
      return this[behavior$1];
    }
    set behavior(value) {
      super.behavior = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderMetaData.new({metaData: this.metaData, behavior: this.behavior});
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderMetaData._check(renderObject);
      t16 = renderObject;
      t16.metaData = this.metaData;
      t16.behavior = this.behavior;
      t16;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.behavior));
      properties.add(new diagnostics$.DiagnosticsProperty.new("metaData", this.metaData));
    }
  };
  (basic.MetaData.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let metaData = opts && 'metaData' in opts ? opts.metaData : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : C168 || CT.C168;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[metaData$] = metaData;
    this[behavior$1] = behavior;
    basic.MetaData.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MetaData.prototype;
  dart.addTypeTests(basic.MetaData);
  dart.setMethodSignature(basic.MetaData, () => ({
    __proto__: dart.getMethods(basic.MetaData.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMetaData, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.MetaData, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.MetaData, () => ({
    __proto__: dart.getFields(basic.MetaData.__proto__),
    metaData: dart.finalFieldType(dart.dynamic),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior)
  }));
  var _getTextDirection = dart.privateName(basic, "_getTextDirection");
  var properties$ = dart.privateName(basic, "Semantics.properties");
  var container$ = dart.privateName(basic, "Semantics.container");
  var explicitChildNodes$ = dart.privateName(basic, "Semantics.explicitChildNodes");
  var excludeSemantics$ = dart.privateName(basic, "Semantics.excludeSemantics");
  basic.Semantics = class Semantics extends framework.SingleChildRenderObjectWidget {
    get properties() {
      return this[properties$];
    }
    set properties(value) {
      super.properties = value;
    }
    get container() {
      return this[container$];
    }
    set container(value) {
      super.container = value;
    }
    get explicitChildNodes() {
      return this[explicitChildNodes$];
    }
    set explicitChildNodes(value) {
      super.explicitChildNodes = value;
    }
    get excludeSemantics() {
      return this[excludeSemantics$];
    }
    set excludeSemantics(value) {
      super.excludeSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderSemanticsAnnotations.new({container: this.container, explicitChildNodes: this.explicitChildNodes, excludeSemantics: this.excludeSemantics, enabled: this.properties.enabled, checked: this.properties.checked, toggled: this.properties.toggled, selected: this.properties.selected, button: this.properties.button, link: this.properties.link, header: this.properties.header, textField: this.properties.textField, readOnly: this.properties.readOnly, focusable: this.properties.focusable, focused: this.properties.focused, liveRegion: this.properties.liveRegion, maxValueLength: this.properties.maxValueLength, currentValueLength: this.properties.currentValueLength, inMutuallyExclusiveGroup: this.properties.inMutuallyExclusiveGroup, obscured: this.properties.obscured, multiline: this.properties.multiline, scopesRoute: this.properties.scopesRoute, namesRoute: this.properties.namesRoute, hidden: this.properties.hidden, image: this.properties.image, label: this.properties.label, value: this.properties.value, increasedValue: this.properties.increasedValue, decreasedValue: this.properties.decreasedValue, hint: this.properties.hint, hintOverrides: this.properties.hintOverrides, textDirection: this[_getTextDirection](context), sortKey: this.properties.sortKey, onTap: this.properties.onTap, onLongPress: this.properties.onLongPress, onScrollLeft: this.properties.onScrollLeft, onScrollRight: this.properties.onScrollRight, onScrollUp: this.properties.onScrollUp, onScrollDown: this.properties.onScrollDown, onIncrease: this.properties.onIncrease, onDecrease: this.properties.onDecrease, onCopy: this.properties.onCopy, onDismiss: this.properties.onDismiss, onCut: this.properties.onCut, onPaste: this.properties.onPaste, onMoveCursorForwardByCharacter: this.properties.onMoveCursorForwardByCharacter, onMoveCursorBackwardByCharacter: this.properties.onMoveCursorBackwardByCharacter, onMoveCursorForwardByWord: this.properties.onMoveCursorForwardByWord, onMoveCursorBackwardByWord: this.properties.onMoveCursorBackwardByWord, onSetSelection: this.properties.onSetSelection, onDidGainAccessibilityFocus: this.properties.onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus: this.properties.onDidLoseAccessibilityFocus, customSemanticsActions: this.properties.customSemanticsActions});
    }
    [_getTextDirection](context) {
      if (this.properties.textDirection != null) return this.properties.textDirection;
      let containsText = this.properties.label != null || this.properties.value != null || this.properties.hint != null;
      if (!containsText) return null;
      return basic.Directionality.of(context);
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderSemanticsAnnotations._check(renderObject);
      t16 = renderObject;
      t16.container = this.container;
      t16.explicitChildNodes = this.explicitChildNodes;
      t16.excludeSemantics = this.excludeSemantics;
      t16.scopesRoute = this.properties.scopesRoute;
      t16.enabled = this.properties.enabled;
      t16.checked = this.properties.checked;
      t16.toggled = this.properties.toggled;
      t16.selected = this.properties.selected;
      t16.button = this.properties.button;
      t16.link = this.properties.link;
      t16.header = this.properties.header;
      t16.textField = this.properties.textField;
      t16.readOnly = this.properties.readOnly;
      t16.focusable = this.properties.focusable;
      t16.focused = this.properties.focused;
      t16.inMutuallyExclusiveGroup = this.properties.inMutuallyExclusiveGroup;
      t16.obscured = this.properties.obscured;
      t16.multiline = this.properties.multiline;
      t16.hidden = this.properties.hidden;
      t16.image = this.properties.image;
      t16.liveRegion = this.properties.liveRegion;
      t16.maxValueLength = this.properties.maxValueLength;
      t16.currentValueLength = this.properties.currentValueLength;
      t16.label = this.properties.label;
      t16.value = this.properties.value;
      t16.increasedValue = this.properties.increasedValue;
      t16.decreasedValue = this.properties.decreasedValue;
      t16.hint = this.properties.hint;
      t16.hintOverrides = this.properties.hintOverrides;
      t16.namesRoute = this.properties.namesRoute;
      t16.textDirection = this[_getTextDirection](context);
      t16.sortKey = this.properties.sortKey;
      t16.onTap = this.properties.onTap;
      t16.onLongPress = this.properties.onLongPress;
      t16.onScrollLeft = this.properties.onScrollLeft;
      t16.onScrollRight = this.properties.onScrollRight;
      t16.onScrollUp = this.properties.onScrollUp;
      t16.onScrollDown = this.properties.onScrollDown;
      t16.onIncrease = this.properties.onIncrease;
      t16.onDismiss = this.properties.onDismiss;
      t16.onDecrease = this.properties.onDecrease;
      t16.onCopy = this.properties.onCopy;
      t16.onCut = this.properties.onCut;
      t16.onPaste = this.properties.onPaste;
      t16.onMoveCursorForwardByCharacter = this.properties.onMoveCursorForwardByCharacter;
      t16.onMoveCursorBackwardByCharacter = this.properties.onMoveCursorForwardByCharacter;
      t16.onMoveCursorForwardByWord = this.properties.onMoveCursorForwardByWord;
      t16.onMoveCursorBackwardByWord = this.properties.onMoveCursorBackwardByWord;
      t16.onSetSelection = this.properties.onSetSelection;
      t16.onDidGainAccessibilityFocus = this.properties.onDidGainAccessibilityFocus;
      t16.onDidLoseAccessibilityFocus = this.properties.onDidLoseAccessibilityFocus;
      t16.customSemanticsActions = this.properties.customSemanticsActions;
      t16;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("container", this.container));
      properties.add(new (DiagnosticsPropertyOfSemanticsProperties()).new("properties", this.properties));
      this.properties.debugFillProperties(properties);
    }
  };
  (basic.Semantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let container = opts && 'container' in opts ? opts.container : false;
    let explicitChildNodes = opts && 'explicitChildNodes' in opts ? opts.explicitChildNodes : false;
    let excludeSemantics = opts && 'excludeSemantics' in opts ? opts.excludeSemantics : false;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    let checked = opts && 'checked' in opts ? opts.checked : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let toggled = opts && 'toggled' in opts ? opts.toggled : null;
    let button = opts && 'button' in opts ? opts.button : null;
    let link = opts && 'link' in opts ? opts.link : null;
    let header = opts && 'header' in opts ? opts.header : null;
    let textField = opts && 'textField' in opts ? opts.textField : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : null;
    let focusable = opts && 'focusable' in opts ? opts.focusable : null;
    let focused = opts && 'focused' in opts ? opts.focused : null;
    let inMutuallyExclusiveGroup = opts && 'inMutuallyExclusiveGroup' in opts ? opts.inMutuallyExclusiveGroup : null;
    let obscured = opts && 'obscured' in opts ? opts.obscured : null;
    let multiline = opts && 'multiline' in opts ? opts.multiline : null;
    let scopesRoute = opts && 'scopesRoute' in opts ? opts.scopesRoute : null;
    let namesRoute = opts && 'namesRoute' in opts ? opts.namesRoute : null;
    let hidden = opts && 'hidden' in opts ? opts.hidden : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let liveRegion = opts && 'liveRegion' in opts ? opts.liveRegion : null;
    let maxValueLength = opts && 'maxValueLength' in opts ? opts.maxValueLength : null;
    let currentValueLength = opts && 'currentValueLength' in opts ? opts.currentValueLength : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let increasedValue = opts && 'increasedValue' in opts ? opts.increasedValue : null;
    let decreasedValue = opts && 'decreasedValue' in opts ? opts.decreasedValue : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let onTapHint = opts && 'onTapHint' in opts ? opts.onTapHint : null;
    let onLongPressHint = opts && 'onLongPressHint' in opts ? opts.onLongPressHint : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let sortKey = opts && 'sortKey' in opts ? opts.sortKey : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onScrollLeft = opts && 'onScrollLeft' in opts ? opts.onScrollLeft : null;
    let onScrollRight = opts && 'onScrollRight' in opts ? opts.onScrollRight : null;
    let onScrollUp = opts && 'onScrollUp' in opts ? opts.onScrollUp : null;
    let onScrollDown = opts && 'onScrollDown' in opts ? opts.onScrollDown : null;
    let onIncrease = opts && 'onIncrease' in opts ? opts.onIncrease : null;
    let onDecrease = opts && 'onDecrease' in opts ? opts.onDecrease : null;
    let onCopy = opts && 'onCopy' in opts ? opts.onCopy : null;
    let onCut = opts && 'onCut' in opts ? opts.onCut : null;
    let onPaste = opts && 'onPaste' in opts ? opts.onPaste : null;
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    let onMoveCursorForwardByCharacter = opts && 'onMoveCursorForwardByCharacter' in opts ? opts.onMoveCursorForwardByCharacter : null;
    let onMoveCursorBackwardByCharacter = opts && 'onMoveCursorBackwardByCharacter' in opts ? opts.onMoveCursorBackwardByCharacter : null;
    let onSetSelection = opts && 'onSetSelection' in opts ? opts.onSetSelection : null;
    let onDidGainAccessibilityFocus = opts && 'onDidGainAccessibilityFocus' in opts ? opts.onDidGainAccessibilityFocus : null;
    let onDidLoseAccessibilityFocus = opts && 'onDidLoseAccessibilityFocus' in opts ? opts.onDidLoseAccessibilityFocus : null;
    let customSemanticsActions = opts && 'customSemanticsActions' in opts ? opts.customSemanticsActions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.Semantics.fromProperties.call(this, {key: key, child: child, container: container, explicitChildNodes: explicitChildNodes, excludeSemantics: excludeSemantics, properties: new semantics.SemanticsProperties.new({enabled: enabled, checked: checked, toggled: toggled, selected: selected, button: button, link: link, header: header, textField: textField, readOnly: readOnly, focusable: focusable, focused: focused, inMutuallyExclusiveGroup: inMutuallyExclusiveGroup, obscured: obscured, multiline: multiline, scopesRoute: scopesRoute, namesRoute: namesRoute, hidden: hidden, image: image, liveRegion: liveRegion, maxValueLength: maxValueLength, currentValueLength: currentValueLength, label: label, value: value, increasedValue: increasedValue, decreasedValue: decreasedValue, hint: hint, textDirection: textDirection, sortKey: sortKey, onTap: onTap, onLongPress: onLongPress, onScrollLeft: onScrollLeft, onScrollRight: onScrollRight, onScrollUp: onScrollUp, onScrollDown: onScrollDown, onIncrease: onIncrease, onDecrease: onDecrease, onCopy: onCopy, onCut: onCut, onPaste: onPaste, onMoveCursorForwardByCharacter: onMoveCursorForwardByCharacter, onMoveCursorBackwardByCharacter: onMoveCursorBackwardByCharacter, onDidGainAccessibilityFocus: onDidGainAccessibilityFocus, onDidLoseAccessibilityFocus: onDidLoseAccessibilityFocus, onDismiss: onDismiss, onSetSelection: onSetSelection, customSemanticsActions: customSemanticsActions, hintOverrides: onTapHint != null || onLongPressHint != null ? new semantics.SemanticsHintOverrides.new({onTapHint: onTapHint, onLongPressHint: onLongPressHint}) : null}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
  }).prototype = basic.Semantics.prototype;
  (basic.Semantics.fromProperties = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let container = opts && 'container' in opts ? opts.container : false;
    let explicitChildNodes = opts && 'explicitChildNodes' in opts ? opts.explicitChildNodes : false;
    let excludeSemantics = opts && 'excludeSemantics' in opts ? opts.excludeSemantics : false;
    let properties = opts && 'properties' in opts ? opts.properties : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[container$] = container;
    this[explicitChildNodes$] = explicitChildNodes;
    this[excludeSemantics$] = excludeSemantics;
    this[properties$] = properties;
    if (!(container != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6584, 15, "container != null");
    if (!(properties != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6585, 15, "properties != null");
    basic.Semantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Semantics.prototype;
  dart.addTypeTests(basic.Semantics);
  dart.setMethodSignature(basic.Semantics, () => ({
    __proto__: dart.getMethods(basic.Semantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderSemanticsAnnotations, [framework.BuildContext]),
    [_getTextDirection]: dart.fnType(ui.TextDirection, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Semantics, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Semantics, () => ({
    __proto__: dart.getFields(basic.Semantics.__proto__),
    properties: dart.finalFieldType(semantics.SemanticsProperties),
    container: dart.finalFieldType(core.bool),
    explicitChildNodes: dart.finalFieldType(core.bool),
    excludeSemantics: dart.finalFieldType(core.bool)
  }));
  basic.MergeSemantics = class MergeSemantics extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new proxy_box.RenderMergeSemantics.new();
    }
  };
  (basic.MergeSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    basic.MergeSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.MergeSemantics.prototype;
  dart.addTypeTests(basic.MergeSemantics);
  dart.setMethodSignature(basic.MergeSemantics, () => ({
    __proto__: dart.getMethods(basic.MergeSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderMergeSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.MergeSemantics, "package:flutter/src/widgets/basic.dart");
  var blocking$ = dart.privateName(basic, "BlockSemantics.blocking");
  basic.BlockSemantics = class BlockSemantics extends framework.SingleChildRenderObjectWidget {
    get blocking() {
      return this[blocking$];
    }
    set blocking(value) {
      super.blocking = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderBlockSemantics.new({blocking: this.blocking});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderBlockSemantics._check(renderObject);
      renderObject.blocking = this.blocking;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("blocking", this.blocking));
    }
  };
  (basic.BlockSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let blocking = opts && 'blocking' in opts ? opts.blocking : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[blocking$] = blocking;
    basic.BlockSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.BlockSemantics.prototype;
  dart.addTypeTests(basic.BlockSemantics);
  dart.setMethodSignature(basic.BlockSemantics, () => ({
    __proto__: dart.getMethods(basic.BlockSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderBlockSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.BlockSemantics, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.BlockSemantics, () => ({
    __proto__: dart.getFields(basic.BlockSemantics.__proto__),
    blocking: dart.finalFieldType(core.bool)
  }));
  var excluding$ = dart.privateName(basic, "ExcludeSemantics.excluding");
  basic.ExcludeSemantics = class ExcludeSemantics extends framework.SingleChildRenderObjectWidget {
    get excluding() {
      return this[excluding$];
    }
    set excluding(value) {
      super.excluding = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderExcludeSemantics.new({excluding: this.excluding});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderExcludeSemantics._check(renderObject);
      renderObject.excluding = this.excluding;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("excluding", this.excluding));
    }
  };
  (basic.ExcludeSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let excluding = opts && 'excluding' in opts ? opts.excluding : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[excluding$] = excluding;
    if (!(excluding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6846, 15, "excluding != null");
    basic.ExcludeSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.ExcludeSemantics.prototype;
  dart.addTypeTests(basic.ExcludeSemantics);
  dart.setMethodSignature(basic.ExcludeSemantics, () => ({
    __proto__: dart.getMethods(basic.ExcludeSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderExcludeSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.ExcludeSemantics, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.ExcludeSemantics, () => ({
    __proto__: dart.getFields(basic.ExcludeSemantics.__proto__),
    excluding: dart.finalFieldType(core.bool)
  }));
  var index$0 = dart.privateName(basic, "IndexedSemantics.index");
  basic.IndexedSemantics = class IndexedSemantics extends framework.SingleChildRenderObjectWidget {
    get index() {
      return this[index$0];
    }
    set index(value) {
      super.index = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderIndexedSemantics.new({index: this.index});
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderIndexedSemantics._check(renderObject);
      renderObject.index = this.index;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfint()).new("index", this.index));
    }
  };
  (basic.IndexedSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let index = opts && 'index' in opts ? opts.index : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[index$0] = index;
    if (!(index != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6907, 15, "index != null");
    basic.IndexedSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.IndexedSemantics.prototype;
  dart.addTypeTests(basic.IndexedSemantics);
  dart.setMethodSignature(basic.IndexedSemantics, () => ({
    __proto__: dart.getMethods(basic.IndexedSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderIndexedSemantics, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.IndexedSemantics, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.IndexedSemantics, () => ({
    __proto__: dart.getFields(basic.IndexedSemantics.__proto__),
    index: dart.finalFieldType(core.int)
  }));
  var C194;
  var C195;
  var C193;
  var C192;
  var child$3 = dart.privateName(basic, "KeyedSubtree.child");
  basic.KeyedSubtree = class KeyedSubtree extends framework.StatelessWidget {
    get child() {
      return this[child$3];
    }
    set child(value) {
      super.child = value;
    }
    static wrap(child, childIndex, opts) {
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let key = child.key != null ? new (ValueKeyOfKey()).new(child.key) : new (ValueKeyOfint()).new(childIndex);
      return new basic.KeyedSubtree.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static ensureUniqueKeysForList(items, opts) {
      let baseIndex = opts && 'baseIndex' in opts ? opts.baseIndex : 0;
      if (items == null || dart.test(items[$isEmpty])) return items;
      let itemsWithUniqueKeys = JSArrayOfWidget().of([]);
      let itemIndex = baseIndex;
      for (let item of items) {
        itemsWithUniqueKeys[$add](basic.KeyedSubtree.wrap(item, itemIndex, {$creationLocationd_0dea112b090073317d4: C192 || CT.C192}));
        itemIndex = dart.notNull(itemIndex) + 1;
      }
      if (!!dart.test(debug$0.debugItemsHaveDuplicateKeys(itemsWithUniqueKeys))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6962, 12, "!debugItemsHaveDuplicateKeys(itemsWithUniqueKeys)");
      return itemsWithUniqueKeys;
    }
    build(context) {
      return this.child;
    }
  };
  (basic.KeyedSubtree.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$3] = child;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6935, 15, "child != null");
    basic.KeyedSubtree.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.KeyedSubtree.prototype;
  dart.addTypeTests(basic.KeyedSubtree);
  dart.setMethodSignature(basic.KeyedSubtree, () => ({
    __proto__: dart.getMethods(basic.KeyedSubtree.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.KeyedSubtree, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.KeyedSubtree, () => ({
    __proto__: dart.getFields(basic.KeyedSubtree.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var builder$ = dart.privateName(basic, "Builder.builder");
  basic.Builder = class Builder extends framework.StatelessWidget {
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    build(context) {
      return this.builder(context);
    }
  };
  (basic.Builder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$] = builder;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 6982, 15, "builder != null");
    basic.Builder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.Builder.prototype;
  dart.addTypeTests(basic.Builder);
  dart.setMethodSignature(basic.Builder, () => ({
    __proto__: dart.getMethods(basic.Builder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic.Builder, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.Builder, () => ({
    __proto__: dart.getFields(basic.Builder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext]))
  }));
  var builder$0 = dart.privateName(basic, "StatefulBuilder.builder");
  basic.StatefulBuilder = class StatefulBuilder extends framework.StatefulWidget {
    get builder() {
      return this[builder$0];
    }
    set builder(value) {
      super.builder = value;
    }
    createState() {
      return new basic._StatefulBuilderState.new();
    }
  };
  (basic.StatefulBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$0] = builder;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 7054, 15, "builder != null");
    basic.StatefulBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = basic.StatefulBuilder.prototype;
  dart.addTypeTests(basic.StatefulBuilder);
  dart.setMethodSignature(basic.StatefulBuilder, () => ({
    __proto__: dart.getMethods(basic.StatefulBuilder.__proto__),
    createState: dart.fnType(basic._StatefulBuilderState, [])
  }));
  dart.setLibraryUri(basic.StatefulBuilder, "package:flutter/src/widgets/basic.dart");
  dart.setFieldSignature(basic.StatefulBuilder, () => ({
    __proto__: dart.getFields(basic.StatefulBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [dart.fnType(dart.void, [])])]))
  }));
  basic._StatefulBuilderState = class _StatefulBuilderState extends framework.State$(basic.StatefulBuilder) {
    build(context) {
      return this.widget.builder(context, dart.bind(this, 'setState'));
    }
  };
  (basic._StatefulBuilderState.new = function() {
    basic._StatefulBuilderState.__proto__.new.call(this);
    ;
  }).prototype = basic._StatefulBuilderState.prototype;
  dart.addTypeTests(basic._StatefulBuilderState);
  dart.setMethodSignature(basic._StatefulBuilderState, () => ({
    __proto__: dart.getMethods(basic._StatefulBuilderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(basic._StatefulBuilderState, "package:flutter/src/widgets/basic.dart");
  basic.getAxisDirectionFromAxisReverseAndDirectionality = function getAxisDirectionFromAxisReverseAndDirectionality(context, axis, reverse) {
    switch (axis) {
      case C78 || CT.C78:
      {
        if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/basic.dart", 3013, 14, "debugCheckHasDirectionality(context)");
        let textDirection = basic.Directionality.of(context);
        let axisDirection = basic_types$.textDirectionToAxisDirection(textDirection);
        return dart.test(reverse) ? basic_types$.flipAxisDirection(axisDirection) : axisDirection;
      }
      case C77 || CT.C77:
      {
        return dart.test(reverse) ? basic_types$.AxisDirection.up : basic_types$.AxisDirection.down;
      }
    }
    return null;
  };
  var C196;
  var child$4 = dart.privateName(widget_span, "WidgetSpan.child");
  widget_span.WidgetSpan = class WidgetSpan extends placeholder_span.PlaceholderSpan {
    get child() {
      return this[child$4];
    }
    set child(value) {
      super.child = value;
    }
    build(builder, opts) {
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
      let dimensions = opts && 'dimensions' in opts ? opts.dimensions : null;
      if (!dart.test(this.debugAssertIsValid())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 102, 12, "debugAssertIsValid()");
      if (!(dimensions != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 103, 12, "dimensions != null");
      let hasStyle = this.style != null;
      if (hasStyle) {
        builder.pushStyle(this.style.getTextStyle({textScaleFactor: textScaleFactor}));
      }
      if (!(dart.notNull(builder.placeholderCount) < dart.notNull(dimensions[$length]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 108, 12, "builder.placeholderCount < dimensions.length");
      let currentDimensions = dimensions[$_get](builder.placeholderCount);
      builder.addPlaceholder(currentDimensions.size.width, currentDimensions.size.height, this.alignment, {scale: textScaleFactor, baseline: currentDimensions.baseline, baselineOffset: currentDimensions.baselineOffset});
      if (hasStyle) {
        builder.pop();
      }
    }
    visitChildren(visitor) {
      return visitor(this);
    }
    getSpanForPositionVisitor(position, offset) {
      if (position.offset == offset.value) {
        return this;
      }
      offset.increment(1);
      return null;
    }
    codeUnitAtVisitor(index, offset) {
      return null;
    }
    compareTo(other) {
      if (this === other) return basic_types$.RenderComparison.identical;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return basic_types$.RenderComparison.layout;
      if (!(this.style == null)[$_equals](other.style == null)) return basic_types$.RenderComparison.layout;
      let typedOther = widget_span.WidgetSpan.as(other);
      if (!dart.equals(this.child, typedOther.child) || !dart.equals(this.alignment, typedOther.alignment)) {
        return basic_types$.RenderComparison.layout;
      }
      let result = basic_types$.RenderComparison.identical;
      if (this.style != null) {
        let candidate = this.style.compareTo(other.style);
        if (dart.notNull(candidate.index) > dart.notNull(result.index)) result = candidate;
        if (dart.equals(result, basic_types$.RenderComparison.layout)) return result;
      }
      return result;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      if (!super._equals(other)) return false;
      return widget_span.WidgetSpan.is(other) && dart.equals(other.child, this.child) && dart.equals(other.alignment, this.alignment) && dart.equals(other.baseline, this.baseline);
    }
    get hashCode() {
      return ui.hashValues(super.hashCode, this.child, this.alignment, this.baseline);
    }
    getSpanForPosition(position) {
      if (!dart.test(this.debugAssertIsValid())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 186, 12, "debugAssertIsValid()");
      return null;
    }
    debugAssertIsValid() {
      return true;
    }
  };
  (widget_span.WidgetSpan.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C196 || CT.C196;
    let baseline = opts && 'baseline' in opts ? opts.baseline : null;
    let style = opts && 'style' in opts ? opts.style : null;
    this[child$4] = child;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 77, 15, "child != null");
    if (!(baseline != null || !(alignment == ui.PlaceholderAlignment.aboveBaseline || alignment == ui.PlaceholderAlignment.belowBaseline || alignment == ui.PlaceholderAlignment.baseline))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_span.dart", 78, 15, "baseline != null || !(\r\n         identical(alignment, ui.PlaceholderAlignment.aboveBaseline) ||\r\n         identical(alignment, ui.PlaceholderAlignment.belowBaseline) ||\r\n         identical(alignment, ui.PlaceholderAlignment.baseline)\r\n       )");
    widget_span.WidgetSpan.__proto__.new.call(this, {alignment: alignment, baseline: baseline, style: style});
    ;
  }).prototype = widget_span.WidgetSpan.prototype;
  dart.addTypeTests(widget_span.WidgetSpan);
  dart.setMethodSignature(widget_span.WidgetSpan, () => ({
    __proto__: dart.getMethods(widget_span.WidgetSpan.__proto__),
    build: dart.fnType(dart.void, [ui.ParagraphBuilder], {dimensions: core.List$(text_painter.PlaceholderDimensions), textScaleFactor: core.double}, {}),
    visitChildren: dart.fnType(core.bool, [dart.fnType(core.bool, [inline_span.InlineSpan])]),
    getSpanForPositionVisitor: dart.fnType(inline_span.InlineSpan, [ui.TextPosition, inline_span.Accumulator]),
    codeUnitAtVisitor: dart.fnType(core.int, [core.int, inline_span.Accumulator]),
    compareTo: dart.fnType(basic_types$.RenderComparison, [inline_span.InlineSpan])
  }));
  dart.setLibraryUri(widget_span.WidgetSpan, "package:flutter/src/widgets/widget_span.dart");
  dart.setFieldSignature(widget_span.WidgetSpan, () => ({
    __proto__: dart.getFields(widget_span.WidgetSpan.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.defineExtensionMethods(widget_span.WidgetSpan, ['_equals']);
  dart.defineExtensionAccessors(widget_span.WidgetSpan, ['hashCode']);
  localizations._Pending = class _Pending extends core.Object {};
  (localizations._Pending.new = function(delegate, futureValue) {
    this.delegate = delegate;
    this.futureValue = futureValue;
    ;
  }).prototype = localizations._Pending.prototype;
  dart.addTypeTests(localizations._Pending);
  dart.setLibraryUri(localizations._Pending, "package:flutter/src/widgets/localizations.dart");
  dart.setFieldSignature(localizations._Pending, () => ({
    __proto__: dart.getFields(localizations._Pending.__proto__),
    delegate: dart.finalFieldType(localizations.LocalizationsDelegate),
    futureValue: dart.finalFieldType(async.Future)
  }));
  const _is_LocalizationsDelegate_default = Symbol('_is_LocalizationsDelegate_default');
  localizations.LocalizationsDelegate$ = dart.generic(T => {
    class LocalizationsDelegate extends core.Object {
      get type() {
        return dart.wrapType(T);
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "LocalizationsDelegate")) + "[" + dart.str(this.type) + "]";
      }
    }
    (LocalizationsDelegate.new = function() {
      ;
    }).prototype = LocalizationsDelegate.prototype;
    dart.addTypeTests(LocalizationsDelegate);
    LocalizationsDelegate.prototype[_is_LocalizationsDelegate_default] = true;
    dart.setGetterSignature(LocalizationsDelegate, () => ({
      __proto__: dart.getGetters(LocalizationsDelegate.__proto__),
      type: core.Type
    }));
    dart.setLibraryUri(LocalizationsDelegate, "package:flutter/src/widgets/localizations.dart");
    dart.defineExtensionMethods(LocalizationsDelegate, ['toString']);
    return LocalizationsDelegate;
  });
  localizations.LocalizationsDelegate = localizations.LocalizationsDelegate$();
  dart.addTypeTests(localizations.LocalizationsDelegate, _is_LocalizationsDelegate_default);
  localizations.WidgetsLocalizations = class WidgetsLocalizations extends core.Object {
    static of(context) {
      return localizations.Localizations.of(localizations.WidgetsLocalizations, context, dart.wrapType(localizations.WidgetsLocalizations));
    }
  };
  (localizations.WidgetsLocalizations.new = function() {
    ;
  }).prototype = localizations.WidgetsLocalizations.prototype;
  dart.addTypeTests(localizations.WidgetsLocalizations);
  dart.setLibraryUri(localizations.WidgetsLocalizations, "package:flutter/src/widgets/localizations.dart");
  localizations._WidgetsLocalizationsDelegate = class _WidgetsLocalizationsDelegate extends localizations.LocalizationsDelegate$(localizations.WidgetsLocalizations) {
    isSupported(locale) {
      return true;
    }
    load(locale) {
      return localizations.DefaultWidgetsLocalizations.load(locale);
    }
    shouldReload(old) {
      localizations._WidgetsLocalizationsDelegate._check(old);
      return false;
    }
    toString() {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  (localizations._WidgetsLocalizationsDelegate.new = function() {
    localizations._WidgetsLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = localizations._WidgetsLocalizationsDelegate.prototype;
  dart.addTypeTests(localizations._WidgetsLocalizationsDelegate);
  dart.setMethodSignature(localizations._WidgetsLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(localizations._WidgetsLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(localizations.WidgetsLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(localizations._WidgetsLocalizationsDelegate, "package:flutter/src/widgets/localizations.dart");
  dart.defineExtensionMethods(localizations._WidgetsLocalizationsDelegate, ['toString']);
  var C197;
  var C198;
  localizations.DefaultWidgetsLocalizations = class DefaultWidgetsLocalizations extends core.Object {
    get textDirection() {
      return ui.TextDirection.ltr;
    }
    static load(locale) {
      return new (SynchronousFutureOfWidgetsLocalizations()).new(C197 || CT.C197);
    }
  };
  (localizations.DefaultWidgetsLocalizations.new = function() {
    ;
  }).prototype = localizations.DefaultWidgetsLocalizations.prototype;
  dart.addTypeTests(localizations.DefaultWidgetsLocalizations);
  localizations.DefaultWidgetsLocalizations[dart.implements] = () => [localizations.WidgetsLocalizations];
  dart.setGetterSignature(localizations.DefaultWidgetsLocalizations, () => ({
    __proto__: dart.getGetters(localizations.DefaultWidgetsLocalizations.__proto__),
    textDirection: ui.TextDirection
  }));
  dart.setLibraryUri(localizations.DefaultWidgetsLocalizations, "package:flutter/src/widgets/localizations.dart");
  dart.defineLazy(localizations.DefaultWidgetsLocalizations, {
    /*localizations.DefaultWidgetsLocalizations.delegate*/get delegate() {
      return C198 || CT.C198;
    }
  });
  var locale$0 = dart.privateName(localizations, "_LocalizationsScope.locale");
  var localizationsState$ = dart.privateName(localizations, "_LocalizationsScope.localizationsState");
  var typeToResources$ = dart.privateName(localizations, "_LocalizationsScope.typeToResources");
  localizations._LocalizationsScope = class _LocalizationsScope extends framework.InheritedWidget {
    get locale() {
      return this[locale$0];
    }
    set locale(value) {
      super.locale = value;
    }
    get localizationsState() {
      return this[localizationsState$];
    }
    set localizationsState(value) {
      super.localizationsState = value;
    }
    get typeToResources() {
      return this[typeToResources$];
    }
    set typeToResources(value) {
      super.typeToResources = value;
    }
    updateShouldNotify(old) {
      localizations._LocalizationsScope._check(old);
      return !dart.equals(this.typeToResources, old.typeToResources);
    }
  };
  (localizations._LocalizationsScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsState = opts && 'localizationsState' in opts ? opts.localizationsState : null;
    let typeToResources = opts && 'typeToResources' in opts ? opts.typeToResources : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[locale$0] = locale;
    this[localizationsState$] = localizationsState;
    this[typeToResources$] = typeToResources;
    if (!(localizationsState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 233, 15, "localizationsState != null");
    if (!(typeToResources != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 234, 15, "typeToResources != null");
    localizations._LocalizationsScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = localizations._LocalizationsScope.prototype;
  dart.addTypeTests(localizations._LocalizationsScope);
  dart.setMethodSignature(localizations._LocalizationsScope, () => ({
    __proto__: dart.getMethods(localizations._LocalizationsScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(localizations._LocalizationsScope, "package:flutter/src/widgets/localizations.dart");
  dart.setFieldSignature(localizations._LocalizationsScope, () => ({
    __proto__: dart.getFields(localizations._LocalizationsScope.__proto__),
    locale: dart.finalFieldType(ui.Locale),
    localizationsState: dart.finalFieldType(localizations._LocalizationsState),
    typeToResources: dart.finalFieldType(core.Map$(core.Type, dart.dynamic))
  }));
  var locale$1 = dart.privateName(localizations, "Localizations.locale");
  var delegates$ = dart.privateName(localizations, "Localizations.delegates");
  var child$5 = dart.privateName(localizations, "Localizations.child");
  localizations.Localizations = class Localizations extends framework.StatefulWidget {
    get locale() {
      return this[locale$1];
    }
    set locale(value) {
      super.locale = value;
    }
    get delegates() {
      return this[delegates$];
    }
    set delegates(value) {
      super.delegates = value;
    }
    get child() {
      return this[child$5];
    }
    set child(value) {
      super.child = value;
    }
    static override(opts) {
      let t16;
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let delegates = opts && 'delegates' in opts ? opts.delegates : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      let mergedDelegates = localizations.Localizations._delegatesOf(context);
      if (delegates != null) mergedDelegates[$insertAll](0, delegates);
      return new localizations.Localizations.new({key: key, locale: (t16 = locale, t16 == null ? localizations.Localizations.localeOf(context) : t16), delegates: mergedDelegates, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static localeOf(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 413, 12, "context != null");
      if (!(nullOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 414, 12, "nullOk != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      if (dart.test(nullOk) && scope == null) return null;
      if (!(scope != null)) dart.assertFailed("a Localizations ancestor was not found", "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 418, 12, "scope != null");
      return scope.localizationsState.locale;
    }
    static _delegatesOf(context) {
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 425, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      if (!(scope != null)) dart.assertFailed("a Localizations ancestor was not found", "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 427, 12, "scope != null");
      return ListOfLocalizationsDelegate().from(scope.localizationsState.widget.delegates);
    }
    static of(T, context, type) {
      let t16, t16$;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 447, 12, "context != null");
      if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 448, 12, "type != null");
      let scope = context.dependOnInheritedWidgetOfExactType(localizations._LocalizationsScope);
      t16$ = (t16 = scope, t16 == null ? null : t16.localizationsState);
      return t16$ == null ? null : t16$.resourcesFor(T, type);
    }
    createState() {
      return new localizations._LocalizationsState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale));
      properties.add(new (IterablePropertyOfLocalizationsDelegate()).new("delegates", this.delegates));
    }
  };
  (localizations.Localizations.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let delegates = opts && 'delegates' in opts ? opts.delegates : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[locale$1] = locale;
    this[delegates$] = delegates;
    this[child$5] = child;
    if (!(locale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 344, 15, "locale != null");
    if (!(delegates != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 345, 15, "delegates != null");
    if (!dart.test(delegates[$any](dart.fn(delegate => LocalizationsDelegateOfWidgetsLocalizations().is(delegate), LocalizationsDelegateTobool())))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 346, 15, "delegates.any((LocalizationsDelegate<dynamic> delegate) => delegate is LocalizationsDelegate<WidgetsLocalizations>)");
    localizations.Localizations.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = localizations.Localizations.prototype;
  dart.addTypeTests(localizations.Localizations);
  dart.setMethodSignature(localizations.Localizations, () => ({
    __proto__: dart.getMethods(localizations.Localizations.__proto__),
    createState: dart.fnType(localizations._LocalizationsState, [])
  }));
  dart.setLibraryUri(localizations.Localizations, "package:flutter/src/widgets/localizations.dart");
  dart.setFieldSignature(localizations.Localizations, () => ({
    __proto__: dart.getFields(localizations.Localizations.__proto__),
    locale: dart.finalFieldType(ui.Locale),
    delegates: dart.finalFieldType(core.List$(localizations.LocalizationsDelegate)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _localizedResourcesScopeKey = dart.privateName(localizations, "_localizedResourcesScopeKey");
  var _typeToResources = dart.privateName(localizations, "_typeToResources");
  var _locale = dart.privateName(localizations, "_locale");
  var _anyDelegatesShouldReload = dart.privateName(localizations, "_anyDelegatesShouldReload");
  var _textDirection = dart.privateName(localizations, "_textDirection");
  var C200;
  var C199;
  var C203;
  var C204;
  var C202;
  var C201;
  var C207;
  var C208;
  var C209;
  var C210;
  var C211;
  var C206;
  var C205;
  var C214;
  var C215;
  var C213;
  var C212;
  localizations._LocalizationsState = class _LocalizationsState extends framework.State$(localizations.Localizations) {
    get locale() {
      return this[_locale];
    }
    initState() {
      super.initState();
      this.load(this.widget.locale);
    }
    [_anyDelegatesShouldReload](old) {
      if (this.widget.delegates[$length] != old.delegates[$length]) return true;
      let delegates = this.widget.delegates[$toList]();
      let oldDelegates = old.delegates[$toList]();
      for (let i = 0; i < dart.notNull(delegates[$length]); i = i + 1) {
        let delegate = delegates[$_get](i);
        let oldDelegate = oldDelegates[$_get](i);
        if (!dart.equals(dart.runtimeType(delegate), dart.runtimeType(oldDelegate)) || dart.test(delegate.shouldReload(oldDelegate))) return true;
      }
      return false;
    }
    didUpdateWidget(old) {
      localizations.Localizations._check(old);
      super.didUpdateWidget(old);
      if (!dart.equals(this.widget.locale, old.locale) || this.widget.delegates == null && old.delegates != null || this.widget.delegates != null && old.delegates == null || this.widget.delegates != null && dart.test(this[_anyDelegatesShouldReload](old))) this.load(this.widget.locale);
    }
    load(locale) {
      let delegates = this.widget.delegates;
      if (delegates == null || dart.test(delegates[$isEmpty])) {
        this[_locale] = locale;
        return;
      }
      let typeToResources = null;
      let typeToResourcesFuture = localizations._loadAll(locale, delegates).then(MapOfType$dynamic(), dart.fn(value => typeToResources = value, MapOfType$dynamicToMapOfType$dynamic()));
      if (typeToResources != null) {
        this[_typeToResources] = typeToResources;
        this[_locale] = locale;
      } else {
        binding$.RendererBinding.instance.deferFirstFrame();
        typeToResourcesFuture.then(dart.void, dart.fn(value => {
          if (dart.test(this.mounted)) {
            this.setState(dart.fn(() => {
              this[_typeToResources] = value;
              this[_locale] = locale;
            }, VoidToNull()));
          }
          binding$.RendererBinding.instance.allowFirstFrame();
        }, MapOfType$dynamicToNull()));
      }
    }
    resourcesFor(T, type) {
      if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 537, 12, "type != null");
      let resources = T.as(this[_typeToResources][$_get](type));
      return resources;
    }
    get [_textDirection]() {
      let resources = localizations.WidgetsLocalizations.as(this[_typeToResources][$_get](dart.wrapType(localizations.WidgetsLocalizations)));
      if (!(resources != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 544, 12, "resources != null");
      return resources.textDirection;
    }
    build(context) {
      if (this[_locale] == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C199 || CT.C199});
      return new basic.Semantics.new({textDirection: this[_textDirection], child: new localizations._LocalizationsScope.new({key: this[_localizedResourcesScopeKey], locale: this[_locale], localizationsState: this, typeToResources: this[_typeToResources], child: new basic.Directionality.new({textDirection: this[_textDirection], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C201 || CT.C201}), $creationLocationd_0dea112b090073317d4: C205 || CT.C205}), $creationLocationd_0dea112b090073317d4: C212 || CT.C212});
    }
  };
  (localizations._LocalizationsState.new = function() {
    this[_localizedResourcesScopeKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_typeToResources] = new (LinkedMapOfType$dynamic()).new();
    this[_locale] = null;
    localizations._LocalizationsState.__proto__.new.call(this);
    ;
  }).prototype = localizations._LocalizationsState.prototype;
  dart.addTypeTests(localizations._LocalizationsState);
  dart.setMethodSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getMethods(localizations._LocalizationsState.__proto__),
    [_anyDelegatesShouldReload]: dart.fnType(core.bool, [localizations.Localizations]),
    load: dart.fnType(dart.void, [ui.Locale]),
    resourcesFor: dart.gFnType(T => [T, [core.Type]]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getGetters(localizations._LocalizationsState.__proto__),
    locale: ui.Locale,
    [_textDirection]: ui.TextDirection
  }));
  dart.setLibraryUri(localizations._LocalizationsState, "package:flutter/src/widgets/localizations.dart");
  dart.setFieldSignature(localizations._LocalizationsState, () => ({
    __proto__: dart.getFields(localizations._LocalizationsState.__proto__),
    [_localizedResourcesScopeKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_typeToResources]: dart.fieldType(core.Map$(core.Type, dart.dynamic)),
    [_locale]: dart.fieldType(ui.Locale)
  }));
  localizations._loadAll = function _loadAll(locale, allDelegates) {
    let output = new (LinkedMapOfType$dynamic()).new();
    let pendingList = null;
    let types = LinkedHashSetOfType().new();
    let delegates = JSArrayOfLocalizationsDelegate().of([]);
    for (let delegate of allDelegates) {
      if (!dart.test(types.contains(delegate.type)) && dart.test(delegate.isSupported(locale))) {
        types.add(delegate.type);
        delegates[$add](delegate);
      }
    }
    for (let delegate of delegates) {
      let inputValue = delegate.load(locale);
      let completedValue = null;
      let futureValue = inputValue.then(dart.dynamic, dart.fn(value => completedValue = value, dynamicTodynamic()));
      if (completedValue != null) {
        let type = delegate.type;
        if (!!dart.test(output[$containsKey](type))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 65, 14, "!output.containsKey(type)");
        output[$_set](type, completedValue);
      } else {
        pendingList == null ? pendingList = JSArrayOf_Pending().of([]) : null;
        pendingList[$add](new localizations._Pending.new(delegate, futureValue));
      }
    }
    if (pendingList == null) return new (SynchronousFutureOfMapOfType$dynamic()).new(output);
    return async.Future.wait(dart.dynamic, pendingList[$map](async.Future, dart.fn(p => p.futureValue, _PendingToFuture()))).then(MapOfType$dynamic(), dart.fn(values => {
      if (!(values[$length] == pendingList[$length])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 80, 14, "values.length == pendingList.length");
      for (let i = 0; i < dart.notNull(values[$length]); i = i + 1) {
        let type = pendingList[$_get](i).delegate.type;
        if (!!dart.test(output[$containsKey](type))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/localizations.dart", 83, 16, "!output.containsKey(type)");
        output[$_set](type, values[$_get](i));
      }
      return output;
    }, ListToMapOfType$dynamic()));
  };
  var C216;
  var C217;
  var decoration$ = dart.privateName(container, "DecoratedBox.decoration");
  var position$1 = dart.privateName(container, "DecoratedBox.position");
  container.DecoratedBox = class DecoratedBox extends framework.SingleChildRenderObjectWidget {
    get decoration() {
      return this[decoration$];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get position() {
      return this[position$1];
    }
    set position(value) {
      super.position = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderDecoratedBox.new({decoration: this.decoration, position: this.position, configuration: image$.createLocalImageConfiguration(context)});
    }
    updateRenderObject(context, renderObject) {
      let t16;
      proxy_box.RenderDecoratedBox._check(renderObject);
      t16 = renderObject;
      t16.decoration = this.decoration;
      t16.configuration = image$.createLocalImageConfiguration(context);
      t16.position = this.position;
      t16;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let label = null;
      if (this.position != null) {
        switch (this.position) {
          case C216 || CT.C216:
          {
            label = "bg";
            break;
          }
          case C217 || CT.C217:
          {
            label = "fg";
            break;
          }
        }
      } else {
        label = "decoration";
      }
      properties.add(new (EnumPropertyOfDecorationPosition()).new("position", this.position, {level: this.position != null ? diagnostics$.DiagnosticLevel.hidden : diagnostics$.DiagnosticLevel.info}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new(label, this.decoration, {ifNull: "no decoration", showName: this.decoration != null}));
    }
  };
  (container.DecoratedBox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let position = opts && 'position' in opts ? opts.position : C216 || CT.C216;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[decoration$] = decoration;
    this[position$1] = position;
    if (!(decoration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 110, 15, "decoration != null");
    if (!(position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 111, 15, "position != null");
    container.DecoratedBox.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = container.DecoratedBox.prototype;
  dart.addTypeTests(container.DecoratedBox);
  dart.setMethodSignature(container.DecoratedBox, () => ({
    __proto__: dart.getMethods(container.DecoratedBox.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderDecoratedBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(container.DecoratedBox, "package:flutter/src/widgets/container.dart");
  dart.setFieldSignature(container.DecoratedBox, () => ({
    __proto__: dart.getFields(container.DecoratedBox.__proto__),
    decoration: dart.finalFieldType(decoration.Decoration),
    position: dart.finalFieldType(proxy_box.DecorationPosition)
  }));
  var _paddingIncludingDecoration = dart.privateName(container, "_paddingIncludingDecoration");
  var BoxConstraints_maxHeight = dart.privateName(box$, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box$, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box$, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box$, "BoxConstraints.minWidth");
  var C218;
  var C221;
  var C220;
  var C219;
  var C224;
  var C225;
  var C226;
  var C223;
  var C222;
  var C229;
  var C230;
  var C228;
  var C227;
  var C233;
  var C234;
  var C232;
  var C231;
  var C237;
  var C238;
  var C236;
  var C235;
  var C241;
  var C242;
  var C243;
  var C240;
  var C239;
  var C246;
  var C247;
  var C245;
  var C244;
  var C250;
  var C251;
  var C249;
  var C248;
  var C254;
  var C255;
  var C253;
  var C252;
  var C258;
  var C259;
  var C260;
  var C257;
  var C256;
  var child$6 = dart.privateName(container, "Container.child");
  var alignment$10 = dart.privateName(container, "Container.alignment");
  var padding$1 = dart.privateName(container, "Container.padding");
  var decoration$0 = dart.privateName(container, "Container.decoration");
  var foregroundDecoration$ = dart.privateName(container, "Container.foregroundDecoration");
  var constraints$0 = dart.privateName(container, "Container.constraints");
  var margin$ = dart.privateName(container, "Container.margin");
  var transform$0 = dart.privateName(container, "Container.transform");
  var clipBehavior$5 = dart.privateName(container, "Container.clipBehavior");
  container.Container = class Container extends framework.StatelessWidget {
    get child() {
      return this[child$6];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[alignment$10];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    get decoration() {
      return this[decoration$0];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get foregroundDecoration() {
      return this[foregroundDecoration$];
    }
    set foregroundDecoration(value) {
      super.foregroundDecoration = value;
    }
    get constraints() {
      return this[constraints$0];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$0];
    }
    set transform(value) {
      super.transform = value;
    }
    get clipBehavior() {
      return this[clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get [_paddingIncludingDecoration]() {
      if (this.decoration == null || this.decoration.padding == null) return this.padding;
      let decorationPadding = this.decoration.padding;
      if (this.padding == null) return decorationPadding;
      return this.padding.add(decorationPadding);
    }
    build(context) {
      let current = this.child;
      if (this.child == null && (this.constraints == null || !dart.test(this.constraints.isTight))) {
        current = new basic.LimitedBox.new({maxWidth: 0.0, maxHeight: 0.0, child: new basic.ConstrainedBox.new({constraints: C218 || CT.C218, $creationLocationd_0dea112b090073317d4: C219 || CT.C219}), $creationLocationd_0dea112b090073317d4: C222 || CT.C222});
      }
      if (this.alignment != null) current = new basic.Align.new({alignment: this.alignment, child: current, $creationLocationd_0dea112b090073317d4: C227 || CT.C227});
      let effectivePadding = this[_paddingIncludingDecoration];
      if (effectivePadding != null) current = new basic.Padding.new({padding: effectivePadding, child: current, $creationLocationd_0dea112b090073317d4: C231 || CT.C231});
      if (this.decoration != null) current = new container.DecoratedBox.new({decoration: this.decoration, child: current, $creationLocationd_0dea112b090073317d4: C235 || CT.C235});
      if (this.foregroundDecoration != null) {
        current = new container.DecoratedBox.new({decoration: this.foregroundDecoration, position: proxy_box.DecorationPosition.foreground, child: current, $creationLocationd_0dea112b090073317d4: C239 || CT.C239});
      }
      if (this.constraints != null) current = new basic.ConstrainedBox.new({constraints: this.constraints, child: current, $creationLocationd_0dea112b090073317d4: C244 || CT.C244});
      if (this.margin != null) current = new basic.Padding.new({padding: this.margin, child: current, $creationLocationd_0dea112b090073317d4: C248 || CT.C248});
      if (this.transform != null) current = new basic.Transform.new({transform: this.transform, child: current, $creationLocationd_0dea112b090073317d4: C252 || CT.C252});
      if (!dart.equals(this.clipBehavior, ui.Clip.none)) {
        current = new basic.ClipPath.new({clipper: new container._DecorationClipper.new({textDirection: basic.Directionality.of(context), decoration: this.decoration}), clipBehavior: this.clipBehavior, child: current, $creationLocationd_0dea112b090073317d4: C256 || CT.C256});
      }
      return current;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: ui.Clip.none}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new("bg", this.decoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new("fg", this.foregroundDecoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
  };
  (container.Container.new = function(opts) {
    let t16, t16$, t16$0;
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let foregroundDecoration = opts && 'foregroundDecoration' in opts ? opts.foregroundDecoration : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C138 || CT.C138;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$10] = alignment;
    this[padding$1] = padding;
    this[foregroundDecoration$] = foregroundDecoration;
    this[margin$] = margin;
    this[transform$0] = transform;
    this[child$6] = child;
    this[clipBehavior$5] = clipBehavior;
    if (!(margin == null || dart.test(margin.isNonNegative))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 316, 15, "margin == null || margin.isNonNegative");
    if (!(padding == null || dart.test(padding.isNonNegative))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 317, 15, "padding == null || padding.isNonNegative");
    if (!(decoration == null || dart.test(decoration.debugAssertIsValid()))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 318, 15, "decoration == null || decoration.debugAssertIsValid()");
    if (!(constraints == null || dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 319, 15, "constraints == null || constraints.debugAssertIsValid()");
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 320, 15, "clipBehavior != null");
    if (!(color == null || decoration == null)) dart.assertFailed("Cannot provide both a color and a decoration\n" + "The color argument is just a shorthand for \"decoration: new BoxDecoration(color: color)\".", "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 321, 15, "color == null || decoration == null");
    this[decoration$0] = (t16 = decoration, t16 == null ? color != null ? new box_decoration.BoxDecoration.new({color: color}) : null : t16);
    this[constraints$0] = width != null || height != null ? (t16$0 = (t16$ = constraints, t16$ == null ? null : t16$.tighten({width: width, height: height})), t16$0 == null ? new box$.BoxConstraints.tightFor({width: width, height: height}) : t16$0) : constraints;
    container.Container.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = container.Container.prototype;
  dart.addTypeTests(container.Container);
  dart.setMethodSignature(container.Container, () => ({
    __proto__: dart.getMethods(container.Container.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(container.Container, () => ({
    __proto__: dart.getGetters(container.Container.__proto__),
    [_paddingIncludingDecoration]: edge_insets.EdgeInsetsGeometry
  }));
  dart.setLibraryUri(container.Container, "package:flutter/src/widgets/container.dart");
  dart.setFieldSignature(container.Container, () => ({
    __proto__: dart.getFields(container.Container.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    decoration: dart.finalFieldType(decoration.Decoration),
    foregroundDecoration: dart.finalFieldType(decoration.Decoration),
    constraints: dart.finalFieldType(box$.BoxConstraints),
    margin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    transform: dart.finalFieldType(vector_math_64.Matrix4),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  container._DecorationClipper = class _DecorationClipper extends proxy_box.CustomClipper$(ui.Path) {
    getClip(size) {
      return this.decoration.getClipPath(ui.Offset.zero['&'](size), this.textDirection);
    }
    shouldReclip(oldClipper) {
      container._DecorationClipper._check(oldClipper);
      return !dart.equals(oldClipper.decoration, this.decoration) || !dart.equals(oldClipper.textDirection, this.textDirection);
    }
  };
  (container._DecorationClipper.new = function(opts) {
    let t16;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    this.decoration = decoration;
    if (!(decoration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/container.dart", 479, 16, "decoration != null");
    this.textDirection = (t16 = textDirection, t16 == null ? ui.TextDirection.ltr : t16);
    container._DecorationClipper.__proto__.new.call(this);
    ;
  }).prototype = container._DecorationClipper.prototype;
  dart.addTypeTests(container._DecorationClipper);
  dart.setMethodSignature(container._DecorationClipper, () => ({
    __proto__: dart.getMethods(container._DecorationClipper.__proto__),
    getClip: dart.fnType(ui.Path, [ui.Size]),
    shouldReclip: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(container._DecorationClipper, "package:flutter/src/widgets/container.dart");
  dart.setFieldSignature(container._DecorationClipper, () => ({
    __proto__: dart.getFields(container._DecorationClipper.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection),
    decoration: dart.finalFieldType(decoration.Decoration)
  }));
  var image$1 = dart.privateName(image$, "Image.image");
  var frameBuilder$ = dart.privateName(image$, "Image.frameBuilder");
  var loadingBuilder$ = dart.privateName(image$, "Image.loadingBuilder");
  var width$3 = dart.privateName(image$, "Image.width");
  var height$3 = dart.privateName(image$, "Image.height");
  var color$2 = dart.privateName(image$, "Image.color");
  var filterQuality$0 = dart.privateName(image$, "Image.filterQuality");
  var colorBlendMode$0 = dart.privateName(image$, "Image.colorBlendMode");
  var fit$3 = dart.privateName(image$, "Image.fit");
  var alignment$11 = dart.privateName(image$, "Image.alignment");
  var repeat$0 = dart.privateName(image$, "Image.repeat");
  var centerSlice$0 = dart.privateName(image$, "Image.centerSlice");
  var matchTextDirection$0 = dart.privateName(image$, "Image.matchTextDirection");
  var gaplessPlayback$ = dart.privateName(image$, "Image.gaplessPlayback");
  var semanticLabel$ = dart.privateName(image$, "Image.semanticLabel");
  var excludeFromSemantics$0 = dart.privateName(image$, "Image.excludeFromSemantics");
  image$.Image = class Image extends framework.StatefulWidget {
    get image() {
      return this[image$1];
    }
    set image(value) {
      super.image = value;
    }
    get frameBuilder() {
      return this[frameBuilder$];
    }
    set frameBuilder(value) {
      super.frameBuilder = value;
    }
    get loadingBuilder() {
      return this[loadingBuilder$];
    }
    set loadingBuilder(value) {
      super.loadingBuilder = value;
    }
    get width() {
      return this[width$3];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$3];
    }
    set height(value) {
      super.height = value;
    }
    get color() {
      return this[color$2];
    }
    set color(value) {
      super.color = value;
    }
    get filterQuality() {
      return this[filterQuality$0];
    }
    set filterQuality(value) {
      super.filterQuality = value;
    }
    get colorBlendMode() {
      return this[colorBlendMode$0];
    }
    set colorBlendMode(value) {
      super.colorBlendMode = value;
    }
    get fit() {
      return this[fit$3];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$11];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$0];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get centerSlice() {
      return this[centerSlice$0];
    }
    set centerSlice(value) {
      super.centerSlice = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$0];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get gaplessPlayback() {
      return this[gaplessPlayback$];
    }
    set gaplessPlayback(value) {
      super.gaplessPlayback = value;
    }
    get semanticLabel() {
      return this[semanticLabel$];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$0];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    createState() {
      return new image$._ImageState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImageProvider()).new("image", this.image));
      properties.add(new (DiagnosticsPropertyOfFunction()).new("frameBuilder", this.frameBuilder));
      properties.add(new (DiagnosticsPropertyOfFunction()).new("loadingBuilder", this.loadingBuilder));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBlendMode()).new("colorBlendMode", this.colorBlendMode, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBoxFit()).new("fit", this.fit, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (EnumPropertyOfImageRepeat()).new("repeat", this.repeat, {defaultValue: decoration_image.ImageRepeat.noRepeat}));
      properties.add(new (DiagnosticsPropertyOfRect()).new("centerSlice", this.centerSlice, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("matchTextDirection", {value: this.matchTextDirection, ifTrue: "match text direction"}));
      properties.add(new diagnostics$.StringProperty.new("semanticLabel", this.semanticLabel, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("this.excludeFromSemantics", this.excludeFromSemantics));
      properties.add(new (EnumPropertyOfFilterQuality()).new("filterQuality", this.filterQuality));
    }
  };
  (image$.Image.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let loadingBuilder = opts && 'loadingBuilder' in opts ? opts.loadingBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$1] = image;
    this[frameBuilder$] = frameBuilder;
    this[loadingBuilder$] = loadingBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[width$3] = width;
    this[height$3] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$11] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    if (!(image != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 298, 15, "image != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 299, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 300, 15, "repeat != null");
    if (!(filterQuality != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 301, 15, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 302, 15, "matchTextDirection != null");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.network = function(src, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let loadingBuilder = opts && 'loadingBuilder' in opts ? opts.loadingBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[loadingBuilder$] = loadingBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[width$3] = width;
    this[height$3] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$11] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[image$1] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new _network_image_web.NetworkImage.new(src, {scale: scale, headers: headers}));
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 361, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 362, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 363, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 364, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 365, 15, "cacheHeight == null || cacheHeight > 0");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.file = function(file, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[width$3] = width;
    this[height$3] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$11] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[image$1] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new image_provider.FileImage.new(file, {scale: scale}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 414, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 415, 15, "repeat != null");
    if (!(filterQuality != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 416, 15, "filterQuality != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 417, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 418, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 419, 15, "cacheHeight == null || cacheHeight > 0");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.asset = function(name, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let $package = opts && 'package' in opts ? opts.package : null;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[width$3] = width;
    this[height$3] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$11] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[image$1] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, scale != null ? new image_provider.ExactAssetImage.new(name, {bundle: bundle, scale: scale, package: $package}) : new image_resolution.AssetImage.new(name, {bundle: bundle, package: $package}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 580, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 581, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 582, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 583, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 584, 15, "cacheHeight == null || cacheHeight > 0");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  (image$.Image.memory = function(bytes, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : 1;
    let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let gaplessPlayback = opts && 'gaplessPlayback' in opts ? opts.gaplessPlayback : false;
    let filterQuality = opts && 'filterQuality' in opts ? opts.filterQuality : C167 || CT.C167;
    let cacheWidth = opts && 'cacheWidth' in opts ? opts.cacheWidth : null;
    let cacheHeight = opts && 'cacheHeight' in opts ? opts.cacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[frameBuilder$] = frameBuilder;
    this[semanticLabel$] = semanticLabel;
    this[excludeFromSemantics$0] = excludeFromSemantics;
    this[width$3] = width;
    this[height$3] = height;
    this[color$2] = color;
    this[colorBlendMode$0] = colorBlendMode;
    this[fit$3] = fit;
    this[alignment$11] = alignment;
    this[repeat$0] = repeat;
    this[centerSlice$0] = centerSlice;
    this[matchTextDirection$0] = matchTextDirection;
    this[gaplessPlayback$] = gaplessPlayback;
    this[filterQuality$0] = filterQuality;
    this[image$1] = image_provider.ResizeImage.resizeIfNeeded(cacheWidth, cacheHeight, new image_provider.MemoryImage.new(bytes, {scale: scale}));
    this[loadingBuilder$] = null;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 634, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 635, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 636, 15, "matchTextDirection != null");
    if (!(cacheWidth == null || dart.notNull(cacheWidth) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 637, 15, "cacheWidth == null || cacheWidth > 0");
    if (!(cacheHeight == null || dart.notNull(cacheHeight) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 638, 15, "cacheHeight == null || cacheHeight > 0");
    image$.Image.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image$.Image.prototype;
  dart.addTypeTests(image$.Image);
  dart.setMethodSignature(image$.Image, () => ({
    __proto__: dart.getMethods(image$.Image.__proto__),
    createState: dart.fnType(image$._ImageState, [])
  }));
  dart.setLibraryUri(image$.Image, "package:flutter/src/widgets/image.dart");
  dart.setFieldSignature(image$.Image, () => ({
    __proto__: dart.getFields(image$.Image.__proto__),
    image: dart.finalFieldType(image_provider.ImageProvider),
    frameBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, core.int, core.bool])),
    loadingBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, image_stream.ImageChunkEvent])),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    filterQuality: dart.finalFieldType(ui.FilterQuality),
    colorBlendMode: dart.finalFieldType(ui.BlendMode),
    fit: dart.finalFieldType(box_fit.BoxFit),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    repeat: dart.finalFieldType(decoration_image.ImageRepeat),
    centerSlice: dart.finalFieldType(ui.Rect),
    matchTextDirection: dart.finalFieldType(core.bool),
    gaplessPlayback: dart.finalFieldType(core.bool),
    semanticLabel: dart.finalFieldType(core.String),
    excludeFromSemantics: dart.finalFieldType(core.bool)
  }));
  var _imageStream = dart.privateName(image$, "_imageStream");
  var _imageInfo = dart.privateName(image$, "_imageInfo");
  var _loadingProgress = dart.privateName(image$, "_loadingProgress");
  var _isListeningToStream = dart.privateName(image$, "_isListeningToStream");
  var _invertColors = dart.privateName(image$, "_invertColors");
  var _frameNumber = dart.privateName(image$, "_frameNumber");
  var _wasSynchronouslyLoaded = dart.privateName(image$, "_wasSynchronouslyLoaded");
  var _scrollAwareContext = dart.privateName(image$, "_scrollAwareContext");
  var _stopListeningToStream = dart.privateName(image$, "_stopListeningToStream");
  var _updateInvertColors = dart.privateName(image$, "_updateInvertColors");
  var _resolveImage = dart.privateName(image$, "_resolveImage");
  var _listenToStream = dart.privateName(image$, "_listenToStream");
  var _getListener = dart.privateName(image$, "_getListener");
  var _updateSourceStream = dart.privateName(image$, "_updateSourceStream");
  var _handleImageFrame = dart.privateName(image$, "_handleImageFrame");
  var _handleImageChunk = dart.privateName(image$, "_handleImageChunk");
  var C263;
  var C264;
  var C265;
  var C266;
  var C267;
  var C268;
  var C269;
  var C270;
  var C271;
  var C272;
  var C273;
  var C274;
  var C275;
  var C262;
  var C261;
  var C278;
  var C279;
  var C280;
  var C281;
  var C277;
  var C276;
  binding$5.WidgetsBindingObserver = class WidgetsBindingObserver extends core.Object {
    didPopRoute() {
      return FutureOfbool().value(false);
    }
    didPushRoute(route) {
      return FutureOfbool().value(false);
    }
    didChangeMetrics() {
    }
    didChangeTextScaleFactor() {
    }
    didChangePlatformBrightness() {
    }
    didChangeLocales(locale) {
    }
    didChangeAppLifecycleState(state) {
    }
    didHaveMemoryPressure() {
    }
    didChangeAccessibilityFeatures() {
    }
  };
  (binding$5.WidgetsBindingObserver.new = function() {
    ;
  }).prototype = binding$5.WidgetsBindingObserver.prototype;
  dart.addTypeTests(binding$5.WidgetsBindingObserver);
  dart.setMethodSignature(binding$5.WidgetsBindingObserver, () => ({
    __proto__: dart.getMethods(binding$5.WidgetsBindingObserver.__proto__),
    didPopRoute: dart.fnType(async.Future$(core.bool), []),
    didPushRoute: dart.fnType(async.Future$(core.bool), [core.String]),
    didChangeMetrics: dart.fnType(dart.void, []),
    didChangeTextScaleFactor: dart.fnType(dart.void, []),
    didChangePlatformBrightness: dart.fnType(dart.void, []),
    didChangeLocales: dart.fnType(dart.void, [core.List$(ui.Locale)]),
    didChangeAppLifecycleState: dart.fnType(dart.void, [ui.AppLifecycleState]),
    didHaveMemoryPressure: dart.fnType(dart.void, []),
    didChangeAccessibilityFeatures: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(binding$5.WidgetsBindingObserver, "package:flutter/src/widgets/binding.dart");
  const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(image$.Image) {};
  (State_WidgetsBindingObserver$36.new = function() {
    State_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36, binding$5.WidgetsBindingObserver);
  image$._ImageState = class _ImageState extends State_WidgetsBindingObserver$36 {
    initState() {
      super.initState();
      binding$5.WidgetsBinding.instance.addObserver(this);
      this[_scrollAwareContext] = new (DisposableBuildContextOfStateOfImage()).new(this);
    }
    dispose() {
      if (!(this[_imageStream] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 961, 12, "_imageStream != null");
      binding$5.WidgetsBinding.instance.removeObserver(this);
      this[_stopListeningToStream]();
      this[_scrollAwareContext].dispose();
      super.dispose();
    }
    didChangeDependencies() {
      this[_updateInvertColors]();
      this[_resolveImage]();
      if (dart.test(ticker_provider.TickerMode.of(this.context)))
        this[_listenToStream]();
      else
        this[_stopListeningToStream]();
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      image$.Image._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (dart.test(this[_isListeningToStream]) && !(this.widget.loadingBuilder == null)[$_equals](oldWidget.loadingBuilder == null)) {
        this[_imageStream].removeListener(this[_getListener](oldWidget.loadingBuilder));
        this[_imageStream].addListener(this[_getListener]());
      }
      if (!dart.equals(this.widget.image, oldWidget.image)) this[_resolveImage]();
    }
    didChangeAccessibilityFeatures() {
      super.didChangeAccessibilityFeatures();
      this.setState(dart.fn(() => {
        this[_updateInvertColors]();
      }, VoidToNull()));
    }
    reassemble() {
      this[_resolveImage]();
      super.reassemble();
    }
    [_updateInvertColors]() {
      let t16, t16$;
      this[_invertColors] = (t16$ = (t16 = media_query.MediaQuery.of(this.context, {nullOk: true}), t16 == null ? null : t16.invertColors), t16$ == null ? binding$4.SemanticsBinding.instance.accessibilityFeatures.invertColors : t16$);
    }
    [_resolveImage]() {
      let provider = new scroll_aware_image_provider.ScrollAwareImageProvider.new({context: this[_scrollAwareContext], imageProvider: this.widget.image});
      let newStream = provider.resolve(image$.createLocalImageConfiguration(this.context, {size: this.widget.width != null && this.widget.height != null ? new ui.Size.new(this.widget.width, this.widget.height) : null}));
      if (!(newStream != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 1022, 12, "newStream != null");
      this[_updateSourceStream](newStream);
    }
    [_getListener](loadingBuilder = null) {
      loadingBuilder == null ? loadingBuilder = this.widget.loadingBuilder : null;
      return new image_stream.ImageStreamListener.new(dart.bind(this, _handleImageFrame), {onChunk: loadingBuilder == null ? null : dart.bind(this, _handleImageChunk)});
    }
    [_handleImageFrame](imageInfo, synchronousCall) {
      this.setState(dart.fn(() => {
        this[_imageInfo] = imageInfo;
        this[_loadingProgress] = null;
        this[_frameNumber] = this[_frameNumber] == null ? 0 : dart.notNull(this[_frameNumber]) + 1;
        this[_wasSynchronouslyLoaded] = !!(dart.notNull(this[_wasSynchronouslyLoaded]) | dart.test(synchronousCall));
      }, VoidToNull()));
    }
    [_handleImageChunk](event) {
      if (!(this.widget.loadingBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image.dart", 1044, 12, "widget.loadingBuilder != null");
      this.setState(dart.fn(() => {
        this[_loadingProgress] = event;
      }, VoidToNull()));
    }
    [_updateSourceStream](newStream) {
      let t16, t16$;
      if (dart.equals((t16 = this[_imageStream], t16 == null ? null : t16.key), (t16$ = newStream, t16$ == null ? null : t16$.key))) return;
      if (dart.test(this[_isListeningToStream])) this[_imageStream].removeListener(this[_getListener]());
      if (!dart.test(this.widget.gaplessPlayback)) this.setState(dart.fn(() => {
        this[_imageInfo] = null;
      }, VoidToNull()));
      this.setState(dart.fn(() => {
        this[_loadingProgress] = null;
        this[_frameNumber] = null;
        this[_wasSynchronouslyLoaded] = false;
      }, VoidToNull()));
      this[_imageStream] = newStream;
      if (dart.test(this[_isListeningToStream])) this[_imageStream].addListener(this[_getListener]());
    }
    [_listenToStream]() {
      if (dart.test(this[_isListeningToStream])) return;
      this[_imageStream].addListener(this[_getListener]());
      this[_isListeningToStream] = true;
    }
    [_stopListeningToStream]() {
      if (!dart.test(this[_isListeningToStream])) return;
      this[_imageStream].removeListener(this[_getListener]());
      this[_isListeningToStream] = false;
    }
    build(context) {
      let t16, t16$, t16$0, t16$1;
      let result = new basic.RawImage.new({image: (t16 = this[_imageInfo], t16 == null ? null : t16.image), width: this.widget.width, height: this.widget.height, scale: (t16$0 = (t16$ = this[_imageInfo], t16$ == null ? null : t16$.scale), t16$0 == null ? 1.0 : t16$0), color: this.widget.color, colorBlendMode: this.widget.colorBlendMode, fit: this.widget.fit, alignment: this.widget.alignment, repeat: this.widget.repeat, centerSlice: this.widget.centerSlice, matchTextDirection: this.widget.matchTextDirection, invertColors: this[_invertColors], filterQuality: this.widget.filterQuality, $creationLocationd_0dea112b090073317d4: C261 || CT.C261});
      if (!dart.test(this.widget.excludeFromSemantics)) {
        result = new basic.Semantics.new({container: this.widget.semanticLabel != null, image: true, label: (t16$1 = this.widget.semanticLabel, t16$1 == null ? "" : t16$1), child: result, $creationLocationd_0dea112b090073317d4: C276 || CT.C276});
      }
      if (this.widget.frameBuilder != null) result = this.widget.frameBuilder(context, result, this[_frameNumber], this[_wasSynchronouslyLoaded]);
      if (this.widget.loadingBuilder != null) result = this.widget.loadingBuilder(context, result, this[_loadingProgress]);
      return result;
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfImageStream()).new("stream", this[_imageStream]));
      description.add(new (DiagnosticsPropertyOfImageInfo()).new("pixels", this[_imageInfo]));
      description.add(new (DiagnosticsPropertyOfImageChunkEvent()).new("loadingProgress", this[_loadingProgress]));
      description.add(new (DiagnosticsPropertyOfint()).new("frameNumber", this[_frameNumber]));
      description.add(new (DiagnosticsPropertyOfbool()).new("wasSynchronouslyLoaded", this[_wasSynchronouslyLoaded]));
    }
  };
  (image$._ImageState.new = function() {
    this[_imageStream] = null;
    this[_imageInfo] = null;
    this[_loadingProgress] = null;
    this[_isListeningToStream] = false;
    this[_invertColors] = null;
    this[_frameNumber] = null;
    this[_wasSynchronouslyLoaded] = null;
    this[_scrollAwareContext] = null;
    image$._ImageState.__proto__.new.call(this);
    ;
  }).prototype = image$._ImageState.prototype;
  dart.addTypeTests(image$._ImageState);
  dart.setMethodSignature(image$._ImageState, () => ({
    __proto__: dart.getMethods(image$._ImageState.__proto__),
    [_updateInvertColors]: dart.fnType(dart.void, []),
    [_resolveImage]: dart.fnType(dart.void, []),
    [_getListener]: dart.fnType(image_stream.ImageStreamListener, [], [dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, image_stream.ImageChunkEvent])]),
    [_handleImageFrame]: dart.fnType(dart.void, [image_stream.ImageInfo, core.bool]),
    [_handleImageChunk]: dart.fnType(dart.void, [image_stream.ImageChunkEvent]),
    [_updateSourceStream]: dart.fnType(dart.void, [image_stream.ImageStream]),
    [_listenToStream]: dart.fnType(dart.void, []),
    [_stopListeningToStream]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(image$._ImageState, "package:flutter/src/widgets/image.dart");
  dart.setFieldSignature(image$._ImageState, () => ({
    __proto__: dart.getFields(image$._ImageState.__proto__),
    [_imageStream]: dart.fieldType(image_stream.ImageStream),
    [_imageInfo]: dart.fieldType(image_stream.ImageInfo),
    [_loadingProgress]: dart.fieldType(image_stream.ImageChunkEvent),
    [_isListeningToStream]: dart.fieldType(core.bool),
    [_invertColors]: dart.fieldType(core.bool),
    [_frameNumber]: dart.fieldType(core.int),
    [_wasSynchronouslyLoaded]: dart.fieldType(core.bool),
    [_scrollAwareContext]: dart.fieldType(disposable_build_context.DisposableBuildContext$(framework.State$(image$.Image)))
  }));
  image$.createLocalImageConfiguration = function createLocalImageConfiguration(context, opts) {
    let t16, t16$;
    let size = opts && 'size' in opts ? opts.size : null;
    return new image_provider.ImageConfiguration.new({bundle: basic.DefaultAssetBundle.of(context), devicePixelRatio: (t16$ = (t16 = media_query.MediaQuery.of(context, {nullOk: true}), t16 == null ? null : t16.devicePixelRatio), t16$ == null ? 1.0 : t16$), locale: localizations.Localizations.localeOf(context, {nullOk: true}), textDirection: basic.Directionality.of(context), size: size, platform: platform.defaultTargetPlatform});
  };
  image$.precacheImage = function precacheImage(provider, context, opts) {
    let size = opts && 'size' in opts ? opts.size : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let config = image$.createLocalImageConfiguration(context, {size: size});
    let completer = CompleterOfvoid().new();
    let stream = provider.resolve(config);
    let listener = null;
    listener = new image_stream.ImageStreamListener.new(dart.fn((image, sync) => {
      if (!dart.test(completer.isCompleted)) {
        completer.complete();
      }
      stream.removeListener(listener);
    }, ImageInfoAndboolToNull()), {onError: dart.fn((exception, stackTrace) => {
        if (!dart.test(completer.isCompleted)) {
          completer.complete();
        }
        stream.removeListener(listener);
        if (onError != null) {
          onError(exception, stackTrace);
        } else {
          assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({context: new assertions.ErrorDescription.new("image failed to precache"), library: "image resource service", exception: exception, stack: stackTrace, silent: true}));
        }
      }, dynamicAndStackTraceToNull())});
    stream.addListener(listener);
    return completer.future;
  };
  var C284;
  var C285;
  var C283;
  var C282;
  var enabled$ = dart.privateName(ticker_provider, "TickerMode.enabled");
  var child$7 = dart.privateName(ticker_provider, "TickerMode.child");
  ticker_provider.TickerMode = class TickerMode extends framework.StatelessWidget {
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get child() {
      return this[child$7];
    }
    set child(value) {
      super.child = value;
    }
    static of(context) {
      let t16, t16$;
      let widget = context.dependOnInheritedWidgetOfExactType(ticker_provider._EffectiveTickerMode);
      t16$ = (t16 = widget, t16 == null ? null : t16.enabled);
      return t16$ == null ? true : t16$;
    }
    build(context) {
      return new ticker_provider._EffectiveTickerMode.new({enabled: dart.test(this.enabled) && dart.test(ticker_provider.TickerMode.of(context)), child: this.child, $creationLocationd_0dea112b090073317d4: C282 || CT.C282});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("requested mode", {value: this.enabled, ifTrue: "enabled", ifFalse: "disabled", showName: true}));
    }
  };
  (ticker_provider.TickerMode.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$] = enabled;
    this[child$7] = child;
    if (!(enabled != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 26, 15, "enabled != null");
    ticker_provider.TickerMode.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ticker_provider.TickerMode.prototype;
  dart.addTypeTests(ticker_provider.TickerMode);
  dart.setMethodSignature(ticker_provider.TickerMode, () => ({
    __proto__: dart.getMethods(ticker_provider.TickerMode.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ticker_provider.TickerMode, "package:flutter/src/widgets/ticker_provider.dart");
  dart.setFieldSignature(ticker_provider.TickerMode, () => ({
    __proto__: dart.getFields(ticker_provider.TickerMode.__proto__),
    enabled: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var enabled$0 = dart.privateName(ticker_provider, "_EffectiveTickerMode.enabled");
  ticker_provider._EffectiveTickerMode = class _EffectiveTickerMode extends framework.InheritedWidget {
    get enabled() {
      return this[enabled$0];
    }
    set enabled(value) {
      super.enabled = value;
    }
    updateShouldNotify(oldWidget) {
      ticker_provider._EffectiveTickerMode._check(oldWidget);
      return !dart.equals(this.enabled, oldWidget.enabled);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("effective mode", {value: this.enabled, ifTrue: "enabled", ifFalse: "disabled", showName: true}));
    }
  };
  (ticker_provider._EffectiveTickerMode.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$0] = enabled;
    if (!(enabled != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 85, 15, "enabled != null");
    ticker_provider._EffectiveTickerMode.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ticker_provider._EffectiveTickerMode.prototype;
  dart.addTypeTests(ticker_provider._EffectiveTickerMode);
  dart.setMethodSignature(ticker_provider._EffectiveTickerMode, () => ({
    __proto__: dart.getMethods(ticker_provider._EffectiveTickerMode.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(ticker_provider._EffectiveTickerMode, "package:flutter/src/widgets/ticker_provider.dart");
  dart.setFieldSignature(ticker_provider._EffectiveTickerMode, () => ({
    __proto__: dart.getFields(ticker_provider._EffectiveTickerMode.__proto__),
    enabled: dart.finalFieldType(core.bool)
  }));
  var _ticker = dart.privateName(ticker_provider, "_ticker");
  const _is_SingleTickerProviderStateMixin_default = Symbol('_is_SingleTickerProviderStateMixin_default');
  ticker_provider.SingleTickerProviderStateMixin$ = dart.generic(T => {
    class SingleTickerProviderStateMixin extends framework.State$(T) {}
    SingleTickerProviderStateMixin[dart.mixinOn] = State => class SingleTickerProviderStateMixin extends State {
      createTicker(onTick) {
        if (!dart.test(dart.fn(() => {
          if (this[_ticker] == null) return true;
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + " is a SingleTickerProviderStateMixin but multiple tickers were created."), new assertions.ErrorDescription.new("A SingleTickerProviderStateMixin can only be used as a TickerProvider once."), new assertions.ErrorHint.new("If a State is used for multiple AnimationController objects, or if it is passed to other " + "objects and those objects might use it more than one time in total, then instead of " + "mixing in a SingleTickerProviderStateMixin, use a regular TickerProviderStateMixin.")])));
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 116, 12, "() {\r\n      if (_ticker == null)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('$runtimeType is a SingleTickerProviderStateMixin but multiple tickers were created.'),\r\n        ErrorDescription('A SingleTickerProviderStateMixin can only be used as a TickerProvider once.'),\r\n        ErrorHint(\r\n          'If a State is used for multiple AnimationController objects, or if it is passed to other '\r\n          'objects and those objects might use it more than one time in total, then instead of '\r\n          'mixing in a SingleTickerProviderStateMixin, use a regular TickerProviderStateMixin.'\r\n        )\r\n      ]);\r\n    }()");
        this[_ticker] = new ticker.Ticker.new(onTick, {debugLabel: true ? "created by " + dart.str(this) : null});
        return this[_ticker];
      }
      dispose() {
        if (!dart.test(dart.fn(() => {
          if (this[_ticker] == null || !dart.test(this[_ticker].isActive)) return true;
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its SingleTickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. The Ticker must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), this[_ticker].describeForError("The offending ticker was")])));
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/ticker_provider.dart", 139, 12, "() {\r\n      if (_ticker == null || !_ticker.isActive)\r\n        return true;\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('$this was disposed with an active Ticker.'),\r\n        ErrorDescription(\r\n          '$runtimeType created a Ticker via its SingleTickerProviderStateMixin, but at the time '\r\n          'dispose() was called on the mixin, that Ticker was still active. The Ticker must '\r\n          'be disposed before calling super.dispose().'\r\n        ),\r\n        ErrorHint(\r\n          'Tickers used by AnimationControllers '\r\n          'should be disposed by calling dispose() on the AnimationController itself. '\r\n          'Otherwise, the ticker will leak.'\r\n        ),\r\n        _ticker.describeForError('The offending ticker was')\r\n      ]);\r\n    }()");
        super.dispose();
      }
      didChangeDependencies() {
        if (this[_ticker] != null) this[_ticker].muted = !dart.test(ticker_provider.TickerMode.of(this.context));
        super.didChangeDependencies();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        let tickerDescription = null;
        if (this[_ticker] != null) {
          if (dart.test(this[_ticker].isActive) && dart.test(this[_ticker].muted))
            tickerDescription = "active but muted";
          else if (dart.test(this[_ticker].isActive))
            tickerDescription = "active";
          else if (dart.test(this[_ticker].muted))
            tickerDescription = "inactive and muted";
          else
            tickerDescription = "inactive";
        }
        properties.add(new (DiagnosticsPropertyOfTicker()).new("ticker", this[_ticker], {description: tickerDescription, showSeparator: false, defaultValue: null}));
      }
    };
    (SingleTickerProviderStateMixin[dart.mixinNew] = function() {
      this[_ticker] = null;
    }).prototype = SingleTickerProviderStateMixin.prototype;
    dart.addTypeTests(SingleTickerProviderStateMixin);
    SingleTickerProviderStateMixin.prototype[_is_SingleTickerProviderStateMixin_default] = true;
    SingleTickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, framework.State$(T)];
    dart.setMethodSignature(SingleTickerProviderStateMixin, () => ({
      __proto__: dart.getMethods(SingleTickerProviderStateMixin.__proto__),
      createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])])
    }));
    dart.setLibraryUri(SingleTickerProviderStateMixin, "package:flutter/src/widgets/ticker_provider.dart");
    dart.setFieldSignature(SingleTickerProviderStateMixin, () => ({
      __proto__: dart.getFields(SingleTickerProviderStateMixin.__proto__),
      [_ticker]: dart.fieldType(ticker.Ticker)
    }));
    return SingleTickerProviderStateMixin;
  });
  ticker_provider.SingleTickerProviderStateMixin = ticker_provider.SingleTickerProviderStateMixin$();
  dart.addTypeTests(ticker_provider.SingleTickerProviderStateMixin, _is_SingleTickerProviderStateMixin_default);
  var _creator$ = dart.privateName(ticker_provider, "_creator");
  ticker_provider._WidgetTicker = class _WidgetTicker extends ticker.Ticker {
    dispose() {
      this[_creator$][_removeTicker](this);
      super.dispose();
    }
  };
  (ticker_provider._WidgetTicker.new = function(onTick, _creator, opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_creator$] = _creator;
    ticker_provider._WidgetTicker.__proto__.new.call(this, onTick, {debugLabel: debugLabel});
    ;
  }).prototype = ticker_provider._WidgetTicker.prototype;
  dart.addTypeTests(ticker_provider._WidgetTicker);
  dart.setLibraryUri(ticker_provider._WidgetTicker, "package:flutter/src/widgets/ticker_provider.dart");
  dart.setFieldSignature(ticker_provider._WidgetTicker, () => ({
    __proto__: dart.getFields(ticker_provider._WidgetTicker.__proto__),
    [_creator$]: dart.finalFieldType(ticker_provider.TickerProviderStateMixin$(framework.StatefulWidget))
  }));
  const _is_ScrollAwareImageProvider_default = Symbol('_is_ScrollAwareImageProvider_default');
  var context$ = dart.privateName(scroll_aware_image_provider, "ScrollAwareImageProvider.context");
  var imageProvider$ = dart.privateName(scroll_aware_image_provider, "ScrollAwareImageProvider.imageProvider");
  scroll_aware_image_provider.ScrollAwareImageProvider$ = dart.generic(T => {
    class ScrollAwareImageProvider extends image_provider.ImageProvider$(T) {
      get context() {
        return this[context$];
      }
      set context(value) {
        super.context = value;
      }
      get imageProvider() {
        return this[imageProvider$];
      }
      set imageProvider(value) {
        super.imageProvider = value;
      }
      resolveStreamForKey(configuration, stream, key, handleError) {
        T._check(key);
        if (stream.completer != null || dart.test(binding$0.PaintingBinding.instance.imageCache.containsKey(key))) {
          this.imageProvider.resolveStreamForKey(configuration, stream, key, handleError);
          return;
        }
        if (this.context.context == null) {
          return;
        }
        if (dart.test(scrollable$.Scrollable.recommendDeferredLoadingForContext(this.context.context))) {
          binding$3.SchedulerBinding.instance.scheduleFrameCallback(dart.fn(_ => {
            async.scheduleMicrotask(dart.fn(() => this.resolveStreamForKey(configuration, stream, key, handleError), VoidTovoid()));
          }, DurationToNull()));
          return;
        }
        this.imageProvider.resolveStreamForKey(configuration, stream, key, handleError);
      }
      load(key, decode) {
        T._check(key);
        return this.imageProvider.load(key, decode);
      }
      obtainKey(configuration) {
        return this.imageProvider.obtainKey(configuration);
      }
    }
    (ScrollAwareImageProvider.new = function(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let imageProvider = opts && 'imageProvider' in opts ? opts.imageProvider : null;
      this[context$] = context;
      this[imageProvider$] = imageProvider;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_aware_image_provider.dart", 57, 15, "context != null");
      if (!(imageProvider != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_aware_image_provider.dart", 58, 15, "imageProvider != null");
      ScrollAwareImageProvider.__proto__.new.call(this);
      ;
    }).prototype = ScrollAwareImageProvider.prototype;
    dart.addTypeTests(ScrollAwareImageProvider);
    ScrollAwareImageProvider.prototype[_is_ScrollAwareImageProvider_default] = true;
    dart.setMethodSignature(ScrollAwareImageProvider, () => ({
      __proto__: dart.getMethods(ScrollAwareImageProvider.__proto__),
      load: dart.fnType(image_stream.ImageStreamCompleter, [core.Object, dart.fnType(async.Future$(ui.Codec), [typed_data.Uint8List], {cacheHeight: core.int, cacheWidth: core.int}, {})]),
      obtainKey: dart.fnType(async.Future$(T), [image_provider.ImageConfiguration])
    }));
    dart.setLibraryUri(ScrollAwareImageProvider, "package:flutter/src/widgets/scroll_aware_image_provider.dart");
    dart.setFieldSignature(ScrollAwareImageProvider, () => ({
      __proto__: dart.getFields(ScrollAwareImageProvider.__proto__),
      context: dart.finalFieldType(disposable_build_context.DisposableBuildContext$(framework.State$(framework.StatefulWidget))),
      imageProvider: dart.finalFieldType(image_provider.ImageProvider$(T))
    }));
    return ScrollAwareImageProvider;
  });
  scroll_aware_image_provider.ScrollAwareImageProvider = scroll_aware_image_provider.ScrollAwareImageProvider$();
  dart.addTypeTests(scroll_aware_image_provider.ScrollAwareImageProvider, _is_ScrollAwareImageProvider_default);
  var _state$ = dart.privateName(disposable_build_context, "_state");
  var _debugValidate = dart.privateName(disposable_build_context, "_debugValidate");
  const _is_DisposableBuildContext_default = Symbol('_is_DisposableBuildContext_default');
  disposable_build_context.DisposableBuildContext$ = dart.generic(T => {
    class DisposableBuildContext extends core.Object {
      get context() {
        if (!dart.test(this[_debugValidate]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/disposable_build_context.dart", 42, 12, "_debugValidate()");
        if (this[_state$] == null) {
          return null;
        }
        return this[_state$].context;
      }
      [_debugValidate]() {
        if (!(this[_state$] == null || dart.test(this[_state$].mounted))) dart.assertFailed("A DisposableBuildContext tried to access the BuildContext of a disposed " + "State object. This can happen when the creator of this " + "DisposableBuildContext fails to call dispose when it is disposed.", "org-dartlang-app:///packages/flutter/src/widgets/disposable_build_context.dart", 56, 7, "_state == null || _state.mounted");
        return true;
      }
      dispose() {
        this[_state$] = null;
      }
    }
    (DisposableBuildContext.new = function(_state) {
      this[_state$] = _state;
      if (!(_state != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/disposable_build_context.dart", 31, 16, "_state != null");
      if (!dart.test(_state.mounted)) dart.assertFailed("A DisposableBuildContext was given a BuildContext for an Element that is not mounted.", "org-dartlang-app:///packages/flutter/src/widgets/disposable_build_context.dart", 32, 16, "_state.mounted");
      ;
    }).prototype = DisposableBuildContext.prototype;
    dart.addTypeTests(DisposableBuildContext);
    DisposableBuildContext.prototype[_is_DisposableBuildContext_default] = true;
    dart.setMethodSignature(DisposableBuildContext, () => ({
      __proto__: dart.getMethods(DisposableBuildContext.__proto__),
      [_debugValidate]: dart.fnType(core.bool, []),
      dispose: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(DisposableBuildContext, () => ({
      __proto__: dart.getGetters(DisposableBuildContext.__proto__),
      context: framework.BuildContext
    }));
    dart.setLibraryUri(DisposableBuildContext, "package:flutter/src/widgets/disposable_build_context.dart");
    dart.setFieldSignature(DisposableBuildContext, () => ({
      __proto__: dart.getFields(DisposableBuildContext.__proto__),
      [_state$]: dart.fieldType(T)
    }));
    return DisposableBuildContext;
  });
  disposable_build_context.DisposableBuildContext = disposable_build_context.DisposableBuildContext$();
  dart.addTypeTests(disposable_build_context.DisposableBuildContext, _is_DisposableBuildContext_default);
  var _name$18 = dart.privateName(media_query, "_name");
  var C286;
  var C287;
  var C288;
  media_query.Orientation = class Orientation extends core.Object {
    toString() {
      return this[_name$18];
    }
  };
  (media_query.Orientation.new = function(index, _name) {
    this.index = index;
    this[_name$18] = _name;
    ;
  }).prototype = media_query.Orientation.prototype;
  dart.addTypeTests(media_query.Orientation);
  dart.setLibraryUri(media_query.Orientation, "package:flutter/src/widgets/media_query.dart");
  dart.setFieldSignature(media_query.Orientation, () => ({
    __proto__: dart.getFields(media_query.Orientation.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$18]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(media_query.Orientation, ['toString']);
  media_query.Orientation.portrait = C286 || CT.C286;
  media_query.Orientation.landscape = C287 || CT.C287;
  media_query.Orientation.values = C288 || CT.C288;
  var C289;
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var C290;
  var size$1 = dart.privateName(media_query, "MediaQueryData.size");
  var devicePixelRatio$ = dart.privateName(media_query, "MediaQueryData.devicePixelRatio");
  var textScaleFactor$0 = dart.privateName(media_query, "MediaQueryData.textScaleFactor");
  var platformBrightness$ = dart.privateName(media_query, "MediaQueryData.platformBrightness");
  var viewInsets$ = dart.privateName(media_query, "MediaQueryData.viewInsets");
  var padding$2 = dart.privateName(media_query, "MediaQueryData.padding");
  var viewPadding$ = dart.privateName(media_query, "MediaQueryData.viewPadding");
  var systemGestureInsets$ = dart.privateName(media_query, "MediaQueryData.systemGestureInsets");
  var physicalDepth$ = dart.privateName(media_query, "MediaQueryData.physicalDepth");
  var alwaysUse24HourFormat$ = dart.privateName(media_query, "MediaQueryData.alwaysUse24HourFormat");
  var accessibleNavigation$ = dart.privateName(media_query, "MediaQueryData.accessibleNavigation");
  var invertColors$0 = dart.privateName(media_query, "MediaQueryData.invertColors");
  var highContrast$ = dart.privateName(media_query, "MediaQueryData.highContrast");
  var disableAnimations$ = dart.privateName(media_query, "MediaQueryData.disableAnimations");
  var boldText$ = dart.privateName(media_query, "MediaQueryData.boldText");
  media_query.MediaQueryData = class MediaQueryData extends core.Object {
    get size() {
      return this[size$1];
    }
    set size(value) {
      super.size = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$0];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get platformBrightness() {
      return this[platformBrightness$];
    }
    set platformBrightness(value) {
      super.platformBrightness = value;
    }
    get viewInsets() {
      return this[viewInsets$];
    }
    set viewInsets(value) {
      super.viewInsets = value;
    }
    get padding() {
      return this[padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    get viewPadding() {
      return this[viewPadding$];
    }
    set viewPadding(value) {
      super.viewPadding = value;
    }
    get systemGestureInsets() {
      return this[systemGestureInsets$];
    }
    set systemGestureInsets(value) {
      super.systemGestureInsets = value;
    }
    get physicalDepth() {
      return this[physicalDepth$];
    }
    set physicalDepth(value) {
      super.physicalDepth = value;
    }
    get alwaysUse24HourFormat() {
      return this[alwaysUse24HourFormat$];
    }
    set alwaysUse24HourFormat(value) {
      super.alwaysUse24HourFormat = value;
    }
    get accessibleNavigation() {
      return this[accessibleNavigation$];
    }
    set accessibleNavigation(value) {
      super.accessibleNavigation = value;
    }
    get invertColors() {
      return this[invertColors$0];
    }
    set invertColors(value) {
      super.invertColors = value;
    }
    get highContrast() {
      return this[highContrast$];
    }
    set highContrast(value) {
      super.highContrast = value;
    }
    get disableAnimations() {
      return this[disableAnimations$];
    }
    set disableAnimations(value) {
      super.disableAnimations = value;
    }
    get boldText() {
      return this[boldText$];
    }
    set boldText(value) {
      super.boldText = value;
    }
    get orientation() {
      return dart.notNull(this.size.width) > dart.notNull(this.size.height) ? media_query.Orientation.landscape : media_query.Orientation.portrait;
    }
    copyWith(opts) {
      let t16, t16$, t16$0, t16$1, t16$2, t16$3, t16$4, t16$5, t16$6, t16$7, t16$8, t16$9, t16$10, t16$11, t16$12;
      let size = opts && 'size' in opts ? opts.size : null;
      let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let platformBrightness = opts && 'platformBrightness' in opts ? opts.platformBrightness : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let viewPadding = opts && 'viewPadding' in opts ? opts.viewPadding : null;
      let viewInsets = opts && 'viewInsets' in opts ? opts.viewInsets : null;
      let systemGestureInsets = opts && 'systemGestureInsets' in opts ? opts.systemGestureInsets : null;
      let physicalDepth = opts && 'physicalDepth' in opts ? opts.physicalDepth : null;
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : null;
      let highContrast = opts && 'highContrast' in opts ? opts.highContrast : null;
      let disableAnimations = opts && 'disableAnimations' in opts ? opts.disableAnimations : null;
      let invertColors = opts && 'invertColors' in opts ? opts.invertColors : null;
      let accessibleNavigation = opts && 'accessibleNavigation' in opts ? opts.accessibleNavigation : null;
      let boldText = opts && 'boldText' in opts ? opts.boldText : null;
      return new media_query.MediaQueryData.new({size: (t16 = size, t16 == null ? this.size : t16), devicePixelRatio: (t16$ = devicePixelRatio, t16$ == null ? this.devicePixelRatio : t16$), textScaleFactor: (t16$0 = textScaleFactor, t16$0 == null ? this.textScaleFactor : t16$0), platformBrightness: (t16$1 = platformBrightness, t16$1 == null ? this.platformBrightness : t16$1), padding: (t16$2 = padding, t16$2 == null ? this.padding : t16$2), viewPadding: (t16$3 = viewPadding, t16$3 == null ? this.viewPadding : t16$3), viewInsets: (t16$4 = viewInsets, t16$4 == null ? this.viewInsets : t16$4), systemGestureInsets: (t16$5 = systemGestureInsets, t16$5 == null ? this.systemGestureInsets : t16$5), physicalDepth: (t16$6 = physicalDepth, t16$6 == null ? this.physicalDepth : t16$6), alwaysUse24HourFormat: (t16$7 = alwaysUse24HourFormat, t16$7 == null ? this.alwaysUse24HourFormat : t16$7), invertColors: (t16$8 = invertColors, t16$8 == null ? this.invertColors : t16$8), highContrast: (t16$9 = highContrast, t16$9 == null ? this.highContrast : t16$9), disableAnimations: (t16$10 = disableAnimations, t16$10 == null ? this.disableAnimations : t16$10), accessibleNavigation: (t16$11 = accessibleNavigation, t16$11 == null ? this.accessibleNavigation : t16$11), boldText: (t16$12 = boldText, t16$12 == null ? this.boldText : t16$12)});
    }
    removePadding(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.left) - dart.notNull(this.padding.left)) : null, top: dart.test(removeTop) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.top) - dart.notNull(this.padding.top)) : null, right: dart.test(removeRight) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.right) - dart.notNull(this.padding.right)) : null, bottom: dart.test(removeBottom) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.bottom) - dart.notNull(this.padding.bottom)) : null}), viewInsets: this.viewInsets, alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    removeViewInsets(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding, viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.left) - dart.notNull(this.viewInsets.left)) : null, top: dart.test(removeTop) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.top) - dart.notNull(this.viewInsets.top)) : null, right: dart.test(removeRight) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.right) - dart.notNull(this.viewInsets.right)) : null, bottom: dart.test(removeBottom) ? math.max(core.double, 0.0, dart.notNull(this.viewPadding.bottom) - dart.notNull(this.viewInsets.bottom)) : null}), viewInsets: this.viewInsets.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    removeViewPadding(opts) {
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      if (!(dart.test(removeLeft) || dart.test(removeTop) || dart.test(removeRight) || dart.test(removeBottom))) return this;
      return new media_query.MediaQueryData.new({size: this.size, devicePixelRatio: this.devicePixelRatio, textScaleFactor: this.textScaleFactor, platformBrightness: this.platformBrightness, padding: this.padding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), viewInsets: this.viewInsets, viewPadding: this.viewPadding.copyWith({left: dart.test(removeLeft) ? 0.0 : null, top: dart.test(removeTop) ? 0.0 : null, right: dart.test(removeRight) ? 0.0 : null, bottom: dart.test(removeBottom) ? 0.0 : null}), alwaysUse24HourFormat: this.alwaysUse24HourFormat, highContrast: this.highContrast, disableAnimations: this.disableAnimations, invertColors: this.invertColors, accessibleNavigation: this.accessibleNavigation, boldText: this.boldText});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return media_query.MediaQueryData.is(other) && dart.equals(other.size, this.size) && other.devicePixelRatio == this.devicePixelRatio && other.textScaleFactor == this.textScaleFactor && dart.equals(other.platformBrightness, this.platformBrightness) && dart.equals(other.padding, this.padding) && dart.equals(other.viewPadding, this.viewPadding) && dart.equals(other.viewInsets, this.viewInsets) && other.physicalDepth == this.physicalDepth && dart.equals(other.alwaysUse24HourFormat, this.alwaysUse24HourFormat) && dart.equals(other.highContrast, this.highContrast) && dart.equals(other.disableAnimations, this.disableAnimations) && dart.equals(other.invertColors, this.invertColors) && dart.equals(other.accessibleNavigation, this.accessibleNavigation) && dart.equals(other.boldText, this.boldText);
    }
    get hashCode() {
      return ui.hashValues(this.size, this.devicePixelRatio, this.textScaleFactor, this.platformBrightness, this.padding, this.viewPadding, this.viewInsets, this.physicalDepth, this.alwaysUse24HourFormat, this.highContrast, this.disableAnimations, this.invertColors, this.accessibleNavigation, this.boldText);
    }
    toString() {
      let properties = JSArrayOfString().of(["size: " + dart.str(this.size), "devicePixelRatio: " + this.devicePixelRatio[$toStringAsFixed](1), "textScaleFactor: " + this.textScaleFactor[$toStringAsFixed](1), "platformBrightness: " + dart.str(this.platformBrightness), "padding: " + dart.str(this.padding), "viewPadding: " + dart.str(this.viewPadding), "viewInsets: " + dart.str(this.viewInsets), "physicalDepth: " + dart.str(this.physicalDepth), "alwaysUse24HourFormat: " + dart.str(this.alwaysUse24HourFormat), "accessibleNavigation: " + dart.str(this.accessibleNavigation), "highContrast: " + dart.str(this.highContrast), "disableAnimations: " + dart.str(this.disableAnimations), "invertColors: " + dart.str(this.invertColors), "boldText: " + dart.str(this.boldText)]);
      return dart.str(object.objectRuntimeType(this, "MediaQueryData")) + "(" + dart.str(properties[$join](", ")) + ")";
    }
  };
  (media_query.MediaQueryData.new = function(opts) {
    let size = opts && 'size' in opts ? opts.size : C123 || CT.C123;
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : 1;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : 1;
    let platformBrightness = opts && 'platformBrightness' in opts ? opts.platformBrightness : C289 || CT.C289;
    let padding = opts && 'padding' in opts ? opts.padding : C290 || CT.C290;
    let viewInsets = opts && 'viewInsets' in opts ? opts.viewInsets : C290 || CT.C290;
    let systemGestureInsets = opts && 'systemGestureInsets' in opts ? opts.systemGestureInsets : C290 || CT.C290;
    let viewPadding = opts && 'viewPadding' in opts ? opts.viewPadding : C290 || CT.C290;
    let physicalDepth = opts && 'physicalDepth' in opts ? opts.physicalDepth : 1.7976931348623157e+308;
    let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
    let accessibleNavigation = opts && 'accessibleNavigation' in opts ? opts.accessibleNavigation : false;
    let invertColors = opts && 'invertColors' in opts ? opts.invertColors : false;
    let highContrast = opts && 'highContrast' in opts ? opts.highContrast : false;
    let disableAnimations = opts && 'disableAnimations' in opts ? opts.disableAnimations : false;
    let boldText = opts && 'boldText' in opts ? opts.boldText : false;
    this[size$1] = size;
    this[devicePixelRatio$] = devicePixelRatio;
    this[textScaleFactor$0] = textScaleFactor;
    this[platformBrightness$] = platformBrightness;
    this[padding$2] = padding;
    this[viewInsets$] = viewInsets;
    this[systemGestureInsets$] = systemGestureInsets;
    this[viewPadding$] = viewPadding;
    this[physicalDepth$] = physicalDepth;
    this[alwaysUse24HourFormat$] = alwaysUse24HourFormat;
    this[accessibleNavigation$] = accessibleNavigation;
    this[invertColors$0] = invertColors;
    this[highContrast$] = highContrast;
    this[disableAnimations$] = disableAnimations;
    this[boldText$] = boldText;
    ;
  }).prototype = media_query.MediaQueryData.prototype;
  (media_query.MediaQueryData.fromWindow = function(window) {
    this[size$1] = window.physicalSize['/'](window.devicePixelRatio);
    this[devicePixelRatio$] = window.devicePixelRatio;
    this[textScaleFactor$0] = window.textScaleFactor;
    this[platformBrightness$] = window.platformBrightness;
    this[padding$2] = new edge_insets.EdgeInsets.fromWindowPadding(window.padding, window.devicePixelRatio);
    this[viewPadding$] = new edge_insets.EdgeInsets.fromWindowPadding(window.viewPadding, window.devicePixelRatio);
    this[viewInsets$] = new edge_insets.EdgeInsets.fromWindowPadding(window.viewInsets, window.devicePixelRatio);
    this[systemGestureInsets$] = new edge_insets.EdgeInsets.fromWindowPadding(window.systemGestureInsets, window.devicePixelRatio);
    this[physicalDepth$] = window.physicalDepth;
    this[accessibleNavigation$] = window.accessibilityFeatures.accessibleNavigation;
    this[invertColors$0] = window.accessibilityFeatures.invertColors;
    this[disableAnimations$] = window.accessibilityFeatures.disableAnimations;
    this[boldText$] = window.accessibilityFeatures.boldText;
    this[highContrast$] = false;
    this[alwaysUse24HourFormat$] = window.alwaysUse24HourFormat;
    ;
  }).prototype = media_query.MediaQueryData.prototype;
  dart.addTypeTests(media_query.MediaQueryData);
  dart.setMethodSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getMethods(media_query.MediaQueryData.__proto__),
    copyWith: dart.fnType(media_query.MediaQueryData, [], {accessibleNavigation: core.bool, alwaysUse24HourFormat: core.bool, boldText: core.bool, devicePixelRatio: core.double, disableAnimations: core.bool, highContrast: core.bool, invertColors: core.bool, padding: edge_insets.EdgeInsets, physicalDepth: core.double, platformBrightness: ui.Brightness, size: ui.Size, systemGestureInsets: edge_insets.EdgeInsets, textScaleFactor: core.double, viewInsets: edge_insets.EdgeInsets, viewPadding: edge_insets.EdgeInsets}, {}),
    removePadding: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {}),
    removeViewInsets: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {}),
    removeViewPadding: dart.fnType(media_query.MediaQueryData, [], {removeBottom: core.bool, removeLeft: core.bool, removeRight: core.bool, removeTop: core.bool}, {}),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getGetters(media_query.MediaQueryData.__proto__),
    orientation: media_query.Orientation
  }));
  dart.setLibraryUri(media_query.MediaQueryData, "package:flutter/src/widgets/media_query.dart");
  dart.setFieldSignature(media_query.MediaQueryData, () => ({
    __proto__: dart.getFields(media_query.MediaQueryData.__proto__),
    size: dart.finalFieldType(ui.Size),
    devicePixelRatio: dart.finalFieldType(core.double),
    textScaleFactor: dart.finalFieldType(core.double),
    platformBrightness: dart.finalFieldType(ui.Brightness),
    viewInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    padding: dart.finalFieldType(edge_insets.EdgeInsets),
    viewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    systemGestureInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    physicalDepth: dart.finalFieldType(core.double),
    alwaysUse24HourFormat: dart.finalFieldType(core.bool),
    accessibleNavigation: dart.finalFieldType(core.bool),
    invertColors: dart.finalFieldType(core.bool),
    highContrast: dart.finalFieldType(core.bool),
    disableAnimations: dart.finalFieldType(core.bool),
    boldText: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(media_query.MediaQueryData, ['_equals', 'toString']);
  dart.defineExtensionAccessors(media_query.MediaQueryData, ['hashCode']);
  var data$ = dart.privateName(media_query, "MediaQuery.data");
  media_query.MediaQuery = class MediaQuery extends framework.InheritedWidget {
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static removePadding(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removePadding({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static removeViewInsets(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removeViewInsets({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static removeViewPadding(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let context = opts && 'context' in opts ? opts.context : null;
      let removeLeft = opts && 'removeLeft' in opts ? opts.removeLeft : false;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : false;
      let removeRight = opts && 'removeRight' in opts ? opts.removeRight : false;
      let removeBottom = opts && 'removeBottom' in opts ? opts.removeBottom : false;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new media_query.MediaQuery.new({key: key, data: media_query.MediaQuery.of(context).removeViewPadding({removeLeft: removeLeft, removeTop: removeTop, removeRight: removeRight, removeBottom: removeBottom}), child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static of(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/media_query.dart", 792, 12, "context != null");
      if (!(nullOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/media_query.dart", 793, 12, "nullOk != null");
      let query = context.dependOnInheritedWidgetOfExactType(media_query.MediaQuery);
      if (query != null) return query.data;
      if (dart.test(nullOk)) return null;
      dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("MediaQuery.of() called with a context that does not contain a MediaQuery."), new assertions.ErrorDescription.new("No MediaQuery ancestor could be found starting from the context that was passed " + "to MediaQuery.of(). This can happen because you do not have a WidgetsApp or " + "MaterialApp widget (those widgets introduce a MediaQuery), or it can happen " + "if the context you use comes from a widget above those widgets."), context.describeElement("The context used was")])));
    }
    static textScaleFactorOf(context) {
      let t16, t16$;
      t16$ = (t16 = media_query.MediaQuery.of(context, {nullOk: true}), t16 == null ? null : t16.textScaleFactor);
      return t16$ == null ? 1.0 : t16$;
    }
    static platformBrightnessOf(context) {
      let t16, t16$;
      t16$ = (t16 = media_query.MediaQuery.of(context, {nullOk: true}), t16 == null ? null : t16.platformBrightness);
      return t16$ == null ? ui.Brightness.light : t16$;
    }
    static boldTextOverride(context) {
      let t16, t16$;
      t16$ = (t16 = media_query.MediaQuery.of(context, {nullOk: true}), t16 == null ? null : t16.boldText);
      return t16$ == null ? false : t16$;
    }
    updateShouldNotify(oldWidget) {
      media_query.MediaQuery._check(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMediaQueryData()).new("data", this.data, {showName: false}));
    }
  };
  (media_query.MediaQuery.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$] = data;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/media_query.dart", 627, 15, "child != null");
    if (!(data != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/media_query.dart", 628, 15, "data != null");
    media_query.MediaQuery.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = media_query.MediaQuery.prototype;
  dart.addTypeTests(media_query.MediaQuery);
  dart.setMethodSignature(media_query.MediaQuery, () => ({
    __proto__: dart.getMethods(media_query.MediaQuery.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(media_query.MediaQuery, "package:flutter/src/widgets/media_query.dart");
  dart.setFieldSignature(media_query.MediaQuery, () => ({
    __proto__: dart.getFields(media_query.MediaQuery.__proto__),
    data: dart.finalFieldType(media_query.MediaQueryData)
  }));
  var _buildOwner = dart.privateName(binding$5, "_buildOwner");
  var _observers = dart.privateName(binding$5, "_observers");
  var _needToReportFirstFrame = dart.privateName(binding$5, "_needToReportFirstFrame");
  var _firstFrameCompleter = dart.privateName(binding$5, "_firstFrameCompleter");
  var _renderViewElement = dart.privateName(binding$5, "_renderViewElement");
  var _debugAddStackFilters = dart.privateName(binding$5, "_debugAddStackFilters");
  var _handleBuildScheduled = dart.privateName(binding$5, "_handleBuildScheduled");
  var _handleNavigationInvocation = dart.privateName(binding$5, "_handleNavigationInvocation");
  var C291;
  var PartialStackFrame_method = dart.privateName(assertions, "PartialStackFrame.method");
  var PartialStackFrame_className = dart.privateName(assertions, "PartialStackFrame.className");
  var PartialStackFrame_package = dart.privateName(assertions, "PartialStackFrame.package");
  var C292;
  var C293;
  var C294;
  var C295;
  var C296;
  var C297;
  var C298;
  var C299;
  var C300;
  var RepetitiveStackFrameFilter_replacement = dart.privateName(assertions, "RepetitiveStackFrameFilter.replacement");
  var C302;
  var RepetitiveStackFrameFilter_frames = dart.privateName(assertions, "RepetitiveStackFrameFilter.frames");
  var C301;
  var C304;
  var C303;
  var C306;
  var C305;
  var C308;
  var C307;
  var C310;
  var C309;
  var C312;
  var C311;
  var _forceRebuild = dart.privateName(binding$5, "_forceRebuild");
  var C315;
  var C316;
  var C317;
  var C314;
  var C313;
  var debugBuildingDirtyElements = dart.privateName(binding$5, "WidgetsBinding.debugBuildingDirtyElements");
  const handleSystemMessage = Symbol("handleSystemMessage");
  binding$5.WidgetsBinding = class WidgetsBinding extends core.Object {
    static get instance() {
      return binding$5.WidgetsBinding._instance;
    }
  };
  binding$5.WidgetsBinding[dart.mixinOn] = _WidgetsBinding$36BindingBase$36ServicesBinding$36SchedulerBinding$36GestureBinding$36RendererBinding$36SemanticsBinding => class WidgetsBinding extends _WidgetsBinding$36BindingBase$36ServicesBinding$36SchedulerBinding$36GestureBinding$36RendererBinding$36SemanticsBinding {
    get debugBuildingDirtyElements() {
      return this[debugBuildingDirtyElements];
    }
    set debugBuildingDirtyElements(value) {
      this[debugBuildingDirtyElements] = value;
    }
    initInstances() {
      super.initInstances();
      binding$5.WidgetsBinding._instance = this;
      if (!dart.test(dart.fn(() => {
        this[_debugAddStackFilters]();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 258, 12, "() {\r\n      _debugAddStackFilters();\r\n      return true;\r\n    }()");
      this[_buildOwner] = new framework.BuildOwner.new();
      this.buildOwner.onBuildScheduled = dart.bind(this, _handleBuildScheduled);
      this.window.onLocaleChanged = dart.bind(this, 'handleLocaleChanged');
      this.window.onAccessibilityFeaturesChanged = dart.bind(this, 'handleAccessibilityFeaturesChanged');
      system_channels.SystemChannels.navigation.setMethodCallHandler(dart.bind(this, _handleNavigationInvocation));
      assertions.FlutterErrorDetails.propertiesTransformers[$add](C291 || CT.C291);
    }
    [_debugAddStackFilters]() {
      let elementInflateWidget = C292 || CT.C292;
      let elementUpdateChild = C293 || CT.C293;
      let elementRebuild = C294 || CT.C294;
      let componentElementPerformRebuild = C295 || CT.C295;
      let componentElementFirstBuild = C296 || CT.C296;
      let componentElementMount = C297 || CT.C297;
      let statefulElementFirstBuild = C298 || CT.C298;
      let singleChildMount = C299 || CT.C299;
      let statefulElementRebuild = C300 || CT.C300;
      assertions.FlutterError.addDefaultStackFilter(C301 || CT.C301);
      assertions.FlutterError.addDefaultStackFilter(C303 || CT.C303);
      assertions.FlutterError.addDefaultStackFilter(C305 || CT.C305);
      assertions.FlutterError.addDefaultStackFilter(C307 || CT.C307);
      assertions.FlutterError.addDefaultStackFilter(C309 || CT.C309);
      assertions.FlutterError.addDefaultStackFilter(C311 || CT.C311);
    }
    initServiceExtensions() {
      super.initServiceExtensions();
      if (!false) {
        this.registerSignalServiceExtension({name: "debugDumpApp", callback: dart.fn(() => {
            binding$5.debugDumpApp();
            return print.debugPrintDone;
          }, VoidToFutureOfvoid())});
        if (!true) {
          this.registerBoolServiceExtension({name: "showPerformanceOverlay", getter: dart.fn(() => FutureOfbool().value(app.WidgetsApp.showPerformanceOverlayOverride), VoidToFutureOfbool()), setter: dart.fn(value => {
              if (dart.equals(app.WidgetsApp.showPerformanceOverlayOverride, value)) return FutureOfvoid().value();
              app.WidgetsApp.showPerformanceOverlayOverride = value;
              return this[_forceRebuild]();
            }, boolToFutureOfvoid())});
        }
        this.registerServiceExtension({name: "didSendFirstFrameEvent", callback: dart.fn(_ => async.async(MapOfString$dynamic(), (function*() {
            return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(this[_needToReportFirstFrame]) ? "false" : "true"]);
          }).bind(this)), MapOfString$StringToFutureOfMapOfString$dynamic())});
        this.registerServiceExtension({name: "didSendFirstFrameRasterizedEvent", callback: dart.fn(_ => async.async(MapOfString$dynamic(), (function*() {
            return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(this.firstFrameRasterized) ? "true" : "false"]);
          }).bind(this)), MapOfString$StringToFutureOfMapOfString$dynamic())});
        this.registerServiceExtension({name: "fastReassemble", callback: dart.fn(params => async.async(MapOfString$String(), (function*() {
            let className = core.String.as(params[$_get]("class"));
            function markElementsDirty(element) {
              let t16, t16$, t16$0, t16$1;
              if (element == null) {
                return;
              }
              if (dart.test((t16$1 = (t16$0 = (t16$ = (t16 = element.widget, t16 == null ? null : dart.runtimeType(t16)), t16$ == null ? null : dart.toString(t16$)), t16$0 == null ? null : t16$0[$startsWith](className)), t16$1 == null ? false : t16$1))) {
                element.markNeedsBuild();
              }
              element.visitChildElements(markElementsDirty);
            }
            dart.fn(markElementsDirty, ElementTovoid());
            markElementsDirty(this.renderViewElement);
            return new (IdentityMapOfString$String()).from(["Success", "true"]);
          }).bind(this)), MapOfString$ObjectToFutureOfMapOfString$String())});
        this.registerBoolServiceExtension({name: "profileWidgetBuilds", getter: dart.fn(() => async.async(core.bool, function*() {
            return debug$0.debugProfileBuildsEnabled;
          }), VoidToFutureOfbool()), setter: dart.fn(value => async.async(core.Null, function*() {
            if (!dart.equals(debug$0.debugProfileBuildsEnabled, value)) debug$0.debugProfileBuildsEnabled = value;
          }), boolToFutureOfNull())});
      }
      if (!dart.test(dart.fn(() => {
        this.registerBoolServiceExtension({name: "debugAllowBanner", getter: dart.fn(() => FutureOfbool().value(app.WidgetsApp.debugAllowBannerOverride), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (dart.equals(app.WidgetsApp.debugAllowBannerOverride, value)) return FutureOfvoid().value();
            app.WidgetsApp.debugAllowBannerOverride = value;
            return this[_forceRebuild]();
          }, boolToFutureOfvoid())});
        this.registerBoolServiceExtension({name: "debugWidgetInspector", getter: dart.fn(() => async.async(core.bool, function*() {
            return app.WidgetsApp.debugShowWidgetInspectorOverride;
          }), VoidToFutureOfbool()), setter: dart.fn(value => {
            if (dart.equals(app.WidgetsApp.debugShowWidgetInspectorOverride, value)) return FutureOfvoid().value();
            app.WidgetsApp.debugShowWidgetInspectorOverride = value;
            return this[_forceRebuild]();
          }, boolToFutureOfvoid())});
        widget_inspector.WidgetInspectorService.instance.initServiceExtensions(dart.bind(this, 'registerServiceExtension'));
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 448, 12, "() {\r\n      registerBoolServiceExtension(\r\n        name: 'debugAllowBanner',\r\n        getter: () => Future<bool>.value(WidgetsApp.debugAllowBannerOverride),\r\n        setter: (bool value) {\r\n          if (WidgetsApp.debugAllowBannerOverride == value)\r\n            return Future<void>.value();\r\n          WidgetsApp.debugAllowBannerOverride = value;\r\n          return _forceRebuild();\r\n        },\r\n      );\r\n\r\n      // This service extension is deprecated and will be removed by 12/1/2018.\r\n      // Use ext.flutter.inspector.show instead.\r\n      registerBoolServiceExtension(\r\n          name: 'debugWidgetInspector',\r\n          getter: () async => WidgetsApp.debugShowWidgetInspectorOverride,\r\n          setter: (bool value) {\r\n            if (WidgetsApp.debugShowWidgetInspectorOverride == value)\r\n              return Future<void>.value();\r\n            WidgetsApp.debugShowWidgetInspectorOverride = value;\r\n            return _forceRebuild();\r\n          },\r\n      );\r\n\r\n      WidgetInspectorService.instance.initServiceExtensions(registerServiceExtension);\r\n\r\n      return true;\r\n    }()");
    }
    [_forceRebuild]() {
      if (this.renderViewElement != null) {
        this.buildOwner.reassemble(this.renderViewElement);
        return this.endOfFrame;
      }
      return FutureOfvoid().value();
    }
    get buildOwner() {
      return this[_buildOwner];
    }
    get focusManager() {
      return this[_buildOwner].focusManager;
    }
    addObserver(observer) {
      return this[_observers][$add](observer);
    }
    removeObserver(observer) {
      return this[_observers][$remove](observer);
    }
    handleMetricsChanged() {
      super.handleMetricsChanged();
      for (let observer of this[_observers])
        observer.didChangeMetrics();
    }
    handleTextScaleFactorChanged() {
      super.handleTextScaleFactorChanged();
      for (let observer of this[_observers])
        observer.didChangeTextScaleFactor();
    }
    handlePlatformBrightnessChanged() {
      super.handlePlatformBrightnessChanged();
      for (let observer of this[_observers])
        observer.didChangePlatformBrightness();
    }
    handleAccessibilityFeaturesChanged() {
      super.handleAccessibilityFeaturesChanged();
      for (let observer of this[_observers])
        observer.didChangeAccessibilityFeatures();
    }
    handleLocaleChanged() {
      this.dispatchLocalesChanged(this.window.locales);
    }
    dispatchLocalesChanged(locales) {
      for (let observer of this[_observers])
        observer.didChangeLocales(locales);
    }
    dispatchAccessibilityFeaturesChanged() {
      for (let observer of this[_observers])
        observer.didChangeAccessibilityFeatures();
    }
    handlePopRoute() {
      return async.async(dart.void, (function* handlePopRoute() {
        for (let observer of ListOfWidgetsBindingObserver().from(this[_observers])) {
          if (dart.test(yield observer.didPopRoute())) return;
        }
        system_navigator.SystemNavigator.pop();
      }).bind(this));
    }
    handlePushRoute(route) {
      return async.async(dart.void, (function* handlePushRoute() {
        for (let observer of ListOfWidgetsBindingObserver().from(this[_observers])) {
          if (dart.test(yield observer.didPushRoute(route))) return;
        }
      }).bind(this));
    }
    [_handleNavigationInvocation](methodCall) {
      switch (methodCall.method) {
        case "popRoute":
        {
          return this.handlePopRoute();
        }
        case "pushRoute":
        {
          return this.handlePushRoute(core.String.as(methodCall.arguments));
        }
      }
      return async.Future.value();
    }
    handleAppLifecycleStateChanged(state) {
      super.handleAppLifecycleStateChanged(state);
      for (let observer of this[_observers])
        observer.didChangeAppLifecycleState(state);
    }
    handleMemoryPressure() {
      for (let observer of this[_observers])
        observer.didHaveMemoryPressure();
    }
    handleSystemMessage(systemMessage) {
      return async.async(dart.void, (function* handleSystemMessage$() {
        yield this[handleSystemMessage](systemMessage);
        let message = MapOfString$dynamic().as(systemMessage);
        let type = core.String.as(message[$_get]("type"));
        switch (type) {
          case "memoryPressure":
          {
            this.handleMemoryPressure();
            break;
          }
        }
        return;
      }).bind(this));
    }
    get firstFrameRasterized() {
      return this[_firstFrameCompleter].isCompleted;
    }
    get waitUntilFirstFrameRasterized() {
      return this[_firstFrameCompleter].future;
    }
    get debugDidSendFirstFrameEvent() {
      return !dart.test(this[_needToReportFirstFrame]);
    }
    deferFirstFrameReport() {
      if (!false) {
        this.deferFirstFrame();
      }
    }
    allowFirstFrameReport() {
      if (!false) {
        this.allowFirstFrame();
      }
    }
    [_handleBuildScheduled]() {
      if (!dart.test(dart.fn(() => {
        if (dart.test(this.debugBuildingDirtyElements)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Build scheduled during frame."), new assertions.ErrorDescription.new("While the widget tree was being built, laid out, and painted, " + "a new frame was scheduled to rebuild the widget tree."), new assertions.ErrorHint.new("This might be because setState() was called from a layout or " + "paint callback. " + "If a change is needed to the widget tree, it should be applied " + "as the tree is being built. Scheduling a change for the subsequent " + "frame instead results in an interface that lags behind by one frame. " + "If this was done to make your build dependent on a size measured at " + "layout time, consider using a LayoutBuilder, CustomSingleChildLayout, " + "or CustomMultiChildLayout. If, on the other hand, the one frame delay " + "is the desired effect, for example because this is an " + "animation, consider scheduling the frame in a post-frame callback " + "using SchedulerBinding.addPostFrameCallback or " + "using an AnimationController to trigger the animation.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 751, 12, "() {\r\n      if (debugBuildingDirtyElements) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Build scheduled during frame.'),\r\n          ErrorDescription(\r\n            'While the widget tree was being built, laid out, and painted, '\r\n            'a new frame was scheduled to rebuild the widget tree.'\r\n          ),\r\n          ErrorHint(\r\n            'This might be because setState() was called from a layout or '\r\n            'paint callback. '\r\n            'If a change is needed to the widget tree, it should be applied '\r\n            'as the tree is being built. Scheduling a change for the subsequent '\r\n            'frame instead results in an interface that lags behind by one frame. '\r\n            'If this was done to make your build dependent on a size measured at '\r\n            'layout time, consider using a LayoutBuilder, CustomSingleChildLayout, '\r\n            'or CustomMultiChildLayout. If, on the other hand, the one frame delay '\r\n            'is the desired effect, for example because this is an '\r\n            'animation, consider scheduling the frame in a post-frame callback '\r\n            'using SchedulerBinding.addPostFrameCallback or '\r\n            'using an AnimationController to trigger the animation.',\r\n          )\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      this.ensureVisualUpdate();
    }
    drawFrame() {
      if (!!dart.test(this.debugBuildingDirtyElements)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 855, 12, "!debugBuildingDirtyElements");
      if (!dart.test(dart.fn(() => {
        this.debugBuildingDirtyElements = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 856, 12, "() {\r\n      debugBuildingDirtyElements = true;\r\n      return true;\r\n    }()");
      let firstFrameCallback = null;
      if (dart.test(this[_needToReportFirstFrame])) {
        if (!!dart.test(this[_firstFrameCompleter].isCompleted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 863, 14, "!_firstFrameCompleter.isCompleted");
        firstFrameCallback = dart.fn(timings => {
          if (!dart.test(this.sendFramesToEngine)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 866, 16, "sendFramesToEngine");
          if (!false) {
            developer.Timeline.instantSync("Rasterized first useful frame");
            developer.postEvent("Flutter.FirstFrame", new (IdentityMapOfString$dynamic()).new());
          }
          binding$3.SchedulerBinding.instance.removeTimingsCallback(firstFrameCallback);
          firstFrameCallback = null;
          this[_firstFrameCompleter].complete();
        }, ListOfFrameTimingToNull());
        binding$3.SchedulerBinding.instance.addTimingsCallback(firstFrameCallback);
      }
      try {
        if (this.renderViewElement != null) this.buildOwner.buildScope(this.renderViewElement);
        super.drawFrame();
        this.buildOwner.finalizeTree();
      } finally {
        if (!dart.test(dart.fn(() => {
          this.debugBuildingDirtyElements = false;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 887, 14, "() {\r\n        debugBuildingDirtyElements = false;\r\n        return true;\r\n      }()");
      }
      if (!false) {
        if (dart.test(this[_needToReportFirstFrame]) && dart.test(this.sendFramesToEngine)) {
          developer.Timeline.instantSync("Widgets built first useful frame");
        }
      }
      this[_needToReportFirstFrame] = false;
      if (firstFrameCallback != null && !dart.test(this.sendFramesToEngine)) {
        binding$3.SchedulerBinding.instance.removeTimingsCallback(firstFrameCallback);
      }
    }
    get renderViewElement() {
      return this[_renderViewElement];
    }
    scheduleAttachRootWidget(rootWidget) {
      async.Timer.run(dart.fn(() => {
        this.attachRootWidget(rootWidget);
      }, VoidToNull()));
    }
    attachRootWidget(rootWidget) {
      this[_renderViewElement] = new (RenderObjectToWidgetAdapterOfRenderBox()).new({container: this.renderView, debugShortDescription: "[root]", child: rootWidget, $creationLocationd_0dea112b090073317d4: C313 || CT.C313}).attachToRenderTree(this.buildOwner, RenderObjectToWidgetElementOfRenderBox().as(this.renderViewElement));
    }
    get isRootWidgetAttached() {
      return this[_renderViewElement] != null;
    }
    performReassemble() {
      if (!dart.test(dart.fn(() => {
        widget_inspector.WidgetInspectorService.instance.performReassemble();
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 946, 12, "() {\r\n      WidgetInspectorService.instance.performReassemble();\r\n      return true;\r\n    }()");
      if (this.renderViewElement != null) this.buildOwner.reassemble(this.renderViewElement);
      return super.performReassemble();
    }
    [handleSystemMessage](systemMessage) {
      return super.handleSystemMessage(systemMessage);
    }
  };
  (binding$5.WidgetsBinding[dart.mixinNew] = function() {
    this[_buildOwner] = null;
    this[_observers] = JSArrayOfWidgetsBindingObserver().of([]);
    this[_needToReportFirstFrame] = true;
    this[_firstFrameCompleter] = CompleterOfvoid().new();
    this[debugBuildingDirtyElements] = false;
    this[_renderViewElement] = null;
  }).prototype = binding$5.WidgetsBinding.prototype;
  dart.addTypeTests(binding$5.WidgetsBinding);
  binding$5.WidgetsBinding[dart.implements] = () => [binding$4.SemanticsBinding, binding$.RendererBinding, binding$1.GestureBinding, binding$3.SchedulerBinding, binding$2.ServicesBinding, binding.BindingBase];
  dart.setMethodSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getMethods(binding$5.WidgetsBinding.__proto__),
    initInstances: dart.fnType(dart.void, []),
    [_debugAddStackFilters]: dart.fnType(dart.void, []),
    initServiceExtensions: dart.fnType(dart.void, []),
    [_forceRebuild]: dart.fnType(async.Future$(dart.void), []),
    addObserver: dart.fnType(dart.void, [binding$5.WidgetsBindingObserver]),
    removeObserver: dart.fnType(core.bool, [binding$5.WidgetsBindingObserver]),
    handleMetricsChanged: dart.fnType(dart.void, []),
    handleTextScaleFactorChanged: dart.fnType(dart.void, []),
    handlePlatformBrightnessChanged: dart.fnType(dart.void, []),
    handleAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    handleLocaleChanged: dart.fnType(dart.void, []),
    dispatchLocalesChanged: dart.fnType(dart.void, [core.List$(ui.Locale)]),
    dispatchAccessibilityFeaturesChanged: dart.fnType(dart.void, []),
    handlePopRoute: dart.fnType(async.Future$(dart.void), []),
    handlePushRoute: dart.fnType(async.Future$(dart.void), [core.String]),
    [_handleNavigationInvocation]: dart.fnType(async.Future, [message_codec.MethodCall]),
    handleAppLifecycleStateChanged: dart.fnType(dart.void, [ui.AppLifecycleState]),
    handleMemoryPressure: dart.fnType(dart.void, []),
    handleSystemMessage: dart.fnType(async.Future$(dart.void), [core.Object]),
    deferFirstFrameReport: dart.fnType(dart.void, []),
    allowFirstFrameReport: dart.fnType(dart.void, []),
    [_handleBuildScheduled]: dart.fnType(dart.void, []),
    drawFrame: dart.fnType(dart.void, []),
    scheduleAttachRootWidget: dart.fnType(dart.void, [framework.Widget]),
    attachRootWidget: dart.fnType(dart.void, [framework.Widget]),
    performReassemble: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getGetters(binding$5.WidgetsBinding.__proto__),
    buildOwner: framework.BuildOwner,
    focusManager: focus_manager.FocusManager,
    firstFrameRasterized: core.bool,
    waitUntilFirstFrameRasterized: async.Future$(dart.void),
    debugDidSendFirstFrameEvent: core.bool,
    renderViewElement: framework.Element,
    isRootWidgetAttached: core.bool
  }));
  dart.setLibraryUri(binding$5.WidgetsBinding, "package:flutter/src/widgets/binding.dart");
  dart.setFieldSignature(binding$5.WidgetsBinding, () => ({
    __proto__: dart.getFields(binding$5.WidgetsBinding.__proto__),
    [_buildOwner]: dart.fieldType(framework.BuildOwner),
    [_observers]: dart.finalFieldType(core.List$(binding$5.WidgetsBindingObserver)),
    [_needToReportFirstFrame]: dart.fieldType(core.bool),
    [_firstFrameCompleter]: dart.finalFieldType(async.Completer$(dart.void)),
    debugBuildingDirtyElements: dart.fieldType(core.bool),
    [_renderViewElement]: dart.fieldType(framework.Element)
  }));
  dart.defineLazy(binding$5.WidgetsBinding, {
    /*binding$5.WidgetsBinding._instance*/get _instance() {
      return null;
    },
    set _instance(_) {}
  });
  var _newWidget = dart.privateName(binding$5, "_newWidget");
  const _is_RenderObjectToWidgetAdapter_default = Symbol('_is_RenderObjectToWidgetAdapter_default');
  var child$8 = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.child");
  var container$0 = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.container");
  var debugShortDescription$ = dart.privateName(binding$5, "RenderObjectToWidgetAdapter.debugShortDescription");
  binding$5.RenderObjectToWidgetAdapter$ = dart.generic(T => {
    var RenderObjectToWidgetElementOfT = () => (RenderObjectToWidgetElementOfT = dart.constFn(binding$5.RenderObjectToWidgetElement$(T)))();
    class RenderObjectToWidgetAdapter extends framework.RenderObjectWidget {
      get child() {
        return this[child$8];
      }
      set child(value) {
        super.child = value;
      }
      get container() {
        return this[container$0];
      }
      set container(value) {
        super.container = value;
      }
      get debugShortDescription() {
        return this[debugShortDescription$];
      }
      set debugShortDescription(value) {
        super.debugShortDescription = value;
      }
      createElement() {
        return new (RenderObjectToWidgetElementOfT()).new(this);
      }
      createRenderObject(context) {
        return this.container;
      }
      updateRenderObject(context, renderObject) {
        object$.RenderObject._check(renderObject);
      }
      attachToRenderTree(owner, element = null) {
        RenderObjectToWidgetElementOfT()._check(element);
        if (element == null) {
          owner.lockState(dart.fn(() => {
            element = this.createElement();
            if (!(element != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1051, 16, "element != null");
            element.assignOwner(owner);
          }, VoidToNull()));
          owner.buildScope(element, dart.fn(() => {
            element.mount(null, null);
          }, VoidToNull()));
          binding$3.SchedulerBinding.instance.ensureVisualUpdate();
        } else {
          element[_newWidget] = this;
          element.markNeedsBuild();
        }
        return element;
      }
      toStringShort() {
        let t16;
        t16 = this.debugShortDescription;
        return t16 == null ? super.toStringShort() : t16;
      }
    }
    (RenderObjectToWidgetAdapter.new = function(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let debugShortDescription = opts && 'debugShortDescription' in opts ? opts.debugShortDescription : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[child$8] = child;
      this[container$0] = container;
      this[debugShortDescription$] = debugShortDescription;
      RenderObjectToWidgetAdapter.__proto__.new.call(this, {key: new (GlobalObjectKeyOfStateOfStatefulWidget()).new(container), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = RenderObjectToWidgetAdapter.prototype;
    dart.addTypeTests(RenderObjectToWidgetAdapter);
    RenderObjectToWidgetAdapter.prototype[_is_RenderObjectToWidgetAdapter_default] = true;
    dart.setMethodSignature(RenderObjectToWidgetAdapter, () => ({
      __proto__: dart.getMethods(RenderObjectToWidgetAdapter.__proto__),
      createElement: dart.fnType(binding$5.RenderObjectToWidgetElement$(T), []),
      createRenderObject: dart.fnType(object$.RenderObjectWithChildMixin$(T), [framework.BuildContext]),
      attachToRenderTree: dart.fnType(binding$5.RenderObjectToWidgetElement$(T), [framework.BuildOwner], [core.Object])
    }));
    dart.setLibraryUri(RenderObjectToWidgetAdapter, "package:flutter/src/widgets/binding.dart");
    dart.setFieldSignature(RenderObjectToWidgetAdapter, () => ({
      __proto__: dart.getFields(RenderObjectToWidgetAdapter.__proto__),
      child: dart.finalFieldType(framework.Widget),
      container: dart.finalFieldType(object$.RenderObjectWithChildMixin$(T)),
      debugShortDescription: dart.finalFieldType(core.String)
    }));
    return RenderObjectToWidgetAdapter;
  });
  binding$5.RenderObjectToWidgetAdapter = binding$5.RenderObjectToWidgetAdapter$();
  dart.addTypeTests(binding$5.RenderObjectToWidgetAdapter, _is_RenderObjectToWidgetAdapter_default);
  var _child$1 = dart.privateName(binding$5, "_child");
  var _rebuild = dart.privateName(binding$5, "_rebuild");
  const _is_RenderObjectToWidgetElement_default = Symbol('_is_RenderObjectToWidgetElement_default');
  var C318;
  binding$5.RenderObjectToWidgetElement$ = dart.generic(T => {
    var RenderObjectToWidgetAdapterOfT = () => (RenderObjectToWidgetAdapterOfT = dart.constFn(binding$5.RenderObjectToWidgetAdapter$(T)))();
    var RenderObjectWithChildMixinOfT = () => (RenderObjectWithChildMixinOfT = dart.constFn(object$.RenderObjectWithChildMixin$(T)))();
    class RenderObjectToWidgetElement extends framework.RootRenderObjectElement {
      get widget() {
        return RenderObjectToWidgetAdapterOfT().as(super.widget);
      }
      visitChildren(visitor) {
        if (this[_child$1] != null) visitor(this[_child$1]);
      }
      forgetChild(child) {
        if (!dart.equals(child, this[_child$1])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1104, 12, "child == _child");
        this[_child$1] = null;
        super.forgetChild(child);
      }
      mount(parent, newSlot) {
        if (!(parent == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1111, 12, "parent == null");
        super.mount(parent, newSlot);
        this[_rebuild]();
      }
      update(newWidget) {
        RenderObjectToWidgetAdapterOfT()._check(newWidget);
        super.update(newWidget);
        if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1119, 12, "widget == newWidget");
        this[_rebuild]();
      }
      performRebuild() {
        if (this[_newWidget] != null) {
          let newWidget = this[_newWidget];
          this[_newWidget] = null;
          this.update(RenderObjectToWidgetAdapterOfT().as(newWidget));
        }
        super.performRebuild();
        if (!(this[_newWidget] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1137, 12, "_newWidget == null");
      }
      [_rebuild]() {
        try {
          this[_child$1] = this.updateChild(this[_child$1], this.widget.child, binding$5.RenderObjectToWidgetElement._rootChildSlot);
          if (!(this[_child$1] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1143, 14, "_child != null");
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: new assertions.ErrorDescription.new("attaching to the render tree")});
          assertions.FlutterError.reportError(details);
          let error = framework.ErrorWidget.builder(details);
          this[_child$1] = this.updateChild(null, error, binding$5.RenderObjectToWidgetElement._rootChildSlot);
        }
      }
      get renderObject() {
        return RenderObjectWithChildMixinOfT().as(super.renderObject);
      }
      insertChildRenderObject(child, slot) {
        object$.RenderObject._check(child);
        if (!dart.equals(slot, binding$5.RenderObjectToWidgetElement._rootChildSlot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1162, 12, "slot == _rootChildSlot");
        if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1163, 12, "renderObject.debugValidateChild(child)");
        this.renderObject.child = T.as(child);
      }
      moveChildRenderObject(child, slot) {
        object$.RenderObject._check(child);
        if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1169, 12, "false");
      }
      removeChildRenderObject(child) {
        object$.RenderObject._check(child);
        if (!dart.equals(this.renderObject.child, child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 1174, 12, "renderObject.child == child");
        this.renderObject.child = null;
      }
    }
    (RenderObjectToWidgetElement.new = function(widget) {
      this[_child$1] = null;
      this[_newWidget] = null;
      RenderObjectToWidgetElement.__proto__.new.call(this, widget);
      ;
    }).prototype = RenderObjectToWidgetElement.prototype;
    dart.addTypeTests(RenderObjectToWidgetElement);
    RenderObjectToWidgetElement.prototype[_is_RenderObjectToWidgetElement_default] = true;
    dart.setMethodSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getMethods(RenderObjectToWidgetElement.__proto__),
      [_rebuild]: dart.fnType(dart.void, []),
      insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
      moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
      removeChildRenderObject: dart.fnType(dart.void, [core.Object])
    }));
    dart.setGetterSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getGetters(RenderObjectToWidgetElement.__proto__),
      widget: binding$5.RenderObjectToWidgetAdapter$(T),
      renderObject: object$.RenderObjectWithChildMixin$(T)
    }));
    dart.setLibraryUri(RenderObjectToWidgetElement, "package:flutter/src/widgets/binding.dart");
    dart.setFieldSignature(RenderObjectToWidgetElement, () => ({
      __proto__: dart.getFields(RenderObjectToWidgetElement.__proto__),
      [_child$1]: dart.fieldType(framework.Element),
      [_newWidget]: dart.fieldType(framework.Widget)
    }));
    return RenderObjectToWidgetElement;
  });
  binding$5.RenderObjectToWidgetElement = binding$5.RenderObjectToWidgetElement$();
  dart.defineLazy(binding$5.RenderObjectToWidgetElement, {
    /*binding$5.RenderObjectToWidgetElement._rootChildSlot*/get _rootChildSlot() {
      return C318 || CT.C318;
    }
  });
  dart.addTypeTests(binding$5.RenderObjectToWidgetElement, _is_RenderObjectToWidgetElement_default);
  const BindingBase_GestureBinding$36 = class BindingBase_GestureBinding extends binding.BindingBase {};
  (BindingBase_GestureBinding$36.new = function() {
    binding$1.GestureBinding[dart.mixinNew].call(this);
    BindingBase_GestureBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_GestureBinding$36.prototype;
  dart.applyMixin(BindingBase_GestureBinding$36, binding$1.GestureBinding);
  const BindingBase_ServicesBinding$36 = class BindingBase_ServicesBinding extends BindingBase_GestureBinding$36 {};
  (BindingBase_ServicesBinding$36.new = function() {
    binding$2.ServicesBinding[dart.mixinNew].call(this);
    BindingBase_ServicesBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_ServicesBinding$36.prototype;
  dart.applyMixin(BindingBase_ServicesBinding$36, binding$2.ServicesBinding);
  const BindingBase_SchedulerBinding$36 = class BindingBase_SchedulerBinding extends BindingBase_ServicesBinding$36 {};
  (BindingBase_SchedulerBinding$36.new = function() {
    binding$3.SchedulerBinding[dart.mixinNew].call(this);
    BindingBase_SchedulerBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_SchedulerBinding$36.prototype;
  dart.applyMixin(BindingBase_SchedulerBinding$36, binding$3.SchedulerBinding);
  const BindingBase_PaintingBinding$36 = class BindingBase_PaintingBinding extends BindingBase_SchedulerBinding$36 {};
  (BindingBase_PaintingBinding$36.new = function() {
    binding$0.PaintingBinding[dart.mixinNew].call(this);
    BindingBase_PaintingBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_PaintingBinding$36.prototype;
  dart.applyMixin(BindingBase_PaintingBinding$36, binding$0.PaintingBinding);
  const BindingBase_SemanticsBinding$36 = class BindingBase_SemanticsBinding extends BindingBase_PaintingBinding$36 {};
  (BindingBase_SemanticsBinding$36.new = function() {
    binding$4.SemanticsBinding[dart.mixinNew].call(this);
    BindingBase_SemanticsBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_SemanticsBinding$36.prototype;
  dart.applyMixin(BindingBase_SemanticsBinding$36, binding$4.SemanticsBinding);
  const BindingBase_RendererBinding$36 = class BindingBase_RendererBinding extends BindingBase_SemanticsBinding$36 {};
  (BindingBase_RendererBinding$36.new = function() {
    binding$.RendererBinding[dart.mixinNew].call(this);
    BindingBase_RendererBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_RendererBinding$36.prototype;
  dart.applyMixin(BindingBase_RendererBinding$36, binding$.RendererBinding);
  const BindingBase_WidgetsBinding$36 = class BindingBase_WidgetsBinding extends BindingBase_RendererBinding$36 {};
  (BindingBase_WidgetsBinding$36.new = function() {
    binding$5.WidgetsBinding[dart.mixinNew].call(this);
    BindingBase_WidgetsBinding$36.__proto__.new.call(this);
  }).prototype = BindingBase_WidgetsBinding$36.prototype;
  dart.applyMixin(BindingBase_WidgetsBinding$36, binding$5.WidgetsBinding);
  binding$5.WidgetsFlutterBinding = class WidgetsFlutterBinding extends BindingBase_WidgetsBinding$36 {
    static ensureInitialized() {
      if (binding$5.WidgetsBinding.instance == null) new binding$5.WidgetsFlutterBinding.new();
      return binding$5.WidgetsBinding.instance;
    }
  };
  (binding$5.WidgetsFlutterBinding.new = function() {
    binding$5.WidgetsFlutterBinding.__proto__.new.call(this);
    ;
  }).prototype = binding$5.WidgetsFlutterBinding.prototype;
  dart.addTypeTests(binding$5.WidgetsFlutterBinding);
  dart.setLibraryUri(binding$5.WidgetsFlutterBinding, "package:flutter/src/widgets/binding.dart");
  binding$5.runApp = function runApp(app) {
    let t17;
    t17 = binding$5.WidgetsFlutterBinding.ensureInitialized();
    t17.scheduleAttachRootWidget(app);
    t17.scheduleWarmUpFrame();
    t17;
  };
  binding$5.debugDumpApp = function debugDumpApp() {
    if (!(binding$5.WidgetsBinding.instance != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 988, 10, "WidgetsBinding.instance != null");
    let mode = "RELEASE MODE";
    if (!dart.test(dart.fn(() => {
      mode = "CHECKED MODE";
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/binding.dart", 990, 10, "() {\r\n    mode = 'CHECKED MODE';\r\n    return true;\r\n  }()");
    print.debugPrint(dart.str(dart.runtimeType(binding$5.WidgetsBinding.instance)) + " - " + mode);
    if (binding$5.WidgetsBinding.instance.renderViewElement != null) {
      print.debugPrint(binding$5.WidgetsBinding.instance.renderViewElement.toStringDeep());
    } else {
      print.debugPrint("<no tree currently mounted>");
    }
  };
  var _layer$ = dart.privateName(widget_inspector, "_layer");
  widget_inspector._ProxyLayer = class _ProxyLayer extends layer.Layer {
    addToScene(builder, layerOffset = C141 || CT.C141) {
      this[_layer$].addToScene(builder, layerOffset);
    }
    findAnnotations(S, result, localPosition, opts) {
      let onlyFirst = opts && 'onlyFirst' in opts ? opts.onlyFirst : null;
      return this[_layer$].findAnnotations(S, result, localPosition, {onlyFirst: onlyFirst});
    }
  };
  (widget_inspector._ProxyLayer.new = function(_layer) {
    this[_layer$] = _layer;
    widget_inspector._ProxyLayer.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._ProxyLayer.prototype;
  dart.addTypeTests(widget_inspector._ProxyLayer);
  dart.setMethodSignature(widget_inspector._ProxyLayer, () => ({
    __proto__: dart.getMethods(widget_inspector._ProxyLayer.__proto__),
    addToScene: dart.fnType(dart.void, [ui.SceneBuilder], [ui.Offset]),
    findAnnotations: dart.gFnType(S => [core.bool, [layer.AnnotationResult$(S), ui.Offset], {onlyFirst: core.bool}, {}])
  }));
  dart.setLibraryUri(widget_inspector._ProxyLayer, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._ProxyLayer, () => ({
    __proto__: dart.getFields(widget_inspector._ProxyLayer.__proto__),
    [_layer$]: dart.finalFieldType(layer.Layer)
  }));
  var _main = dart.privateName(widget_inspector, "_main");
  var _screenshot = dart.privateName(widget_inspector, "_screenshot");
  var C319;
  var _drawCircle = dart.privateName(widget_inspector, "_drawCircle");
  var C320;
  var _drawCircle$ = dart.privateName(ui, "_drawCircle");
  var _drawOval = dart.privateName(widget_inspector, "_drawOval");
  var C321;
  var _drawOval$ = dart.privateName(ui, "_drawOval");
  var _saveLayerWithoutBounds = dart.privateName(widget_inspector, "_saveLayerWithoutBounds");
  var C322;
  var _saveLayerWithoutBounds$ = dart.privateName(ui, "_saveLayerWithoutBounds");
  var _drawImageRect = dart.privateName(widget_inspector, "_drawImageRect");
  var C323;
  var _drawImageRect$ = dart.privateName(ui, "_drawImageRect");
  var _drawRect = dart.privateName(widget_inspector, "_drawRect");
  var C324;
  var _drawRect$ = dart.privateName(ui, "_drawRect");
  var _scale = dart.privateName(widget_inspector, "_scale");
  var C325;
  var _scale$ = dart.privateName(ui, "_scale");
  var _drawDRRect = dart.privateName(widget_inspector, "_drawDRRect");
  var C326;
  var _drawDRRect$ = dart.privateName(ui, "_drawDRRect");
  var _canvas = dart.privateName(widget_inspector, "_canvas");
  var C327;
  var _canvas$ = dart.privateName(ui, "_canvas");
  var _saveLayer = dart.privateName(widget_inspector, "_saveLayer");
  var C328;
  var _saveLayer$ = dart.privateName(ui, "_saveLayer");
  var _drawLine = dart.privateName(widget_inspector, "_drawLine");
  var C329;
  var _drawLine$ = dart.privateName(ui, "_drawLine");
  var _clipRRect = dart.privateName(widget_inspector, "_clipRRect");
  var C330;
  var _clipRRect$ = dart.privateName(ui, "_clipRRect");
  var _clipPath = dart.privateName(widget_inspector, "_clipPath");
  var C331;
  var _clipPath$ = dart.privateName(ui, "_clipPath");
  var _transform = dart.privateName(widget_inspector, "_transform");
  var C332;
  var _transform$ = dart.privateName(ui, "_transform");
  var _drawImage = dart.privateName(widget_inspector, "_drawImage");
  var C333;
  var _drawImage$ = dart.privateName(ui, "_drawImage");
  var _drawPath = dart.privateName(widget_inspector, "_drawPath");
  var C334;
  var _drawPath$ = dart.privateName(ui, "_drawPath");
  var _drawColor = dart.privateName(widget_inspector, "_drawColor");
  var C335;
  var _drawColor$ = dart.privateName(ui, "_drawColor");
  var _drawPaint = dart.privateName(widget_inspector, "_drawPaint");
  var C336;
  var _drawPaint$ = dart.privateName(ui, "_drawPaint");
  var _drawRRect = dart.privateName(widget_inspector, "_drawRRect");
  var C337;
  var _drawRRect$ = dart.privateName(ui, "_drawRRect");
  var _drawParagraph = dart.privateName(widget_inspector, "_drawParagraph");
  var C338;
  var _drawParagraph$ = dart.privateName(ui, "_drawParagraph");
  var _clipRect = dart.privateName(widget_inspector, "_clipRect");
  var C339;
  var _clipRect$ = dart.privateName(ui, "_clipRect");
  var _canvas_ = dart.privateName(widget_inspector, "_canvas=");
  var C340;
  widget_inspector._MulticastCanvas = class _MulticastCanvas extends core.Object {
    clipPath(path, opts) {
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      this[_main].clipPath(path, {doAntiAlias: doAntiAlias});
      this[_screenshot].clipPath(path, {doAntiAlias: doAntiAlias});
    }
    clipRRect(rrect, opts) {
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      this[_main].clipRRect(rrect, {doAntiAlias: doAntiAlias});
      this[_screenshot].clipRRect(rrect, {doAntiAlias: doAntiAlias});
    }
    clipRect(rect, opts) {
      let clipOp = opts && 'clipOp' in opts ? opts.clipOp : C319 || CT.C319;
      let doAntiAlias = opts && 'doAntiAlias' in opts ? opts.doAntiAlias : true;
      this[_main].clipRect(rect, {clipOp: clipOp, doAntiAlias: doAntiAlias});
      this[_screenshot].clipRect(rect, {clipOp: clipOp, doAntiAlias: doAntiAlias});
    }
    drawArc(rect, startAngle, sweepAngle, useCenter, paint) {
      this[_main].drawArc(rect, startAngle, sweepAngle, useCenter, paint);
      this[_screenshot].drawArc(rect, startAngle, sweepAngle, useCenter, paint);
    }
    drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint) {
      this[_main].drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint);
      this[_screenshot].drawAtlas(atlas, transforms, rects, colors, blendMode, cullRect, paint);
    }
    drawCircle(c, radius, paint) {
      this[_main].drawCircle(c, radius, paint);
      this[_screenshot].drawCircle(c, radius, paint);
    }
    drawColor(color, blendMode) {
      this[_main].drawColor(color, blendMode);
      this[_screenshot].drawColor(color, blendMode);
    }
    drawDRRect(outer, inner, paint) {
      this[_main].drawDRRect(outer, inner, paint);
      this[_screenshot].drawDRRect(outer, inner, paint);
    }
    drawImage(image, p, paint) {
      this[_main].drawImage(image, p, paint);
      this[_screenshot].drawImage(image, p, paint);
    }
    drawImageNine(image, center, dst, paint) {
      this[_main].drawImageNine(image, center, dst, paint);
      this[_screenshot].drawImageNine(image, center, dst, paint);
    }
    drawImageRect(image, src, dst, paint) {
      this[_main].drawImageRect(image, src, dst, paint);
      this[_screenshot].drawImageRect(image, src, dst, paint);
    }
    drawLine(p1, p2, paint) {
      this[_main].drawLine(p1, p2, paint);
      this[_screenshot].drawLine(p1, p2, paint);
    }
    drawOval(rect, paint) {
      this[_main].drawOval(rect, paint);
      this[_screenshot].drawOval(rect, paint);
    }
    drawPaint(paint) {
      this[_main].drawPaint(paint);
      this[_screenshot].drawPaint(paint);
    }
    drawParagraph(paragraph, offset) {
      this[_main].drawParagraph(paragraph, offset);
      this[_screenshot].drawParagraph(paragraph, offset);
    }
    drawPath(path, paint) {
      this[_main].drawPath(path, paint);
      this[_screenshot].drawPath(path, paint);
    }
    drawPicture(picture) {
      this[_main].drawPicture(picture);
      this[_screenshot].drawPicture(picture);
    }
    drawPoints(pointMode, points, paint) {
      this[_main].drawPoints(pointMode, points, paint);
      this[_screenshot].drawPoints(pointMode, points, paint);
    }
    drawRRect(rrect, paint) {
      this[_main].drawRRect(rrect, paint);
      this[_screenshot].drawRRect(rrect, paint);
    }
    drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint) {
      this[_main].drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint);
      this[_screenshot].drawRawAtlas(atlas, rstTransforms, rects, colors, blendMode, cullRect, paint);
    }
    drawRawPoints(pointMode, points, paint) {
      this[_main].drawRawPoints(pointMode, points, paint);
      this[_screenshot].drawRawPoints(pointMode, points, paint);
    }
    drawRect(rect, paint) {
      this[_main].drawRect(rect, paint);
      this[_screenshot].drawRect(rect, paint);
    }
    drawShadow(path, color, elevation, transparentOccluder) {
      this[_main].drawShadow(path, color, elevation, transparentOccluder);
      this[_screenshot].drawShadow(path, color, elevation, transparentOccluder);
    }
    drawVertices(vertices, blendMode, paint) {
      this[_main].drawVertices(vertices, blendMode, paint);
      this[_screenshot].drawVertices(vertices, blendMode, paint);
    }
    getSaveCount() {
      return this[_main].getSaveCount();
    }
    restore() {
      this[_main].restore();
      this[_screenshot].restore();
    }
    rotate(radians) {
      this[_main].rotate(radians);
      this[_screenshot].rotate(radians);
    }
    save() {
      this[_main].save();
      this[_screenshot].save();
    }
    saveLayer(bounds, paint) {
      this[_main].saveLayer(bounds, paint);
      this[_screenshot].saveLayer(bounds, paint);
    }
    scale(sx, sy = null) {
      this[_main].scale(sx, sy);
      this[_screenshot].scale(sx, sy);
    }
    skew(sx, sy) {
      this[_main].skew(sx, sy);
      this[_screenshot].skew(sx, sy);
    }
    transform(matrix4) {
      this[_main].transform(matrix4);
      this[_screenshot].transform(matrix4);
    }
    translate(dx, dy) {
      this[_main].translate(dx, dy);
      this[_screenshot].translate(dx, dy);
    }
    [_drawCircle$](c, radius, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C320 || CT.C320, null, [c, radius, paint]));
    }
    [_drawOval$](rect, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C321 || CT.C321, null, [rect, paint]));
    }
    [_saveLayerWithoutBounds$](paint) {
      return this[$noSuchMethod](new core._Invocation.method(C322 || CT.C322, null, [paint]));
    }
    [_drawImageRect$](image, src, dst, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C323 || CT.C323, null, [image, src, dst, paint]));
    }
    [_drawRect$](rect, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C324 || CT.C324, null, [rect, paint]));
    }
    [_scale$](sx, sy) {
      return this[$noSuchMethod](new core._Invocation.method(C325 || CT.C325, null, [sx, sy]));
    }
    [_drawDRRect$](outer, inner, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C326 || CT.C326, null, [outer, inner, paint]));
    }
    get [_canvas$]() {
      return _engine.RecordingCanvas._check(this[$noSuchMethod](new core._Invocation.getter(C327 || CT.C327)));
    }
    [_saveLayer$](bounds, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C328 || CT.C328, null, [bounds, paint]));
    }
    [_drawLine$](p1, p2, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C329 || CT.C329, null, [p1, p2, paint]));
    }
    [_clipRRect$](rrect, doAntiAlias) {
      return this[$noSuchMethod](new core._Invocation.method(C330 || CT.C330, null, [rrect, doAntiAlias]));
    }
    [_clipPath$](path, doAntiAlias) {
      return this[$noSuchMethod](new core._Invocation.method(C331 || CT.C331, null, [path, doAntiAlias]));
    }
    [_transform$](matrix4) {
      return this[$noSuchMethod](new core._Invocation.method(C332 || CT.C332, null, [matrix4]));
    }
    [_drawImage$](image, p, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C333 || CT.C333, null, [image, p, paint]));
    }
    [_drawPath$](path, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C334 || CT.C334, null, [path, paint]));
    }
    [_drawColor$](color, blendMode) {
      return this[$noSuchMethod](new core._Invocation.method(C335 || CT.C335, null, [color, blendMode]));
    }
    [_drawPaint$](paint) {
      return this[$noSuchMethod](new core._Invocation.method(C336 || CT.C336, null, [paint]));
    }
    [_drawRRect$](rrect, paint) {
      return this[$noSuchMethod](new core._Invocation.method(C337 || CT.C337, null, [rrect, paint]));
    }
    [_drawParagraph$](paragraph, offset) {
      return this[$noSuchMethod](new core._Invocation.method(C338 || CT.C338, null, [paragraph, offset]));
    }
    [_clipRect$](rect, clipOp, doAntiAlias) {
      return this[$noSuchMethod](new core._Invocation.method(C339 || CT.C339, null, [rect, clipOp, doAntiAlias]));
    }
    set [_canvas$](value) {
      return this[$noSuchMethod](new core._Invocation.setter(C340 || CT.C340, value));
    }
  };
  (widget_inspector._MulticastCanvas.new = function(opts) {
    let main = opts && 'main' in opts ? opts.main : null;
    let screenshot = opts && 'screenshot' in opts ? opts.screenshot : null;
    if (!(main != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 77, 15, "main != null");
    if (!(screenshot != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 78, 15, "screenshot != null");
    this[_main] = main;
    this[_screenshot] = screenshot;
    ;
  }).prototype = widget_inspector._MulticastCanvas.prototype;
  dart.addTypeTests(widget_inspector._MulticastCanvas);
  widget_inspector._MulticastCanvas[dart.implements] = () => [ui.Canvas];
  dart.setMethodSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getMethods(widget_inspector._MulticastCanvas.__proto__),
    clipPath: dart.fnType(dart.void, [ui.Path], {doAntiAlias: core.bool}, {}),
    clipRRect: dart.fnType(dart.void, [ui.RRect], {doAntiAlias: core.bool}, {}),
    clipRect: dart.fnType(dart.void, [ui.Rect], {clipOp: ui.ClipOp, doAntiAlias: core.bool}, {}),
    drawArc: dart.fnType(dart.void, [ui.Rect, core.double, core.double, core.bool, ui.Paint]),
    drawAtlas: dart.fnType(dart.void, [ui.Image, core.List$(ui.RSTransform), core.List$(ui.Rect), core.List$(ui.Color), ui.BlendMode, ui.Rect, ui.Paint]),
    drawCircle: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    drawColor: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    drawDRRect: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    drawImage: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    drawImageNine: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawImageRect: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    drawLine: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    drawOval: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawPaint: dart.fnType(dart.void, [ui.Paint]),
    drawParagraph: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    drawPath: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    drawPicture: dart.fnType(dart.void, [ui.Picture]),
    drawPoints: dart.fnType(dart.void, [ui.PointMode, core.List$(ui.Offset), ui.Paint]),
    drawRRect: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    drawRawAtlas: dart.fnType(dart.void, [ui.Image, typed_data.Float32List, typed_data.Float32List, typed_data.Int32List, ui.BlendMode, ui.Rect, ui.Paint]),
    drawRawPoints: dart.fnType(dart.void, [ui.PointMode, typed_data.Float32List, ui.Paint]),
    drawRect: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    drawShadow: dart.fnType(dart.void, [ui.Path, ui.Color, core.double, core.bool]),
    drawVertices: dart.fnType(dart.void, [ui.Vertices, ui.BlendMode, ui.Paint]),
    getSaveCount: dart.fnType(core.int, []),
    restore: dart.fnType(dart.void, []),
    rotate: dart.fnType(dart.void, [core.double]),
    save: dart.fnType(dart.void, []),
    saveLayer: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    scale: dart.fnType(dart.void, [core.double], [core.double]),
    skew: dart.fnType(dart.void, [core.double, core.double]),
    transform: dart.fnType(dart.void, [typed_data.Float64List]),
    translate: dart.fnType(dart.void, [core.double, core.double]),
    [_drawCircle$]: dart.fnType(dart.void, [ui.Offset, core.double, ui.Paint]),
    [_drawOval$]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_saveLayerWithoutBounds$]: dart.fnType(dart.void, [ui.Paint]),
    [_drawImageRect$]: dart.fnType(dart.void, [ui.Image, ui.Rect, ui.Rect, ui.Paint]),
    [_drawRect$]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_scale$]: dart.fnType(dart.void, [core.double, core.double]),
    [_drawDRRect$]: dart.fnType(dart.void, [ui.RRect, ui.RRect, ui.Paint]),
    [_saveLayer$]: dart.fnType(dart.void, [ui.Rect, ui.Paint]),
    [_drawLine$]: dart.fnType(dart.void, [ui.Offset, ui.Offset, ui.Paint]),
    [_clipRRect$]: dart.fnType(dart.void, [ui.RRect, core.bool]),
    [_clipPath$]: dart.fnType(dart.void, [ui.Path, core.bool]),
    [_transform$]: dart.fnType(dart.void, [typed_data.Float64List]),
    [_drawImage$]: dart.fnType(dart.void, [ui.Image, ui.Offset, ui.Paint]),
    [_drawPath$]: dart.fnType(dart.void, [ui.Path, ui.Paint]),
    [_drawColor$]: dart.fnType(dart.void, [ui.Color, ui.BlendMode]),
    [_drawPaint$]: dart.fnType(dart.void, [ui.Paint]),
    [_drawRRect$]: dart.fnType(dart.void, [ui.RRect, ui.Paint]),
    [_drawParagraph$]: dart.fnType(dart.void, [ui.Paragraph, ui.Offset]),
    [_clipRect$]: dart.fnType(dart.void, [ui.Rect, ui.ClipOp, core.bool])
  }));
  dart.setGetterSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getGetters(widget_inspector._MulticastCanvas.__proto__),
    [_canvas$]: _engine.RecordingCanvas
  }));
  dart.setSetterSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getSetters(widget_inspector._MulticastCanvas.__proto__),
    [_canvas$]: _engine.RecordingCanvas
  }));
  dart.setLibraryUri(widget_inspector._MulticastCanvas, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._MulticastCanvas, () => ({
    __proto__: dart.getFields(widget_inspector._MulticastCanvas.__proto__),
    [_main]: dart.finalFieldType(ui.Canvas),
    [_screenshot]: dart.finalFieldType(ui.Canvas)
  }));
  widget_inspector._ScreenshotContainerLayer = class _ScreenshotContainerLayer extends layer.OffsetLayer {
    addToScene(builder, layerOffset = C141 || CT.C141) {
      this.addChildrenToScene(builder, layerOffset);
    }
  };
  (widget_inspector._ScreenshotContainerLayer.new = function() {
    widget_inspector._ScreenshotContainerLayer.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._ScreenshotContainerLayer.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotContainerLayer);
  dart.setLibraryUri(widget_inspector._ScreenshotContainerLayer, "package:flutter/src/widgets/widget_inspector.dart");
  widget_inspector._ScreenshotData = class _ScreenshotData extends core.Object {
    get screenshotOffset() {
      if (!dart.test(this.foundTarget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 361, 12, "foundTarget");
      return this.containerLayer.offset;
    }
    set screenshotOffset(offset) {
      this.containerLayer.offset = offset;
    }
  };
  (widget_inspector._ScreenshotData.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    this.foundTarget = false;
    this.includeInScreenshot = false;
    this.includeInRegularContext = true;
    this.target = target;
    if (!(target != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 330, 15, "target != null");
    this.containerLayer = new widget_inspector._ScreenshotContainerLayer.new();
    ;
  }).prototype = widget_inspector._ScreenshotData.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotData);
  dart.setGetterSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getGetters(widget_inspector._ScreenshotData.__proto__),
    screenshotOffset: ui.Offset
  }));
  dart.setSetterSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getSetters(widget_inspector._ScreenshotData.__proto__),
    screenshotOffset: ui.Offset
  }));
  dart.setLibraryUri(widget_inspector._ScreenshotData, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._ScreenshotData, () => ({
    __proto__: dart.getFields(widget_inspector._ScreenshotData.__proto__),
    target: dart.finalFieldType(object$.RenderObject),
    containerLayer: dart.finalFieldType(layer.OffsetLayer),
    foundTarget: dart.fieldType(core.bool),
    includeInScreenshot: dart.fieldType(core.bool),
    includeInRegularContext: dart.fieldType(core.bool)
  }));
  var _screenshotCurrentLayer = dart.privateName(widget_inspector, "_screenshotCurrentLayer");
  var _screenshotRecorder = dart.privateName(widget_inspector, "_screenshotRecorder");
  var _screenshotCanvas = dart.privateName(widget_inspector, "_screenshotCanvas");
  var _multicastCanvas = dart.privateName(widget_inspector, "_multicastCanvas");
  var _data = dart.privateName(widget_inspector, "_data");
  var _startRecordingScreenshot = dart.privateName(widget_inspector, "_startRecordingScreenshot");
  var _isScreenshotRecording = dart.privateName(widget_inspector, "_isScreenshotRecording");
  var _stopRecordingScreenshotIfNeeded = dart.privateName(widget_inspector, "_stopRecordingScreenshotIfNeeded");
  widget_inspector._ScreenshotPaintingContext = class _ScreenshotPaintingContext extends object$.PaintingContext {
    get canvas() {
      if (dart.test(this[_data].includeInScreenshot)) {
        if (this[_screenshotCanvas] == null) {
          this[_startRecordingScreenshot]();
        }
        if (!(this[_screenshotCanvas] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 401, 14, "_screenshotCanvas != null");
        return dart.test(this[_data].includeInRegularContext) ? this[_multicastCanvas] : this[_screenshotCanvas];
      } else {
        if (!dart.test(this[_data].includeInRegularContext)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 404, 14, "_data.includeInRegularContext");
        return super.canvas;
      }
    }
    get [_isScreenshotRecording]() {
      let hasScreenshotCanvas = this[_screenshotCanvas] != null;
      if (!dart.test(dart.fn(() => {
        if (hasScreenshotCanvas) {
          if (!(this[_screenshotCurrentLayer] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 413, 16, "_screenshotCurrentLayer != null");
          if (!(this[_screenshotRecorder] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 414, 16, "_screenshotRecorder != null");
          if (!(this[_screenshotCanvas] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 415, 16, "_screenshotCanvas != null");
        } else {
          if (!(this[_screenshotCurrentLayer] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 417, 16, "_screenshotCurrentLayer == null");
          if (!(this[_screenshotRecorder] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 418, 16, "_screenshotRecorder == null");
          if (!(this[_screenshotCanvas] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 419, 16, "_screenshotCanvas == null");
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 411, 12, "() {\r\n      if (hasScreenshotCanvas) {\r\n        assert(_screenshotCurrentLayer != null);\r\n        assert(_screenshotRecorder != null);\r\n        assert(_screenshotCanvas != null);\r\n      } else {\r\n        assert(_screenshotCurrentLayer == null);\r\n        assert(_screenshotRecorder == null);\r\n        assert(_screenshotCanvas == null);\r\n      }\r\n      return true;\r\n    }()");
      return hasScreenshotCanvas;
    }
    [_startRecordingScreenshot]() {
      if (!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 427, 12, "_data.includeInScreenshot");
      if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 428, 12, "!_isScreenshotRecording");
      this[_screenshotCurrentLayer] = new layer.PictureLayer.new(this.estimatedBounds);
      this[_screenshotRecorder] = ui.PictureRecorder.new();
      this[_screenshotCanvas] = ui.Canvas.new(this[_screenshotRecorder]);
      this[_data].containerLayer.append(this[_screenshotCurrentLayer]);
      if (dart.test(this[_data].includeInRegularContext)) {
        this[_multicastCanvas] = new widget_inspector._MulticastCanvas.new({main: super.canvas, screenshot: this[_screenshotCanvas]});
      } else {
        this[_multicastCanvas] = null;
      }
    }
    stopRecordingIfNeeded() {
      super.stopRecordingIfNeeded();
      this[_stopRecordingScreenshotIfNeeded]();
    }
    [_stopRecordingScreenshotIfNeeded]() {
      if (!dart.test(this[_isScreenshotRecording])) return;
      this[_screenshotCurrentLayer].picture = this[_screenshotRecorder].endRecording();
      this[_screenshotCurrentLayer] = null;
      this[_screenshotRecorder] = null;
      this[_multicastCanvas] = null;
      this[_screenshotCanvas] = null;
    }
    appendLayer(layer) {
      if (dart.test(this[_data].includeInRegularContext)) {
        super.appendLayer(layer);
        if (dart.test(this[_data].includeInScreenshot)) {
          if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 465, 16, "!_isScreenshotRecording");
          this[_data].containerLayer.append(new widget_inspector._ProxyLayer.new(layer));
        }
      } else {
        if (!!dart.test(this[_isScreenshotRecording])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 472, 14, "!_isScreenshotRecording");
        if (!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 473, 14, "_data.includeInScreenshot");
        layer.remove();
        this[_data].containerLayer.append(layer);
        return;
      }
    }
    createChildContext(childLayer, bounds) {
      if (dart.test(this[_data].foundTarget)) {
        return super.createChildContext(childLayer, bounds);
      } else {
        return new widget_inspector._ScreenshotPaintingContext.new({containerLayer: childLayer, estimatedBounds: bounds, screenshotData: this[_data]});
      }
    }
    paintChild(child, offset) {
      let isScreenshotTarget = child == this[_data].target;
      if (isScreenshotTarget) {
        if (!!dart.test(this[_data].includeInScreenshot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 499, 14, "!_data.includeInScreenshot");
        if (!!dart.test(this[_data].foundTarget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 500, 14, "!_data.foundTarget");
        this[_data].foundTarget = true;
        this[_data].screenshotOffset = offset;
        this[_data].includeInScreenshot = true;
      }
      super.paintChild(child, offset);
      if (isScreenshotTarget) {
        this[_stopRecordingScreenshotIfNeeded]();
        this[_data].includeInScreenshot = false;
      }
    }
    static toImage(renderObject, renderBounds, opts) {
      let pixelRatio = opts && 'pixelRatio' in opts ? opts.pixelRatio : 1;
      let debugPaint = opts && 'debugPaint' in opts ? opts.debugPaint : false;
      let repaintBoundary = renderObject;
      while (repaintBoundary != null && !dart.test(repaintBoundary.isRepaintBoundary)) {
        repaintBoundary = object$.RenderObject.as(repaintBoundary.parent);
      }
      if (!(repaintBoundary != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 549, 12, "repaintBoundary != null");
      let data = new widget_inspector._ScreenshotData.new({target: renderObject});
      let context = new widget_inspector._ScreenshotPaintingContext.new({containerLayer: repaintBoundary.debugLayer, estimatedBounds: repaintBoundary.paintBounds, screenshotData: data});
      if (renderObject == repaintBoundary) {
        data.containerLayer.append(new widget_inspector._ProxyLayer.new(repaintBoundary.debugLayer));
        data.foundTarget = true;
        let offsetLayer = layer.OffsetLayer.as(repaintBoundary.debugLayer);
        data.screenshotOffset = offsetLayer.offset;
      } else {
        object$.PaintingContext.debugInstrumentRepaintCompositedChild(repaintBoundary, {customContext: context});
      }
      if (dart.test(debugPaint) && !dart.test(debug$.debugPaintSizeEnabled)) {
        data.includeInRegularContext = false;
        context.stopRecordingIfNeeded();
        if (!dart.test(data.foundTarget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 582, 14, "data.foundTarget");
        data.includeInScreenshot = true;
        debug$.debugPaintSizeEnabled = true;
        try {
          renderObject.debugPaint(context, data.screenshotOffset);
        } finally {
          debug$.debugPaintSizeEnabled = false;
          context.stopRecordingIfNeeded();
        }
      }
      repaintBoundary.debugLayer.buildScene(ui.SceneBuilder.new());
      return data.containerLayer.toImage(renderBounds, {pixelRatio: pixelRatio});
    }
  };
  (widget_inspector._ScreenshotPaintingContext.new = function(opts) {
    let containerLayer = opts && 'containerLayer' in opts ? opts.containerLayer : null;
    let estimatedBounds = opts && 'estimatedBounds' in opts ? opts.estimatedBounds : null;
    let screenshotData = opts && 'screenshotData' in opts ? opts.screenshotData : null;
    this[_screenshotCurrentLayer] = null;
    this[_screenshotRecorder] = null;
    this[_screenshotCanvas] = null;
    this[_multicastCanvas] = null;
    this[_data] = screenshotData;
    widget_inspector._ScreenshotPaintingContext.__proto__.new.call(this, containerLayer, estimatedBounds);
    ;
  }).prototype = widget_inspector._ScreenshotPaintingContext.prototype;
  dart.addTypeTests(widget_inspector._ScreenshotPaintingContext);
  dart.setMethodSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getMethods(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_startRecordingScreenshot]: dart.fnType(dart.void, []),
    [_stopRecordingScreenshotIfNeeded]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getGetters(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_isScreenshotRecording]: core.bool
  }));
  dart.setLibraryUri(widget_inspector._ScreenshotPaintingContext, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._ScreenshotPaintingContext, () => ({
    __proto__: dart.getFields(widget_inspector._ScreenshotPaintingContext.__proto__),
    [_data]: dart.finalFieldType(widget_inspector._ScreenshotData),
    [_screenshotCurrentLayer]: dart.fieldType(layer.PictureLayer),
    [_screenshotRecorder]: dart.fieldType(ui.PictureRecorder),
    [_screenshotCanvas]: dart.fieldType(ui.Canvas),
    [_multicastCanvas]: dart.fieldType(widget_inspector._MulticastCanvas)
  }));
  widget_inspector._DiagnosticsPathNode = class _DiagnosticsPathNode extends core.Object {};
  (widget_inspector._DiagnosticsPathNode.new = function(opts) {
    let node = opts && 'node' in opts ? opts.node : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let childIndex = opts && 'childIndex' in opts ? opts.childIndex : null;
    this.node = node;
    this.children = children;
    this.childIndex = childIndex;
    if (!(node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 617, 15, "node != null");
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 618, 15, "children != null");
    ;
  }).prototype = widget_inspector._DiagnosticsPathNode.prototype;
  dart.addTypeTests(widget_inspector._DiagnosticsPathNode);
  dart.setLibraryUri(widget_inspector._DiagnosticsPathNode, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._DiagnosticsPathNode, () => ({
    __proto__: dart.getFields(widget_inspector._DiagnosticsPathNode.__proto__),
    node: dart.finalFieldType(diagnostics$.DiagnosticsNode),
    children: dart.finalFieldType(core.List$(diagnostics$.DiagnosticsNode)),
    childIndex: dart.finalFieldType(core.int)
  }));
  widget_inspector._InspectorReferenceData = class _InspectorReferenceData extends core.Object {};
  (widget_inspector._InspectorReferenceData.new = function(object) {
    this.count = 1;
    this.object = object;
    ;
  }).prototype = widget_inspector._InspectorReferenceData.prototype;
  dart.addTypeTests(widget_inspector._InspectorReferenceData);
  dart.setLibraryUri(widget_inspector._InspectorReferenceData, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._InspectorReferenceData, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorReferenceData.__proto__),
    object: dart.finalFieldType(core.Object),
    count: dart.fieldType(core.int)
  }));
  var _serializeRing = dart.privateName(widget_inspector, "_serializeRing");
  var _serializeRingIndex = dart.privateName(widget_inspector, "_serializeRingIndex");
  var _groups = dart.privateName(widget_inspector, "_groups");
  var _idToReferenceData = dart.privateName(widget_inspector, "_idToReferenceData");
  var _objectToId = dart.privateName(widget_inspector, "_objectToId");
  var _nextId = dart.privateName(widget_inspector, "_nextId");
  var _pubRootDirectories = dart.privateName(widget_inspector, "_pubRootDirectories");
  var _trackRebuildDirtyWidgets = dart.privateName(widget_inspector, "_trackRebuildDirtyWidgets");
  var _trackRepaintWidgets = dart.privateName(widget_inspector, "_trackRepaintWidgets");
  var _registerServiceExtensionCallback = dart.privateName(widget_inspector, "_registerServiceExtensionCallback");
  var _errorsSinceReload = dart.privateName(widget_inspector, "_errorsSinceReload");
  var _widgetCreationTracked = dart.privateName(widget_inspector, "_widgetCreationTracked");
  var _frameStart = dart.privateName(widget_inspector, "_frameStart");
  var _rebuildStats = dart.privateName(widget_inspector, "_rebuildStats");
  var _repaintStats = dart.privateName(widget_inspector, "_repaintStats");
  var _registerSignalServiceExtension = dart.privateName(widget_inspector, "_registerSignalServiceExtension");
  var _registerObjectGroupServiceExtension = dart.privateName(widget_inspector, "_registerObjectGroupServiceExtension");
  var _postExtensionStateChangedEvent = dart.privateName(widget_inspector, "_postExtensionStateChangedEvent");
  var _registerBoolServiceExtension = dart.privateName(widget_inspector, "_registerBoolServiceExtension");
  var _registerServiceExtensionWithArg = dart.privateName(widget_inspector, "_registerServiceExtensionWithArg");
  var _registerServiceExtensionVarArgs = dart.privateName(widget_inspector, "_registerServiceExtensionVarArgs");
  var _nodeToJson = dart.privateName(widget_inspector, "_nodeToJson");
  var _reportError = dart.privateName(widget_inspector, "_reportError");
  var _resetErrorCount = dart.privateName(widget_inspector, "_resetErrorCount");
  var _onFrameStart = dart.privateName(widget_inspector, "_onFrameStart");
  var _onRebuildWidget = dart.privateName(widget_inspector, "_onRebuildWidget");
  var _onPaint = dart.privateName(widget_inspector, "_onPaint");
  var _getParentChain = dart.privateName(widget_inspector, "_getParentChain");
  var _getProperties = dart.privateName(widget_inspector, "_getProperties");
  var _getChildren = dart.privateName(widget_inspector, "_getChildren");
  var _getChildrenSummaryTree = dart.privateName(widget_inspector, "_getChildrenSummaryTree");
  var _getChildrenDetailsSubtree = dart.privateName(widget_inspector, "_getChildrenDetailsSubtree");
  var _getRootWidget = dart.privateName(widget_inspector, "_getRootWidget");
  var _getRootRenderObject = dart.privateName(widget_inspector, "_getRootRenderObject");
  var _getRootWidgetSummaryTree = dart.privateName(widget_inspector, "_getRootWidgetSummaryTree");
  var _getDetailsSubtree = dart.privateName(widget_inspector, "_getDetailsSubtree");
  var _getSelectedRenderObject = dart.privateName(widget_inspector, "_getSelectedRenderObject");
  var _getSelectedWidget = dart.privateName(widget_inspector, "_getSelectedWidget");
  var _getSelectedSummaryWidget = dart.privateName(widget_inspector, "_getSelectedSummaryWidget");
  var _clearStats = dart.privateName(widget_inspector, "_clearStats");
  var _decrementReferenceCount = dart.privateName(widget_inspector, "_decrementReferenceCount");
  var _safeJsonEncode = dart.privateName(widget_inspector, "_safeJsonEncode");
  var _getRenderObjectParentChain = dart.privateName(widget_inspector, "_getRenderObjectParentChain");
  var _getElementParentChain = dart.privateName(widget_inspector, "_getElementParentChain");
  var _pathNodeToJson = dart.privateName(widget_inspector, "_pathNodeToJson");
  var _nodesToJson = dart.privateName(widget_inspector, "_nodesToJson");
  var _isValueCreatedByLocalProject = dart.privateName(widget_inspector, "_isValueCreatedByLocalProject");
  var _getRawElementParentChain = dart.privateName(widget_inspector, "_getRawElementParentChain");
  var C341;
  var _isLocalCreationLocation = dart.privateName(widget_inspector, "_isLocalCreationLocation");
  var _truncateNodes = dart.privateName(widget_inspector, "_truncateNodes");
  var C342;
  var _getChildrenFiltered = dart.privateName(widget_inspector, "_getChildrenFiltered");
  var _shouldShowInSummaryTree = dart.privateName(widget_inspector, "_shouldShowInSummaryTree");
  var _filterChildren = dart.privateName(widget_inspector, "_filterChildren");
  var C343;
  var _onFrameEnd = dart.privateName(widget_inspector, "_onFrameEnd");
  var _postStatsEvent = dart.privateName(widget_inspector, "_postStatsEvent");
  var selection = dart.privateName(widget_inspector, "WidgetInspectorService.selection");
  var selectionChangedCallback = dart.privateName(widget_inspector, "WidgetInspectorService.selectionChangedCallback");
  widget_inspector.WidgetInspectorService = class WidgetInspectorService extends core.Object {
    static get instance() {
      return widget_inspector.WidgetInspectorService._instance;
    }
    static set instance(instance) {
      widget_inspector.WidgetInspectorService._instance = instance;
    }
  };
  widget_inspector.WidgetInspectorService[dart.mixinOn] = Object => class WidgetInspectorService extends Object {
    get selection() {
      return this[selection];
    }
    set selection(value) {
      super.selection = value;
    }
    get selectionChangedCallback() {
      return this[selectionChangedCallback];
    }
    set selectionChangedCallback(value) {
      this[selectionChangedCallback] = value;
    }
    registerServiceExtension(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      this[_registerServiceExtensionCallback]({name: "inspector." + dart.str(name), callback: callback});
    }
    [_registerSignalServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => async.async(MapOfString$Object(), function*() {
          return new (IdentityMapOfString$Object()).from(["result", (yield callback())]);
        }), MapOfString$StringToFutureOfMapOfString$Object())});
    }
    [_registerObjectGroupServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => async.async(MapOfString$Object(), function*() {
          return new (IdentityMapOfString$Object()).from(["result", (yield callback(parameters[$_get]("objectGroup")))]);
        }), MapOfString$StringToFutureOfMapOfString$Object())});
    }
    [_registerBoolServiceExtension](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let getter = opts && 'getter' in opts ? opts.getter : null;
      let setter = opts && 'setter' in opts ? opts.setter : null;
      if (!(name != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 816, 12, "name != null");
      if (!(getter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 817, 12, "getter != null");
      if (!(setter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 818, 12, "setter != null");
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => async.async(MapOfString$dynamic(), (function*() {
          if (dart.test(parameters[$containsKey]("enabled"))) {
            let value = parameters[$_get]("enabled") === "true";
            yield setter(value);
            this[_postExtensionStateChangedEvent](name, value);
          }
          return new (IdentityMapOfString$dynamic()).from(["enabled", dart.test(yield getter()) ? "true" : "false"]);
        }).bind(this)), MapOfString$StringToFutureOfMapOfString$dynamic())});
    }
    [_postExtensionStateChangedEvent](name, value) {
      this.postEvent("Flutter.ServiceExtensionStateChanged", new (IdentityMapOfString$dynamic()).from(["extension", "ext.flutter.inspector." + dart.str(name), "value", value]));
    }
    [_registerServiceExtensionWithArg](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => async.async(MapOfString$Object(), function*() {
          if (!dart.test(parameters[$containsKey]("objectGroup"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 863, 16, "parameters.containsKey('objectGroup')");
          return new (IdentityMapOfString$Object()).from(["result", (yield callback(parameters[$_get]("arg"), parameters[$_get]("objectGroup")))]);
        }), MapOfString$StringToFutureOfMapOfString$Object())});
    }
    [_registerServiceExtensionVarArgs](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      this.registerServiceExtension({name: name, callback: dart.fn(parameters => async.async(MapOfString$Object(), function*() {
          let args = JSArrayOfString().of([]);
          parameters[$forEach](dart.fn((name, value) => {
            if (name[$startsWith]("arg")) {
              let index = core.int.parse(name[$substring]("arg".length));
              if (dart.notNull(index) >= dart.notNull(args[$length])) {
                args[$length] = dart.notNull(index) + 1;
              }
              args[$_set](index, value);
            }
          }, StringAndStringToNull()));
          return new (IdentityMapOfString$Object()).from(["result", (yield callback(args))]);
        }), MapOfString$StringToFutureOfMapOfString$Object())});
    }
    forceRebuild() {
      let binding = binding$5.WidgetsBinding.instance;
      if (binding.renderViewElement != null) {
        binding.buildOwner.reassemble(binding.renderViewElement);
        return binding.endOfFrame;
      }
      return FutureOfvoid().value();
    }
    [_reportError](details) {
      let errorJson = this[_nodeToJson](details.toDiagnosticsNode(), new widget_inspector.InspectorSerializationDelegate.new({groupName: "console-group", subtreeDepth: 5, includeProperties: true, expandPropertyValues: true, maxDescendentsTruncatableNode: 5, service: this}));
      errorJson[$_set]("errorsSinceReload", this[_errorsSinceReload]);
      this[_errorsSinceReload] = dart.notNull(this[_errorsSinceReload]) + 1;
      this.postEvent("Flutter.Error", errorJson);
    }
    [_resetErrorCount]() {
      this[_errorsSinceReload] = 0;
    }
    initServiceExtensions(registerServiceExtensionCallback) {
      this[_registerServiceExtensionCallback] = registerServiceExtensionCallback;
      if (!!dart.test(widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 953, 12, "!_debugServiceExtensionsRegistered");
      if (!dart.test(dart.fn(() => {
        widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 954, 12, "() {\r\n      _debugServiceExtensionsRegistered = true;\r\n      return true;\r\n    }()");
      binding$3.SchedulerBinding.instance.addPersistentFrameCallback(dart.bind(this, _onFrameStart));
      let structuredExceptionHandler = dart.bind(this, _reportError);
      let defaultExceptionHandler = assertions.FlutterError.onError;
      this[_registerBoolServiceExtension]({name: "structuredErrors", getter: dart.fn(() => async.async(core.bool, function*() {
          return dart.equals(assertions.FlutterError.onError, structuredExceptionHandler);
        }), VoidToFutureOfbool()), setter: dart.fn(value => {
          assertions.FlutterError.onError = dart.test(value) ? structuredExceptionHandler : defaultExceptionHandler;
          return FutureOfvoid().value();
        }, boolToFutureOfvoid())});
      this[_registerBoolServiceExtension]({name: "show", getter: dart.fn(() => async.async(core.bool, function*() {
          return app.WidgetsApp.debugShowWidgetInspectorOverride;
        }), VoidToFutureOfbool()), setter: dart.fn(value => {
          if (dart.equals(app.WidgetsApp.debugShowWidgetInspectorOverride, value)) {
            return FutureOfvoid().value();
          }
          app.WidgetsApp.debugShowWidgetInspectorOverride = value;
          return this.forceRebuild();
        }, boolToFutureOfvoid())});
      if (dart.test(this.isWidgetCreationTracked())) {
        this[_registerBoolServiceExtension]({name: "trackRebuildDirtyWidgets", getter: dart.fn(() => async.async(core.bool, (function*() {
            return this[_trackRebuildDirtyWidgets];
          }).bind(this)), VoidToFutureOfbool()), setter: dart.fn(value => async.async(core.Null, (function*() {
            if (dart.equals(value, this[_trackRebuildDirtyWidgets])) {
              return;
            }
            this[_rebuildStats].resetCounts();
            this[_trackRebuildDirtyWidgets] = value;
            if (dart.test(value)) {
              if (!(debug$0.debugOnRebuildDirtyWidget == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 998, 20, "debugOnRebuildDirtyWidget == null");
              debug$0.debugOnRebuildDirtyWidget = dart.bind(this, _onRebuildWidget);
              yield this.forceRebuild();
              return;
            } else {
              debug$0.debugOnRebuildDirtyWidget = null;
              return;
            }
          }).bind(this)), boolToFutureOfNull())});
        this[_registerBoolServiceExtension]({name: "trackRepaintWidgets", getter: dart.fn(() => async.async(core.bool, (function*() {
            return this[_trackRepaintWidgets];
          }).bind(this)), VoidToFutureOfbool()), setter: dart.fn(value => async.async(core.Null, (function*() {
            if (dart.equals(value, this[_trackRepaintWidgets])) {
              return;
            }
            this[_repaintStats].resetCounts();
            this[_trackRepaintWidgets] = value;
            if (dart.test(value)) {
              if (!(debug$.debugOnProfilePaint == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1021, 20, "debugOnProfilePaint == null");
              debug$.debugOnProfilePaint = dart.bind(this, _onPaint);
              function markTreeNeedsPaint(renderObject) {
                renderObject.markNeedsPaint();
                renderObject.visitChildren(markTreeNeedsPaint);
              }
              dart.fn(markTreeNeedsPaint, RenderObjectTovoid());
              let root = binding$.RendererBinding.instance.renderView;
              if (root != null) {
                markTreeNeedsPaint(root);
              }
            } else {
              debug$.debugOnProfilePaint = null;
            }
          }).bind(this)), boolToFutureOfNull())});
      }
      this[_registerSignalServiceExtension]({name: "disposeAllGroups", callback: dart.bind(this, 'disposeAllGroups')});
      this[_registerObjectGroupServiceExtension]({name: "disposeGroup", callback: dart.bind(this, 'disposeGroup')});
      this[_registerSignalServiceExtension]({name: "isWidgetTreeReady", callback: dart.bind(this, 'isWidgetTreeReady')});
      this[_registerServiceExtensionWithArg]({name: "disposeId", callback: dart.bind(this, 'disposeId')});
      this[_registerServiceExtensionVarArgs]({name: "setPubRootDirectories", callback: dart.bind(this, 'setPubRootDirectories')});
      this[_registerServiceExtensionWithArg]({name: "setSelectionById", callback: dart.bind(this, 'setSelectionById')});
      this[_registerServiceExtensionWithArg]({name: "getParentChain", callback: dart.bind(this, _getParentChain)});
      this[_registerServiceExtensionWithArg]({name: "getProperties", callback: dart.bind(this, _getProperties)});
      this[_registerServiceExtensionWithArg]({name: "getChildren", callback: dart.bind(this, _getChildren)});
      this[_registerServiceExtensionWithArg]({name: "getChildrenSummaryTree", callback: dart.bind(this, _getChildrenSummaryTree)});
      this[_registerServiceExtensionWithArg]({name: "getChildrenDetailsSubtree", callback: dart.bind(this, _getChildrenDetailsSubtree)});
      this[_registerObjectGroupServiceExtension]({name: "getRootWidget", callback: dart.bind(this, _getRootWidget)});
      this[_registerObjectGroupServiceExtension]({name: "getRootRenderObject", callback: dart.bind(this, _getRootRenderObject)});
      this[_registerObjectGroupServiceExtension]({name: "getRootWidgetSummaryTree", callback: dart.bind(this, _getRootWidgetSummaryTree)});
      this.registerServiceExtension({name: "getDetailsSubtree", callback: dart.fn(parameters => async.async(MapOfString$Object(), (function*() {
          if (!dart.test(parameters[$containsKey]("objectGroup"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1102, 16, "parameters.containsKey('objectGroup')");
          let subtreeDepth = parameters[$_get]("subtreeDepth");
          return new (IdentityMapOfString$Object()).from(["result", this[_getDetailsSubtree](parameters[$_get]("arg"), parameters[$_get]("objectGroup"), subtreeDepth != null ? core.int.parse(subtreeDepth) : 2)]);
        }).bind(this)), MapOfString$StringToFutureOfMapOfString$Object())});
      this[_registerServiceExtensionWithArg]({name: "getSelectedRenderObject", callback: dart.bind(this, _getSelectedRenderObject)});
      this[_registerServiceExtensionWithArg]({name: "getSelectedWidget", callback: dart.bind(this, _getSelectedWidget)});
      this[_registerServiceExtensionWithArg]({name: "getSelectedSummaryWidget", callback: dart.bind(this, _getSelectedSummaryWidget)});
      this[_registerSignalServiceExtension]({name: "isWidgetCreationTracked", callback: dart.bind(this, 'isWidgetCreationTracked')});
      this.registerServiceExtension({name: "screenshot", callback: dart.fn(parameters => async.async(MapOfString$Object(), (function*() {
          if (!dart.test(parameters[$containsKey]("id"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1133, 16, "parameters.containsKey('id')");
          if (!dart.test(parameters[$containsKey]("width"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1134, 16, "parameters.containsKey('width')");
          if (!dart.test(parameters[$containsKey]("height"))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1135, 16, "parameters.containsKey('height')");
          let image = (yield this.screenshot(this.toObject(parameters[$_get]("id")), {width: core.double.parse(parameters[$_get]("width")), height: core.double.parse(parameters[$_get]("height")), margin: dart.test(parameters[$containsKey]("margin")) ? core.double.parse(parameters[$_get]("margin")) : 0.0, maxPixelRatio: dart.test(parameters[$containsKey]("maxPixelRatio")) ? core.double.parse(parameters[$_get]("maxPixelRatio")) : 1.0, debugPaint: parameters[$_get]("debugPaint") === "true"}));
          if (image == null) {
            return new (IdentityMapOfString$Object()).from(["result", null]);
          }
          let byteData = (yield image.toByteData({format: ui.ImageByteFormat.png}));
          return new (IdentityMapOfString$Object()).from(["result", convert.base64.encoder.convert(typed_data.Uint8List.view(byteData[$buffer]))]);
        }).bind(this)), MapOfString$StringToFutureOfMapOfString$Object())});
    }
    [_clearStats]() {
      this[_rebuildStats].resetCounts();
      this[_repaintStats].resetCounts();
    }
    disposeAllGroups() {
      this[_groups][$clear]();
      this[_idToReferenceData][$clear]();
      this[_objectToId][$clear]();
      this[_nextId] = 0;
    }
    disposeGroup(name) {
      let references = this[_groups][$remove](name);
      if (references == null) return;
      references[$forEach](dart.bind(this, _decrementReferenceCount));
    }
    [_decrementReferenceCount](reference) {
      let t17;
      t17 = reference;
      t17.count = dart.notNull(t17.count) - 1;
      if (!(dart.notNull(reference.count) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1190, 12, "reference.count >= 0");
      if (reference.count === 0) {
        let id = this[_objectToId][$remove](reference.object);
        if (!(id != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1193, 14, "id != null");
        this[_idToReferenceData][$remove](id);
      }
    }
    toId(object, groupName) {
      let t17;
      if (object == null) return null;
      let group = this[_groups][$putIfAbsent](groupName, dart.fn(() => new (_IdentityHashSetOf_InspectorReferenceData()).new(), VoidToSetOf_InspectorReferenceData()));
      let id = this[_objectToId][$_get](object);
      let referenceData = null;
      if (id == null) {
        id = "inspector-" + dart.str(this[_nextId]);
        this[_nextId] = dart.notNull(this[_nextId]) + 1;
        this[_objectToId][$_set](object, id);
        referenceData = new widget_inspector._InspectorReferenceData.new(object);
        this[_idToReferenceData][$_set](id, referenceData);
        group.add(referenceData);
      } else {
        referenceData = this[_idToReferenceData][$_get](id);
        if (dart.test(group.add(referenceData))) {
          t17 = referenceData;
          t17.count = dart.notNull(t17.count) + 1;
        }
      }
      return id;
    }
    isWidgetTreeReady(groupName = null) {
      return binding$5.WidgetsBinding.instance != null && dart.test(binding$5.WidgetsBinding.instance.debugDidSendFirstFrameEvent);
    }
    toObject(id, groupName = null) {
      if (id == null) return null;
      let data = this[_idToReferenceData][$_get](id);
      if (data == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id does not exist.")])));
      }
      return data.object;
    }
    toObjectForSourceLocation(id, groupName = null) {
      let object = this.toObject(id);
      if (framework.Element.is(object)) {
        return object.widget;
      }
      return object;
    }
    disposeId(id, groupName) {
      let t17;
      if (id == null) return;
      let referenceData = this[_idToReferenceData][$_get](id);
      if (referenceData == null) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id does not exist")])));
      if (!dart.equals((t17 = this[_groups][$_get](groupName), t17 == null ? null : t17.remove(referenceData)), true)) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Id is not in group")])));
      this[_decrementReferenceCount](referenceData);
    }
    setPubRootDirectories(pubRootDirectories) {
      this[_pubRootDirectories] = pubRootDirectories[$map](core.String, dart.fn(directory => core.Uri.parse(directory).path, StringToString()))[$toList]();
    }
    setSelectionById(id, groupName = null) {
      return this.setSelection(this.toObject(id), groupName);
    }
    setSelection(object, groupName = null) {
      if (framework.Element.is(object) || object$.RenderObject.is(object)) {
        if (framework.Element.is(object)) {
          if (dart.equals(object, this.selection.currentElement)) {
            return false;
          }
          this.selection.currentElement = object;
          developer.inspect(this.selection.currentElement);
        } else {
          if (dart.equals(object, this.selection.current)) {
            return false;
          }
          this.selection.current = object$.RenderObject.as(object);
          developer.inspect(this.selection.current);
        }
        if (this.selectionChangedCallback != null) {
          if (dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.idle)) {
            this.selectionChangedCallback();
          } else {
            binding$3.SchedulerBinding.instance.scheduleTask(dart.void, this.selectionChangedCallback, priority.Priority.touch);
          }
        }
        return true;
      }
      return false;
    }
    getParentChain(id, groupName) {
      return this[_safeJsonEncode](this[_getParentChain](id, groupName));
    }
    [_getParentChain](id, groupName) {
      let value = this.toObject(id);
      let path = null;
      if (object$.RenderObject.is(value))
        path = this[_getRenderObjectParentChain](value, groupName);
      else if (framework.Element.is(value))
        path = this[_getElementParentChain](value, groupName);
      else
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Cannot get parent chain for node of type " + dart.str(dart.runtimeType(value)))])));
      return path[$map](core.Object, dart.fn(node => this[_pathNodeToJson](node, new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this})), _DiagnosticsPathNodeToMapOfString$Object()))[$toList]();
    }
    [_pathNodeToJson](pathNode, delegate) {
      if (pathNode == null) return null;
      return new (IdentityMapOfString$Object()).from(["node", this[_nodeToJson](pathNode.node, delegate), "children", this[_nodesToJson](pathNode.children, delegate, {parent: pathNode.node}), "childIndex", pathNode.childIndex]);
    }
    [_getRawElementParentChain](element, opts) {
      let t17, t17$, t17$0;
      let numLocalParents = opts && 'numLocalParents' in opts ? opts.numLocalParents : null;
      let elements = (t17 = element, t17 == null ? null : t17.debugGetDiagnosticChain());
      if (numLocalParents != null) {
        for (let i = 0; i < dart.notNull(elements[$length]); i = i + 1) {
          if (dart.test(this[_isValueCreatedByLocalProject](elements[$_get](i)))) {
            numLocalParents = dart.notNull(numLocalParents) - 1;
            if (dart.notNull(numLocalParents) <= 0) {
              elements = elements[$take](i + 1)[$toList]();
              break;
            }
          }
        }
      }
      t17$0 = (t17$ = elements, t17$ == null ? null : t17$[$reversed]);
      return t17$0 == null ? null : t17$0[$toList]();
    }
    [_getElementParentChain](element, groupName, opts) {
      let t17;
      let numLocalParents = opts && 'numLocalParents' in opts ? opts.numLocalParents : null;
      t17 = widget_inspector._followDiagnosticableChain(this[_getRawElementParentChain](element, {numLocalParents: numLocalParents}));
      return t17 == null ? C341 || CT.C341 : t17;
    }
    [_getRenderObjectParentChain](renderObject, groupName, opts) {
      let maxparents = opts && 'maxparents' in opts ? opts.maxparents : null;
      let chain = JSArrayOfRenderObject().of([]);
      while (renderObject != null) {
        chain[$add](renderObject);
        renderObject = object$.RenderObject.as(renderObject.parent);
      }
      return widget_inspector._followDiagnosticableChain(chain[$reversed][$toList]());
    }
    [_nodeToJson](node, delegate) {
      let t17;
      t17 = node;
      return t17 == null ? null : t17.toJsonMap(delegate);
    }
    [_isValueCreatedByLocalProject](value) {
      let creationLocation = widget_inspector._getCreationLocation(value);
      if (creationLocation == null) {
        return false;
      }
      return this[_isLocalCreationLocation](creationLocation);
    }
    [_isLocalCreationLocation](location) {
      if (location == null || location.file == null) {
        return false;
      }
      let file = core.Uri.parse(location.file).path;
      if (this[_pubRootDirectories] == null) {
        return !file[$contains]("packages/flutter/");
      }
      for (let directory of this[_pubRootDirectories]) {
        if (file[$startsWith](directory)) {
          return true;
        }
      }
      return false;
    }
    [_safeJsonEncode](object) {
      let jsonString = convert.json.encode(object);
      this[_serializeRing][$_set](this[_serializeRingIndex], jsonString);
      this[_serializeRingIndex] = (dart.notNull(this[_serializeRingIndex]) + 1)[$modulo](this[_serializeRing][$length]);
      return jsonString;
    }
    [_truncateNodes](nodes, maxDescendentsTruncatableNode) {
      if (dart.test(nodes[$every](dart.fn(node => framework.Element.is(node.value), DiagnosticsNodeTobool()))) && dart.test(this.isWidgetCreationTracked())) {
        let localNodes = nodes[$where](dart.fn(node => this[_isValueCreatedByLocalProject](node.value), DiagnosticsNodeTobool()))[$toList]();
        if (dart.test(localNodes[$isNotEmpty])) {
          return localNodes;
        }
      }
      return nodes[$take](maxDescendentsTruncatableNode)[$toList]();
    }
    [_nodesToJson](nodes, delegate, opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      return diagnostics$.DiagnosticsNode.toJsonList(nodes, parent, delegate);
    }
    getProperties(diagnosticsNodeId, groupName) {
      return this[_safeJsonEncode](this[_getProperties](diagnosticsNodeId, groupName));
    }
    [_getProperties](diagnosticsNodeId, groupName) {
      let node = diagnostics$.DiagnosticsNode.as(this.toObject(diagnosticsNodeId));
      return this[_nodesToJson](node == null ? C342 || CT.C342 : node.getProperties(), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}), {parent: node});
    }
    getChildren(diagnosticsNodeId, groupName) {
      return this[_safeJsonEncode](this[_getChildren](diagnosticsNodeId, groupName));
    }
    [_getChildren](diagnosticsNodeId, groupName) {
      let node = diagnostics$.DiagnosticsNode.as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this});
      return this[_nodesToJson](node == null ? C342 || CT.C342 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    getChildrenSummaryTree(diagnosticsNodeId, groupName) {
      return this[_safeJsonEncode](this[_getChildrenSummaryTree](diagnosticsNodeId, groupName));
    }
    [_getChildrenSummaryTree](diagnosticsNodeId, groupName) {
      let node = diagnostics$.DiagnosticsNode.as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, summaryTree: true, service: this});
      return this[_nodesToJson](node == null ? C342 || CT.C342 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    getChildrenDetailsSubtree(diagnosticsNodeId, groupName) {
      return this[_safeJsonEncode](this[_getChildrenDetailsSubtree](diagnosticsNodeId, groupName));
    }
    [_getChildrenDetailsSubtree](diagnosticsNodeId, groupName) {
      let node = diagnostics$.DiagnosticsNode.as(this.toObject(diagnosticsNodeId));
      let delegate = new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, subtreeDepth: 1, includeProperties: true, service: this});
      return this[_nodesToJson](node == null ? C342 || CT.C342 : this[_getChildrenFiltered](node, delegate), delegate, {parent: node});
    }
    [_shouldShowInSummaryTree](node) {
      if (dart.equals(node.level, diagnostics$.DiagnosticLevel.error)) {
        return true;
      }
      let value = node.value;
      if (!diagnostics$.DiagnosticableMixin.is(value)) {
        return true;
      }
      if (!framework.Element.is(value) || !dart.test(this.isWidgetCreationTracked())) {
        return true;
      }
      return this[_isValueCreatedByLocalProject](value);
    }
    [_getChildrenFiltered](node, delegate) {
      return this[_filterChildren](node.getChildren(), delegate);
    }
    [_filterChildren](nodes, delegate) {
      let children = (() => {
        let t17 = JSArrayOfDiagnosticsNode().of([]);
        for (let child of nodes)
          if (!dart.test(delegate.summaryTree) || dart.test(this[_shouldShowInSummaryTree](child)))
            t17[$add](child);
          else
            for (let t18 of this[_getChildrenFiltered](child, delegate))
              t17[$add](t18);
        return t17;
      })();
      return children;
    }
    getRootWidget(groupName) {
      return this[_safeJsonEncode](this[_getRootWidget](groupName));
    }
    [_getRootWidget](groupName) {
      let t19, t19$;
      return this[_nodeToJson]((t19$ = (t19 = binding$5.WidgetsBinding.instance, t19 == null ? null : t19.renderViewElement), t19$ == null ? null : t19$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getRootWidgetSummaryTree(groupName) {
      return this[_safeJsonEncode](this[_getRootWidgetSummaryTree](groupName));
    }
    [_getRootWidgetSummaryTree](groupName) {
      let t19, t19$;
      return this[_nodeToJson]((t19$ = (t19 = binding$5.WidgetsBinding.instance, t19 == null ? null : t19.renderViewElement), t19$ == null ? null : t19$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, subtreeDepth: 1000000, summaryTree: true, service: this}));
    }
    getRootRenderObject(groupName) {
      return this[_safeJsonEncode](this[_getRootRenderObject](groupName));
    }
    [_getRootRenderObject](groupName) {
      let t19, t19$;
      return this[_nodeToJson]((t19$ = (t19 = binding$.RendererBinding.instance, t19 == null ? null : t19.renderView), t19$ == null ? null : t19$.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getDetailsSubtree(id, groupName, opts) {
      let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : 2;
      return this[_safeJsonEncode](this[_getDetailsSubtree](id, groupName, subtreeDepth));
    }
    [_getDetailsSubtree](id, groupName, subtreeDepth) {
      let root = diagnostics$.DiagnosticsNode.as(this.toObject(id));
      if (root == null) {
        return null;
      }
      return this[_nodeToJson](root, new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, summaryTree: false, subtreeDepth: subtreeDepth, includeProperties: true, service: this}));
    }
    getSelectedRenderObject(previousSelectionId, groupName) {
      return this[_safeJsonEncode](this[_getSelectedRenderObject](previousSelectionId, groupName));
    }
    [_getSelectedRenderObject](previousSelectionId, groupName) {
      let t19, t19$, t19$0;
      let previousSelection = diagnostics$.DiagnosticsNode.as(this.toObject(previousSelectionId));
      let current = (t19 = this.selection, t19 == null ? null : t19.current);
      return this[_nodeToJson](dart.equals(current, (t19$ = previousSelection, t19$ == null ? null : t19$.value)) ? previousSelection : (t19$0 = current, t19$0 == null ? null : t19$0.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getSelectedWidget(previousSelectionId, groupName) {
      return this[_safeJsonEncode](this[_getSelectedWidget](previousSelectionId, groupName));
    }
    screenshot(object, opts) {
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let margin = opts && 'margin' in opts ? opts.margin : 0;
      let maxPixelRatio = opts && 'maxPixelRatio' in opts ? opts.maxPixelRatio : 1;
      let debugPaint = opts && 'debugPaint' in opts ? opts.debugPaint : false;
      return async.async(ui.Image, function* screenshot() {
        let t19;
        if (!framework.Element.is(object) && !object$.RenderObject.is(object)) {
          return null;
        }
        let renderObject = framework.Element.is(object) ? object.renderObject : object$.RenderObject.as(object);
        if (renderObject == null || !dart.test(renderObject.attached)) {
          return null;
        }
        if (dart.test(renderObject.debugNeedsLayout)) {
          let owner = renderObject.owner;
          if (!(owner != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1718, 14, "owner != null");
          if (!!dart.test(owner.debugDoingLayout)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 1719, 14, "!owner.debugDoingLayout");
          t19 = owner;
          t19.flushLayout();
          t19.flushCompositingBits();
          t19.flushPaint();
          t19;
          if (dart.test(renderObject.debugNeedsLayout)) {
            return null;
          }
        }
        let renderBounds = widget_inspector._calculateSubtreeBounds(renderObject);
        if (margin !== 0.0) {
          renderBounds = renderBounds.inflate(margin);
        }
        if (dart.test(renderBounds.isEmpty)) {
          return null;
        }
        let pixelRatio = math.min(core.double, maxPixelRatio, math.min(core.double, dart.notNull(width) / dart.notNull(renderBounds.width), dart.notNull(height) / dart.notNull(renderBounds.height)));
        return widget_inspector._ScreenshotPaintingContext.toImage(renderObject, renderBounds, {pixelRatio: pixelRatio, debugPaint: debugPaint});
      });
    }
    [_getSelectedWidget](previousSelectionId, groupName) {
      let t19, t19$, t19$0;
      let previousSelection = diagnostics$.DiagnosticsNode.as(this.toObject(previousSelectionId));
      let current = (t19 = this.selection, t19 == null ? null : t19.currentElement);
      return this[_nodeToJson](dart.equals(current, (t19$ = previousSelection, t19$ == null ? null : t19$.value)) ? previousSelection : (t19$0 = current, t19$0 == null ? null : t19$0.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    getSelectedSummaryWidget(previousSelectionId, groupName) {
      return this[_safeJsonEncode](this[_getSelectedSummaryWidget](previousSelectionId, groupName));
    }
    [_getSelectedSummaryWidget](previousSelectionId, groupName) {
      let t19, t19$, t19$0;
      if (!dart.test(this.isWidgetCreationTracked())) {
        return this[_getSelectedWidget](previousSelectionId, groupName);
      }
      let previousSelection = diagnostics$.DiagnosticsNode.as(this.toObject(previousSelectionId));
      let current = (t19 = this.selection, t19 == null ? null : t19.currentElement);
      if (current != null && !dart.test(this[_isValueCreatedByLocalProject](current))) {
        let firstLocal = null;
        for (let candidate of current.debugGetDiagnosticChain()) {
          if (dart.test(this[_isValueCreatedByLocalProject](candidate))) {
            firstLocal = candidate;
            break;
          }
        }
        current = firstLocal;
      }
      return this[_nodeToJson](dart.equals(current, (t19$ = previousSelection, t19$ == null ? null : t19$.value)) ? previousSelection : (t19$0 = current, t19$0 == null ? null : t19$0.toDiagnosticsNode()), new widget_inspector.InspectorSerializationDelegate.new({groupName: groupName, service: this}));
    }
    isWidgetCreationTracked() {
      this[_widgetCreationTracked] == null ? this[_widgetCreationTracked] = widget_inspector._HasCreationLocation.is(new widget_inspector._WidgetForTypeTests.new({$creationLocationd_0dea112b090073317d4: C343 || CT.C343})) : null;
      return this[_widgetCreationTracked];
    }
    [_onFrameStart](timeStamp) {
      this[_frameStart] = timeStamp;
      binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.bind(this, _onFrameEnd));
    }
    [_onFrameEnd](timeStamp) {
      if (dart.test(this[_trackRebuildDirtyWidgets])) {
        this[_postStatsEvent]("Flutter.RebuiltWidgets", this[_rebuildStats]);
      }
      if (dart.test(this[_trackRepaintWidgets])) {
        this[_postStatsEvent]("Flutter.RepaintWidgets", this[_repaintStats]);
      }
    }
    [_postStatsEvent](eventName, stats) {
      this.postEvent(eventName, stats.exportToJson(this[_frameStart]));
    }
    postEvent(eventKind, eventData) {
      developer.postEvent(eventKind, eventData);
    }
    [_onRebuildWidget](element, builtOnce) {
      this[_rebuildStats].add(element);
    }
    [_onPaint](renderObject) {
      let t19;
      try {
        let element = framework.Element.as((t19 = renderObject.debugCreator, t19 == null ? null : dart.dload(t19, 'element')));
        if (!framework.RenderObjectElement.is(element)) {
          return;
        }
        this[_repaintStats].add(element);
        element.visitAncestorElements(dart.fn(ancestor => {
          if (framework.RenderObjectElement.is(ancestor)) {
            return false;
          }
          this[_repaintStats].add(ancestor);
          return true;
        }, ElementTobool()));
      } catch (e) {
        let exception = dart.getThrown(e);
        let stack = dart.stackTrace(e);
        assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: exception, stack: stack}));
      }
    }
    performReassemble() {
      this[_clearStats]();
      this[_resetErrorCount]();
    }
  };
  (widget_inspector.WidgetInspectorService[dart.mixinNew] = function() {
    this[_serializeRing] = ListOfString().new(20);
    this[_serializeRingIndex] = 0;
    this[selection] = new widget_inspector.InspectorSelection.new();
    this[selectionChangedCallback] = null;
    this[_groups] = new (IdentityMapOfString$SetOf_InspectorReferenceData()).new();
    this[_idToReferenceData] = new (IdentityMapOfString$_InspectorReferenceData()).new();
    this[_objectToId] = new (IdentityMapOfObject$String()).new();
    this[_nextId] = 0;
    this[_pubRootDirectories] = null;
    this[_trackRebuildDirtyWidgets] = false;
    this[_trackRepaintWidgets] = false;
    this[_registerServiceExtensionCallback] = null;
    this[_errorsSinceReload] = 0;
    this[_widgetCreationTracked] = null;
    this[_frameStart] = null;
    this[_rebuildStats] = new widget_inspector._ElementLocationStatsTracker.new();
    this[_repaintStats] = new widget_inspector._ElementLocationStatsTracker.new();
  }).prototype = widget_inspector.WidgetInspectorService.prototype;
  dart.addTypeTests(widget_inspector.WidgetInspectorService);
  widget_inspector.WidgetInspectorService[dart.implements] = () => [core.Object];
  dart.setMethodSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getMethods(widget_inspector.WidgetInspectorService.__proto__),
    registerServiceExtension: dart.fnType(dart.void, [], {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}, {}),
    [_registerSignalServiceExtension]: dart.fnType(dart.void, [], {callback: dart.fnType(async.FutureOr$(core.Object), []), name: core.String}, {}),
    [_registerObjectGroupServiceExtension]: dart.fnType(dart.void, [], {callback: dart.fnType(async.FutureOr$(core.Object), [core.String]), name: core.String}, {}),
    [_registerBoolServiceExtension]: dart.fnType(dart.void, [], {getter: dart.fnType(async.Future$(core.bool), []), name: core.String, setter: dart.fnType(async.Future$(dart.void), [core.bool])}, {}),
    [_postExtensionStateChangedEvent]: dart.fnType(dart.void, [core.String, dart.dynamic]),
    [_registerServiceExtensionWithArg]: dart.fnType(dart.void, [], {callback: dart.fnType(async.FutureOr$(core.Object), [core.String, core.String]), name: core.String}, {}),
    [_registerServiceExtensionVarArgs]: dart.fnType(dart.void, [], {callback: dart.fnType(async.FutureOr$(core.Object), [core.List$(core.String)]), name: core.String}, {}),
    forceRebuild: dart.fnType(async.Future$(dart.void), []),
    [_reportError]: dart.fnType(dart.void, [assertions.FlutterErrorDetails]),
    [_resetErrorCount]: dart.fnType(dart.void, []),
    initServiceExtensions: dart.fnType(dart.void, [dart.fnType(dart.void, [], {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}, {})]),
    [_clearStats]: dart.fnType(dart.void, []),
    disposeAllGroups: dart.fnType(dart.void, []),
    disposeGroup: dart.fnType(dart.void, [core.String]),
    [_decrementReferenceCount]: dart.fnType(dart.void, [widget_inspector._InspectorReferenceData]),
    toId: dart.fnType(core.String, [core.Object, core.String]),
    isWidgetTreeReady: dart.fnType(core.bool, [], [core.String]),
    toObject: dart.fnType(core.Object, [core.String], [core.String]),
    toObjectForSourceLocation: dart.fnType(core.Object, [core.String], [core.String]),
    disposeId: dart.fnType(dart.void, [core.String, core.String]),
    setPubRootDirectories: dart.fnType(dart.void, [core.List$(core.String)]),
    setSelectionById: dart.fnType(core.bool, [core.String], [core.String]),
    setSelection: dart.fnType(core.bool, [core.Object], [core.String]),
    getParentChain: dart.fnType(core.String, [core.String, core.String]),
    [_getParentChain]: dart.fnType(core.List$(core.Object), [core.String, core.String]),
    [_pathNodeToJson]: dart.fnType(core.Map$(core.String, core.Object), [widget_inspector._DiagnosticsPathNode, widget_inspector.InspectorSerializationDelegate]),
    [_getRawElementParentChain]: dart.fnType(core.List$(framework.Element), [framework.Element], {numLocalParents: core.int}, {}),
    [_getElementParentChain]: dart.fnType(core.List$(widget_inspector._DiagnosticsPathNode), [framework.Element, core.String], {numLocalParents: core.int}, {}),
    [_getRenderObjectParentChain]: dart.fnType(core.List$(widget_inspector._DiagnosticsPathNode), [object$.RenderObject, core.String], {maxparents: core.int}, {}),
    [_nodeToJson]: dart.fnType(core.Map$(core.String, core.Object), [diagnostics$.DiagnosticsNode, widget_inspector.InspectorSerializationDelegate]),
    [_isValueCreatedByLocalProject]: dart.fnType(core.bool, [core.Object]),
    [_isLocalCreationLocation]: dart.fnType(core.bool, [widget_inspector._Location]),
    [_safeJsonEncode]: dart.fnType(core.String, [core.Object]),
    [_truncateNodes]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.Iterable$(diagnostics$.DiagnosticsNode), core.int]),
    [_nodesToJson]: dart.fnType(core.List$(core.Map$(core.String, core.Object)), [core.List$(diagnostics$.DiagnosticsNode), widget_inspector.InspectorSerializationDelegate], {parent: diagnostics$.DiagnosticsNode}, {}),
    getProperties: dart.fnType(core.String, [core.String, core.String]),
    [_getProperties]: dart.fnType(core.List$(core.Object), [core.String, core.String]),
    getChildren: dart.fnType(core.String, [core.String, core.String]),
    [_getChildren]: dart.fnType(core.List$(core.Object), [core.String, core.String]),
    getChildrenSummaryTree: dart.fnType(core.String, [core.String, core.String]),
    [_getChildrenSummaryTree]: dart.fnType(core.List$(core.Object), [core.String, core.String]),
    getChildrenDetailsSubtree: dart.fnType(core.String, [core.String, core.String]),
    [_getChildrenDetailsSubtree]: dart.fnType(core.List$(core.Object), [core.String, core.String]),
    [_shouldShowInSummaryTree]: dart.fnType(core.bool, [diagnostics$.DiagnosticsNode]),
    [_getChildrenFiltered]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [diagnostics$.DiagnosticsNode, widget_inspector.InspectorSerializationDelegate]),
    [_filterChildren]: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), widget_inspector.InspectorSerializationDelegate]),
    getRootWidget: dart.fnType(core.String, [core.String]),
    [_getRootWidget]: dart.fnType(core.Map$(core.String, core.Object), [core.String]),
    getRootWidgetSummaryTree: dart.fnType(core.String, [core.String]),
    [_getRootWidgetSummaryTree]: dart.fnType(core.Map$(core.String, core.Object), [core.String]),
    getRootRenderObject: dart.fnType(core.String, [core.String]),
    [_getRootRenderObject]: dart.fnType(core.Map$(core.String, core.Object), [core.String]),
    getDetailsSubtree: dart.fnType(core.String, [core.String, core.String], {subtreeDepth: core.int}, {}),
    [_getDetailsSubtree]: dart.fnType(core.Map$(core.String, core.Object), [core.String, core.String, core.int]),
    getSelectedRenderObject: dart.fnType(core.String, [core.String, core.String]),
    [_getSelectedRenderObject]: dart.fnType(core.Map$(core.String, core.Object), [core.String, core.String]),
    getSelectedWidget: dart.fnType(core.String, [core.String, core.String]),
    screenshot: dart.fnType(async.Future$(ui.Image), [core.Object], {debugPaint: core.bool, height: core.double, margin: core.double, maxPixelRatio: core.double, width: core.double}, {}),
    [_getSelectedWidget]: dart.fnType(core.Map$(core.String, core.Object), [core.String, core.String]),
    getSelectedSummaryWidget: dart.fnType(core.String, [core.String, core.String]),
    [_getSelectedSummaryWidget]: dart.fnType(core.Map$(core.String, core.Object), [core.String, core.String]),
    isWidgetCreationTracked: dart.fnType(core.bool, []),
    [_onFrameStart]: dart.fnType(dart.void, [core.Duration]),
    [_onFrameEnd]: dart.fnType(dart.void, [core.Duration]),
    [_postStatsEvent]: dart.fnType(dart.void, [core.String, widget_inspector._ElementLocationStatsTracker]),
    postEvent: dart.fnType(dart.void, [core.String, core.Map$(core.Object, core.Object)]),
    [_onRebuildWidget]: dart.fnType(dart.void, [framework.Element, core.bool]),
    [_onPaint]: dart.fnType(dart.void, [object$.RenderObject]),
    performReassemble: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(widget_inspector.WidgetInspectorService, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector.WidgetInspectorService, () => ({
    __proto__: dart.getFields(widget_inspector.WidgetInspectorService.__proto__),
    [_serializeRing]: dart.finalFieldType(core.List$(core.String)),
    [_serializeRingIndex]: dart.fieldType(core.int),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection),
    selectionChangedCallback: dart.fieldType(dart.fnType(dart.void, [])),
    [_groups]: dart.finalFieldType(core.Map$(core.String, core.Set$(widget_inspector._InspectorReferenceData))),
    [_idToReferenceData]: dart.finalFieldType(core.Map$(core.String, widget_inspector._InspectorReferenceData)),
    [_objectToId]: dart.finalFieldType(core.Map$(core.Object, core.String)),
    [_nextId]: dart.fieldType(core.int),
    [_pubRootDirectories]: dart.fieldType(core.List$(core.String)),
    [_trackRebuildDirtyWidgets]: dart.fieldType(core.bool),
    [_trackRepaintWidgets]: dart.fieldType(core.bool),
    [_registerServiceExtensionCallback]: dart.fieldType(dart.fnType(dart.void, [], {callback: dart.fnType(async.Future$(core.Map$(core.String, dart.dynamic)), [core.Map$(core.String, core.String)]), name: core.String}, {})),
    [_errorsSinceReload]: dart.fieldType(core.int),
    [_widgetCreationTracked]: dart.fieldType(core.bool),
    [_frameStart]: dart.fieldType(core.Duration),
    [_rebuildStats]: dart.finalFieldType(widget_inspector._ElementLocationStatsTracker),
    [_repaintStats]: dart.finalFieldType(widget_inspector._ElementLocationStatsTracker)
  }));
  dart.defineLazy(widget_inspector.WidgetInspectorService, {
    /*widget_inspector.WidgetInspectorService._instance*/get _instance() {
      return new widget_inspector._WidgetInspectorService.new();
    },
    set _instance(_) {},
    /*widget_inspector.WidgetInspectorService._debugServiceExtensionsRegistered*/get _debugServiceExtensionsRegistered() {
      return false;
    },
    set _debugServiceExtensionsRegistered(_) {},
    /*widget_inspector.WidgetInspectorService._consoleObjectGroup*/get _consoleObjectGroup() {
      return "console-group";
    }
  });
  widget_inspector._WidgetInspectorService = class _WidgetInspectorService extends core.Object {};
  dart.applyMixin(widget_inspector._WidgetInspectorService, widget_inspector.WidgetInspectorService);
  (widget_inspector._WidgetInspectorService.new = function() {
    widget_inspector.WidgetInspectorService[dart.mixinNew].call(this);
  }).prototype = widget_inspector._WidgetInspectorService.prototype;
  dart.addTypeTests(widget_inspector._WidgetInspectorService);
  dart.setLibraryUri(widget_inspector._WidgetInspectorService, "package:flutter/src/widgets/widget_inspector.dart");
  var _count = dart.privateName(widget_inspector, "_count");
  widget_inspector._LocationCount = class _LocationCount extends core.Object {
    get count() {
      return this[_count];
    }
    reset() {
      this[_count] = 0;
    }
    increment() {
      this[_count] = dart.notNull(this[_count]) + 1;
    }
  };
  (widget_inspector._LocationCount.new = function(opts) {
    let location = opts && 'location' in opts ? opts.location : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let local = opts && 'local' in opts ? opts.local : null;
    this[_count] = 0;
    this.location = location;
    this.id = id;
    this.local = local;
    ;
  }).prototype = widget_inspector._LocationCount.prototype;
  dart.addTypeTests(widget_inspector._LocationCount);
  dart.setMethodSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getMethods(widget_inspector._LocationCount.__proto__),
    reset: dart.fnType(dart.void, []),
    increment: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getGetters(widget_inspector._LocationCount.__proto__),
    count: core.int
  }));
  dart.setLibraryUri(widget_inspector._LocationCount, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._LocationCount, () => ({
    __proto__: dart.getFields(widget_inspector._LocationCount.__proto__),
    id: dart.finalFieldType(core.int),
    local: dart.finalFieldType(core.bool),
    location: dart.finalFieldType(widget_inspector._Location),
    [_count]: dart.fieldType(core.int)
  }));
  var _stats = dart.privateName(widget_inspector, "_stats");
  widget_inspector._ElementLocationStatsTracker = class _ElementLocationStatsTracker extends core.Object {
    add(element) {
      let widget = element.widget;
      if (!widget_inspector._HasCreationLocation.is(widget)) {
        return;
      }
      let creationLocationSource = widget_inspector._HasCreationLocation.as(widget);
      let location = creationLocationSource[_location];
      let id = widget_inspector._toLocationId(location);
      let entry = null;
      if (dart.notNull(id) >= dart.notNull(this[_stats][$length]) || this[_stats][$_get](id) == null) {
        while (dart.notNull(id) >= dart.notNull(this[_stats][$length])) {
          this[_stats][$add](null);
        }
        entry = new widget_inspector._LocationCount.new({location: location, id: id, local: widget_inspector.WidgetInspectorService.instance[_isLocalCreationLocation](location)});
        if (dart.test(entry.local)) {
          this.newLocations[$add](entry);
        }
        this[_stats][$_set](id, entry);
      } else {
        entry = this[_stats][$_get](id);
      }
      if (dart.test(entry.local)) {
        if (entry.count === 0) {
          this.active[$add](entry);
        }
        entry.increment();
      }
    }
    resetCounts() {
      for (let entry of this.active) {
        entry.reset();
      }
      this.active[$clear]();
    }
    exportToJson(startTime) {
      let t20, t20$, t20$0;
      let events = ListOfint().filled(dart.notNull(this.active[$length]) * 2, 0);
      let j = 0;
      for (let stat of this.active) {
        events[$_set]((t20 = j, j = t20 + 1, t20), stat.id);
        events[$_set]((t20$ = j, j = t20$ + 1, t20$), stat.count);
      }
      let json = new (IdentityMapOfString$dynamic()).from(["startTime", startTime.inMicroseconds, "events", events]);
      if (dart.test(this.newLocations[$isNotEmpty])) {
        let locationsJson = new (IdentityMapOfString$ListOfint()).new();
        for (let entry of this.newLocations) {
          let location = entry.location;
          let jsonForFile = locationsJson[$putIfAbsent](location.file, dart.fn(() => JSArrayOfint().of([]), VoidToListOfint()));
          t20$0 = jsonForFile;
          t20$0[$add](entry.id);
          t20$0[$add](location.line);
          t20$0[$add](location.column);
          t20$0;
        }
        json[$_set]("newLocations", locationsJson);
      }
      this.resetCounts();
      this.newLocations[$clear]();
      return json;
    }
  };
  (widget_inspector._ElementLocationStatsTracker.new = function() {
    this[_stats] = JSArrayOf_LocationCount().of([]);
    this.active = JSArrayOf_LocationCount().of([]);
    this.newLocations = JSArrayOf_LocationCount().of([]);
    ;
  }).prototype = widget_inspector._ElementLocationStatsTracker.prototype;
  dart.addTypeTests(widget_inspector._ElementLocationStatsTracker);
  dart.setMethodSignature(widget_inspector._ElementLocationStatsTracker, () => ({
    __proto__: dart.getMethods(widget_inspector._ElementLocationStatsTracker.__proto__),
    add: dart.fnType(dart.void, [framework.Element]),
    resetCounts: dart.fnType(dart.void, []),
    exportToJson: dart.fnType(core.Map$(core.String, dart.dynamic), [core.Duration])
  }));
  dart.setLibraryUri(widget_inspector._ElementLocationStatsTracker, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._ElementLocationStatsTracker, () => ({
    __proto__: dart.getFields(widget_inspector._ElementLocationStatsTracker.__proto__),
    [_stats]: dart.finalFieldType(core.List$(widget_inspector._LocationCount)),
    active: dart.finalFieldType(core.List$(widget_inspector._LocationCount)),
    newLocations: dart.finalFieldType(core.List$(widget_inspector._LocationCount))
  }));
  widget_inspector._WidgetForTypeTests = class _WidgetForTypeTests extends framework.Widget {
    createElement() {
      return null;
    }
  };
  (widget_inspector._WidgetForTypeTests.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    widget_inspector._WidgetForTypeTests.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector._WidgetForTypeTests.prototype;
  dart.addTypeTests(widget_inspector._WidgetForTypeTests);
  dart.setMethodSignature(widget_inspector._WidgetForTypeTests, () => ({
    __proto__: dart.getMethods(widget_inspector._WidgetForTypeTests.__proto__),
    createElement: dart.fnType(framework.Element, [])
  }));
  dart.setLibraryUri(widget_inspector._WidgetForTypeTests, "package:flutter/src/widgets/widget_inspector.dart");
  var child$9 = dart.privateName(widget_inspector, "WidgetInspector.child");
  var selectButtonBuilder$ = dart.privateName(widget_inspector, "WidgetInspector.selectButtonBuilder");
  widget_inspector.WidgetInspector = class WidgetInspector extends framework.StatefulWidget {
    get child() {
      return this[child$9];
    }
    set child(value) {
      super.child = value;
    }
    get selectButtonBuilder() {
      return this[selectButtonBuilder$];
    }
    set selectButtonBuilder(value) {
      super.selectButtonBuilder = value;
    }
    createState() {
      return new widget_inspector._WidgetInspectorState.new();
    }
  };
  (widget_inspector.WidgetInspector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let selectButtonBuilder = opts && 'selectButtonBuilder' in opts ? opts.selectButtonBuilder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$9] = child;
    this[selectButtonBuilder$] = selectButtonBuilder;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2081, 15, "child != null");
    widget_inspector.WidgetInspector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector.WidgetInspector.prototype;
  dart.addTypeTests(widget_inspector.WidgetInspector);
  dart.setMethodSignature(widget_inspector.WidgetInspector, () => ({
    __proto__: dart.getMethods(widget_inspector.WidgetInspector.__proto__),
    createState: dart.fnType(widget_inspector._WidgetInspectorState, [])
  }));
  dart.setLibraryUri(widget_inspector.WidgetInspector, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector.WidgetInspector, () => ({
    __proto__: dart.getFields(widget_inspector.WidgetInspector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    selectButtonBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [])]))
  }));
  var _lastPointerLocation = dart.privateName(widget_inspector, "_lastPointerLocation");
  var _ignorePointerKey$ = dart.privateName(widget_inspector, "_ignorePointerKey");
  var _selectionChangedCallback = dart.privateName(widget_inspector, "_selectionChangedCallback");
  var _hitTestHelper = dart.privateName(widget_inspector, "_hitTestHelper");
  var _inspectAt = dart.privateName(widget_inspector, "_inspectAt");
  var _handlePanDown = dart.privateName(widget_inspector, "_handlePanDown");
  var _handlePanUpdate = dart.privateName(widget_inspector, "_handlePanUpdate");
  var _handlePanEnd = dart.privateName(widget_inspector, "_handlePanEnd");
  var _handleTap = dart.privateName(widget_inspector, "_handleTap");
  var _handleEnableSelect = dart.privateName(widget_inspector, "_handleEnableSelect");
  var C346;
  var C347;
  var C348;
  var C349;
  var C345;
  var C344;
  var C352;
  var C353;
  var C354;
  var C355;
  var C356;
  var C357;
  var C358;
  var C351;
  var C350;
  var C361;
  var C362;
  var C363;
  var C360;
  var C359;
  var C366;
  var C365;
  var C364;
  var C369;
  var C368;
  var C367;
  const State_WidgetsBindingObserver$36$ = class State_WidgetsBindingObserver extends framework.State$(widget_inspector.WidgetInspector) {};
  (State_WidgetsBindingObserver$36$.new = function() {
    State_WidgetsBindingObserver$36$.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$, binding$5.WidgetsBindingObserver);
  widget_inspector._WidgetInspectorState = class _WidgetInspectorState extends State_WidgetsBindingObserver$36$ {
    initState() {
      super.initState();
      this[_selectionChangedCallback] = dart.fn(() => {
        this.setState(dart.fn(() => {
        }, VoidToNull()));
      }, VoidToNull());
      widget_inspector.WidgetInspectorService.instance.selectionChangedCallback = this[_selectionChangedCallback];
    }
    dispose() {
      if (dart.equals(widget_inspector.WidgetInspectorService.instance.selectionChangedCallback, this[_selectionChangedCallback])) {
        widget_inspector.WidgetInspectorService.instance.selectionChangedCallback = null;
      }
      super.dispose();
    }
    [_hitTestHelper](hits, edgeHits, position, object, transform) {
      let hit = false;
      let inverse = vector_math_64.Matrix4.tryInvert(transform);
      if (inverse == null) {
        return false;
      }
      let localPosition = matrix_utils.MatrixUtils.transformPoint(inverse, position);
      let children = object.debugDescribeChildren();
      for (let i = dart.notNull(children[$length]) - 1; i >= 0; i = i - 1) {
        let diagnostics = children[$_get](i);
        if (!(diagnostics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2160, 14, "diagnostics != null");
        if (dart.equals(diagnostics.style, diagnostics$.DiagnosticsTreeStyle.offstage) || !object$.RenderObject.is(diagnostics.value)) continue;
        let child = object$.RenderObject.as(diagnostics.value);
        let paintClip = object.describeApproximatePaintClip(child);
        if (paintClip != null && !dart.test(paintClip.contains(localPosition))) continue;
        let childTransform = transform.clone();
        object.applyPaintTransform(child, childTransform);
        if (dart.test(this[_hitTestHelper](hits, edgeHits, position, child, childTransform))) hit = true;
      }
      let bounds = object.semanticBounds;
      if (dart.test(bounds.contains(localPosition))) {
        hit = true;
        if (!dart.test(bounds.deflate(2).contains(localPosition))) edgeHits[$add](object);
      }
      if (hit) hits[$add](object);
      return hit;
    }
    hitTest(position, root) {
      let regularHits = JSArrayOfRenderObject().of([]);
      let edgeHits = JSArrayOfRenderObject().of([]);
      this[_hitTestHelper](regularHits, edgeHits, position, root, root.getTransformTo(null));
      function _area(object) {
        let t20;
        let size = (t20 = object.semanticBounds, t20 == null ? null : t20.size);
        return size == null ? 1.7976931348623157e+308 : dart.notNull(size.width) * dart.notNull(size.height);
      }
      dart.fn(_area, RenderObjectTodouble());
      regularHits[$sort](dart.fn((a, b) => _area(a)[$compareTo](_area(b)), RenderObjectAndRenderObjectToint()));
      let hits = (() => {
        let t20 = new (_HashSetOfRenderObject()).new();
        for (let t21 of edgeHits)
          t20.add(t21);
        for (let t22 of regularHits)
          t20.add(t22);
        return t20;
      })();
      return hits[$toList]();
    }
    [_inspectAt](position) {
      if (!dart.test(this.isSelectMode)) return;
      let ignorePointer = proxy_box.RenderIgnorePointer.as(this[_ignorePointerKey$].currentContext.findRenderObject());
      let userRender = ignorePointer.child;
      let selected = this.hitTest(position, userRender);
      this.setState(dart.fn(() => {
        this.selection.candidates = selected;
      }, VoidToNull()));
    }
    [_handlePanDown](event) {
      this[_lastPointerLocation] = event.globalPosition;
      this[_inspectAt](event.globalPosition);
    }
    [_handlePanUpdate](event) {
      this[_lastPointerLocation] = event.globalPosition;
      this[_inspectAt](event.globalPosition);
    }
    [_handlePanEnd](details) {
      let bounds = ui.Offset.zero['&'](binding$5.WidgetsBinding.instance.window.physicalSize['/'](binding$5.WidgetsBinding.instance.window.devicePixelRatio)).deflate(1);
      if (!dart.test(bounds.contains(this[_lastPointerLocation]))) {
        this.setState(dart.fn(() => {
          this.selection.clear();
        }, VoidToNull()));
      }
    }
    [_handleTap]() {
      if (!dart.test(this.isSelectMode)) return;
      if (this[_lastPointerLocation] != null) {
        this[_inspectAt](this[_lastPointerLocation]);
        if (this.selection != null) {
          developer.inspect(this.selection.current);
        }
      }
      this.setState(dart.fn(() => {
        if (this.widget.selectButtonBuilder != null) this.isSelectMode = false;
      }, VoidToNull()));
    }
    [_handleEnableSelect]() {
      this.setState(dart.fn(() => {
        this.isSelectMode = true;
      }, VoidToNull()));
    }
    build(context) {
      return new basic.Stack.new({children: (() => {
          let t23 = JSArrayOfWidget().of([]);
          t23[$add](new gesture_detector.GestureDetector.new({onTap: dart.bind(this, _handleTap), onPanDown: dart.bind(this, _handlePanDown), onPanEnd: dart.bind(this, _handlePanEnd), onPanUpdate: dart.bind(this, _handlePanUpdate), behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: true, child: new basic.IgnorePointer.new({ignoring: this.isSelectMode, key: this[_ignorePointerKey$], ignoringSemantics: false, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C344 || CT.C344}), $creationLocationd_0dea112b090073317d4: C350 || CT.C350}));
          if (!dart.test(this.isSelectMode) && this.widget.selectButtonBuilder != null) t23[$add](new basic.Positioned.new({left: 10, bottom: 10, child: this.widget.selectButtonBuilder(context, dart.bind(this, _handleEnableSelect)), $creationLocationd_0dea112b090073317d4: C359 || CT.C359}));
          t23[$add](new widget_inspector._InspectorOverlay.new({selection: this.selection, $creationLocationd_0dea112b090073317d4: C364 || CT.C364}));
          return t23;
        })(), $creationLocationd_0dea112b090073317d4: C367 || CT.C367});
    }
  };
  (widget_inspector._WidgetInspectorState.new = function() {
    this[_lastPointerLocation] = null;
    this.isSelectMode = true;
    this[_ignorePointerKey$] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_selectionChangedCallback] = null;
    this.selection = widget_inspector.WidgetInspectorService.instance.selection;
    widget_inspector._WidgetInspectorState.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._WidgetInspectorState.prototype;
  dart.addTypeTests(widget_inspector._WidgetInspectorState);
  dart.setMethodSignature(widget_inspector._WidgetInspectorState, () => ({
    __proto__: dart.getMethods(widget_inspector._WidgetInspectorState.__proto__),
    [_hitTestHelper]: dart.fnType(core.bool, [core.List$(object$.RenderObject), core.List$(object$.RenderObject), ui.Offset, object$.RenderObject, vector_math_64.Matrix4]),
    hitTest: dart.fnType(core.List$(object$.RenderObject), [ui.Offset, object$.RenderObject]),
    [_inspectAt]: dart.fnType(dart.void, [ui.Offset]),
    [_handlePanDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [_handlePanUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handlePanEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_handleTap]: dart.fnType(dart.void, []),
    [_handleEnableSelect]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget_inspector._WidgetInspectorState, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._WidgetInspectorState, () => ({
    __proto__: dart.getFields(widget_inspector._WidgetInspectorState.__proto__),
    [_lastPointerLocation]: dart.fieldType(ui.Offset),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection),
    isSelectMode: dart.fieldType(core.bool),
    [_ignorePointerKey$]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_selectionChangedCallback]: dart.fieldType(dart.fnType(dart.void, []))
  }));
  dart.defineLazy(widget_inspector._WidgetInspectorState, {
    /*widget_inspector._WidgetInspectorState._edgeHitMargin*/get _edgeHitMargin() {
      return 2;
    }
  });
  var _candidates = dart.privateName(widget_inspector, "_candidates");
  var _index = dart.privateName(widget_inspector, "_index");
  var _current = dart.privateName(widget_inspector, "_current");
  var _currentElement$ = dart.privateName(widget_inspector, "_currentElement");
  var _computeCurrent = dart.privateName(widget_inspector, "_computeCurrent");
  widget_inspector.InspectorSelection = class InspectorSelection extends core.Object {
    get candidates() {
      return this[_candidates];
    }
    set candidates(value) {
      this[_candidates] = value;
      this[_index] = 0;
      this[_computeCurrent]();
    }
    get index() {
      return this[_index];
    }
    set index(value) {
      this[_index] = value;
      this[_computeCurrent]();
    }
    clear() {
      this[_candidates] = JSArrayOfRenderObject().of([]);
      this[_index] = 0;
      this[_computeCurrent]();
    }
    get current() {
      return this[_current];
    }
    set current(value) {
      if (!dart.equals(this[_current], value)) {
        this[_current] = value;
        this[_currentElement$] = framework.Element.as(dart.dload(value.debugCreator, 'element'));
      }
    }
    get currentElement() {
      return this[_currentElement$];
    }
    set currentElement(element) {
      if (!dart.equals(this.currentElement, element)) {
        this[_currentElement$] = element;
        this[_current] = element.findRenderObject();
      }
    }
    [_computeCurrent]() {
      if (dart.notNull(this[_index]) < dart.notNull(this.candidates[$length])) {
        this[_current] = this.candidates[$_get](this.index);
        this[_currentElement$] = framework.Element.as(dart.dload(this[_current].debugCreator, 'element'));
      } else {
        this[_current] = null;
        this[_currentElement$] = null;
      }
    }
    get active() {
      return this[_current] != null && dart.test(this[_current].attached);
    }
  };
  (widget_inspector.InspectorSelection.new = function() {
    this[_candidates] = JSArrayOfRenderObject().of([]);
    this[_index] = 0;
    this[_current] = null;
    this[_currentElement$] = null;
    ;
  }).prototype = widget_inspector.InspectorSelection.prototype;
  dart.addTypeTests(widget_inspector.InspectorSelection);
  dart.setMethodSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getMethods(widget_inspector.InspectorSelection.__proto__),
    clear: dart.fnType(dart.void, []),
    [_computeCurrent]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getGetters(widget_inspector.InspectorSelection.__proto__),
    candidates: core.List$(object$.RenderObject),
    index: core.int,
    current: object$.RenderObject,
    currentElement: framework.Element,
    active: core.bool
  }));
  dart.setSetterSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getSetters(widget_inspector.InspectorSelection.__proto__),
    candidates: core.List$(object$.RenderObject),
    index: core.int,
    current: object$.RenderObject,
    currentElement: framework.Element
  }));
  dart.setLibraryUri(widget_inspector.InspectorSelection, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector.InspectorSelection, () => ({
    __proto__: dart.getFields(widget_inspector.InspectorSelection.__proto__),
    [_candidates]: dart.fieldType(core.List$(object$.RenderObject)),
    [_index]: dart.fieldType(core.int),
    [_current]: dart.fieldType(object$.RenderObject),
    [_currentElement$]: dart.fieldType(framework.Element)
  }));
  var selection$ = dart.privateName(widget_inspector, "_InspectorOverlay.selection");
  widget_inspector._InspectorOverlay = class _InspectorOverlay extends framework.LeafRenderObjectWidget {
    get selection() {
      return this[selection$];
    }
    set selection(value) {
      super.selection = value;
    }
    createRenderObject(context) {
      return new widget_inspector._RenderInspectorOverlay.new({selection: this.selection});
    }
    updateRenderObject(context, renderObject) {
      widget_inspector._RenderInspectorOverlay._check(renderObject);
      renderObject.selection = this.selection;
    }
  };
  (widget_inspector._InspectorOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let selection = opts && 'selection' in opts ? opts.selection : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[selection$] = selection;
    widget_inspector._InspectorOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_inspector._InspectorOverlay.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlay);
  dart.setMethodSignature(widget_inspector._InspectorOverlay, () => ({
    __proto__: dart.getMethods(widget_inspector._InspectorOverlay.__proto__),
    createRenderObject: dart.fnType(widget_inspector._RenderInspectorOverlay, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget_inspector._InspectorOverlay, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._InspectorOverlay, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlay.__proto__),
    selection: dart.finalFieldType(widget_inspector.InspectorSelection)
  }));
  var _selection = dart.privateName(widget_inspector, "_selection");
  var C370;
  widget_inspector._RenderInspectorOverlay = class _RenderInspectorOverlay extends box$.RenderBox {
    get selection() {
      return this[_selection];
    }
    set selection(value) {
      if (!dart.equals(value, this[_selection])) {
        this[_selection] = value;
      }
      this.markNeedsPaint();
    }
    get sizedByParent() {
      return true;
    }
    get alwaysNeedsCompositing() {
      return true;
    }
    performResize() {
      this.size = this.constraints.constrain(C370 || CT.C370);
    }
    paint(context, offset) {
      if (!dart.test(this.needsCompositing)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2421, 12, "needsCompositing");
      context.addLayer(new widget_inspector._InspectorOverlayLayer.new({overlayRect: new ui.Rect.fromLTWH(offset.dx, offset.dy, this.size.width, this.size.height), selection: this.selection}));
    }
  };
  (widget_inspector._RenderInspectorOverlay.new = function(opts) {
    let selection = opts && 'selection' in opts ? opts.selection : null;
    this[_selection] = selection;
    if (!(selection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2397, 14, "selection != null");
    widget_inspector._RenderInspectorOverlay.__proto__.new.call(this);
    ;
  }).prototype = widget_inspector._RenderInspectorOverlay.prototype;
  dart.addTypeTests(widget_inspector._RenderInspectorOverlay);
  dart.setGetterSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getGetters(widget_inspector._RenderInspectorOverlay.__proto__),
    selection: widget_inspector.InspectorSelection
  }));
  dart.setSetterSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getSetters(widget_inspector._RenderInspectorOverlay.__proto__),
    selection: widget_inspector.InspectorSelection
  }));
  dart.setLibraryUri(widget_inspector._RenderInspectorOverlay, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._RenderInspectorOverlay, () => ({
    __proto__: dart.getFields(widget_inspector._RenderInspectorOverlay.__proto__),
    [_selection]: dart.fieldType(widget_inspector.InspectorSelection)
  }));
  widget_inspector._TransformedRect = class _TransformedRect extends core.Object {
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return widget_inspector._TransformedRect.is(other) && dart.equals(other.rect, this.rect) && dart.equals(other.transform, this.transform);
    }
    get hashCode() {
      return ui.hashValues(this.rect, this.transform);
    }
  };
  (widget_inspector._TransformedRect.new = function(object) {
    this.rect = object.semanticBounds;
    this.transform = object.getTransformTo(null);
    ;
  }).prototype = widget_inspector._TransformedRect.prototype;
  dart.addTypeTests(widget_inspector._TransformedRect);
  dart.setMethodSignature(widget_inspector._TransformedRect, () => ({
    __proto__: dart.getMethods(widget_inspector._TransformedRect.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(widget_inspector._TransformedRect, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._TransformedRect, () => ({
    __proto__: dart.getFields(widget_inspector._TransformedRect.__proto__),
    rect: dart.finalFieldType(ui.Rect),
    transform: dart.finalFieldType(vector_math_64.Matrix4)
  }));
  dart.defineExtensionMethods(widget_inspector._TransformedRect, ['_equals']);
  dart.defineExtensionAccessors(widget_inspector._TransformedRect, ['hashCode']);
  widget_inspector._InspectorOverlayRenderState = class _InspectorOverlayRenderState extends core.Object {
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return widget_inspector._InspectorOverlayRenderState.is(other) && dart.equals(other.overlayRect, this.overlayRect) && dart.equals(other.selected, this.selected) && dart.test(collections.listEquals(widget_inspector._TransformedRect, other.candidates, this.candidates)) && other.tooltip == this.tooltip;
    }
    get hashCode() {
      return ui.hashValues(this.overlayRect, this.selected, ui.hashList(this.candidates), this.tooltip);
    }
  };
  (widget_inspector._InspectorOverlayRenderState.new = function(opts) {
    let overlayRect = opts && 'overlayRect' in opts ? opts.overlayRect : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let candidates = opts && 'candidates' in opts ? opts.candidates : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this.overlayRect = overlayRect;
    this.selected = selected;
    this.candidates = candidates;
    this.tooltip = tooltip;
    this.textDirection = textDirection;
    ;
  }).prototype = widget_inspector._InspectorOverlayRenderState.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlayRenderState);
  dart.setMethodSignature(widget_inspector._InspectorOverlayRenderState, () => ({
    __proto__: dart.getMethods(widget_inspector._InspectorOverlayRenderState.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(widget_inspector._InspectorOverlayRenderState, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._InspectorOverlayRenderState, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlayRenderState.__proto__),
    overlayRect: dart.finalFieldType(ui.Rect),
    selected: dart.finalFieldType(widget_inspector._TransformedRect),
    candidates: dart.finalFieldType(core.List$(widget_inspector._TransformedRect)),
    tooltip: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  dart.defineExtensionMethods(widget_inspector._InspectorOverlayRenderState, ['_equals']);
  dart.defineExtensionAccessors(widget_inspector._InspectorOverlayRenderState, ['hashCode']);
  var _lastState = dart.privateName(widget_inspector, "_lastState");
  var _picture = dart.privateName(widget_inspector, "_picture");
  var _textPainter = dart.privateName(widget_inspector, "_textPainter");
  var _textPainterMaxWidth = dart.privateName(widget_inspector, "_textPainterMaxWidth");
  var _buildPicture = dart.privateName(widget_inspector, "_buildPicture");
  var _paintDescription = dart.privateName(widget_inspector, "_paintDescription");
  var C371;
  var C372;
  widget_inspector._InspectorOverlayLayer = class _InspectorOverlayLayer extends layer.Layer {
    addToScene(builder, layerOffset = C141 || CT.C141) {
      if (!dart.test(this.selection.active)) return;
      let selected = this.selection.current;
      let candidates = JSArrayOf_TransformedRect().of([]);
      for (let candidate of this.selection.candidates) {
        if (dart.equals(candidate, selected) || !dart.test(candidate.attached)) continue;
        candidates[$add](new widget_inspector._TransformedRect.new(candidate));
      }
      let state = new widget_inspector._InspectorOverlayRenderState.new({overlayRect: this.overlayRect, selected: new widget_inspector._TransformedRect.new(selected), tooltip: this.selection.currentElement.toStringShort(), textDirection: ui.TextDirection.ltr, candidates: candidates});
      if (!state._equals(this[_lastState])) {
        this[_lastState] = state;
        this[_picture] = this[_buildPicture](state);
      }
      builder.addPicture(layerOffset, this[_picture]);
    }
    [_buildPicture](state) {
      let t24, t24$, t24$0, t24$1;
      let recorder = ui.PictureRecorder.new();
      let canvas = ui.Canvas.new(recorder, state.overlayRect);
      let size = state.overlayRect.size;
      let fillPaint = (t24 = ui.Paint.new(), t24.style = ui.PaintingStyle.fill, t24.color = widget_inspector._kHighlightedRenderObjectFillColor, t24);
      let borderPaint = (t24$ = ui.Paint.new(), t24$.style = ui.PaintingStyle.stroke, t24$.strokeWidth = 1.0, t24$.color = widget_inspector._kHighlightedRenderObjectBorderColor, t24$);
      let selectedPaintRect = state.selected.rect.deflate(0.5);
      t24$0 = canvas;
      t24$0.save();
      t24$0.transform(state.selected.transform.storage);
      t24$0.drawRect(selectedPaintRect, fillPaint);
      t24$0.drawRect(selectedPaintRect, borderPaint);
      t24$0.restore();
      t24$0;
      for (let transformedRect of state.candidates) {
        t24$1 = canvas;
        t24$1.save();
        t24$1.transform(transformedRect.transform.storage);
        t24$1.drawRect(transformedRect.rect.deflate(0.5), borderPaint);
        t24$1.restore();
        t24$1;
      }
      let targetRect = matrix_utils.MatrixUtils.transformRect(state.selected.transform, state.selected.rect);
      let target = new ui.Offset.new(targetRect.left, targetRect.center.dy);
      let verticalOffset = dart.notNull(targetRect.height) / 2 + 9;
      this[_paintDescription](canvas, state.tooltip, state.textDirection, target, verticalOffset, size, targetRect);
      return recorder.endRecording();
    }
    [_paintDescription](canvas, message, textDirection, target, verticalOffset, size, targetRect) {
      let t24, t24$, t24$0, t24$1;
      canvas.save();
      let maxWidth = dart.notNull(size.width) - 2 * (10 + 5);
      let textSpan = text_span.TextSpan.as((t24 = this[_textPainter], t24 == null ? null : t24.text));
      if (this[_textPainter] == null || textSpan.text != message || this[_textPainterMaxWidth] !== maxWidth) {
        this[_textPainterMaxWidth] = maxWidth;
        this[_textPainter] = (t24$ = new text_painter.TextPainter.new(), t24$.maxLines = 5, t24$.ellipsis = "...", t24$.text = new text_span.TextSpan.new({style: widget_inspector._messageStyle, text: message}), t24$.textDirection = textDirection, t24$.layout({maxWidth: maxWidth}), t24$);
      }
      let tooltipSize = this[_textPainter].size['+'](C371 || CT.C371);
      let tipOffset = geometry.positionDependentBox({size: size, childSize: tooltipSize, target: target, verticalOffset: verticalOffset, preferBelow: false});
      let tooltipBackground = (t24$0 = ui.Paint.new(), t24$0.style = ui.PaintingStyle.fill, t24$0.color = widget_inspector._kTooltipBackgroundColor, t24$0);
      canvas.drawRect(new ui.Rect.fromPoints(tipOffset, tipOffset.translate(tooltipSize.width, tooltipSize.height)), tooltipBackground);
      let wedgeY = tipOffset.dy;
      let tooltipBelow = dart.notNull(tipOffset.dy) > dart.notNull(target.dy);
      if (!tooltipBelow) wedgeY = dart.notNull(wedgeY) + dart.notNull(tooltipSize.height);
      let wedgeX = math.max(core.double, tipOffset.dx, target.dx) + 10 * 2;
      wedgeX = math.min(core.double, wedgeX, dart.notNull(tipOffset.dx) + dart.notNull(tooltipSize.width) - 10 * 2);
      let wedge = JSArrayOfOffset().of([new ui.Offset.new(wedgeX - 10, wedgeY), new ui.Offset.new(wedgeX + 10, wedgeY), new ui.Offset.new(wedgeX, dart.notNull(wedgeY) + (tooltipBelow ? -10 : 10))]);
      canvas.drawPath((t24$1 = ui.Path.new(), t24$1.addPolygon(wedge, true), t24$1), tooltipBackground);
      this[_textPainter].paint(canvas, tipOffset['+'](C372 || CT.C372));
      canvas.restore();
    }
    findAnnotations(S, result, localPosition, opts) {
      let onlyFirst = opts && 'onlyFirst' in opts ? opts.onlyFirst : null;
      return false;
    }
  };
  (widget_inspector._InspectorOverlayLayer.new = function(opts) {
    let overlayRect = opts && 'overlayRect' in opts ? opts.overlayRect : null;
    let selection = opts && 'selection' in opts ? opts.selection : null;
    this[_lastState] = null;
    this[_picture] = null;
    this[_textPainter] = null;
    this[_textPainterMaxWidth] = null;
    this.overlayRect = overlayRect;
    this.selection = selection;
    if (!(overlayRect != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2499, 15, "overlayRect != null");
    if (!(selection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2500, 15, "selection != null");
    widget_inspector._InspectorOverlayLayer.__proto__.new.call(this);
    let inDebugMode = false;
    if (!dart.test(dart.fn(() => {
      inDebugMode = true;
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 2502, 12, "() {\r\n      inDebugMode = true;\r\n      return true;\r\n    }()");
    if (inDebugMode[$_equals](false)) {
      dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("The inspector should never be used in production mode due to the " + "negative performance impact.")])));
    }
  }).prototype = widget_inspector._InspectorOverlayLayer.prototype;
  dart.addTypeTests(widget_inspector._InspectorOverlayLayer);
  dart.setMethodSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getMethods(widget_inspector._InspectorOverlayLayer.__proto__),
    addToScene: dart.fnType(dart.void, [ui.SceneBuilder], [ui.Offset]),
    [_buildPicture]: dart.fnType(ui.Picture, [widget_inspector._InspectorOverlayRenderState]),
    [_paintDescription]: dart.fnType(dart.void, [ui.Canvas, core.String, ui.TextDirection, ui.Offset, core.double, ui.Size, ui.Rect]),
    findAnnotations: dart.gFnType(S => [core.bool, [layer.AnnotationResult$(S), ui.Offset], {onlyFirst: core.bool}, {}])
  }));
  dart.setLibraryUri(widget_inspector._InspectorOverlayLayer, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._InspectorOverlayLayer, () => ({
    __proto__: dart.getFields(widget_inspector._InspectorOverlayLayer.__proto__),
    selection: dart.fieldType(widget_inspector.InspectorSelection),
    overlayRect: dart.finalFieldType(ui.Rect),
    [_lastState]: dart.fieldType(widget_inspector._InspectorOverlayRenderState),
    [_picture]: dart.fieldType(ui.Picture),
    [_textPainter]: dart.fieldType(text_painter.TextPainter),
    [_textPainterMaxWidth]: dart.fieldType(core.double)
  }));
  widget_inspector._HasCreationLocation = class _HasCreationLocation extends core.Object {};
  (widget_inspector._HasCreationLocation.new = function() {
    ;
  }).prototype = widget_inspector._HasCreationLocation.prototype;
  dart.addTypeTests(widget_inspector._HasCreationLocation);
  dart.setLibraryUri(widget_inspector._HasCreationLocation, "package:flutter/src/widgets/widget_inspector.dart");
  widget_inspector._Location = class _Location extends core.Object {
    get file() {
      return this[file$];
    }
    set file(value) {
      super.file = value;
    }
    get line() {
      return this[line$];
    }
    set line(value) {
      super.line = value;
    }
    get column() {
      return this[column$];
    }
    set column(value) {
      super.column = value;
    }
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get parameterLocations() {
      return this[parameterLocations$];
    }
    set parameterLocations(value) {
      super.parameterLocations = value;
    }
    toJsonMap() {
      let json = new (IdentityMapOfString$Object()).from(["file", this.file, "line", this.line, "column", this.column]);
      if (this.name != null) {
        json[$_set]("name", this.name);
      }
      if (this.parameterLocations != null) {
        json[$_set]("parameterLocations", this.parameterLocations[$map](MapOfString$Object(), dart.fn(location => location.toJsonMap(), _LocationToMapOfString$Object()))[$toList]());
      }
      return json;
    }
    toString() {
      let t24;
      let parts = JSArrayOfString().of([]);
      if (this.name != null) {
        parts[$add](this.name);
      }
      if (this.file != null) {
        parts[$add](this.file);
      }
      t24 = parts;
      t24[$add](dart.str(this.line));
      t24[$add](dart.str(this.column));
      t24;
      return parts[$join](":");
    }
  };
  (widget_inspector._Location.new = function(opts) {
    let file = opts && 'file' in opts ? opts.file : null;
    let line = opts && 'line' in opts ? opts.line : null;
    let column = opts && 'column' in opts ? opts.column : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let parameterLocations = opts && 'parameterLocations' in opts ? opts.parameterLocations : null;
    this[file$] = file;
    this[line$] = line;
    this[column$] = column;
    this[name$] = name;
    this[parameterLocations$] = parameterLocations;
    ;
  }).prototype = widget_inspector._Location.prototype;
  dart.addTypeTests(widget_inspector._Location);
  const file$ = _Location_file;
  const line$ = _Location_line;
  const column$ = _Location_column;
  const name$ = _Location_name;
  const parameterLocations$ = _Location_parameterLocations;
  dart.setMethodSignature(widget_inspector._Location, () => ({
    __proto__: dart.getMethods(widget_inspector._Location.__proto__),
    toJsonMap: dart.fnType(core.Map$(core.String, core.Object), [])
  }));
  dart.setLibraryUri(widget_inspector._Location, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector._Location, () => ({
    __proto__: dart.getFields(widget_inspector._Location.__proto__),
    file: dart.finalFieldType(core.String),
    line: dart.finalFieldType(core.int),
    column: dart.finalFieldType(core.int),
    name: dart.finalFieldType(core.String),
    parameterLocations: dart.finalFieldType(core.List$(widget_inspector._Location))
  }));
  dart.defineExtensionMethods(widget_inspector._Location, ['toString']);
  var _nodesCreatedByLocalProject = dart.privateName(widget_inspector, "_nodesCreatedByLocalProject");
  var _interactive = dart.privateName(widget_inspector, "_interactive");
  var service$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.service");
  var groupName$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.groupName");
  var summaryTree$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.summaryTree");
  var maxDescendentsTruncatableNode$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.maxDescendentsTruncatableNode");
  var includeProperties$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.includeProperties");
  var subtreeDepth$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.subtreeDepth");
  var expandPropertyValues$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.expandPropertyValues");
  var addAdditionalPropertiesCallback$ = dart.privateName(widget_inspector, "InspectorSerializationDelegate.addAdditionalPropertiesCallback");
  widget_inspector.InspectorSerializationDelegate = class InspectorSerializationDelegate extends core.Object {
    get service() {
      return this[service$];
    }
    set service(value) {
      super.service = value;
    }
    get groupName() {
      return this[groupName$];
    }
    set groupName(value) {
      super.groupName = value;
    }
    get summaryTree() {
      return this[summaryTree$];
    }
    set summaryTree(value) {
      super.summaryTree = value;
    }
    get maxDescendentsTruncatableNode() {
      return this[maxDescendentsTruncatableNode$];
    }
    set maxDescendentsTruncatableNode(value) {
      super.maxDescendentsTruncatableNode = value;
    }
    get includeProperties() {
      return this[includeProperties$];
    }
    set includeProperties(value) {
      super.includeProperties = value;
    }
    get subtreeDepth() {
      return this[subtreeDepth$];
    }
    set subtreeDepth(value) {
      super.subtreeDepth = value;
    }
    get expandPropertyValues() {
      return this[expandPropertyValues$];
    }
    set expandPropertyValues(value) {
      super.expandPropertyValues = value;
    }
    get addAdditionalPropertiesCallback() {
      return this[addAdditionalPropertiesCallback$];
    }
    set addAdditionalPropertiesCallback(value) {
      super.addAdditionalPropertiesCallback = value;
    }
    get [_interactive]() {
      return this.groupName != null;
    }
    additionalNodeProperties(node) {
      let t24;
      let result = new (IdentityMapOfString$Object()).new();
      let value = node.value;
      if (dart.test(this[_interactive])) {
        result[$_set]("objectId", this.service.toId(node, this.groupName));
        result[$_set]("valueId", this.service.toId(value, this.groupName));
      }
      if (dart.test(this.summaryTree)) {
        result[$_set]("summaryTree", true);
      }
      let creationLocation = widget_inspector._getCreationLocation(value);
      if (creationLocation != null) {
        result[$_set]("locationId", widget_inspector._toLocationId(creationLocation));
        result[$_set]("creationLocation", creationLocation.toJsonMap());
        if (dart.test(this.service[_isLocalCreationLocation](creationLocation))) {
          this[_nodesCreatedByLocalProject][$add](node);
          result[$_set]("createdByLocalProject", true);
        }
      }
      if (this.addAdditionalPropertiesCallback != null) {
        result[$addAll]((t24 = this.addAdditionalPropertiesCallback(node, this), t24 == null ? new (IdentityMapOfString$Object()).new() : t24));
      }
      return result;
    }
    delegateForNode(node) {
      return dart.test(this.summaryTree) || dart.notNull(this.subtreeDepth) > 1 || dart.test(this.service[_shouldShowInSummaryTree](node)) ? this.copyWith({subtreeDepth: dart.notNull(this.subtreeDepth) - 1}) : this;
    }
    filterChildren(children, owner) {
      return this.service[_filterChildren](children, this);
    }
    filterProperties(properties, owner) {
      let createdByLocalProject = this[_nodesCreatedByLocalProject][$contains](owner);
      return properties[$where](dart.fn(node => !dart.test(node.isFiltered(dart.test(createdByLocalProject) ? diagnostics$.DiagnosticLevel.fine : diagnostics$.DiagnosticLevel.info)), DiagnosticsNodeTobool()))[$toList]();
    }
    truncateNodesList(nodes, owner) {
      let t24;
      if (dart.notNull(this.maxDescendentsTruncatableNode) >= 0 && dart.equals((t24 = owner, t24 == null ? null : t24.allowTruncate), true) && dart.notNull(nodes[$length]) > dart.notNull(this.maxDescendentsTruncatableNode)) {
        nodes = this.service[_truncateNodes](nodes, this.maxDescendentsTruncatableNode);
      }
      return nodes;
    }
    copyWith(opts) {
      let t24, t24$;
      let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : null;
      let includeProperties = opts && 'includeProperties' in opts ? opts.includeProperties : null;
      return new widget_inspector.InspectorSerializationDelegate.new({groupName: this.groupName, summaryTree: this.summaryTree, maxDescendentsTruncatableNode: this.maxDescendentsTruncatableNode, expandPropertyValues: this.expandPropertyValues, subtreeDepth: (t24 = subtreeDepth, t24 == null ? this.subtreeDepth : t24), includeProperties: (t24$ = includeProperties, t24$ == null ? this.includeProperties : t24$), service: this.service, addAdditionalPropertiesCallback: this.addAdditionalPropertiesCallback});
    }
  };
  (widget_inspector.InspectorSerializationDelegate.new = function(opts) {
    let groupName = opts && 'groupName' in opts ? opts.groupName : null;
    let summaryTree = opts && 'summaryTree' in opts ? opts.summaryTree : false;
    let maxDescendentsTruncatableNode = opts && 'maxDescendentsTruncatableNode' in opts ? opts.maxDescendentsTruncatableNode : -1;
    let expandPropertyValues = opts && 'expandPropertyValues' in opts ? opts.expandPropertyValues : true;
    let subtreeDepth = opts && 'subtreeDepth' in opts ? opts.subtreeDepth : 1;
    let includeProperties = opts && 'includeProperties' in opts ? opts.includeProperties : false;
    let service = opts && 'service' in opts ? opts.service : null;
    let addAdditionalPropertiesCallback = opts && 'addAdditionalPropertiesCallback' in opts ? opts.addAdditionalPropertiesCallback : null;
    this[_nodesCreatedByLocalProject] = JSArrayOfDiagnosticsNode().of([]);
    this[groupName$] = groupName;
    this[summaryTree$] = summaryTree;
    this[maxDescendentsTruncatableNode$] = maxDescendentsTruncatableNode;
    this[expandPropertyValues$] = expandPropertyValues;
    this[subtreeDepth$] = subtreeDepth;
    this[includeProperties$] = includeProperties;
    this[service$] = service;
    this[addAdditionalPropertiesCallback$] = addAdditionalPropertiesCallback;
    ;
  }).prototype = widget_inspector.InspectorSerializationDelegate.prototype;
  dart.addTypeTests(widget_inspector.InspectorSerializationDelegate);
  widget_inspector.InspectorSerializationDelegate[dart.implements] = () => [diagnostics$.DiagnosticsSerializationDelegate];
  dart.setMethodSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getMethods(widget_inspector.InspectorSerializationDelegate.__proto__),
    additionalNodeProperties: dart.fnType(core.Map$(core.String, core.Object), [diagnostics$.DiagnosticsNode]),
    delegateForNode: dart.fnType(diagnostics$.DiagnosticsSerializationDelegate, [diagnostics$.DiagnosticsNode]),
    filterChildren: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), diagnostics$.DiagnosticsNode]),
    filterProperties: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), diagnostics$.DiagnosticsNode]),
    truncateNodesList: dart.fnType(core.List$(diagnostics$.DiagnosticsNode), [core.List$(diagnostics$.DiagnosticsNode), diagnostics$.DiagnosticsNode]),
    copyWith: dart.fnType(diagnostics$.DiagnosticsSerializationDelegate, [], {includeProperties: core.bool, subtreeDepth: core.int}, {})
  }));
  dart.setGetterSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getGetters(widget_inspector.InspectorSerializationDelegate.__proto__),
    [_interactive]: core.bool
  }));
  dart.setLibraryUri(widget_inspector.InspectorSerializationDelegate, "package:flutter/src/widgets/widget_inspector.dart");
  dart.setFieldSignature(widget_inspector.InspectorSerializationDelegate, () => ({
    __proto__: dart.getFields(widget_inspector.InspectorSerializationDelegate.__proto__),
    service: dart.finalFieldType(widget_inspector.WidgetInspectorService),
    groupName: dart.finalFieldType(core.String),
    summaryTree: dart.finalFieldType(core.bool),
    maxDescendentsTruncatableNode: dart.finalFieldType(core.int),
    includeProperties: dart.finalFieldType(core.bool),
    subtreeDepth: dart.finalFieldType(core.int),
    expandPropertyValues: dart.finalFieldType(core.bool),
    addAdditionalPropertiesCallback: dart.finalFieldType(dart.fnType(core.Map$(core.String, core.Object), [diagnostics$.DiagnosticsNode, widget_inspector.InspectorSerializationDelegate])),
    [_nodesCreatedByLocalProject]: dart.finalFieldType(core.List$(diagnostics$.DiagnosticsNode))
  }));
  widget_inspector._calculateSubtreeBoundsHelper = function _calculateSubtreeBoundsHelper(object, transform) {
    let bounds = matrix_utils.MatrixUtils.transformRect(transform, object.semanticBounds);
    object.visitChildren(dart.fn(child => {
      let childTransform = transform.clone();
      object.applyPaintTransform(child, childTransform);
      let childBounds = widget_inspector._calculateSubtreeBoundsHelper(child, childTransform);
      let paintClip = object.describeApproximatePaintClip(child);
      if (paintClip != null) {
        let transformedPaintClip = matrix_utils.MatrixUtils.transformRect(transform, paintClip);
        childBounds = childBounds.intersect(transformedPaintClip);
      }
      if (dart.test(childBounds.isFinite) && !dart.test(childBounds.isEmpty)) {
        bounds = dart.test(bounds.isEmpty) ? childBounds : bounds.expandToInclude(childBounds);
      }
    }, RenderObjectToNull()));
    return bounds;
  };
  widget_inspector._calculateSubtreeBounds = function _calculateSubtreeBounds(object) {
    return widget_inspector._calculateSubtreeBoundsHelper(object, vector_math_64.Matrix4.identity());
  };
  widget_inspector._followDiagnosticableChain = function _followDiagnosticableChain(chain, opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let path = JSArrayOf_DiagnosticsPathNode().of([]);
    if (dart.test(chain[$isEmpty])) return path;
    let diagnostic = chain[$first].toDiagnosticsNode({name: name, style: style});
    for (let i = 1; i < dart.notNull(chain[$length]); i = i + 1) {
      let target = chain[$_get](i);
      let foundMatch = false;
      let children = diagnostic.getChildren();
      for (let j = 0; j < dart.notNull(children[$length]); j = j + 1) {
        let child = children[$_get](j);
        if (dart.equals(child.value, target)) {
          foundMatch = true;
          path[$add](new widget_inspector._DiagnosticsPathNode.new({node: diagnostic, children: children, childIndex: j}));
          diagnostic = child;
          break;
        }
      }
      if (!foundMatch) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/widget_inspector.dart", 663, 12, "foundMatch");
    }
    path[$add](new widget_inspector._DiagnosticsPathNode.new({node: diagnostic, children: diagnostic.getChildren()}));
    return path;
  };
  widget_inspector._isDebugCreator = function _isDebugCreator(node) {
    return object$.DiagnosticsDebugCreator.is(node);
  };
  widget_inspector.transformDebugCreator = function transformDebugCreator(properties) {
    return new (SyncIterableOfDiagnosticsNode()).new(function* transformDebugCreator() {
      let pending = JSArrayOfDiagnosticsNode().of([]);
      let foundStackTrace = false;
      for (let node of properties) {
        if (!foundStackTrace && assertions.DiagnosticsStackTrace.is(node)) foundStackTrace = true;
        if (dart.test(widget_inspector._isDebugCreator(node))) {
          yield* widget_inspector._parseDiagnosticsNode(node);
        } else {
          if (foundStackTrace) {
            pending[$add](node);
          } else {
            yield node;
          }
        }
      }
      yield* pending;
    });
  };
  widget_inspector._parseDiagnosticsNode = function _parseDiagnosticsNode(node) {
    if (!dart.test(widget_inspector._isDebugCreator(node))) return null;
    let debugCreator = framework.DebugCreator.as(node.value);
    let element = debugCreator.element;
    return widget_inspector._describeRelevantUserCode(element);
  };
  widget_inspector._describeRelevantUserCode = function _describeRelevantUserCode(element) {
    if (!dart.test(widget_inspector.WidgetInspectorService.instance.isWidgetCreationTracked())) {
      return JSArrayOfDiagnosticsNode().of([new assertions.ErrorDescription.new("Widget creation tracking is currently disabled. Enabling " + "it enables improved error messages. It can be enabled by passing " + "`--track-widget-creation` to `flutter run` or `flutter test`."), new assertions.ErrorSpacer.new()]);
    }
    let nodes = JSArrayOfDiagnosticsNode().of([]);
    function processElement(target) {
      if (dart.test(widget_inspector._isLocalCreationLocation(target))) {
        nodes[$add](new diagnostics$.DiagnosticsBlock.new({name: "The relevant error-causing widget was", children: JSArrayOfDiagnosticsNode().of([new assertions.ErrorDescription.new(dart.str(target.widget.toStringShort()) + " " + dart.str(widget_inspector._describeCreationLocation(target)))])}));
        nodes[$add](new assertions.ErrorSpacer.new());
        return false;
      }
      return true;
    }
    dart.fn(processElement, ElementTobool());
    if (dart.test(processElement(element))) element.visitAncestorElements(processElement);
    return nodes;
  };
  widget_inspector._isLocalCreationLocation = function _isLocalCreationLocation$(object) {
    let location = widget_inspector._getCreationLocation(object);
    if (location == null) return false;
    return widget_inspector.WidgetInspectorService.instance[_isLocalCreationLocation](location);
  };
  widget_inspector._describeCreationLocation = function _describeCreationLocation(object) {
    let t24;
    let location = widget_inspector._getCreationLocation(object);
    t24 = location;
    return t24 == null ? null : dart.toString(t24);
  };
  widget_inspector._getCreationLocation = function _getCreationLocation(object) {
    let candidate = framework.Element.is(object) ? object.widget : object;
    return widget_inspector._HasCreationLocation.is(candidate) ? candidate[_location] : null;
  };
  widget_inspector._toLocationId = function _toLocationId(location) {
    let id = widget_inspector._locationToId[$_get](location);
    if (id != null) {
      return id;
    }
    id = widget_inspector._locations[$length];
    widget_inspector._locations[$add](location);
    widget_inspector._locationToId[$_set](location, id);
    return id;
  };
  var C373;
  var C374;
  var C375;
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var C377;
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var C376;
  dart.defineLazy(widget_inspector, {
    /*widget_inspector._kMaxTooltipLines*/get _kMaxTooltipLines() {
      return 5;
    },
    /*widget_inspector._kTooltipBackgroundColor*/get _kTooltipBackgroundColor() {
      return C373 || CT.C373;
    },
    /*widget_inspector._kHighlightedRenderObjectFillColor*/get _kHighlightedRenderObjectFillColor() {
      return C374 || CT.C374;
    },
    /*widget_inspector._kHighlightedRenderObjectBorderColor*/get _kHighlightedRenderObjectBorderColor() {
      return C375 || CT.C375;
    },
    /*widget_inspector._kScreenEdgeMargin*/get _kScreenEdgeMargin() {
      return 10;
    },
    /*widget_inspector._kTooltipPadding*/get _kTooltipPadding() {
      return 5;
    },
    /*widget_inspector._kInspectButtonMargin*/get _kInspectButtonMargin() {
      return 10;
    },
    /*widget_inspector._kOffScreenMargin*/get _kOffScreenMargin() {
      return 1;
    },
    /*widget_inspector._messageStyle*/get _messageStyle() {
      return C376 || CT.C376;
    },
    /*widget_inspector._locationToId*/get _locationToId() {
      return new (LinkedMapOf_Location$int()).new();
    },
    /*widget_inspector._locations*/get _locations() {
      return JSArrayOf_Location().of([]);
    }
  });
  var _debugAssertTypeMatches = dart.privateName(gesture_detector, "_debugAssertTypeMatches");
  const _is_GestureRecognizerFactory_default = Symbol('_is_GestureRecognizerFactory_default');
  gesture_detector.GestureRecognizerFactory$ = dart.generic(T => {
    class GestureRecognizerFactory extends core.Object {
      [_debugAssertTypeMatches](type) {
        if (!dart.equals(type, dart.wrapType(T))) dart.assertFailed("GestureRecognizerFactory of type " + dart.str(dart.wrapType(T)) + " was used where type " + dart.str(type) + " was specified.", "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 76, 12, "type == T");
        return true;
      }
    }
    (GestureRecognizerFactory.new = function() {
      ;
    }).prototype = GestureRecognizerFactory.prototype;
    dart.addTypeTests(GestureRecognizerFactory);
    GestureRecognizerFactory.prototype[_is_GestureRecognizerFactory_default] = true;
    dart.setMethodSignature(GestureRecognizerFactory, () => ({
      __proto__: dart.getMethods(GestureRecognizerFactory.__proto__),
      [_debugAssertTypeMatches]: dart.fnType(core.bool, [core.Type])
    }));
    dart.setLibraryUri(GestureRecognizerFactory, "package:flutter/src/widgets/gesture_detector.dart");
    return GestureRecognizerFactory;
  });
  gesture_detector.GestureRecognizerFactory = gesture_detector.GestureRecognizerFactory$();
  dart.addTypeTests(gesture_detector.GestureRecognizerFactory, _is_GestureRecognizerFactory_default);
  var _constructor = dart.privateName(gesture_detector, "_constructor");
  var _initializer = dart.privateName(gesture_detector, "_initializer");
  const _is_GestureRecognizerFactoryWithHandlers_default = Symbol('_is_GestureRecognizerFactoryWithHandlers_default');
  var _constructor$ = dart.privateName(gesture_detector, "GestureRecognizerFactoryWithHandlers._constructor");
  var _initializer$ = dart.privateName(gesture_detector, "GestureRecognizerFactoryWithHandlers._initializer");
  gesture_detector.GestureRecognizerFactoryWithHandlers$ = dart.generic(T => {
    class GestureRecognizerFactoryWithHandlers extends gesture_detector.GestureRecognizerFactory$(T) {
      get [_constructor]() {
        return this[_constructor$];
      }
      set [_constructor](value) {
        super[_constructor] = value;
      }
      get [_initializer]() {
        return this[_initializer$];
      }
      set [_initializer](value) {
        super[_initializer] = value;
      }
      _constructor() {
        return this[_constructor]();
      }
      initializer(instance) {
        T._check(instance);
        return this[_initializer](instance);
      }
    }
    (GestureRecognizerFactoryWithHandlers.new = function(_constructor, _initializer) {
      this[_constructor$] = _constructor;
      this[_initializer$] = _initializer;
      if (!(_constructor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 95, 14, "_constructor != null");
      if (!(_initializer != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 96, 14, "_initializer != null");
      GestureRecognizerFactoryWithHandlers.__proto__.new.call(this);
      ;
    }).prototype = GestureRecognizerFactoryWithHandlers.prototype;
    dart.addTypeTests(GestureRecognizerFactoryWithHandlers);
    GestureRecognizerFactoryWithHandlers.prototype[_is_GestureRecognizerFactoryWithHandlers_default] = true;
    dart.setMethodSignature(GestureRecognizerFactoryWithHandlers, () => ({
      __proto__: dart.getMethods(GestureRecognizerFactoryWithHandlers.__proto__),
      _constructor: dart.fnType(T, []),
      initializer: dart.fnType(dart.void, [core.Object])
    }));
    dart.setLibraryUri(GestureRecognizerFactoryWithHandlers, "package:flutter/src/widgets/gesture_detector.dart");
    dart.setFieldSignature(GestureRecognizerFactoryWithHandlers, () => ({
      __proto__: dart.getFields(GestureRecognizerFactoryWithHandlers.__proto__),
      [_constructor]: dart.finalFieldType(dart.fnType(T, [])),
      [_initializer]: dart.finalFieldType(dart.fnType(dart.void, [T]))
    }));
    return GestureRecognizerFactoryWithHandlers;
  });
  gesture_detector.GestureRecognizerFactoryWithHandlers = gesture_detector.GestureRecognizerFactoryWithHandlers$();
  dart.addTypeTests(gesture_detector.GestureRecognizerFactoryWithHandlers, _is_GestureRecognizerFactoryWithHandlers_default);
  var C380;
  var C381;
  var C382;
  var C383;
  var C379;
  var C378;
  var child$10 = dart.privateName(gesture_detector, "GestureDetector.child");
  var onTapDown$ = dart.privateName(gesture_detector, "GestureDetector.onTapDown");
  var onTapUp$ = dart.privateName(gesture_detector, "GestureDetector.onTapUp");
  var onTap$ = dart.privateName(gesture_detector, "GestureDetector.onTap");
  var onTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onTapCancel");
  var onSecondaryTapDown$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapDown");
  var onSecondaryTapUp$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapUp");
  var onSecondaryTapCancel$ = dart.privateName(gesture_detector, "GestureDetector.onSecondaryTapCancel");
  var onDoubleTap$ = dart.privateName(gesture_detector, "GestureDetector.onDoubleTap");
  var onLongPress$ = dart.privateName(gesture_detector, "GestureDetector.onLongPress");
  var onLongPressStart$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressStart");
  var onLongPressMoveUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressMoveUpdate");
  var onLongPressUp$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressUp");
  var onLongPressEnd$ = dart.privateName(gesture_detector, "GestureDetector.onLongPressEnd");
  var onVerticalDragDown$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragDown");
  var onVerticalDragStart$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragStart");
  var onVerticalDragUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragUpdate");
  var onVerticalDragEnd$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragEnd");
  var onVerticalDragCancel$ = dart.privateName(gesture_detector, "GestureDetector.onVerticalDragCancel");
  var onHorizontalDragDown$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragDown");
  var onHorizontalDragStart$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragStart");
  var onHorizontalDragUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragUpdate");
  var onHorizontalDragEnd$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragEnd");
  var onHorizontalDragCancel$ = dart.privateName(gesture_detector, "GestureDetector.onHorizontalDragCancel");
  var onPanDown$ = dart.privateName(gesture_detector, "GestureDetector.onPanDown");
  var onPanStart$ = dart.privateName(gesture_detector, "GestureDetector.onPanStart");
  var onPanUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onPanUpdate");
  var onPanEnd$ = dart.privateName(gesture_detector, "GestureDetector.onPanEnd");
  var onPanCancel$ = dart.privateName(gesture_detector, "GestureDetector.onPanCancel");
  var onScaleStart$ = dart.privateName(gesture_detector, "GestureDetector.onScaleStart");
  var onScaleUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onScaleUpdate");
  var onScaleEnd$ = dart.privateName(gesture_detector, "GestureDetector.onScaleEnd");
  var onForcePressStart$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressStart");
  var onForcePressPeak$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressPeak");
  var onForcePressUpdate$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressUpdate");
  var onForcePressEnd$ = dart.privateName(gesture_detector, "GestureDetector.onForcePressEnd");
  var behavior$2 = dart.privateName(gesture_detector, "GestureDetector.behavior");
  var excludeFromSemantics$1 = dart.privateName(gesture_detector, "GestureDetector.excludeFromSemantics");
  var dragStartBehavior$0 = dart.privateName(gesture_detector, "GestureDetector.dragStartBehavior");
  gesture_detector.GestureDetector = class GestureDetector extends framework.StatelessWidget {
    get child() {
      return this[child$10];
    }
    set child(value) {
      super.child = value;
    }
    get onTapDown() {
      return this[onTapDown$];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapUp() {
      return this[onTapUp$];
    }
    set onTapUp(value) {
      super.onTapUp = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapCancel() {
      return this[onTapCancel$];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onSecondaryTapDown() {
      return this[onSecondaryTapDown$];
    }
    set onSecondaryTapDown(value) {
      super.onSecondaryTapDown = value;
    }
    get onSecondaryTapUp() {
      return this[onSecondaryTapUp$];
    }
    set onSecondaryTapUp(value) {
      super.onSecondaryTapUp = value;
    }
    get onSecondaryTapCancel() {
      return this[onSecondaryTapCancel$];
    }
    set onSecondaryTapCancel(value) {
      super.onSecondaryTapCancel = value;
    }
    get onDoubleTap() {
      return this[onDoubleTap$];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[onLongPress$];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onLongPressStart() {
      return this[onLongPressStart$];
    }
    set onLongPressStart(value) {
      super.onLongPressStart = value;
    }
    get onLongPressMoveUpdate() {
      return this[onLongPressMoveUpdate$];
    }
    set onLongPressMoveUpdate(value) {
      super.onLongPressMoveUpdate = value;
    }
    get onLongPressUp() {
      return this[onLongPressUp$];
    }
    set onLongPressUp(value) {
      super.onLongPressUp = value;
    }
    get onLongPressEnd() {
      return this[onLongPressEnd$];
    }
    set onLongPressEnd(value) {
      super.onLongPressEnd = value;
    }
    get onVerticalDragDown() {
      return this[onVerticalDragDown$];
    }
    set onVerticalDragDown(value) {
      super.onVerticalDragDown = value;
    }
    get onVerticalDragStart() {
      return this[onVerticalDragStart$];
    }
    set onVerticalDragStart(value) {
      super.onVerticalDragStart = value;
    }
    get onVerticalDragUpdate() {
      return this[onVerticalDragUpdate$];
    }
    set onVerticalDragUpdate(value) {
      super.onVerticalDragUpdate = value;
    }
    get onVerticalDragEnd() {
      return this[onVerticalDragEnd$];
    }
    set onVerticalDragEnd(value) {
      super.onVerticalDragEnd = value;
    }
    get onVerticalDragCancel() {
      return this[onVerticalDragCancel$];
    }
    set onVerticalDragCancel(value) {
      super.onVerticalDragCancel = value;
    }
    get onHorizontalDragDown() {
      return this[onHorizontalDragDown$];
    }
    set onHorizontalDragDown(value) {
      super.onHorizontalDragDown = value;
    }
    get onHorizontalDragStart() {
      return this[onHorizontalDragStart$];
    }
    set onHorizontalDragStart(value) {
      super.onHorizontalDragStart = value;
    }
    get onHorizontalDragUpdate() {
      return this[onHorizontalDragUpdate$];
    }
    set onHorizontalDragUpdate(value) {
      super.onHorizontalDragUpdate = value;
    }
    get onHorizontalDragEnd() {
      return this[onHorizontalDragEnd$];
    }
    set onHorizontalDragEnd(value) {
      super.onHorizontalDragEnd = value;
    }
    get onHorizontalDragCancel() {
      return this[onHorizontalDragCancel$];
    }
    set onHorizontalDragCancel(value) {
      super.onHorizontalDragCancel = value;
    }
    get onPanDown() {
      return this[onPanDown$];
    }
    set onPanDown(value) {
      super.onPanDown = value;
    }
    get onPanStart() {
      return this[onPanStart$];
    }
    set onPanStart(value) {
      super.onPanStart = value;
    }
    get onPanUpdate() {
      return this[onPanUpdate$];
    }
    set onPanUpdate(value) {
      super.onPanUpdate = value;
    }
    get onPanEnd() {
      return this[onPanEnd$];
    }
    set onPanEnd(value) {
      super.onPanEnd = value;
    }
    get onPanCancel() {
      return this[onPanCancel$];
    }
    set onPanCancel(value) {
      super.onPanCancel = value;
    }
    get onScaleStart() {
      return this[onScaleStart$];
    }
    set onScaleStart(value) {
      super.onScaleStart = value;
    }
    get onScaleUpdate() {
      return this[onScaleUpdate$];
    }
    set onScaleUpdate(value) {
      super.onScaleUpdate = value;
    }
    get onScaleEnd() {
      return this[onScaleEnd$];
    }
    set onScaleEnd(value) {
      super.onScaleEnd = value;
    }
    get onForcePressStart() {
      return this[onForcePressStart$];
    }
    set onForcePressStart(value) {
      super.onForcePressStart = value;
    }
    get onForcePressPeak() {
      return this[onForcePressPeak$];
    }
    set onForcePressPeak(value) {
      super.onForcePressPeak = value;
    }
    get onForcePressUpdate() {
      return this[onForcePressUpdate$];
    }
    set onForcePressUpdate(value) {
      super.onForcePressUpdate = value;
    }
    get onForcePressEnd() {
      return this[onForcePressEnd$];
    }
    set onForcePressEnd(value) {
      super.onForcePressEnd = value;
    }
    get behavior() {
      return this[behavior$2];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$0];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    build(context) {
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).new();
      if (this.onTapDown != null || this.onTapUp != null || this.onTap != null || this.onTapCancel != null || this.onSecondaryTapDown != null || this.onSecondaryTapUp != null || this.onSecondaryTapCancel != null) {
        gestures[$_set](dart.wrapType(tap$.TapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfTapGestureRecognizer()).new(dart.fn(() => new tap$.TapGestureRecognizer.new({debugOwner: this}), VoidToTapGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onTapDown = this.onTapDown;
          t24.onTapUp = this.onTapUp;
          t24.onTap = this.onTap;
          t24.onTapCancel = this.onTapCancel;
          t24.onSecondaryTapDown = this.onSecondaryTapDown;
          t24.onSecondaryTapUp = this.onSecondaryTapUp;
          t24.onSecondaryTapCancel = this.onSecondaryTapCancel;
          t24;
        }, TapGestureRecognizerToNull())));
      }
      if (this.onDoubleTap != null) {
        gestures[$_set](dart.wrapType(multitap.DoubleTapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfDoubleTapGestureRecognizer()).new(dart.fn(() => new multitap.DoubleTapGestureRecognizer.new({debugOwner: this}), VoidToDoubleTapGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onDoubleTap = this.onDoubleTap;
          t24;
        }, DoubleTapGestureRecognizerToNull())));
      }
      if (this.onLongPress != null || this.onLongPressUp != null || this.onLongPressStart != null || this.onLongPressMoveUpdate != null || this.onLongPressEnd != null) {
        gestures[$_set](dart.wrapType(long_press.LongPressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer()).new(dart.fn(() => new long_press.LongPressGestureRecognizer.new({debugOwner: this}), VoidToLongPressGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onLongPress = this.onLongPress;
          t24.onLongPressStart = this.onLongPressStart;
          t24.onLongPressMoveUpdate = this.onLongPressMoveUpdate;
          t24.onLongPressEnd = this.onLongPressEnd;
          t24.onLongPressUp = this.onLongPressUp;
          t24;
        }, LongPressGestureRecognizerToNull())));
      }
      if (this.onVerticalDragDown != null || this.onVerticalDragStart != null || this.onVerticalDragUpdate != null || this.onVerticalDragEnd != null || this.onVerticalDragCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.VerticalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfVerticalDragGestureRecognizer()).new(dart.fn(() => new monodrag.VerticalDragGestureRecognizer.new({debugOwner: this}), VoidToVerticalDragGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onDown = this.onVerticalDragDown;
          t24.onStart = this.onVerticalDragStart;
          t24.onUpdate = this.onVerticalDragUpdate;
          t24.onEnd = this.onVerticalDragEnd;
          t24.onCancel = this.onVerticalDragCancel;
          t24.dragStartBehavior = this.dragStartBehavior;
          t24;
        }, VerticalDragGestureRecognizerToNull())));
      }
      if (this.onHorizontalDragDown != null || this.onHorizontalDragStart != null || this.onHorizontalDragUpdate != null || this.onHorizontalDragEnd != null || this.onHorizontalDragCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this}), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onDown = this.onHorizontalDragDown;
          t24.onStart = this.onHorizontalDragStart;
          t24.onUpdate = this.onHorizontalDragUpdate;
          t24.onEnd = this.onHorizontalDragEnd;
          t24.onCancel = this.onHorizontalDragCancel;
          t24.dragStartBehavior = this.dragStartBehavior;
          t24;
        }, HorizontalDragGestureRecognizerToNull())));
      }
      if (this.onPanDown != null || this.onPanStart != null || this.onPanUpdate != null || this.onPanEnd != null || this.onPanCancel != null) {
        gestures[$_set](dart.wrapType(monodrag.PanGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfPanGestureRecognizer()).new(dart.fn(() => new monodrag.PanGestureRecognizer.new({debugOwner: this}), VoidToPanGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onDown = this.onPanDown;
          t24.onStart = this.onPanStart;
          t24.onUpdate = this.onPanUpdate;
          t24.onEnd = this.onPanEnd;
          t24.onCancel = this.onPanCancel;
          t24.dragStartBehavior = this.dragStartBehavior;
          t24;
        }, PanGestureRecognizerToNull())));
      }
      if (this.onScaleStart != null || this.onScaleUpdate != null || this.onScaleEnd != null) {
        gestures[$_set](dart.wrapType(scale.ScaleGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfScaleGestureRecognizer()).new(dart.fn(() => new scale.ScaleGestureRecognizer.new({debugOwner: this}), VoidToScaleGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onStart = this.onScaleStart;
          t24.onUpdate = this.onScaleUpdate;
          t24.onEnd = this.onScaleEnd;
          t24;
        }, ScaleGestureRecognizerToNull())));
      }
      if (this.onForcePressStart != null || this.onForcePressPeak != null || this.onForcePressUpdate != null || this.onForcePressEnd != null) {
        gestures[$_set](dart.wrapType(force_press.ForcePressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer()).new(dart.fn(() => new force_press.ForcePressGestureRecognizer.new({debugOwner: this}), VoidToForcePressGestureRecognizer()), dart.fn(instance => {
          let t24;
          t24 = instance;
          t24.onStart = this.onForcePressStart;
          t24.onPeak = this.onForcePressPeak;
          t24.onUpdate = this.onForcePressUpdate;
          t24.onEnd = this.onForcePressEnd;
          t24;
        }, ForcePressGestureRecognizerToNull())));
      }
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, behavior: this.behavior, excludeFromSemantics: this.excludeFromSemantics, child: this.child, $creationLocationd_0dea112b090073317d4: C378 || CT.C378});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfDragStartBehavior()).new("startBehavior", this.dragStartBehavior));
    }
  };
  (gesture_detector.GestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onSecondaryTapDown = opts && 'onSecondaryTapDown' in opts ? opts.onSecondaryTapDown : null;
    let onSecondaryTapUp = opts && 'onSecondaryTapUp' in opts ? opts.onSecondaryTapUp : null;
    let onSecondaryTapCancel = opts && 'onSecondaryTapCancel' in opts ? opts.onSecondaryTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onLongPressStart = opts && 'onLongPressStart' in opts ? opts.onLongPressStart : null;
    let onLongPressMoveUpdate = opts && 'onLongPressMoveUpdate' in opts ? opts.onLongPressMoveUpdate : null;
    let onLongPressUp = opts && 'onLongPressUp' in opts ? opts.onLongPressUp : null;
    let onLongPressEnd = opts && 'onLongPressEnd' in opts ? opts.onLongPressEnd : null;
    let onVerticalDragDown = opts && 'onVerticalDragDown' in opts ? opts.onVerticalDragDown : null;
    let onVerticalDragStart = opts && 'onVerticalDragStart' in opts ? opts.onVerticalDragStart : null;
    let onVerticalDragUpdate = opts && 'onVerticalDragUpdate' in opts ? opts.onVerticalDragUpdate : null;
    let onVerticalDragEnd = opts && 'onVerticalDragEnd' in opts ? opts.onVerticalDragEnd : null;
    let onVerticalDragCancel = opts && 'onVerticalDragCancel' in opts ? opts.onVerticalDragCancel : null;
    let onHorizontalDragDown = opts && 'onHorizontalDragDown' in opts ? opts.onHorizontalDragDown : null;
    let onHorizontalDragStart = opts && 'onHorizontalDragStart' in opts ? opts.onHorizontalDragStart : null;
    let onHorizontalDragUpdate = opts && 'onHorizontalDragUpdate' in opts ? opts.onHorizontalDragUpdate : null;
    let onHorizontalDragEnd = opts && 'onHorizontalDragEnd' in opts ? opts.onHorizontalDragEnd : null;
    let onHorizontalDragCancel = opts && 'onHorizontalDragCancel' in opts ? opts.onHorizontalDragCancel : null;
    let onForcePressStart = opts && 'onForcePressStart' in opts ? opts.onForcePressStart : null;
    let onForcePressPeak = opts && 'onForcePressPeak' in opts ? opts.onForcePressPeak : null;
    let onForcePressUpdate = opts && 'onForcePressUpdate' in opts ? opts.onForcePressUpdate : null;
    let onForcePressEnd = opts && 'onForcePressEnd' in opts ? opts.onForcePressEnd : null;
    let onPanDown = opts && 'onPanDown' in opts ? opts.onPanDown : null;
    let onPanStart = opts && 'onPanStart' in opts ? opts.onPanStart : null;
    let onPanUpdate = opts && 'onPanUpdate' in opts ? opts.onPanUpdate : null;
    let onPanEnd = opts && 'onPanEnd' in opts ? opts.onPanEnd : null;
    let onPanCancel = opts && 'onPanCancel' in opts ? opts.onPanCancel : null;
    let onScaleStart = opts && 'onScaleStart' in opts ? opts.onScaleStart : null;
    let onScaleUpdate = opts && 'onScaleUpdate' in opts ? opts.onScaleUpdate : null;
    let onScaleEnd = opts && 'onScaleEnd' in opts ? opts.onScaleEnd : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$10] = child;
    this[onTapDown$] = onTapDown;
    this[onTapUp$] = onTapUp;
    this[onTap$] = onTap;
    this[onTapCancel$] = onTapCancel;
    this[onSecondaryTapDown$] = onSecondaryTapDown;
    this[onSecondaryTapUp$] = onSecondaryTapUp;
    this[onSecondaryTapCancel$] = onSecondaryTapCancel;
    this[onDoubleTap$] = onDoubleTap;
    this[onLongPress$] = onLongPress;
    this[onLongPressStart$] = onLongPressStart;
    this[onLongPressMoveUpdate$] = onLongPressMoveUpdate;
    this[onLongPressUp$] = onLongPressUp;
    this[onLongPressEnd$] = onLongPressEnd;
    this[onVerticalDragDown$] = onVerticalDragDown;
    this[onVerticalDragStart$] = onVerticalDragStart;
    this[onVerticalDragUpdate$] = onVerticalDragUpdate;
    this[onVerticalDragEnd$] = onVerticalDragEnd;
    this[onVerticalDragCancel$] = onVerticalDragCancel;
    this[onHorizontalDragDown$] = onHorizontalDragDown;
    this[onHorizontalDragStart$] = onHorizontalDragStart;
    this[onHorizontalDragUpdate$] = onHorizontalDragUpdate;
    this[onHorizontalDragEnd$] = onHorizontalDragEnd;
    this[onHorizontalDragCancel$] = onHorizontalDragCancel;
    this[onForcePressStart$] = onForcePressStart;
    this[onForcePressPeak$] = onForcePressPeak;
    this[onForcePressUpdate$] = onForcePressUpdate;
    this[onForcePressEnd$] = onForcePressEnd;
    this[onPanDown$] = onPanDown;
    this[onPanStart$] = onPanStart;
    this[onPanUpdate$] = onPanUpdate;
    this[onPanEnd$] = onPanEnd;
    this[onPanCancel$] = onPanCancel;
    this[onScaleStart$] = onScaleStart;
    this[onScaleUpdate$] = onScaleUpdate;
    this[onScaleEnd$] = onScaleEnd;
    this[behavior$2] = behavior;
    this[excludeFromSemantics$1] = excludeFromSemantics;
    this[dragStartBehavior$0] = dragStartBehavior;
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 226, 15, "excludeFromSemantics != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 227, 15, "dragStartBehavior != null");
    if (!dart.test(dart.fn(() => {
      let haveVerticalDrag = onVerticalDragStart != null || onVerticalDragUpdate != null || onVerticalDragEnd != null;
      let haveHorizontalDrag = onHorizontalDragStart != null || onHorizontalDragUpdate != null || onHorizontalDragEnd != null;
      let havePan = onPanStart != null || onPanUpdate != null || onPanEnd != null;
      let haveScale = onScaleStart != null || onScaleUpdate != null || onScaleEnd != null;
      if (havePan || haveScale) {
        if (havePan && haveScale) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Incorrect GestureDetector arguments."), new assertions.ErrorDescription.new("Having both a pan gesture recognizer and a scale gesture recognizer is redundant; scale is a superset of pan."), new assertions.ErrorHint.new("Just use the scale gesture recognizer.")])));
        }
        let recognizer = havePan ? "pan" : "scale";
        if (haveVerticalDrag && haveHorizontalDrag) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Incorrect GestureDetector arguments."), new assertions.ErrorDescription.new("Simultaneously having a vertical drag gesture recognizer, a horizontal drag gesture recognizer, and a " + recognizer + " gesture recognizer " + "will result in the " + recognizer + " gesture recognizer being ignored, since the other two will catch all drags.")])));
        }
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 228, 15, "() {\r\n         final bool haveVerticalDrag = onVerticalDragStart != null || onVerticalDragUpdate != null || onVerticalDragEnd != null;\r\n         final bool haveHorizontalDrag = onHorizontalDragStart != null || onHorizontalDragUpdate != null || onHorizontalDragEnd != null;\r\n         final bool havePan = onPanStart != null || onPanUpdate != null || onPanEnd != null;\r\n         final bool haveScale = onScaleStart != null || onScaleUpdate != null || onScaleEnd != null;\r\n         if (havePan || haveScale) {\r\n           if (havePan && haveScale) {\r\n             throw FlutterError.fromParts(<DiagnosticsNode>[\r\n               ErrorSummary('Incorrect GestureDetector arguments.'),\r\n               ErrorDescription(\r\n                 'Having both a pan gesture recognizer and a scale gesture recognizer is redundant; scale is a superset of pan.'\r\n               ),\r\n               ErrorHint('Just use the scale gesture recognizer.')\r\n             ]);\r\n           }\r\n           final String recognizer = havePan ? 'pan' : 'scale';\r\n           if (haveVerticalDrag && haveHorizontalDrag) {\r\n             throw FlutterError.fromParts(<DiagnosticsNode>[\r\n               ErrorSummary('Incorrect GestureDetector arguments.'),\r\n               ErrorDescription(\r\n                 'Simultaneously having a vertical drag gesture recognizer, a horizontal drag gesture recognizer, and a $recognizer gesture recognizer '\r\n                 'will result in the $recognizer gesture recognizer being ignored, since the other two will catch all drags.'\r\n               )\r\n             ]);\r\n           }\r\n         }\r\n         return true;\r\n       }()");
    gesture_detector.GestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector.GestureDetector.prototype;
  dart.addTypeTests(gesture_detector.GestureDetector);
  dart.setMethodSignature(gesture_detector.GestureDetector, () => ({
    __proto__: dart.getMethods(gesture_detector.GestureDetector.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(gesture_detector.GestureDetector, "package:flutter/src/widgets/gesture_detector.dart");
  dart.setFieldSignature(gesture_detector.GestureDetector, () => ({
    __proto__: dart.getFields(gesture_detector.GestureDetector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    onTapDown: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapDownDetails])),
    onTapUp: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapUpDetails])),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    onTapCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onSecondaryTapDown: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapDownDetails])),
    onSecondaryTapUp: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapUpDetails])),
    onSecondaryTapCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onDoubleTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    onLongPress: dart.finalFieldType(dart.fnType(dart.void, [])),
    onLongPressStart: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressStartDetails])),
    onLongPressMoveUpdate: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails])),
    onLongPressUp: dart.finalFieldType(dart.fnType(dart.void, [])),
    onLongPressEnd: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressEndDetails])),
    onVerticalDragDown: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragDownDetails])),
    onVerticalDragStart: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragStartDetails])),
    onVerticalDragUpdate: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragUpdateDetails])),
    onVerticalDragEnd: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragEndDetails])),
    onVerticalDragCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onHorizontalDragDown: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragDownDetails])),
    onHorizontalDragStart: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragStartDetails])),
    onHorizontalDragUpdate: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragUpdateDetails])),
    onHorizontalDragEnd: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragEndDetails])),
    onHorizontalDragCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onPanDown: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragDownDetails])),
    onPanStart: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragStartDetails])),
    onPanUpdate: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragUpdateDetails])),
    onPanEnd: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragEndDetails])),
    onPanCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onScaleStart: dart.finalFieldType(dart.fnType(dart.void, [scale.ScaleStartDetails])),
    onScaleUpdate: dart.finalFieldType(dart.fnType(dart.void, [scale.ScaleUpdateDetails])),
    onScaleEnd: dart.finalFieldType(dart.fnType(dart.void, [scale.ScaleEndDetails])),
    onForcePressStart: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    onForcePressPeak: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    onForcePressUpdate: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    onForcePressEnd: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var child$11 = dart.privateName(gesture_detector, "RawGestureDetector.child");
  var gestures$ = dart.privateName(gesture_detector, "RawGestureDetector.gestures");
  var behavior$3 = dart.privateName(gesture_detector, "RawGestureDetector.behavior");
  var excludeFromSemantics$2 = dart.privateName(gesture_detector, "RawGestureDetector.excludeFromSemantics");
  var semantics$ = dart.privateName(gesture_detector, "RawGestureDetector.semantics");
  gesture_detector.RawGestureDetector = class RawGestureDetector extends framework.StatefulWidget {
    get child() {
      return this[child$11];
    }
    set child(value) {
      super.child = value;
    }
    get gestures() {
      return this[gestures$];
    }
    set gestures(value) {
      super.gestures = value;
    }
    get behavior() {
      return this[behavior$3];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get semantics() {
      return this[semantics$];
    }
    set semantics(value) {
      super.semantics = value;
    }
    createState() {
      return new gesture_detector.RawGestureDetectorState.new();
    }
  };
  (gesture_detector.RawGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let gestures = opts && 'gestures' in opts ? opts.gestures : C76 || CT.C76;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let semantics = opts && 'semantics' in opts ? opts.semantics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$11] = child;
    this[gestures$] = gestures;
    this[behavior$3] = behavior;
    this[excludeFromSemantics$2] = excludeFromSemantics;
    this[semantics$] = semantics;
    if (!(gestures != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 805, 15, "gestures != null");
    if (!(excludeFromSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 806, 15, "excludeFromSemantics != null");
    gesture_detector.RawGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector.RawGestureDetector.prototype;
  dart.addTypeTests(gesture_detector.RawGestureDetector);
  dart.setMethodSignature(gesture_detector.RawGestureDetector, () => ({
    __proto__: dart.getMethods(gesture_detector.RawGestureDetector.__proto__),
    createState: dart.fnType(gesture_detector.RawGestureDetectorState, [])
  }));
  dart.setLibraryUri(gesture_detector.RawGestureDetector, "package:flutter/src/widgets/gesture_detector.dart");
  dart.setFieldSignature(gesture_detector.RawGestureDetector, () => ({
    __proto__: dart.getFields(gesture_detector.RawGestureDetector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    gestures: dart.finalFieldType(core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    semantics: dart.finalFieldType(gesture_detector.SemanticsGestureDelegate)
  }));
  var _recognizers = dart.privateName(gesture_detector, "_recognizers");
  var C384;
  var _semantics = dart.privateName(gesture_detector, "_semantics");
  var _syncAll = dart.privateName(gesture_detector, "_syncAll");
  var _updateSemanticsForRenderObject = dart.privateName(gesture_detector, "_updateSemanticsForRenderObject");
  var _handlePointerDown = dart.privateName(gesture_detector, "_handlePointerDown");
  var _defaultBehavior = dart.privateName(gesture_detector, "_defaultBehavior");
  var C387;
  var C388;
  var C389;
  var C386;
  var C385;
  var C392;
  var C393;
  var C391;
  var C390;
  gesture_detector.RawGestureDetectorState = class RawGestureDetectorState extends framework.State$(gesture_detector.RawGestureDetector) {
    initState() {
      let t24;
      super.initState();
      this[_semantics] = (t24 = this.widget.semantics, t24 == null ? new gesture_detector._DefaultSemanticsGestureDelegate.new(this) : t24);
      this[_syncAll](this.widget.gestures);
    }
    didUpdateWidget(oldWidget) {
      let t24;
      gesture_detector.RawGestureDetector._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!(oldWidget.semantics == null && this.widget.semantics == null)) {
        this[_semantics] = (t24 = this.widget.semantics, t24 == null ? new gesture_detector._DefaultSemanticsGestureDelegate.new(this) : t24);
      }
      this[_syncAll](this.widget.gestures);
    }
    replaceGestureRecognizers(gestures) {
      if (!dart.test(dart.fn(() => {
        if (!dart.test(this.context.findRenderObject().owner.debugDoingLayout)) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Unexpected call to replaceGestureRecognizers() method of RawGestureDetectorState."), new assertions.ErrorDescription.new("The replaceGestureRecognizers() method can only be called during the layout phase."), new assertions.ErrorHint.new("To set the gesture recognizers at other times, trigger a new build using setState() " + "and provide the new gesture recognizers as constructor arguments to the corresponding " + "RawGestureDetector or GestureDetector object.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 941, 12, "() {\r\n      if (!context.findRenderObject().owner.debugDoingLayout) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('Unexpected call to replaceGestureRecognizers() method of RawGestureDetectorState.'),\r\n          ErrorDescription('The replaceGestureRecognizers() method can only be called during the layout phase.'),\r\n          ErrorHint(\r\n            'To set the gesture recognizers at other times, trigger a new build using setState() '\r\n            'and provide the new gesture recognizers as constructor arguments to the corresponding '\r\n            'RawGestureDetector or GestureDetector object.'\r\n          )\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      this[_syncAll](gestures);
      if (!dart.test(this.widget.excludeFromSemantics)) {
        let semanticsGestureHandler = proxy_box.RenderSemanticsGestureHandler.as(this.context.findRenderObject());
        this[_updateSemanticsForRenderObject](semanticsGestureHandler);
      }
    }
    replaceSemanticsActions(actions) {
      if (dart.test(this.widget.excludeFromSemantics)) return;
      let semanticsGestureHandler = proxy_box.RenderSemanticsGestureHandler.as(this.context.findRenderObject());
      if (!dart.test(dart.fn(() => {
        if (semanticsGestureHandler == null) {
          dart.throw(assertions.FlutterError.new("Unexpected call to replaceSemanticsActions() method of RawGestureDetectorState.\n" + "The replaceSemanticsActions() method can only be called after the RenderSemanticsGestureHandler has been created."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 978, 12, "() {\r\n      if (semanticsGestureHandler == null) {\r\n        throw FlutterError(\r\n          'Unexpected call to replaceSemanticsActions() method of RawGestureDetectorState.\\n'\r\n          'The replaceSemanticsActions() method can only be called after the RenderSemanticsGestureHandler has been created.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      semanticsGestureHandler.validActions = actions;
    }
    dispose() {
      for (let recognizer of this[_recognizers][$values])
        recognizer.dispose();
      this[_recognizers] = null;
      super.dispose();
    }
    [_syncAll](gestures) {
      let t24;
      if (!(this[_recognizers] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1000, 12, "_recognizers != null");
      let oldRecognizers = this[_recognizers];
      this[_recognizers] = new (LinkedMapOfType$GestureRecognizer()).new();
      for (let type of gestures[$keys]) {
        if (!(gestures[$_get](type) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1004, 14, "gestures[type] != null");
        if (!dart.test(gestures[$_get](type)[_debugAssertTypeMatches](type))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1005, 14, "gestures[type]._debugAssertTypeMatches(type)");
        if (!!dart.test(this[_recognizers][$containsKey](type))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1006, 14, "!_recognizers.containsKey(type)");
        this[_recognizers][$_set](type, (t24 = oldRecognizers[$_get](type), t24 == null ? gestures[$_get](type)._constructor() : t24));
        if (!dart.equals(dart.runtimeType(this[_recognizers][$_get](type)), type)) dart.assertFailed("GestureRecognizerFactory of type " + dart.str(type) + " created a GestureRecognizer of type " + dart.str(dart.runtimeType(this[_recognizers][$_get](type))) + ". The GestureRecognizerFactory must be specialized with the type of the class that it returns from its constructor method.", "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1008, 14, "_recognizers[type].runtimeType == type");
        gestures[$_get](type).initializer(this[_recognizers][$_get](type));
      }
      for (let type of oldRecognizers[$keys]) {
        if (!dart.test(this[_recognizers][$containsKey](type))) oldRecognizers[$_get](type).dispose();
      }
    }
    [_handlePointerDown](event) {
      if (!(this[_recognizers] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1018, 12, "_recognizers != null");
      for (let recognizer of this[_recognizers][$values])
        recognizer.addPointer(event);
    }
    get [_defaultBehavior]() {
      return this.widget.child == null ? proxy_box.HitTestBehavior.translucent : proxy_box.HitTestBehavior.deferToChild;
    }
    [_updateSemanticsForRenderObject](renderObject) {
      if (!!dart.test(this.widget.excludeFromSemantics)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1028, 12, "!widget.excludeFromSemantics");
      if (!(this[_semantics] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1029, 12, "_semantics != null");
      this[_semantics].assignSemantics(renderObject);
    }
    build(context) {
      let t24;
      let result = new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown), behavior: (t24 = this.widget.behavior, t24 == null ? this[_defaultBehavior] : t24), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C385 || CT.C385});
      if (!dart.test(this.widget.excludeFromSemantics)) result = new gesture_detector._GestureSemantics.new({child: result, assignSemantics: dart.bind(this, _updateSemanticsForRenderObject), $creationLocationd_0dea112b090073317d4: C390 || CT.C390});
      return result;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      if (this[_recognizers] == null) {
        properties.add(diagnostics$.DiagnosticsNode.message("DISPOSED"));
      } else {
        let gestures = this[_recognizers][$values][$map](core.String, dart.fn(recognizer => recognizer.debugDescription, GestureRecognizerToString()))[$toList]();
        properties.add(new (IterablePropertyOfString()).new("gestures", gestures, {ifEmpty: "<none>"}));
        properties.add(new (IterablePropertyOfGestureRecognizer()).new("recognizers", this[_recognizers][$values], {level: diagnostics$.DiagnosticLevel.fine}));
        properties.add(new (DiagnosticsPropertyOfbool()).new("excludeFromSemantics", this.widget.excludeFromSemantics, {defaultValue: false}));
        if (!dart.test(this.widget.excludeFromSemantics)) {
          properties.add(new (DiagnosticsPropertyOfSemanticsGestureDelegate()).new("semantics", this.widget.semantics, {defaultValue: null}));
        }
      }
      properties.add(new (EnumPropertyOfHitTestBehavior()).new("behavior", this.widget.behavior, {defaultValue: null}));
    }
  };
  (gesture_detector.RawGestureDetectorState.new = function() {
    this[_recognizers] = C384 || CT.C384;
    this[_semantics] = null;
    gesture_detector.RawGestureDetectorState.__proto__.new.call(this);
    ;
  }).prototype = gesture_detector.RawGestureDetectorState.prototype;
  dart.addTypeTests(gesture_detector.RawGestureDetectorState);
  dart.setMethodSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getMethods(gesture_detector.RawGestureDetectorState.__proto__),
    replaceGestureRecognizers: dart.fnType(dart.void, [core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))]),
    replaceSemanticsActions: dart.fnType(dart.void, [core.Set$(ui.SemanticsAction)]),
    [_syncAll]: dart.fnType(dart.void, [core.Map$(core.Type, gesture_detector.GestureRecognizerFactory$(recognizer.GestureRecognizer))]),
    [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_updateSemanticsForRenderObject]: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getGetters(gesture_detector.RawGestureDetectorState.__proto__),
    [_defaultBehavior]: proxy_box.HitTestBehavior
  }));
  dart.setLibraryUri(gesture_detector.RawGestureDetectorState, "package:flutter/src/widgets/gesture_detector.dart");
  dart.setFieldSignature(gesture_detector.RawGestureDetectorState, () => ({
    __proto__: dart.getFields(gesture_detector.RawGestureDetectorState.__proto__),
    [_recognizers]: dart.fieldType(core.Map$(core.Type, recognizer.GestureRecognizer)),
    [_semantics]: dart.fieldType(gesture_detector.SemanticsGestureDelegate)
  }));
  var assignSemantics$ = dart.privateName(gesture_detector, "_GestureSemantics.assignSemantics");
  gesture_detector._GestureSemantics = class _GestureSemantics extends framework.SingleChildRenderObjectWidget {
    get assignSemantics() {
      return this[assignSemantics$];
    }
    set assignSemantics(value) {
      super.assignSemantics = value;
    }
    createRenderObject(context) {
      let renderObject = new proxy_box.RenderSemanticsGestureHandler.new();
      this.assignSemantics(renderObject);
      return renderObject;
    }
    updateRenderObject(context, renderObject) {
      proxy_box.RenderSemanticsGestureHandler._check(renderObject);
      this.assignSemantics(renderObject);
    }
  };
  (gesture_detector._GestureSemantics.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let assignSemantics = opts && 'assignSemantics' in opts ? opts.assignSemantics : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[assignSemantics$] = assignSemantics;
    if (!(assignSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1073, 15, "assignSemantics != null");
    gesture_detector._GestureSemantics.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = gesture_detector._GestureSemantics.prototype;
  dart.addTypeTests(gesture_detector._GestureSemantics);
  dart.setMethodSignature(gesture_detector._GestureSemantics, () => ({
    __proto__: dart.getMethods(gesture_detector._GestureSemantics.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderSemanticsGestureHandler, [framework.BuildContext])
  }));
  dart.setLibraryUri(gesture_detector._GestureSemantics, "package:flutter/src/widgets/gesture_detector.dart");
  dart.setFieldSignature(gesture_detector._GestureSemantics, () => ({
    __proto__: dart.getFields(gesture_detector._GestureSemantics.__proto__),
    assignSemantics: dart.finalFieldType(dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]))
  }));
  gesture_detector.SemanticsGestureDelegate = class SemanticsGestureDelegate extends core.Object {
    toString() {
      return dart.str(object.objectRuntimeType(this, "SemanticsGestureDelegate")) + "()";
    }
  };
  (gesture_detector.SemanticsGestureDelegate.new = function() {
    ;
  }).prototype = gesture_detector.SemanticsGestureDelegate.prototype;
  dart.addTypeTests(gesture_detector.SemanticsGestureDelegate);
  dart.setLibraryUri(gesture_detector.SemanticsGestureDelegate, "package:flutter/src/widgets/gesture_detector.dart");
  dart.defineExtensionMethods(gesture_detector.SemanticsGestureDelegate, ['toString']);
  var _getTapHandler = dart.privateName(gesture_detector, "_getTapHandler");
  var _getLongPressHandler = dart.privateName(gesture_detector, "_getLongPressHandler");
  var _getHorizontalDragUpdateHandler = dart.privateName(gesture_detector, "_getHorizontalDragUpdateHandler");
  var _getVerticalDragUpdateHandler = dart.privateName(gesture_detector, "_getVerticalDragUpdateHandler");
  var LongPressStartDetails_localPosition = dart.privateName(long_press, "LongPressStartDetails.localPosition");
  var LongPressStartDetails_globalPosition = dart.privateName(long_press, "LongPressStartDetails.globalPosition");
  var C394;
  var Velocity_pixelsPerSecond = dart.privateName(velocity_tracker, "Velocity.pixelsPerSecond");
  var C396;
  var LongPressEndDetails_velocity = dart.privateName(long_press, "LongPressEndDetails.velocity");
  var LongPressEndDetails_localPosition = dart.privateName(long_press, "LongPressEndDetails.localPosition");
  var LongPressEndDetails_globalPosition = dart.privateName(long_press, "LongPressEndDetails.globalPosition");
  var C395;
  gesture_detector._DefaultSemanticsGestureDelegate = class _DefaultSemanticsGestureDelegate extends gesture_detector.SemanticsGestureDelegate {
    assignSemantics(renderObject) {
      let t24;
      if (!!dart.test(this.detectorState.widget.excludeFromSemantics)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1128, 12, "!detectorState.widget.excludeFromSemantics");
      let recognizers = this.detectorState[_recognizers];
      t24 = renderObject;
      t24.onTap = this[_getTapHandler](recognizers);
      t24.onLongPress = this[_getLongPressHandler](recognizers);
      t24.onHorizontalDragUpdate = this[_getHorizontalDragUpdateHandler](recognizers);
      t24.onVerticalDragUpdate = this[_getVerticalDragUpdateHandler](recognizers);
      t24;
    }
    [_getTapHandler](recognizers) {
      let tap = tap$.TapGestureRecognizer.as(recognizers[$_get](dart.wrapType(tap$.TapGestureRecognizer)));
      if (tap == null) return null;
      if (!tap$.TapGestureRecognizer.is(tap)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1141, 12, "tap is TapGestureRecognizer");
      return dart.fn(() => {
        if (!(tap != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1144, 14, "tap != null");
        if (tap.onTapDown != null) tap.onTapDown(new tap$.TapDownDetails.new());
        if (tap.onTapUp != null) tap.onTapUp(new tap$.TapUpDetails.new());
        if (tap.onTap != null) tap.onTap();
      }, VoidToNull());
    }
    [_getLongPressHandler](recognizers) {
      let longPress = long_press.LongPressGestureRecognizer.as(recognizers[$_get](dart.wrapType(long_press.LongPressGestureRecognizer)));
      if (longPress == null) return null;
      return dart.fn(() => {
        if (!long_press.LongPressGestureRecognizer.is(longPress)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1160, 14, "longPress is LongPressGestureRecognizer");
        if (longPress.onLongPressStart != null) longPress.onLongPressStart(C394 || CT.C394);
        if (longPress.onLongPress != null) longPress.onLongPress();
        if (longPress.onLongPressEnd != null) longPress.onLongPressEnd(C395 || CT.C395);
        if (longPress.onLongPressUp != null) longPress.onLongPressUp();
      }, VoidToNull());
    }
    [_getHorizontalDragUpdateHandler](recognizers) {
      let horizontal = monodrag.HorizontalDragGestureRecognizer.as(recognizers[$_get](dart.wrapType(monodrag.HorizontalDragGestureRecognizer)));
      let pan = monodrag.PanGestureRecognizer.as(recognizers[$_get](dart.wrapType(monodrag.PanGestureRecognizer)));
      let horizontalHandler = horizontal == null ? null : dart.fn(details => {
        if (!monodrag.HorizontalDragGestureRecognizer.is(horizontal)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1179, 16, "horizontal is HorizontalDragGestureRecognizer");
        if (horizontal.onDown != null) horizontal.onDown(new drag_details.DragDownDetails.new());
        if (horizontal.onStart != null) horizontal.onStart(new drag_details.DragStartDetails.new());
        if (horizontal.onUpdate != null) horizontal.onUpdate(details);
        if (horizontal.onEnd != null) horizontal.onEnd(new drag_details.DragEndDetails.new({primaryVelocity: 0.0}));
      }, DragUpdateDetailsToNull());
      let panHandler = pan == null ? null : dart.fn(details => {
        if (!monodrag.PanGestureRecognizer.is(pan)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1193, 16, "pan is PanGestureRecognizer");
        if (pan.onDown != null) pan.onDown(new drag_details.DragDownDetails.new());
        if (pan.onStart != null) pan.onStart(new drag_details.DragStartDetails.new());
        if (pan.onUpdate != null) pan.onUpdate(details);
        if (pan.onEnd != null) pan.onEnd(new drag_details.DragEndDetails.new());
      }, DragUpdateDetailsToNull());
      if (horizontalHandler == null && panHandler == null) return null;
      return dart.fn(details => {
        if (horizontalHandler != null) horizontalHandler(details);
        if (panHandler != null) panHandler(details);
      }, DragUpdateDetailsToNull());
    }
    [_getVerticalDragUpdateHandler](recognizers) {
      let vertical = monodrag.VerticalDragGestureRecognizer.as(recognizers[$_get](dart.wrapType(monodrag.VerticalDragGestureRecognizer)));
      let pan = monodrag.PanGestureRecognizer.as(recognizers[$_get](dart.wrapType(monodrag.PanGestureRecognizer)));
      let verticalHandler = vertical == null ? null : dart.fn(details => {
        if (!monodrag.VerticalDragGestureRecognizer.is(vertical)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1221, 16, "vertical is VerticalDragGestureRecognizer");
        if (vertical.onDown != null) vertical.onDown(new drag_details.DragDownDetails.new());
        if (vertical.onStart != null) vertical.onStart(new drag_details.DragStartDetails.new());
        if (vertical.onUpdate != null) vertical.onUpdate(details);
        if (vertical.onEnd != null) vertical.onEnd(new drag_details.DragEndDetails.new({primaryVelocity: 0.0}));
      }, DragUpdateDetailsToNull());
      let panHandler = pan == null ? null : dart.fn(details => {
        if (!monodrag.PanGestureRecognizer.is(pan)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/gesture_detector.dart", 1235, 16, "pan is PanGestureRecognizer");
        if (pan.onDown != null) pan.onDown(new drag_details.DragDownDetails.new());
        if (pan.onStart != null) pan.onStart(new drag_details.DragStartDetails.new());
        if (pan.onUpdate != null) pan.onUpdate(details);
        if (pan.onEnd != null) pan.onEnd(new drag_details.DragEndDetails.new());
      }, DragUpdateDetailsToNull());
      if (verticalHandler == null && panHandler == null) return null;
      return dart.fn(details => {
        if (verticalHandler != null) verticalHandler(details);
        if (panHandler != null) panHandler(details);
      }, DragUpdateDetailsToNull());
    }
  };
  (gesture_detector._DefaultSemanticsGestureDelegate.new = function(detectorState) {
    this.detectorState = detectorState;
    gesture_detector._DefaultSemanticsGestureDelegate.__proto__.new.call(this);
    ;
  }).prototype = gesture_detector._DefaultSemanticsGestureDelegate.prototype;
  dart.addTypeTests(gesture_detector._DefaultSemanticsGestureDelegate);
  dart.setMethodSignature(gesture_detector._DefaultSemanticsGestureDelegate, () => ({
    __proto__: dart.getMethods(gesture_detector._DefaultSemanticsGestureDelegate.__proto__),
    assignSemantics: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler]),
    [_getTapHandler]: dart.fnType(dart.fnType(dart.void, []), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getLongPressHandler]: dart.fnType(dart.fnType(dart.void, []), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getHorizontalDragUpdateHandler]: dart.fnType(dart.fnType(dart.void, [drag_details.DragUpdateDetails]), [core.Map$(core.Type, recognizer.GestureRecognizer)]),
    [_getVerticalDragUpdateHandler]: dart.fnType(dart.fnType(dart.void, [drag_details.DragUpdateDetails]), [core.Map$(core.Type, recognizer.GestureRecognizer)])
  }));
  dart.setLibraryUri(gesture_detector._DefaultSemanticsGestureDelegate, "package:flutter/src/widgets/gesture_detector.dart");
  dart.setFieldSignature(gesture_detector._DefaultSemanticsGestureDelegate, () => ({
    __proto__: dart.getFields(gesture_detector._DefaultSemanticsGestureDelegate.__proto__),
    detectorState: dart.finalFieldType(gesture_detector.RawGestureDetectorState)
  }));
  debug$0._firstNonUniqueKey = function _firstNonUniqueKey(widgets) {
    let keySet = new (_HashSetOfKey()).new();
    for (let widget of widgets) {
      if (!(widget != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 112, 12, "widget != null");
      if (widget.key == null) continue;
      if (!dart.test(keySet.add(widget.key))) return widget.key;
    }
    return null;
  };
  debug$0.debugChildrenHaveDuplicateKeys = function debugChildrenHaveDuplicateKeys(parent, children) {
    if (!dart.test(dart.fn(() => {
      let nonUniqueKey = debug$0._firstNonUniqueKey(children);
      if (nonUniqueKey != null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Duplicate keys found."), new assertions.ErrorDescription.new("If multiple keyed nodes exist as children of another node, they must have unique keys.\n" + dart.str(parent) + " has multiple children with key " + dart.str(nonUniqueKey) + ".")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 136, 10, "() {\r\n    final Key nonUniqueKey = _firstNonUniqueKey(children);\r\n    if (nonUniqueKey != null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('Duplicate keys found.'),\r\n        ErrorDescription(\r\n          'If multiple keyed nodes exist as children of another node, they must have unique keys.\\n'\r\n          '$parent has multiple children with key $nonUniqueKey.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return false;
  };
  debug$0.debugItemsHaveDuplicateKeys = function debugItemsHaveDuplicateKeys(items) {
    if (!dart.test(dart.fn(() => {
      let nonUniqueKey = debug$0._firstNonUniqueKey(items);
      if (nonUniqueKey != null) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Duplicate key found: " + dart.str(nonUniqueKey) + ".")])));
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 165, 10, "() {\r\n    final Key nonUniqueKey = _firstNonUniqueKey(items);\r\n    if (nonUniqueKey != null)\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('Duplicate key found: $nonUniqueKey.'),\r\n      ]);\r\n    return true;\r\n  }()");
    return false;
  };
  debug$0.debugCheckHasTable = function debugCheckHasTable(context) {
    if (!dart.test(dart.fn(() => {
      if (!table$.Table.is(context.widget) && context.findAncestorWidgetOfExactType(table$.Table) == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Table widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Table widget ancestor."), context.describeWidget("The specific widget that could not find a Table ancestor was"), context.describeOwnershipChain("The ownership chain for the affected widget is")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 189, 10, "() {\r\n    if (context.widget is! Table && context.findAncestorWidgetOfExactType<Table>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Table widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Table widget ancestor.'),\r\n        context.describeWidget('The specific widget that could not find a Table ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasMediaQuery = function debugCheckHasMediaQuery(context) {
    if (!dart.test(dart.fn(() => {
      if (!media_query.MediaQuery.is(context.widget) && context.findAncestorWidgetOfExactType(media_query.MediaQuery) == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No MediaQuery widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a MediaQuery widget ancestor."), context.describeWidget("The specific widget that could not find a MediaQuery ancestor was"), context.describeOwnershipChain("The ownership chain for the affected widget is"), new assertions.ErrorHint.new("Typically, the MediaQuery widget is introduced by the MaterialApp or " + "WidgetsApp widget at the top of your application widget tree.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 217, 10, "() {\r\n    if (context.widget is! MediaQuery && context.findAncestorWidgetOfExactType<MediaQuery>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No MediaQuery widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a MediaQuery widget ancestor.'),\r\n        context.describeWidget('The specific widget that could not find a MediaQuery ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n        ErrorHint(\r\n          'Typically, the MediaQuery widget is introduced by the MaterialApp or '\r\n          'WidgetsApp widget at the top of your application widget tree.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugCheckHasDirectionality = function debugCheckHasDirectionality(context) {
    if (!dart.test(dart.fn(() => {
      if (!basic.Directionality.is(context.widget) && context.findAncestorWidgetOfExactType(basic.Directionality) == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Directionality widget found."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(context.widget)) + " widgets require a Directionality widget ancestor.\n"), context.describeWidget("The specific widget that could not find a Directionality ancestor was"), context.describeOwnershipChain("The ownership chain for the affected widget is"), new assertions.ErrorHint.new("Typically, the Directionality widget is introduced by the MaterialApp " + "or WidgetsApp widget at the top of your application widget tree. It " + "determines the ambient reading direction and is used, for example, to " + "determine how to lay out text, how to interpret \"start\" and \"end\" " + "values, and to resolve EdgeInsetsDirectional, " + "AlignmentDirectional, and other *Directional objects.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 249, 10, "() {\r\n    if (context.widget is! Directionality && context.findAncestorWidgetOfExactType<Directionality>() == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No Directionality widget found.'),\r\n        ErrorDescription('${context.widget.runtimeType} widgets require a Directionality widget ancestor.\\n'),\r\n        context.describeWidget('The specific widget that could not find a Directionality ancestor was'),\r\n        context.describeOwnershipChain('The ownership chain for the affected widget is'),\r\n        ErrorHint(\r\n          'Typically, the Directionality widget is introduced by the MaterialApp '\r\n          'or WidgetsApp widget at the top of your application widget tree. It '\r\n          'determines the ambient reading direction and is used, for example, to '\r\n          'determine how to lay out text, how to interpret \"start\" and \"end\" '\r\n          'values, and to resolve EdgeInsetsDirectional, '\r\n          'AlignmentDirectional, and other *Directional objects.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  debug$0.debugWidgetBuilderValue = function debugWidgetBuilderValue(widget, built) {
    if (!dart.test(dart.fn(() => {
      if (built == null) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A build function returned null."), new (DiagnosticsPropertyOfWidget()).new("The offending widget is", widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("Build functions must never return null."), new assertions.ErrorHint.new("To return an empty space that causes the building widget to fill available room, return \"Container()\". " + "To return an empty space that takes as little room as possible, return \"Container(width: 0.0, height: 0.0)\".")])));
      }
      if (dart.equals(widget, built)) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A build function returned context.widget."), new (DiagnosticsPropertyOfWidget()).new("The offending widget is", widget, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new assertions.ErrorDescription.new("Build functions must never return their BuildContext parameter's widget or a child that contains \"context.widget\". " + "Doing so introduces a loop in the widget tree that can cause the app to crash.")])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 278, 10, "() {\r\n    if (built == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('A build function returned null.'),\r\n        DiagnosticsProperty<Widget>('The offending widget is', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n        ErrorDescription('Build functions must never return null.'),\r\n        ErrorHint(\r\n          'To return an empty space that causes the building widget to fill available room, return \"Container()\". '\r\n          'To return an empty space that takes as little room as possible, return \"Container(width: 0.0, height: 0.0)\".'\r\n        ),\r\n      ]);\r\n    }\r\n    if (widget == built) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('A build function returned context.widget.'),\r\n        DiagnosticsProperty<Widget>('The offending widget is', widget, style: DiagnosticsTreeStyle.errorProperty),\r\n        ErrorDescription(\r\n          'Build functions must never return their BuildContext parameter\\'s widget or a child that contains \"context.widget\". '\r\n          'Doing so introduces a loop in the widget tree that can cause the app to crash.'\r\n        ),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
  };
  debug$0.debugAssertAllWidgetVarsUnset = function debugAssertAllWidgetVarsUnset(reason) {
    if (!dart.test(dart.fn(() => {
      if (dart.test(debug$0.debugPrintRebuildDirtyWidgets) || dart.test(debug$0.debugPrintBuildScope) || dart.test(debug$0.debugPrintScheduleBuildForStacks) || dart.test(debug$0.debugPrintGlobalKeyedWidgetLifecycle) || dart.test(debug$0.debugProfileBuildsEnabled) || dart.test(debug$0.debugHighlightDeprecatedWidgets)) {
        dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(reason)])));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/debug.dart", 311, 10, "() {\r\n    if (debugPrintRebuildDirtyWidgets ||\r\n        debugPrintBuildScope ||\r\n        debugPrintScheduleBuildForStacks ||\r\n        debugPrintGlobalKeyedWidgetLifecycle ||\r\n        debugProfileBuildsEnabled ||\r\n        debugHighlightDeprecatedWidgets) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[ErrorSummary(reason)]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  dart.defineLazy(debug$0, {
    /*debug$0.debugPrintRebuildDirtyWidgets*/get debugPrintRebuildDirtyWidgets() {
      return false;
    },
    set debugPrintRebuildDirtyWidgets(_) {},
    /*debug$0.debugOnRebuildDirtyWidget*/get debugOnRebuildDirtyWidget() {
      return null;
    },
    set debugOnRebuildDirtyWidget(_) {},
    /*debug$0.debugPrintBuildScope*/get debugPrintBuildScope() {
      return false;
    },
    set debugPrintBuildScope(_) {},
    /*debug$0.debugPrintScheduleBuildForStacks*/get debugPrintScheduleBuildForStacks() {
      return false;
    },
    set debugPrintScheduleBuildForStacks(_) {},
    /*debug$0.debugPrintGlobalKeyedWidgetLifecycle*/get debugPrintGlobalKeyedWidgetLifecycle() {
      return false;
    },
    set debugPrintGlobalKeyedWidgetLifecycle(_) {},
    /*debug$0.debugProfileBuildsEnabled*/get debugProfileBuildsEnabled() {
      return false;
    },
    set debugProfileBuildsEnabled(_) {},
    /*debug$0.debugHighlightDeprecatedWidgets*/get debugHighlightDeprecatedWidgets() {
      return false;
    },
    set debugHighlightDeprecatedWidgets(_) {}
  });
  var key$1 = dart.privateName(table$, "TableRow.key");
  var decoration$1 = dart.privateName(table$, "TableRow.decoration");
  var children$0 = dart.privateName(table$, "TableRow.children");
  table$.TableRow = class TableRow extends core.Object {
    get key() {
      return this[key$1];
    }
    set key(value) {
      super.key = value;
    }
    get decoration() {
      return this[decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get children() {
      return this[children$0];
    }
    set children(value) {
      super.children = value;
    }
    toString() {
      let result = new core.StringBuffer.new();
      result.write("TableRow(");
      if (this.key != null) result.write(dart.str(this.key) + ", ");
      if (this.decoration != null) result.write(dart.str(this.decoration) + ", ");
      if (this.children == null) {
        result.write("child list is null");
      } else if (dart.test(this.children[$isEmpty])) {
        result.write("no children");
      } else {
        result.write(dart.str(this.children));
      }
      result.write(")");
      return result.toString();
    }
  };
  (table$.TableRow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let children = opts && 'children' in opts ? opts.children : null;
    this[key$1] = key;
    this[decoration$1] = decoration;
    this[children$0] = children;
    ;
  }).prototype = table$.TableRow.prototype;
  dart.addTypeTests(table$.TableRow);
  dart.setLibraryUri(table$.TableRow, "package:flutter/src/widgets/table.dart");
  dart.setFieldSignature(table$.TableRow, () => ({
    __proto__: dart.getFields(table$.TableRow.__proto__),
    key: dart.finalFieldType(key.LocalKey),
    decoration: dart.finalFieldType(decoration.Decoration),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  dart.defineExtensionMethods(table$.TableRow, ['toString']);
  var key$2 = dart.privateName(table$, "_TableElementRow.key");
  var children$1 = dart.privateName(table$, "_TableElementRow.children");
  table$._TableElementRow = class _TableElementRow extends core.Object {
    get key() {
      return this[key$2];
    }
    set key(value) {
      super.key = value;
    }
    get children() {
      return this[children$1];
    }
    set children(value) {
      super.children = value;
    }
  };
  (table$._TableElementRow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    this[key$2] = key;
    this[children$1] = children;
    ;
  }).prototype = table$._TableElementRow.prototype;
  dart.addTypeTests(table$._TableElementRow);
  dart.setLibraryUri(table$._TableElementRow, "package:flutter/src/widgets/table.dart");
  dart.setFieldSignature(table$._TableElementRow, () => ({
    __proto__: dart.getFields(table$._TableElementRow.__proto__),
    key: dart.finalFieldType(key.LocalKey),
    children: dart.finalFieldType(core.List$(framework.Element))
  }));
  var C397;
  var FlexColumnWidth_value = dart.privateName(table, "FlexColumnWidth.value");
  var C398;
  var _name$19 = dart.privateName(table, "_name");
  var C399;
  var _rowDecorations = dart.privateName(table$, "_rowDecorations");
  var children$2 = dart.privateName(table$, "Table.children");
  var columnWidths$ = dart.privateName(table$, "Table.columnWidths");
  var defaultColumnWidth$ = dart.privateName(table$, "Table.defaultColumnWidth");
  var textDirection$5 = dart.privateName(table$, "Table.textDirection");
  var border$ = dart.privateName(table$, "Table.border");
  var defaultVerticalAlignment$ = dart.privateName(table$, "Table.defaultVerticalAlignment");
  var textBaseline$0 = dart.privateName(table$, "Table.textBaseline");
  table$.Table = class Table extends framework.RenderObjectWidget {
    get children() {
      return this[children$2];
    }
    set children(value) {
      super.children = value;
    }
    get columnWidths() {
      return this[columnWidths$];
    }
    set columnWidths(value) {
      super.columnWidths = value;
    }
    get defaultColumnWidth() {
      return this[defaultColumnWidth$];
    }
    set defaultColumnWidth(value) {
      super.defaultColumnWidth = value;
    }
    get textDirection() {
      return this[textDirection$5];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get defaultVerticalAlignment() {
      return this[defaultVerticalAlignment$];
    }
    set defaultVerticalAlignment(value) {
      super.defaultVerticalAlignment = value;
    }
    get textBaseline() {
      return this[textBaseline$0];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    createElement() {
      return new table$._TableElement.new(this);
    }
    createRenderObject(context) {
      let t24;
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 207, 12, "debugCheckHasDirectionality(context)");
      return new table.RenderTable.new({columns: dart.test(this.children[$isNotEmpty]) ? this.children[$_get](0).children[$length] : 0, rows: this.children[$length], columnWidths: this.columnWidths, defaultColumnWidth: this.defaultColumnWidth, textDirection: (t24 = this.textDirection, t24 == null ? basic.Directionality.of(context) : t24), border: this.border, rowDecorations: this[_rowDecorations], configuration: image$.createLocalImageConfiguration(context), defaultVerticalAlignment: this.defaultVerticalAlignment, textBaseline: this.textBaseline});
    }
    updateRenderObject(context, renderObject) {
      let t25, t24;
      table.RenderTable._check(renderObject);
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 224, 12, "debugCheckHasDirectionality(context)");
      if (!(renderObject.columns == (dart.test(this.children[$isNotEmpty]) ? this.children[$_get](0).children[$length] : 0))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 225, 12, "renderObject.columns == (children.isNotEmpty ? children[0].children.length : 0)");
      if (!(renderObject.rows == this.children[$length])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 226, 12, "renderObject.rows == children.length");
      t24 = renderObject;
      t24.columnWidths = this.columnWidths;
      t24.defaultColumnWidth = this.defaultColumnWidth;
      t24.textDirection = (t25 = this.textDirection, t25 == null ? basic.Directionality.of(context) : t25);
      t24.border = this.border;
      t24.rowDecorations = this[_rowDecorations];
      t24.configuration = image$.createLocalImageConfiguration(context);
      t24.defaultVerticalAlignment = this.defaultVerticalAlignment;
      t24.textBaseline = this.textBaseline;
      t24;
    }
  };
  (table$.Table.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : C397 || CT.C397;
    let columnWidths = opts && 'columnWidths' in opts ? opts.columnWidths : null;
    let defaultColumnWidth = opts && 'defaultColumnWidth' in opts ? opts.defaultColumnWidth : C398 || CT.C398;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let defaultVerticalAlignment = opts && 'defaultVerticalAlignment' in opts ? opts.defaultVerticalAlignment : C399 || CT.C399;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[children$2] = children;
    this[columnWidths$] = columnWidths;
    this[defaultColumnWidth$] = defaultColumnWidth;
    this[textDirection$5] = textDirection;
    this[border$] = border;
    this[defaultVerticalAlignment$] = defaultVerticalAlignment;
    this[textBaseline$0] = textBaseline;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 107, 15, "children != null");
    if (!(defaultColumnWidth != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 108, 15, "defaultColumnWidth != null");
    if (!(defaultVerticalAlignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 109, 15, "defaultVerticalAlignment != null");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$any](dart.fn(row => row.children[$any](dart.fn(cell => cell == null, WidgetTobool())), TableRowTobool())))) {
        dart.throw(assertions.FlutterError.new("One of the children of one of the rows of the table was null.\n" + "The children of a TableRow must not be null."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 110, 15, "() {\r\n         if (children.any((TableRow row) => row.children.any((Widget cell) => cell == null))) {\r\n           throw FlutterError(\r\n             'One of the children of one of the rows of the table was null.\\n'\r\n             'The children of a TableRow must not be null.'\r\n           );\r\n         }\r\n         return true;\r\n       }()");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$any](dart.fn(row1 => row1.key != null && dart.test(children[$any](dart.fn(row2 => !dart.equals(row1, row2) && dart.equals(row1.key, row2.key), TableRowTobool()))), TableRowTobool())))) {
        dart.throw(assertions.FlutterError.new("Two or more TableRow children of this Table had the same key.\n" + "All the keyed TableRow children of a Table must have different Keys."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 119, 15, "() {\r\n         if (children.any((TableRow row1) => row1.key != null && children.any((TableRow row2) => row1 != row2 && row1.key == row2.key))) {\r\n           throw FlutterError(\r\n             'Two or more TableRow children of this Table had the same key.\\n'\r\n             'All the keyed TableRow children of a Table must have different Keys.'\r\n           );\r\n         }\r\n         return true;\r\n       }()");
    if (!dart.test(dart.fn(() => {
      if (dart.test(children[$isNotEmpty])) {
        let cellCount = children[$first].children[$length];
        if (dart.test(children[$any](dart.fn(row => row.children[$length] != cellCount, TableRowTobool())))) {
          dart.throw(assertions.FlutterError.new("Table contains irregular row lengths.\n" + "Every TableRow in a Table must have the same number of children, so that every cell is filled. " + "Otherwise, the table will contain holes."));
        }
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 128, 15, "() {\r\n         if (children.isNotEmpty) {\r\n           final int cellCount = children.first.children.length;\r\n           if (children.any((TableRow row) => row.children.length != cellCount)) {\r\n             throw FlutterError(\r\n               'Table contains irregular row lengths.\\n'\r\n               'Every TableRow in a Table must have the same number of children, so that every cell is filled. '\r\n               'Otherwise, the table will contain holes.'\r\n             );\r\n           }\r\n         }\r\n         return true;\r\n       }()");
    this[_rowDecorations] = dart.test(children[$any](dart.fn(row => row.decoration != null, TableRowTobool()))) ? children[$map](decoration.Decoration, dart.fn(row => row.decoration, TableRowToDecoration()))[$toList]({growable: false}) : null;
    table$.Table.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    if (!dart.test(dart.fn(() => {
      let flatChildren = this.children[$expand](framework.Widget, dart.fn(row => row.children, TableRowToListOfWidget()))[$toList]({growable: false});
      if (dart.test(debug$0.debugChildrenHaveDuplicateKeys(this, flatChildren))) {
        dart.throw(assertions.FlutterError.new("Two or more cells in this Table contain widgets with the same key.\n" + "Every widget child of every TableRow in a Table must have different keys. The cells of a Table are " + "flattened out for processing, so separate cells cannot have duplicate keys even if they are in " + "different rows."));
      }
      return true;
    }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 145, 12, "() {\r\n      final List<Widget> flatChildren = children.expand<Widget>((TableRow row) => row.children).toList(growable: false);\r\n      if (debugChildrenHaveDuplicateKeys(this, flatChildren)) {\r\n        throw FlutterError(\r\n          'Two or more cells in this Table contain widgets with the same key.\\n'\r\n          'Every widget child of every TableRow in a Table must have different keys. The cells of a Table are '\r\n          'flattened out for processing, so separate cells cannot have duplicate keys even if they are in '\r\n          'different rows.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
  }).prototype = table$.Table.prototype;
  dart.addTypeTests(table$.Table);
  dart.setMethodSignature(table$.Table, () => ({
    __proto__: dart.getMethods(table$.Table.__proto__),
    createElement: dart.fnType(table$._TableElement, []),
    createRenderObject: dart.fnType(table.RenderTable, [framework.BuildContext])
  }));
  dart.setLibraryUri(table$.Table, "package:flutter/src/widgets/table.dart");
  dart.setFieldSignature(table$.Table, () => ({
    __proto__: dart.getFields(table$.Table.__proto__),
    children: dart.finalFieldType(core.List$(table$.TableRow)),
    columnWidths: dart.finalFieldType(core.Map$(core.int, table.TableColumnWidth)),
    defaultColumnWidth: dart.finalFieldType(table.TableColumnWidth),
    textDirection: dart.finalFieldType(ui.TextDirection),
    border: dart.finalFieldType(table_border.TableBorder),
    defaultVerticalAlignment: dart.finalFieldType(table.TableCellVerticalAlignment),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    [_rowDecorations]: dart.finalFieldType(core.List$(decoration.Decoration))
  }));
  var _children$0 = dart.privateName(table$, "_children");
  var C400;
  var _forgottenChildren$ = dart.privateName(table$, "_forgottenChildren");
  var _updateRenderObjectChildren = dart.privateName(table$, "_updateRenderObjectChildren");
  var C401;
  table$._TableElement = class _TableElement extends framework.RenderObjectElement {
    get widget() {
      return table$.Table.as(super.widget);
    }
    get renderObject() {
      return table.RenderTable.as(super.renderObject);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_children$0] = this.widget.children[$map](table$._TableElementRow, dart.fn(row => new table$._TableElementRow.new({key: row.key, children: row.children[$map](framework.Element, dart.fn(child => {
          if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 260, 18, "child != null");
          return this.inflateWidget(child, null);
        }, WidgetToElement()))[$toList]({growable: false})}), TableRowTo_TableElementRow()))[$toList]({growable: false});
      this[_updateRenderObjectChildren]();
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      framework.Element._check(slot);
      this.renderObject.setupParentData(child);
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      let childParentData = table.TableCellParentData.as(child.parentData);
      this.renderObject.setChild(childParentData.x, childParentData.y, null);
    }
    update(newWidget) {
      table$.Table._check(newWidget);
      let oldKeyedRows = new (LinkedMapOfLocalKey$ListOfElement()).new();
      for (let row of this[_children$0]) {
        if (row.key != null) {
          oldKeyedRows[$_set](row.key, row.children);
        }
      }
      let oldUnkeyedRows = this[_children$0][$where](dart.fn(row => row.key == null, _TableElementRowTobool()))[$iterator];
      let newChildren = JSArrayOf_TableElementRow().of([]);
      let taken = LinkedHashSetOfListOfElement().new();
      for (let row of newWidget.children) {
        let oldChildren = null;
        if (row.key != null && dart.test(oldKeyedRows[$containsKey](row.key))) {
          oldChildren = oldKeyedRows[$_get](row.key);
          taken.add(oldChildren);
        } else if (row.key == null && dart.test(oldUnkeyedRows.moveNext())) {
          oldChildren = oldUnkeyedRows.current.children;
        } else {
          oldChildren = C401 || CT.C401;
        }
        newChildren[$add](new table$._TableElementRow.new({key: row.key, children: this.updateChildren(oldChildren, row.children, {forgottenChildren: this[_forgottenChildren$]})}));
      }
      while (dart.test(oldUnkeyedRows.moveNext()))
        this.updateChildren(oldUnkeyedRows.current.children, C27 || CT.C27, {forgottenChildren: this[_forgottenChildren$]});
      for (let oldChildren of oldKeyedRows[$values][$where](dart.fn(list => !dart.test(taken.contains(list)), ListOfElementTobool())))
        this.updateChildren(oldChildren, C27 || CT.C27, {forgottenChildren: this[_forgottenChildren$]});
      this[_children$0] = newChildren;
      this[_updateRenderObjectChildren]();
      this[_forgottenChildren$].clear();
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 320, 12, "widget == newWidget");
    }
    [_updateRenderObjectChildren]() {
      if (!(this.renderObject != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/table.dart", 324, 12, "renderObject != null");
      this.renderObject.setFlatChildren(dart.test(this[_children$0][$isNotEmpty]) ? this[_children$0][$_get](0).children[$length] : 0, this[_children$0][$expand](box$.RenderBox, dart.fn(row => row.children[$map](box$.RenderBox, dart.fn(child => {
        let box = box$.RenderBox.as(child.renderObject);
        return box;
      }, ElementToRenderBox())), _TableElementRowToIterableOfRenderBox()))[$toList]());
    }
    visitChildren(visitor) {
      for (let child of this[_children$0][$expand](framework.Element, dart.fn(row => row.children, _TableElementRowToListOfElement()))) {
        if (!dart.test(this[_forgottenChildren$].contains(child))) visitor(child);
      }
    }
    forgetChild(child) {
      this[_forgottenChildren$].add(child);
      super.forgetChild(child);
      return true;
    }
  };
  (table$._TableElement.new = function(widget) {
    this[_children$0] = C400 || CT.C400;
    this[_forgottenChildren$] = new (_HashSetOfElement()).new();
    table$._TableElement.__proto__.new.call(this, widget);
    ;
  }).prototype = table$._TableElement.prototype;
  dart.addTypeTests(table$._TableElement);
  dart.setMethodSignature(table$._TableElement, () => ({
    __proto__: dart.getMethods(table$._TableElement.__proto__),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object]),
    [_updateRenderObjectChildren]: dart.fnType(dart.void, []),
    forgetChild: dart.fnType(core.bool, [framework.Element])
  }));
  dart.setGetterSignature(table$._TableElement, () => ({
    __proto__: dart.getGetters(table$._TableElement.__proto__),
    widget: table$.Table,
    renderObject: table.RenderTable
  }));
  dart.setLibraryUri(table$._TableElement, "package:flutter/src/widgets/table.dart");
  dart.setFieldSignature(table$._TableElement, () => ({
    __proto__: dart.getFields(table$._TableElement.__proto__),
    [_children$0]: dart.fieldType(core.List$(table$._TableElementRow)),
    [_forgottenChildren$]: dart.finalFieldType(core.Set$(framework.Element))
  }));
  var verticalAlignment$ = dart.privateName(table$, "TableCell.verticalAlignment");
  table$.TableCell = class TableCell extends framework.ParentDataWidget$(table.TableCellParentData) {
    get verticalAlignment() {
      return this[verticalAlignment$];
    }
    set verticalAlignment(value) {
      super.verticalAlignment = value;
    }
    applyParentData(renderObject) {
      let parentData = table.TableCellParentData.as(renderObject.parentData);
      if (!dart.equals(parentData.verticalAlignment, this.verticalAlignment)) {
        parentData.verticalAlignment = this.verticalAlignment;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent)) targetParent.markNeedsLayout();
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(table$.Table);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTableCellVerticalAlignment()).new("verticalAlignment", this.verticalAlignment));
    }
  };
  (table$.TableCell.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let verticalAlignment = opts && 'verticalAlignment' in opts ? opts.verticalAlignment : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[verticalAlignment$] = verticalAlignment;
    table$.TableCell.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = table$.TableCell.prototype;
  dart.addTypeTests(table$.TableCell);
  dart.setMethodSignature(table$.TableCell, () => ({
    __proto__: dart.getMethods(table$.TableCell.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(table$.TableCell, () => ({
    __proto__: dart.getGetters(table$.TableCell.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(table$.TableCell, "package:flutter/src/widgets/table.dart");
  dart.setFieldSignature(table$.TableCell, () => ({
    __proto__: dart.getFields(table$.TableCell.__proto__),
    verticalAlignment: dart.finalFieldType(table.TableCellVerticalAlignment)
  }));
  var C402;
  var C403;
  var Locale__countryCode = dart.privateName(ui, "Locale._countryCode");
  var Locale_scriptCode = dart.privateName(ui, "Locale.scriptCode");
  var Locale__languageCode = dart.privateName(ui, "Locale._languageCode");
  var C405;
  var C404;
  var _name$20 = dart.privateName(platform, "_name");
  var C406;
  var C407;
  var C408;
  var C409;
  var navigatorKey$ = dart.privateName(app, "WidgetsApp.navigatorKey");
  var onGenerateRoute$ = dart.privateName(app, "WidgetsApp.onGenerateRoute");
  var onGenerateInitialRoutes$ = dart.privateName(app, "WidgetsApp.onGenerateInitialRoutes");
  var pageRouteBuilder$ = dart.privateName(app, "WidgetsApp.pageRouteBuilder");
  var home$ = dart.privateName(app, "WidgetsApp.home");
  var routes$ = dart.privateName(app, "WidgetsApp.routes");
  var onUnknownRoute$ = dart.privateName(app, "WidgetsApp.onUnknownRoute");
  var initialRoute$ = dart.privateName(app, "WidgetsApp.initialRoute");
  var navigatorObservers$ = dart.privateName(app, "WidgetsApp.navigatorObservers");
  var builder$1 = dart.privateName(app, "WidgetsApp.builder");
  var title$0 = dart.privateName(app, "WidgetsApp.title");
  var onGenerateTitle$ = dart.privateName(app, "WidgetsApp.onGenerateTitle");
  var textStyle$ = dart.privateName(app, "WidgetsApp.textStyle");
  var color$3 = dart.privateName(app, "WidgetsApp.color");
  var locale$2 = dart.privateName(app, "WidgetsApp.locale");
  var localizationsDelegates$ = dart.privateName(app, "WidgetsApp.localizationsDelegates");
  var localeListResolutionCallback$ = dart.privateName(app, "WidgetsApp.localeListResolutionCallback");
  var localeResolutionCallback$ = dart.privateName(app, "WidgetsApp.localeResolutionCallback");
  var supportedLocales$ = dart.privateName(app, "WidgetsApp.supportedLocales");
  var showPerformanceOverlay$ = dart.privateName(app, "WidgetsApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$ = dart.privateName(app, "WidgetsApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$ = dart.privateName(app, "WidgetsApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$ = dart.privateName(app, "WidgetsApp.showSemanticsDebugger");
  var debugShowWidgetInspector$ = dart.privateName(app, "WidgetsApp.debugShowWidgetInspector");
  var inspectorSelectButtonBuilder$ = dart.privateName(app, "WidgetsApp.inspectorSelectButtonBuilder");
  var debugShowCheckedModeBanner$ = dart.privateName(app, "WidgetsApp.debugShowCheckedModeBanner");
  var shortcuts$0 = dart.privateName(app, "WidgetsApp.shortcuts");
  var actions$0 = dart.privateName(app, "WidgetsApp.actions");
  var C412;
  var C411;
  var C410;
  var C413;
  var C414;
  var C415;
  var C416;
  var C417;
  var C418;
  var C419;
  var C420;
  var C421;
  var C422;
  var C423;
  var C424;
  var C425;
  app.WidgetsApp = class WidgetsApp extends framework.StatefulWidget {
    get navigatorKey() {
      return this[navigatorKey$];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get pageRouteBuilder() {
      return this[pageRouteBuilder$];
    }
    set pageRouteBuilder(value) {
      super.pageRouteBuilder = value;
    }
    get home() {
      return this[home$];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$];
    }
    set routes(value) {
      super.routes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get initialRoute() {
      return this[initialRoute$];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$0];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get textStyle() {
      return this[textStyle$];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get color() {
      return this[color$3];
    }
    set color(value) {
      super.color = value;
    }
    get locale() {
      return this[locale$2];
    }
    set locale(value) {
      super.locale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowWidgetInspector() {
      return this[debugShowWidgetInspector$];
    }
    set debugShowWidgetInspector(value) {
      super.debugShowWidgetInspector = value;
    }
    get inspectorSelectButtonBuilder() {
      return this[inspectorSelectButtonBuilder$];
    }
    set inspectorSelectButtonBuilder(value) {
      super.inspectorSelectButtonBuilder = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$0];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get actions() {
      return this[actions$0];
    }
    set actions(value) {
      super.actions = value;
    }
    static get defaultShortcuts() {
      if (true) {
        return app.WidgetsApp._defaultWebShortcuts;
      }
      switch (platform.defaultTargetPlatform) {
        case C406 || CT.C406:
        case C407 || CT.C407:
        {
          return app.WidgetsApp._defaultShortcuts;
        }
        case C408 || CT.C408:
        {
          return app.WidgetsApp._defaultMacOsShortcuts;
        }
        case C409 || CT.C409:
        {
          break;
        }
      }
      return new (LinkedMapOfLogicalKeySet$Intent()).new();
    }
    createState() {
      return new app._WidgetsAppState.new();
    }
  };
  (app.WidgetsApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C402 || CT.C402;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let pageRouteBuilder = opts && 'pageRouteBuilder' in opts ? opts.pageRouteBuilder : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C403 || CT.C403;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C404 || CT.C404;
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    let debugShowWidgetInspector = opts && 'debugShowWidgetInspector' in opts ? opts.debugShowWidgetInspector : false;
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    let inspectorSelectButtonBuilder = opts && 'inspectorSelectButtonBuilder' in opts ? opts.inspectorSelectButtonBuilder : null;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[navigatorKey$] = navigatorKey;
    this[onGenerateRoute$] = onGenerateRoute;
    this[onGenerateInitialRoutes$] = onGenerateInitialRoutes;
    this[onUnknownRoute$] = onUnknownRoute;
    this[navigatorObservers$] = navigatorObservers;
    this[initialRoute$] = initialRoute;
    this[pageRouteBuilder$] = pageRouteBuilder;
    this[home$] = home;
    this[routes$] = routes;
    this[builder$1] = builder;
    this[title$0] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[textStyle$] = textStyle;
    this[color$3] = color;
    this[locale$2] = locale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowWidgetInspector$] = debugShowWidgetInspector;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[inspectorSelectButtonBuilder$] = inspectorSelectButtonBuilder;
    this[shortcuts$0] = shortcuts;
    this[actions$0] = actions;
    if (!(navigatorObservers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 198, 15, "navigatorObservers != null");
    if (!(routes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 199, 15, "routes != null");
    if (!(home == null || onGenerateInitialRoutes == null)) dart.assertFailed("If onGenerateInitialRoutes is specifiied, the home argument will be " + "redundant.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 201, 10, "home == null ||\r\n         onGenerateInitialRoutes == null");
    if (!(home == null || !dart.test(routes[$containsKey]("/")))) dart.assertFailed("If the home property is specified, the routes table " + "cannot include an entry for \"/\", since it would be redundant.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 207, 10, "home == null ||\r\n         !routes.containsKey(Navigator.defaultRouteName)");
    if (!(builder != null || home != null || dart.test(routes[$containsKey]("/")) || onGenerateRoute != null || onUnknownRoute != null)) dart.assertFailed("Either the home property must be specified, " + "or the routes table must include an entry for \"/\", " + "or there must be on onGenerateRoute callback specified, " + "or there must be an onUnknownRoute callback specified, " + "or the builder property must be specified, " + "because otherwise there is nothing to fall back on if the " + "app is started with an intent that specifies an unknown route.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 213, 10, "builder != null ||\r\n         home != null ||\r\n         routes.containsKey(Navigator.defaultRouteName) ||\r\n         onGenerateRoute != null ||\r\n         onUnknownRoute != null");
    if (!(home != null || dart.test(routes[$isNotEmpty]) || onGenerateRoute != null || onUnknownRoute != null || builder != null && navigatorKey == null && initialRoute == null && dart.test(navigatorObservers[$isEmpty]))) dart.assertFailed("If no route is provided using " + "home, routes, onGenerateRoute, or onUnknownRoute, " + "a non-null callback for the builder property must be provided, " + "and the other navigator-related properties, " + "navigatorKey, initialRoute, and navigatorObservers, " + "must have their initial values " + "(null, null, and the empty list, respectively).", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 227, 10, "(home != null ||\r\n          routes.isNotEmpty ||\r\n          onGenerateRoute != null ||\r\n          onUnknownRoute != null)\r\n         ||\r\n         (builder != null &&\r\n          navigatorKey == null &&\r\n          initialRoute == null &&\r\n          navigatorObservers.isEmpty)");
    if (!(builder != null || onGenerateRoute != null || pageRouteBuilder != null)) dart.assertFailed("If neither builder nor onGenerateRoute are provided, the " + "pageRouteBuilder must be specified so that the default handler " + "will know what kind of PageRoute transition to build.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 245, 10, "builder != null ||\r\n         onGenerateRoute != null ||\r\n         pageRouteBuilder != null");
    if (!(title != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 252, 15, "title != null");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 253, 15, "color != null");
    if (!(supportedLocales != null && dart.test(supportedLocales[$isNotEmpty]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 254, 15, "supportedLocales != null && supportedLocales.isNotEmpty");
    if (!(showPerformanceOverlay != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 255, 15, "showPerformanceOverlay != null");
    if (!(checkerboardRasterCacheImages != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 256, 15, "checkerboardRasterCacheImages != null");
    if (!(checkerboardOffscreenLayers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 257, 15, "checkerboardOffscreenLayers != null");
    if (!(showSemanticsDebugger != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 258, 15, "showSemanticsDebugger != null");
    if (!(debugShowCheckedModeBanner != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 259, 15, "debugShowCheckedModeBanner != null");
    if (!(debugShowWidgetInspector != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 260, 15, "debugShowWidgetInspector != null");
    app.WidgetsApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app.WidgetsApp.prototype;
  dart.addTypeTests(app.WidgetsApp);
  dart.setMethodSignature(app.WidgetsApp, () => ({
    __proto__: dart.getMethods(app.WidgetsApp.__proto__),
    createState: dart.fnType(app._WidgetsAppState, [])
  }));
  dart.setLibraryUri(app.WidgetsApp, "package:flutter/src/widgets/app.dart");
  dart.setFieldSignature(app.WidgetsApp, () => ({
    __proto__: dart.getFields(app.WidgetsApp.__proto__),
    navigatorKey: dart.finalFieldType(framework.GlobalKey$(navigator$.NavigatorState)),
    onGenerateRoute: dart.finalFieldType(dart.fnType(navigator$.Route, [navigator$.RouteSettings])),
    onGenerateInitialRoutes: dart.finalFieldType(dart.fnType(core.List$(navigator$.Route), [core.String])),
    pageRouteBuilder: dart.finalFieldType(dart.gFnType(T => [pages.PageRoute$(T), [navigator$.RouteSettings, dart.fnType(framework.Widget, [framework.BuildContext])]])),
    home: dart.finalFieldType(framework.Widget),
    routes: dart.finalFieldType(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext]))),
    onUnknownRoute: dart.finalFieldType(dart.fnType(navigator$.Route, [navigator$.RouteSettings])),
    initialRoute: dart.finalFieldType(core.String),
    navigatorObservers: dart.finalFieldType(core.List$(navigator$.NavigatorObserver)),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.fnType(core.String, [framework.BuildContext])),
    textStyle: dart.finalFieldType(text_style.TextStyle),
    color: dart.finalFieldType(ui.Color),
    locale: dart.finalFieldType(ui.Locale),
    localizationsDelegates: dart.finalFieldType(core.Iterable$(localizations.LocalizationsDelegate)),
    localeListResolutionCallback: dart.finalFieldType(dart.fnType(ui.Locale, [core.List$(ui.Locale), core.Iterable$(ui.Locale)])),
    localeResolutionCallback: dart.finalFieldType(dart.fnType(ui.Locale, [ui.Locale, core.Iterable$(ui.Locale)])),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowWidgetInspector: dart.finalFieldType(core.bool),
    inspectorSelectButtonBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.fnType(dart.void, [])])),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)),
    actions: dart.finalFieldType(core.Map$(key.LocalKey, dart.fnType(actions$.Action, [])))
  }));
  dart.defineLazy(app.WidgetsApp, {
    /*app.WidgetsApp.showPerformanceOverlayOverride*/get showPerformanceOverlayOverride() {
      return false;
    },
    set showPerformanceOverlayOverride(_) {},
    /*app.WidgetsApp.debugShowWidgetInspectorOverride*/get debugShowWidgetInspectorOverride() {
      return false;
    },
    set debugShowWidgetInspectorOverride(_) {},
    /*app.WidgetsApp.debugAllowBannerOverride*/get debugAllowBannerOverride() {
      return true;
    },
    set debugAllowBannerOverride(_) {},
    /*app.WidgetsApp._defaultShortcuts*/get _defaultShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.enter), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.gameButtonA), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C413 || CT.C413, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C414 || CT.C414, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C415 || CT.C415, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C416 || CT.C416, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C417 || CT.C417, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C418 || CT.C418, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowUp), C419 || CT.C419, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowDown), C420 || CT.C420, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowLeft), C421 || CT.C421, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.arrowRight), C422 || CT.C422, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C423 || CT.C423, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C424 || CT.C424]);
    },
    /*app.WidgetsApp._defaultWebShortcuts*/get _defaultWebShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C413 || CT.C413, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C414 || CT.C414, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C419 || CT.C419, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C420 || CT.C420, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C421 || CT.C421, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C422 || CT.C422, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C423 || CT.C423, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C424 || CT.C424]);
    },
    /*app.WidgetsApp._defaultMacOsShortcuts*/get _defaultMacOsShortcuts() {
      return new (LinkedMapOfLogicalKeySet$Intent()).from([new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.enter), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.space), C410 || CT.C410, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.tab), C413 || CT.C413, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.shift, keyboard_key.LogicalKeyboardKey.tab), C414 || CT.C414, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowLeft), C415 || CT.C415, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowRight), C416 || CT.C416, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowDown), C417 || CT.C417, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.arrowUp), C418 || CT.C418, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowUp), C419 || CT.C419, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowDown), C420 || CT.C420, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowLeft), C421 || CT.C421, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.arrowRight), C422 || CT.C422, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageUp), C423 || CT.C423, new shortcuts$.LogicalKeySet.new(keyboard_key.LogicalKeyboardKey.pageDown), C424 || CT.C424]);
    },
    /*app.WidgetsApp.defaultActions*/get defaultActions() {
      return new (LinkedMapOfLocalKey$VoidToAction()).from([actions$.DoNothingAction.key, dart.fn(() => C425 || CT.C425, VoidToDoNothingAction()), focus_traversal.RequestFocusAction.key, dart.fn(() => new focus_traversal.RequestFocusAction.new(), VoidToRequestFocusAction()), focus_traversal.NextFocusAction.key, dart.fn(() => new focus_traversal.NextFocusAction.new(), VoidToNextFocusAction()), focus_traversal.PreviousFocusAction.key, dart.fn(() => new focus_traversal.PreviousFocusAction.new(), VoidToPreviousFocusAction()), focus_traversal.DirectionalFocusAction.key, dart.fn(() => new focus_traversal.DirectionalFocusAction.new(), VoidToDirectionalFocusAction()), scrollable$.ScrollAction.key, dart.fn(() => new scrollable$.ScrollAction.new(), VoidToScrollAction())]);
    }
  });
  var _navigator = dart.privateName(app, "_navigator");
  var _locale$ = dart.privateName(app, "_locale");
  var _updateNavigator = dart.privateName(app, "_updateNavigator");
  var _resolveLocales = dart.privateName(app, "_resolveLocales");
  var _onGenerateRoute = dart.privateName(app, "_onGenerateRoute");
  var _onUnknownRoute = dart.privateName(app, "_onUnknownRoute");
  var _localizationsDelegates = dart.privateName(app, "_localizationsDelegates");
  var _debugCheckLocalizations = dart.privateName(app, "_debugCheckLocalizations");
  var C426;
  var C429;
  var C430;
  var C431;
  var C432;
  var C433;
  var C434;
  var C428;
  var C427;
  var C437;
  var C436;
  var C435;
  var C440;
  var C441;
  var C439;
  var C438;
  var C444;
  var C445;
  var C443;
  var C442;
  var C448;
  var C449;
  var C447;
  var C446;
  var C452;
  var C453;
  var C454;
  var C455;
  var C451;
  var C450;
  var C458;
  var C457;
  var C456;
  var C461;
  var C460;
  var C459;
  var C464;
  var C465;
  var C463;
  var C462;
  var C468;
  var C467;
  var C466;
  var C471;
  var C472;
  var C473;
  var C470;
  var C469;
  var C476;
  var C475;
  var C474;
  var C479;
  var C480;
  var C481;
  var C478;
  var C477;
  var C484;
  var C485;
  var C486;
  var C483;
  var C482;
  var C489;
  var C488;
  var C487;
  var C492;
  var C493;
  var C491;
  var C490;
  var C496;
  var C497;
  var C495;
  var C494;
  var C500;
  var C501;
  var C502;
  var C499;
  var C498;
  const State_WidgetsBindingObserver$36$0 = class State_WidgetsBindingObserver extends framework.State$(app.WidgetsApp) {};
  (State_WidgetsBindingObserver$36$0.new = function() {
    State_WidgetsBindingObserver$36$0.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$0.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$0, binding$5.WidgetsBindingObserver);
  app._WidgetsAppState = class _WidgetsAppState extends State_WidgetsBindingObserver$36$0 {
    initState() {
      super.initState();
      this[_updateNavigator]();
      this[_locale$] = this[_resolveLocales](binding$5.WidgetsBinding.instance.window.locales, this.widget.supportedLocales);
      binding$5.WidgetsBinding.instance.addObserver(this);
    }
    didUpdateWidget(oldWidget) {
      app.WidgetsApp._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.navigatorKey, oldWidget.navigatorKey)) this[_updateNavigator]();
    }
    dispose() {
      binding$5.WidgetsBinding.instance.removeObserver(this);
      super.dispose();
    }
    [_updateNavigator]() {
      let t24;
      this[_navigator] = (t24 = this.widget.navigatorKey, t24 == null ? new (GlobalObjectKeyOfNavigatorState()).new(this) : t24);
    }
    [_onGenerateRoute](settings) {
      let name = settings.name;
      let pageContentBuilder = name === "/" && this.widget.home != null ? dart.fn(context => this.widget.home, BuildContextToWidget()) : this.widget.routes[$_get](name);
      if (pageContentBuilder != null) {
        if (!(this.widget.pageRouteBuilder != null)) dart.assertFailed("The default onGenerateRoute handler for WidgetsApp must have a " + "pageRouteBuilder set if the home or routes properties are set.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 985, 14, "widget.pageRouteBuilder != null");
        let route = this.widget.pageRouteBuilder(dart.dynamic, settings, pageContentBuilder);
        if (!(route != null)) dart.assertFailed("The pageRouteBuilder for WidgetsApp must return a valid non-null Route.", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 992, 14, "route != null");
        return route;
      }
      if (this.widget.onGenerateRoute != null) return this.widget.onGenerateRoute(settings);
      return null;
    }
    [_onUnknownRoute](settings) {
      if (!dart.test(dart.fn(() => {
        if (this.widget.onUnknownRoute == null) {
          dart.throw(assertions.FlutterError.new("Could not find a generator for route " + dart.str(settings) + " in the " + dart.str(this[$runtimeType]) + ".\n" + "Generators for routes are searched for in the following order:\n" + " 1. For the \"/\" route, the \"home\" property, if non-null, is used.\n" + " 2. Otherwise, the \"routes\" table is used, if it has an entry for " + "the route.\n" + " 3. Otherwise, onGenerateRoute is called. It should return a " + "non-null value for any valid route not handled by \"home\" and \"routes\".\n" + " 4. Finally if all else fails onUnknownRoute is called.\n" + "Unfortunately, onUnknownRoute was not set."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1002, 12, "() {\r\n      if (widget.onUnknownRoute == null) {\r\n        throw FlutterError(\r\n          'Could not find a generator for route $settings in the $runtimeType.\\n'\r\n          'Generators for routes are searched for in the following order:\\n'\r\n          ' 1. For the \"/\" route, the \"home\" property, if non-null, is used.\\n'\r\n          ' 2. Otherwise, the \"routes\" table is used, if it has an entry for '\r\n          'the route.\\n'\r\n          ' 3. Otherwise, onGenerateRoute is called. It should return a '\r\n          'non-null value for any valid route not handled by \"home\" and \"routes\".\\n'\r\n          ' 4. Finally if all else fails onUnknownRoute is called.\\n'\r\n          'Unfortunately, onUnknownRoute was not set.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let result = this.widget.onUnknownRoute(settings);
      if (!dart.test(dart.fn(() => {
        if (result == null) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("The onUnknownRoute callback returned null."), new assertions.ErrorDescription.new("When the " + dart.str(this[$runtimeType]) + " requested the route " + dart.str(settings) + " from its " + "onUnknownRoute callback, the callback returned null. Such callbacks " + "must never return null.")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1019, 12, "() {\r\n      if (result == null) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('The onUnknownRoute callback returned null.'),\r\n          ErrorDescription(\r\n            'When the $runtimeType requested the route $settings from its '\r\n            'onUnknownRoute callback, the callback returned null. Such callbacks '\r\n            'must never return null.'\r\n          )\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    didPopRoute() {
      return async.async(core.bool, (function* didPopRoute() {
        let t24;
        if (!dart.test(this.mounted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1038, 12, "mounted");
        let navigator = (t24 = this[_navigator], t24 == null ? null : t24.currentState);
        if (navigator == null) return false;
        return yield navigator.maybePop(core.Object);
      }).bind(this));
    }
    didPushRoute(route) {
      return async.async(core.bool, (function* didPushRoute() {
        let t24;
        if (!dart.test(this.mounted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1047, 12, "mounted");
        let navigator = (t24 = this[_navigator], t24 == null ? null : t24.currentState);
        if (navigator == null) return false;
        navigator.pushNamed(core.Object, route);
        return true;
      }).bind(this));
    }
    [_resolveLocales](preferredLocales, supportedLocales) {
      if (this.widget.localeListResolutionCallback != null) {
        let locale = this.widget.localeListResolutionCallback(preferredLocales, this.widget.supportedLocales);
        if (locale != null) return locale;
      }
      if (this.widget.localeResolutionCallback != null) {
        let locale = this.widget.localeResolutionCallback(preferredLocales != null && dart.test(preferredLocales[$isNotEmpty]) ? preferredLocales[$first] : null, this.widget.supportedLocales);
        if (locale != null) return locale;
      }
      return app._WidgetsAppState.basicLocaleListResolution(preferredLocales, supportedLocales);
    }
    static basicLocaleListResolution(preferredLocales, supportedLocales) {
      let t25, t24, t25$, t24$, t25$0, t24$0, t25$1, t24$1, t25$2, t24$2, t24$3, t24$4;
      if (preferredLocales == null || dart.test(preferredLocales[$isEmpty])) {
        return supportedLocales[$first];
      }
      let allSupportedLocales = new (IdentityMapOfString$Locale()).new();
      let languageAndCountryLocales = new (IdentityMapOfString$Locale()).new();
      let languageAndScriptLocales = new (IdentityMapOfString$Locale()).new();
      let languageLocales = new (IdentityMapOfString$Locale()).new();
      let countryLocales = new (IdentityMapOfString$Locale()).new();
      for (let locale of supportedLocales) {
        t24 = allSupportedLocales;
        t25 = dart.str(locale.languageCode) + "_" + dart.str(locale.scriptCode) + "_" + dart.str(locale.countryCode);
        t24[$_get](t25) == null ? t24[$_set](t25, locale) : null;
        t24$ = languageAndScriptLocales;
        t25$ = dart.str(locale.languageCode) + "_" + dart.str(locale.scriptCode);
        t24$[$_get](t25$) == null ? t24$[$_set](t25$, locale) : null;
        t24$0 = languageAndCountryLocales;
        t25$0 = dart.str(locale.languageCode) + "_" + dart.str(locale.countryCode);
        t24$0[$_get](t25$0) == null ? t24$0[$_set](t25$0, locale) : null;
        t24$1 = languageLocales;
        t25$1 = locale.languageCode;
        t24$1[$_get](t25$1) == null ? t24$1[$_set](t25$1, locale) : null;
        t24$2 = countryLocales;
        t25$2 = locale.countryCode;
        t24$2[$_get](t25$2) == null ? t24$2[$_set](t25$2, locale) : null;
      }
      let matchesLanguageCode = null;
      let matchesCountryCode = null;
      for (let localeIndex = 0; localeIndex < dart.notNull(preferredLocales[$length]); localeIndex = localeIndex + 1) {
        let userLocale = preferredLocales[$_get](localeIndex);
        if (dart.test(allSupportedLocales[$containsKey](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.scriptCode) + "_" + dart.str(userLocale.countryCode)))) {
          return userLocale;
        }
        if (userLocale.scriptCode != null) {
          let match = languageAndScriptLocales[$_get](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.scriptCode));
          if (match != null) {
            return match;
          }
        }
        if (userLocale.countryCode != null) {
          let match = languageAndCountryLocales[$_get](dart.str(userLocale.languageCode) + "_" + dart.str(userLocale.countryCode));
          if (match != null) {
            return match;
          }
        }
        if (matchesLanguageCode != null) {
          return matchesLanguageCode;
        }
        let match = languageLocales[$_get](userLocale.languageCode);
        if (match != null) {
          matchesLanguageCode = match;
          if (localeIndex === 0 && !(localeIndex + 1 < dart.notNull(preferredLocales[$length]) && preferredLocales[$_get](localeIndex + 1).languageCode == userLocale.languageCode)) {
            return matchesLanguageCode;
          }
        }
        if (matchesCountryCode == null && userLocale.countryCode != null) {
          match = countryLocales[$_get](userLocale.countryCode);
          if (match != null) {
            matchesCountryCode = match;
          }
        }
      }
      let resolvedLocale = (t24$4 = (t24$3 = matchesLanguageCode, t24$3 == null ? matchesCountryCode : t24$3), t24$4 == null ? supportedLocales[$first] : t24$4);
      return resolvedLocale;
    }
    didChangeLocales(locales) {
      let newLocale = this[_resolveLocales](locales, this.widget.supportedLocales);
      if (!dart.equals(newLocale, this[_locale$])) {
        this.setState(dart.fn(() => {
          this[_locale$] = newLocale;
        }, VoidToNull()));
      }
    }
    get [_localizationsDelegates]() {
      return new (SyncIterableOfLocalizationsDelegate()).new((function* _localizationsDelegates() {
        if (this.widget.localizationsDelegates != null) yield* this.widget.localizationsDelegates;
        yield localizations.DefaultWidgetsLocalizations.delegate;
      }).bind(this));
    }
    [_debugCheckLocalizations](appLocale) {
      if (!dart.test(dart.fn(() => {
        let unsupportedTypes = this[_localizationsDelegates][$map](core.Type, dart.fn(delegate => delegate.type, LocalizationsDelegateToType()))[$toSet]();
        for (let delegate of this[_localizationsDelegates]) {
          if (!dart.test(unsupportedTypes.contains(delegate.type))) continue;
          if (dart.test(delegate.isSupported(appLocale))) unsupportedTypes.remove(delegate.type);
        }
        if (dart.test(unsupportedTypes[$isEmpty])) return true;
        if (dart.test(collections.listEquals(core.String, unsupportedTypes[$map](core.String, dart.fn(type => dart.toString(type), TypeToString()))[$toList](), JSArrayOfString().of(["CupertinoLocalizations"])))) return true;
        let message = new core.StringBuffer.new();
        message.writeln("═"[$times](8));
        message.writeln("Warning: This application's locale, " + dart.str(appLocale) + ", is not supported by all of its\n" + "localization delegates.");
        for (let unsupportedType of unsupportedTypes) {
          if (dart.toString(unsupportedType) === "CupertinoLocalizations") continue;
          message.writeln("> A " + dart.str(unsupportedType) + " delegate that supports the " + dart.str(appLocale) + " locale was not found.");
        }
        message.writeln("See https://flutter.dev/tutorials/internationalization/ for more\n" + "information about configuring an app's locale, supportedLocales,\n" + "and localizationsDelegates parameters.");
        message.writeln("═"[$times](8));
        print.debugPrint(message.toString());
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1232, 12, "() {\r\n      final Set<Type> unsupportedTypes =\r\n        _localizationsDelegates.map<Type>((LocalizationsDelegate<dynamic> delegate) => delegate.type).toSet();\r\n      for (final LocalizationsDelegate<dynamic> delegate in _localizationsDelegates) {\r\n        if (!unsupportedTypes.contains(delegate.type))\r\n          continue;\r\n        if (delegate.isSupported(appLocale))\r\n          unsupportedTypes.remove(delegate.type);\r\n      }\r\n      if (unsupportedTypes.isEmpty)\r\n        return true;\r\n\r\n      // Currently the Cupertino library only provides english localizations.\r\n      // Remove this when https://github.com/flutter/flutter/issues/23847\r\n      // is fixed.\r\n      if (listEquals(unsupportedTypes.map((Type type) => type.toString()).toList(), <String>['CupertinoLocalizations']))\r\n        return true;\r\n\r\n      final StringBuffer message = StringBuffer();\r\n      message.writeln('\\u2550' * 8);\r\n      message.writeln(\r\n        'Warning: This application\\'s locale, $appLocale, is not supported by all of its\\n'\r\n        'localization delegates.'\r\n      );\r\n      for (final Type unsupportedType in unsupportedTypes) {\r\n        // Currently the Cupertino library only provides english localizations.\r\n        // Remove this when https://github.com/flutter/flutter/issues/23847\r\n        // is fixed.\r\n        if (unsupportedType.toString() == 'CupertinoLocalizations')\r\n          continue;\r\n        message.writeln(\r\n          '> A $unsupportedType delegate that supports the $appLocale locale was not found.'\r\n        );\r\n      }\r\n      message.writeln(\r\n        'See https://flutter.dev/tutorials/internationalization/ for more\\n'\r\n        'information about configuring an app\\'s locale, supportedLocales,\\n'\r\n        'and localizationsDelegates parameters.'\r\n      );\r\n      message.writeln('\\u2550' * 8);\r\n      debugPrint(message.toString());\r\n      return true;\r\n    }()");
      return true;
    }
    build(context) {
      let t24, t24$, t24$0;
      let navigator = null;
      if (this[_navigator] != null) {
        navigator = new navigator$.Navigator.new({key: this[_navigator], initialRoute: binding$5.WidgetsBinding.instance.window.defaultRouteName !== "/" ? binding$5.WidgetsBinding.instance.window.defaultRouteName : (t24 = this.widget.initialRoute, t24 == null ? binding$5.WidgetsBinding.instance.window.defaultRouteName : t24), onGenerateRoute: dart.bind(this, _onGenerateRoute), onGenerateInitialRoutes: this.widget.onGenerateInitialRoutes == null ? C426 || CT.C426 : dart.fn((navigator, initialRouteName) => this.widget.onGenerateInitialRoutes(initialRouteName), NavigatorStateAndStringToListOfRoute()), onUnknownRoute: dart.bind(this, _onUnknownRoute), observers: this.widget.navigatorObservers, $creationLocationd_0dea112b090073317d4: C427 || CT.C427});
      }
      let result = null;
      if (this.widget.builder != null) {
        result = new basic.Builder.new({builder: dart.fn(context => this.widget.builder(context, navigator), BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C435 || CT.C435});
      } else {
        if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1309, 14, "navigator != null");
        result = navigator;
      }
      if (this.widget.textStyle != null) {
        result = new text.DefaultTextStyle.new({style: this.widget.textStyle, child: result, $creationLocationd_0dea112b090073317d4: C438 || CT.C438});
      }
      let performanceOverlay = null;
      if (dart.test(this.widget.showPerformanceOverlay) || dart.test(app.WidgetsApp.showPerformanceOverlayOverride)) {
        performanceOverlay = new performance_overlay$.PerformanceOverlay.allEnabled({checkerboardRasterCacheImages: this.widget.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.widget.checkerboardOffscreenLayers, $creationLocationd_0dea112b090073317d4: C442 || CT.C442});
      } else if (dart.test(this.widget.checkerboardRasterCacheImages) || dart.test(this.widget.checkerboardOffscreenLayers)) {
        performanceOverlay = new performance_overlay$.PerformanceOverlay.new({checkerboardRasterCacheImages: this.widget.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.widget.checkerboardOffscreenLayers, $creationLocationd_0dea112b090073317d4: C446 || CT.C446});
      }
      if (performanceOverlay != null) {
        result = new basic.Stack.new({children: JSArrayOfWidget().of([result, new basic.Positioned.new({top: 0.0, left: 0.0, right: 0.0, child: performanceOverlay, $creationLocationd_0dea112b090073317d4: C450 || CT.C450})]), $creationLocationd_0dea112b090073317d4: C456 || CT.C456});
      }
      if (dart.test(this.widget.showSemanticsDebugger)) {
        result = new semantics_debugger.SemanticsDebugger.new({child: result, $creationLocationd_0dea112b090073317d4: C459 || CT.C459});
      }
      if (!dart.test(dart.fn(() => {
        if (dart.test(this.widget.debugShowWidgetInspector) || dart.test(app.WidgetsApp.debugShowWidgetInspectorOverride)) {
          result = new widget_inspector.WidgetInspector.new({child: result, selectButtonBuilder: this.widget.inspectorSelectButtonBuilder, $creationLocationd_0dea112b090073317d4: C462 || CT.C462});
        }
        if (dart.test(this.widget.debugShowCheckedModeBanner) && dart.test(app.WidgetsApp.debugAllowBannerOverride)) {
          result = new banner.CheckedModeBanner.new({child: result, $creationLocationd_0dea112b090073317d4: C466 || CT.C466});
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1349, 12, "() {\r\n      if (widget.debugShowWidgetInspector || WidgetsApp.debugShowWidgetInspectorOverride) {\r\n        result = WidgetInspector(\r\n          child: result,\r\n          selectButtonBuilder: widget.inspectorSelectButtonBuilder,\r\n        );\r\n      }\r\n      if (widget.debugShowCheckedModeBanner && WidgetsApp.debugAllowBannerOverride) {\r\n        result = CheckedModeBanner(\r\n          child: result,\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let title = null;
      if (this.widget.onGenerateTitle != null) {
        title = new basic.Builder.new({builder: dart.fn(context => {
            let title = this.widget.onGenerateTitle(context);
            if (!(title != null)) dart.assertFailed("onGenerateTitle must return a non-null String", "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1372, 18, "title != null");
            return new title$.Title.new({title: title, color: this.widget.color, child: result, $creationLocationd_0dea112b090073317d4: C469 || CT.C469});
          }, BuildContextToTitle()), $creationLocationd_0dea112b090073317d4: C474 || CT.C474});
      } else {
        title = new title$.Title.new({title: this.widget.title, color: this.widget.color, child: result, $creationLocationd_0dea112b090073317d4: C477 || CT.C477});
      }
      let appLocale = this.widget.locale != null ? this[_resolveLocales](JSArrayOfLocale().of([this.widget.locale]), this.widget.supportedLocales) : this[_locale$];
      if (!dart.test(this[_debugCheckLocalizations](appLocale))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/app.dart", 1392, 12, "_debugCheckLocalizations(appLocale)");
      return new shortcuts$.Shortcuts.new({shortcuts: (t24$ = this.widget.shortcuts, t24$ == null ? app.WidgetsApp.defaultShortcuts : t24$), debugLabel: "<Default WidgetsApp Shortcuts>", child: new actions$.Actions.new({actions: (t24$0 = this.widget.actions, t24$0 == null ? app.WidgetsApp.defaultActions : t24$0), child: new focus_traversal.DefaultFocusTraversal.new({policy: new focus_traversal.ReadingOrderTraversalPolicy.new(), child: new app._MediaQueryFromWindow.new({child: new localizations.Localizations.new({locale: appLocale, delegates: this[_localizationsDelegates][$toList](), child: title, $creationLocationd_0dea112b090073317d4: C482 || CT.C482}), $creationLocationd_0dea112b090073317d4: C487 || CT.C487}), $creationLocationd_0dea112b090073317d4: C490 || CT.C490}), $creationLocationd_0dea112b090073317d4: C494 || CT.C494}), $creationLocationd_0dea112b090073317d4: C498 || CT.C498});
    }
  };
  (app._WidgetsAppState.new = function() {
    this[_navigator] = null;
    this[_locale$] = null;
    app._WidgetsAppState.__proto__.new.call(this);
    ;
  }).prototype = app._WidgetsAppState.prototype;
  dart.addTypeTests(app._WidgetsAppState);
  dart.setMethodSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getMethods(app._WidgetsAppState.__proto__),
    [_updateNavigator]: dart.fnType(dart.void, []),
    [_onGenerateRoute]: dart.fnType(navigator$.Route, [navigator$.RouteSettings]),
    [_onUnknownRoute]: dart.fnType(navigator$.Route, [navigator$.RouteSettings]),
    [_resolveLocales]: dart.fnType(ui.Locale, [core.List$(ui.Locale), core.Iterable$(ui.Locale)]),
    [_debugCheckLocalizations]: dart.fnType(core.bool, [ui.Locale]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getGetters(app._WidgetsAppState.__proto__),
    [_localizationsDelegates]: core.Iterable$(localizations.LocalizationsDelegate)
  }));
  dart.setLibraryUri(app._WidgetsAppState, "package:flutter/src/widgets/app.dart");
  dart.setFieldSignature(app._WidgetsAppState, () => ({
    __proto__: dart.getFields(app._WidgetsAppState.__proto__),
    [_navigator]: dart.fieldType(framework.GlobalKey$(navigator$.NavigatorState)),
    [_locale$]: dart.fieldType(ui.Locale)
  }));
  var child$12 = dart.privateName(app, "_MediaQueryFromWindow.child");
  app._MediaQueryFromWindow = class _MediaQueryFromWindow extends framework.StatefulWidget {
    get child() {
      return this[child$12];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new app._MediaQueryFromWindowsState.new();
    }
  };
  (app._MediaQueryFromWindow.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$12] = child;
    app._MediaQueryFromWindow.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app._MediaQueryFromWindow.prototype;
  dart.addTypeTests(app._MediaQueryFromWindow);
  dart.setMethodSignature(app._MediaQueryFromWindow, () => ({
    __proto__: dart.getMethods(app._MediaQueryFromWindow.__proto__),
    createState: dart.fnType(app._MediaQueryFromWindowsState, [])
  }));
  dart.setLibraryUri(app._MediaQueryFromWindow, "package:flutter/src/widgets/app.dart");
  dart.setFieldSignature(app._MediaQueryFromWindow, () => ({
    __proto__: dart.getFields(app._MediaQueryFromWindow.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C505;
  var C506;
  var C504;
  var C503;
  const State_WidgetsBindingObserver$36$1 = class State_WidgetsBindingObserver extends framework.State$(app._MediaQueryFromWindow) {};
  (State_WidgetsBindingObserver$36$1.new = function() {
    State_WidgetsBindingObserver$36$1.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$1.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$1, binding$5.WidgetsBindingObserver);
  app._MediaQueryFromWindowsState = class _MediaQueryFromWindowsState extends State_WidgetsBindingObserver$36$1 {
    initState() {
      super.initState();
      binding$5.WidgetsBinding.instance.addObserver(this);
    }
    didChangeAccessibilityFeatures() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    didChangeMetrics() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    didChangeTextScaleFactor() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    didChangePlatformBrightness() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    build(context) {
      return new media_query.MediaQuery.new({data: new media_query.MediaQueryData.fromWindow(binding$5.WidgetsBinding.instance.window), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C503 || CT.C503});
    }
    dispose() {
      binding$5.WidgetsBinding.instance.removeObserver(this);
      super.dispose();
    }
  };
  (app._MediaQueryFromWindowsState.new = function() {
    app._MediaQueryFromWindowsState.__proto__.new.call(this);
    ;
  }).prototype = app._MediaQueryFromWindowsState.prototype;
  dart.addTypeTests(app._MediaQueryFromWindowsState);
  dart.setMethodSignature(app._MediaQueryFromWindowsState, () => ({
    __proto__: dart.getMethods(app._MediaQueryFromWindowsState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app._MediaQueryFromWindowsState, "package:flutter/src/widgets/app.dart");
  var title$1 = dart.privateName(title$, "Title.title");
  var color$4 = dart.privateName(title$, "Title.color");
  var child$13 = dart.privateName(title$, "Title.child");
  title$.Title = class Title extends framework.StatelessWidget {
    get title() {
      return this[title$1];
    }
    set title(value) {
      super.title = value;
    }
    get color() {
      return this[color$4];
    }
    set color(value) {
      super.color = value;
    }
    get child() {
      return this[child$13];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      system_chrome.SystemChrome.setApplicationSwitcherDescription(new system_chrome.ApplicationSwitcherDescription.new({label: this.title, primaryColor: this.color.value}));
      return this.child;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("title", this.title, {defaultValue: ""}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
    }
  };
  (title$.Title.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let color = opts && 'color' in opts ? opts.color : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$1] = title;
    this[color$4] = color;
    this[child$13] = child;
    if (!(title != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/title.dart", 23, 15, "title != null");
    if (!(color != null && color.alpha === 255)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/title.dart", 24, 15, "color != null && color.alpha == 0xFF");
    title$.Title.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = title$.Title.prototype;
  dart.addTypeTests(title$.Title);
  dart.setMethodSignature(title$.Title, () => ({
    __proto__: dart.getMethods(title$.Title.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(title$.Title, "package:flutter/src/widgets/title.dart");
  dart.setFieldSignature(title$.Title, () => ({
    __proto__: dart.getFields(title$.Title.__proto__),
    title: dart.finalFieldType(core.String),
    color: dart.finalFieldType(ui.Color),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C507;
  var C510;
  var C511;
  var C512;
  var C513;
  var C514;
  var C515;
  var C516;
  var C517;
  var C509;
  var C508;
  var C520;
  var C519;
  var C518;
  var C522;
  var DefaultTextStyle_textHeightBehavior = dart.privateName(text, "DefaultTextStyle.textHeightBehavior");
  var DefaultTextStyle_textWidthBasis = dart.privateName(text, "DefaultTextStyle.textWidthBasis");
  var DefaultTextStyle_maxLines = dart.privateName(text, "DefaultTextStyle.maxLines");
  var DefaultTextStyle_overflow = dart.privateName(text, "DefaultTextStyle.overflow");
  var DefaultTextStyle_softWrap = dart.privateName(text, "DefaultTextStyle.softWrap");
  var DefaultTextStyle_textAlign = dart.privateName(text, "DefaultTextStyle.textAlign");
  var DefaultTextStyle_style = dart.privateName(text, "DefaultTextStyle.style");
  var C521;
  var C525;
  var C526;
  var C527;
  var C528;
  var C529;
  var C530;
  var C531;
  var C532;
  var C524;
  var C523;
  var C535;
  var C536;
  var C534;
  var C533;
  inherited_theme.InheritedTheme = class InheritedTheme extends framework.InheritedWidget {
    static captureAll(context, child) {
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_theme.dart", 113, 12, "child != null");
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_theme.dart", 114, 12, "context != null");
      let themes = JSArrayOfInheritedTheme().of([]);
      let themeTypes = LinkedHashSetOfType().new();
      context.visitAncestorElements(dart.fn(ancestor => {
        if (framework.InheritedElement.is(ancestor) && inherited_theme.InheritedTheme.is(ancestor.widget)) {
          let theme = inherited_theme.InheritedTheme.as(ancestor.widget);
          let themeType = dart.runtimeType(theme);
          if (!dart.test(themeTypes.contains(themeType))) {
            themeTypes.add(themeType);
            themes[$add](theme);
          }
        }
        return true;
      }, ElementTobool()));
      return new inherited_theme._CaptureAll.new({themes: themes, child: child, $creationLocationd_0dea112b090073317d4: C533 || CT.C533});
    }
  };
  (inherited_theme.InheritedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    inherited_theme.InheritedTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = inherited_theme.InheritedTheme.prototype;
  dart.addTypeTests(inherited_theme.InheritedTheme);
  dart.setLibraryUri(inherited_theme.InheritedTheme, "package:flutter/src/widgets/inherited_theme.dart");
  text.DefaultTextStyle = class DefaultTextStyle extends inherited_theme.InheritedTheme {
    get style() {
      return this[style$];
    }
    set style(value) {
      super.style = value;
    }
    get textAlign() {
      return this[textAlign$0];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get softWrap() {
      return this[softWrap$0];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$1];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get maxLines() {
      return this[maxLines$0];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$0];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$0];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
      let overflow = opts && 'overflow' in opts ? opts.overflow : null;
      let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
      let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 100, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t24, t24$, t24$0, t24$1, t24$2;
          let parent = text.DefaultTextStyle.of(context);
          return new text.DefaultTextStyle.new({key: key, style: parent.style.merge(style), textAlign: (t24 = textAlign, t24 == null ? parent.textAlign : t24), softWrap: (t24$ = softWrap, t24$ == null ? parent.softWrap : t24$), overflow: (t24$0 = overflow, t24$0 == null ? parent.overflow : t24$0), maxLines: (t24$1 = maxLines, t24$1 == null ? parent.maxLines : t24$1), textWidthBasis: (t24$2 = textWidthBasis, t24$2 == null ? parent.textWidthBasis : t24$2), child: child, $creationLocationd_0dea112b090073317d4: C508 || CT.C508});
        }, BuildContextToDefaultTextStyle()), $creationLocationd_0dea112b090073317d4: C518 || CT.C518});
    }
    static of(context) {
      let t24;
      t24 = context.dependOnInheritedWidgetOfExactType(text.DefaultTextStyle);
      return t24 == null ? C521 || CT.C521 : t24;
    }
    updateShouldNotify(oldWidget) {
      text.DefaultTextStyle._check(oldWidget);
      return !dart.equals(this.style, oldWidget.style) || !dart.equals(this.textAlign, oldWidget.textAlign) || !dart.equals(this.softWrap, oldWidget.softWrap) || !dart.equals(this.overflow, oldWidget.overflow) || this.maxLines != oldWidget.maxLines || !dart.equals(this.textWidthBasis, oldWidget.textWidthBasis) || !dart.equals(this.textHeightBehavior, oldWidget.textHeightBehavior);
    }
    wrap(context, child) {
      let defaultTextStyle = context.findAncestorWidgetOfExactType(text.DefaultTextStyle);
      return this === defaultTextStyle ? child : new text.DefaultTextStyle.new({style: this.style, textAlign: this.textAlign, softWrap: this.softWrap, overflow: this.overflow, maxLines: this.maxLines, textWidthBasis: this.textWidthBasis, textHeightBehavior: this.textHeightBehavior, child: child, $creationLocationd_0dea112b090073317d4: C523 || CT.C523});
    }
    debugFillProperties(properties) {
      let t24;
      super.debugFillProperties(properties);
      t24 = this.style;
      t24 == null ? null : t24.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: text_painter.TextWidthBasis.parent}));
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
    }
  };
  (text.DefaultTextStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    let overflow = opts && 'overflow' in opts ? opts.overflow : C164 || CT.C164;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C165 || CT.C165;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[style$] = style;
    this[textAlign$0] = textAlign;
    this[softWrap$0] = softWrap;
    this[overflow$1] = overflow;
    this[maxLines$0] = maxLines;
    this[textWidthBasis$0] = textWidthBasis;
    this[textHeightBehavior$0] = textHeightBehavior;
    if (!(style != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 50, 15, "style != null");
    if (!(softWrap != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 51, 15, "softWrap != null");
    if (!(overflow != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 52, 15, "overflow != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 53, 15, "maxLines == null || maxLines > 0");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 54, 15, "child != null");
    if (!(textWidthBasis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 55, 15, "textWidthBasis != null");
    text.DefaultTextStyle.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.DefaultTextStyle.prototype;
  (text.DefaultTextStyle.fallback = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[style$] = C507 || CT.C507;
    this[textAlign$0] = null;
    this[softWrap$0] = true;
    this[maxLines$0] = null;
    this[overflow$1] = paragraph.TextOverflow.clip;
    this[textWidthBasis$0] = text_painter.TextWidthBasis.parent;
    this[textHeightBehavior$0] = null;
    text.DefaultTextStyle.__proto__.new.call(this, {key: key, child: null, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.DefaultTextStyle.prototype;
  dart.addTypeTests(text.DefaultTextStyle);
  const style$ = DefaultTextStyle_style;
  const textAlign$0 = DefaultTextStyle_textAlign;
  const softWrap$0 = DefaultTextStyle_softWrap;
  const overflow$1 = DefaultTextStyle_overflow;
  const maxLines$0 = DefaultTextStyle_maxLines;
  const textWidthBasis$0 = DefaultTextStyle_textWidthBasis;
  const textHeightBehavior$0 = DefaultTextStyle_textHeightBehavior;
  dart.setMethodSignature(text.DefaultTextStyle, () => ({
    __proto__: dart.getMethods(text.DefaultTextStyle.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object]),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])
  }));
  dart.setLibraryUri(text.DefaultTextStyle, "package:flutter/src/widgets/text.dart");
  dart.setFieldSignature(text.DefaultTextStyle, () => ({
    __proto__: dart.getFields(text.DefaultTextStyle.__proto__),
    style: dart.finalFieldType(text_style.TextStyle),
    textAlign: dart.finalFieldType(ui.TextAlign),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    maxLines: dart.finalFieldType(core.int),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    textHeightBehavior: dart.finalFieldType(ui.TextHeightBehavior)
  }));
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var C538;
  var C537;
  var C541;
  var C542;
  var C543;
  var C544;
  var C545;
  var C546;
  var C547;
  var C548;
  var C549;
  var C550;
  var C551;
  var C540;
  var C539;
  var C554;
  var C553;
  var C552;
  var C557;
  var C558;
  var C559;
  var C556;
  var C555;
  var data$0 = dart.privateName(text, "Text.data");
  var textSpan$ = dart.privateName(text, "Text.textSpan");
  var style$0 = dart.privateName(text, "Text.style");
  var strutStyle$0 = dart.privateName(text, "Text.strutStyle");
  var textAlign$1 = dart.privateName(text, "Text.textAlign");
  var textDirection$6 = dart.privateName(text, "Text.textDirection");
  var locale$3 = dart.privateName(text, "Text.locale");
  var softWrap$1 = dart.privateName(text, "Text.softWrap");
  var overflow$2 = dart.privateName(text, "Text.overflow");
  var textScaleFactor$1 = dart.privateName(text, "Text.textScaleFactor");
  var maxLines$1 = dart.privateName(text, "Text.maxLines");
  var semanticsLabel$ = dart.privateName(text, "Text.semanticsLabel");
  var textWidthBasis$1 = dart.privateName(text, "Text.textWidthBasis");
  var textHeightBehavior$1 = dart.privateName(text, "Text.textHeightBehavior");
  text.Text = class Text extends framework.StatelessWidget {
    get data() {
      return this[data$0];
    }
    set data(value) {
      super.data = value;
    }
    get textSpan() {
      return this[textSpan$];
    }
    set textSpan(value) {
      super.textSpan = value;
    }
    get style() {
      return this[style$0];
    }
    set style(value) {
      super.style = value;
    }
    get strutStyle() {
      return this[strutStyle$0];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get textAlign() {
      return this[textAlign$1];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$6];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$3];
    }
    set locale(value) {
      super.locale = value;
    }
    get softWrap() {
      return this[softWrap$1];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$2];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$1];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get maxLines() {
      return this[maxLines$1];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$1];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get textHeightBehavior() {
      return this[textHeightBehavior$1];
    }
    set textHeightBehavior(value) {
      super.textHeightBehavior = value;
    }
    build(context) {
      let t24, t24$, t24$0, t24$1, t24$2, t24$3, t24$4, t24$5;
      let defaultTextStyle = text.DefaultTextStyle.of(context);
      let effectiveTextStyle = this.style;
      if (this.style == null || dart.test(this.style.inherit)) effectiveTextStyle = defaultTextStyle.style.merge(this.style);
      if (dart.test(media_query.MediaQuery.boldTextOverride(context))) effectiveTextStyle = effectiveTextStyle.merge(C537 || CT.C537);
      let result = new basic.RichText.new({textAlign: (t24$ = (t24 = this.textAlign, t24 == null ? defaultTextStyle.textAlign : t24), t24$ == null ? ui.TextAlign.start : t24$), textDirection: this.textDirection, locale: this.locale, softWrap: (t24$0 = this.softWrap, t24$0 == null ? defaultTextStyle.softWrap : t24$0), overflow: (t24$1 = this.overflow, t24$1 == null ? defaultTextStyle.overflow : t24$1), textScaleFactor: (t24$2 = this.textScaleFactor, t24$2 == null ? media_query.MediaQuery.textScaleFactorOf(context) : t24$2), maxLines: (t24$3 = this.maxLines, t24$3 == null ? defaultTextStyle.maxLines : t24$3), strutStyle: this.strutStyle, textWidthBasis: (t24$4 = this.textWidthBasis, t24$4 == null ? defaultTextStyle.textWidthBasis : t24$4), textHeightBehavior: (t24$5 = this.textHeightBehavior, t24$5 == null ? defaultTextStyle.textHeightBehavior : t24$5), text: new text_span.TextSpan.new({style: effectiveTextStyle, text: this.data, children: this.textSpan != null ? JSArrayOfInlineSpan().of([this.textSpan]) : null}), $creationLocationd_0dea112b090073317d4: C539 || CT.C539});
      if (this.semanticsLabel != null) {
        result = new basic.Semantics.new({textDirection: this.textDirection, label: this.semanticsLabel, child: new basic.ExcludeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C552 || CT.C552}), $creationLocationd_0dea112b090073317d4: C555 || CT.C555});
      }
      return result;
    }
    debugFillProperties(properties) {
      let t24;
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("data", this.data, {showName: false}));
      if (this.textSpan != null) {
        properties.add(this.textSpan.toDiagnosticsNode({name: "textSpan", style: diagnostics$.DiagnosticsTreeStyle.transition}));
      }
      t24 = this.style;
      t24 == null ? null : t24.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextWidthBasis()).new("textWidthBasis", this.textWidthBasis, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfTextHeightBehavior()).new("textHeightBehavior", this.textHeightBehavior, {defaultValue: null}));
      if (this.semanticsLabel != null) {
        properties.add(new diagnostics$.StringProperty.new("semanticsLabel", this.semanticsLabel));
      }
    }
  };
  (text.Text.new = function(data, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
    let overflow = opts && 'overflow' in opts ? opts.overflow : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$0] = data;
    this[style$0] = style;
    this[strutStyle$0] = strutStyle;
    this[textAlign$1] = textAlign;
    this[textDirection$6] = textDirection;
    this[locale$3] = locale;
    this[softWrap$1] = softWrap;
    this[overflow$2] = overflow;
    this[textScaleFactor$1] = textScaleFactor;
    this[maxLines$1] = maxLines;
    this[semanticsLabel$] = semanticsLabel;
    this[textWidthBasis$1] = textWidthBasis;
    this[textHeightBehavior$1] = textHeightBehavior;
    if (!(data != null)) dart.assertFailed("A non-null String must be provided to a Text widget.", "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 298, 10, "data != null");
    this[textSpan$] = null;
    text.Text.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.Text.prototype;
  (text.Text.rich = function(textSpan, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : null;
    let overflow = opts && 'overflow' in opts ? opts.overflow : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    let textHeightBehavior = opts && 'textHeightBehavior' in opts ? opts.textHeightBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textSpan$] = textSpan;
    this[style$0] = style;
    this[strutStyle$0] = strutStyle;
    this[textAlign$1] = textAlign;
    this[textDirection$6] = textDirection;
    this[locale$3] = locale;
    this[softWrap$1] = softWrap;
    this[overflow$2] = overflow;
    this[textScaleFactor$1] = textScaleFactor;
    this[maxLines$1] = maxLines;
    this[semanticsLabel$] = semanticsLabel;
    this[textWidthBasis$1] = textWidthBasis;
    this[textHeightBehavior$1] = textHeightBehavior;
    if (!(textSpan != null)) dart.assertFailed("A non-null TextSpan must be provided to a Text.rich widget.", "org-dartlang-app:///packages/flutter/src/widgets/text.dart", 330, 10, "textSpan != null");
    this[data$0] = null;
    text.Text.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text.Text.prototype;
  dart.addTypeTests(text.Text);
  dart.setMethodSignature(text.Text, () => ({
    __proto__: dart.getMethods(text.Text.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text.Text, "package:flutter/src/widgets/text.dart");
  dart.setFieldSignature(text.Text, () => ({
    __proto__: dart.getFields(text.Text.__proto__),
    data: dart.finalFieldType(core.String),
    textSpan: dart.finalFieldType(inline_span.InlineSpan),
    style: dart.finalFieldType(text_style.TextStyle),
    strutStyle: dart.finalFieldType(strut_style.StrutStyle),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(ui.TextDirection),
    locale: dart.finalFieldType(ui.Locale),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    textScaleFactor: dart.finalFieldType(core.double),
    maxLines: dart.finalFieldType(core.int),
    semanticsLabel: dart.finalFieldType(core.String),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    textHeightBehavior: dart.finalFieldType(ui.TextHeightBehavior)
  }));
  var themes$ = dart.privateName(inherited_theme, "_CaptureAll.themes");
  var child$14 = dart.privateName(inherited_theme, "_CaptureAll.child");
  inherited_theme._CaptureAll = class _CaptureAll extends framework.StatelessWidget {
    get themes() {
      return this[themes$];
    }
    set themes(value) {
      super.themes = value;
    }
    get child() {
      return this[child$14];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let wrappedChild = this.child;
      for (let theme of this.themes)
        wrappedChild = theme.wrap(context, wrappedChild);
      return wrappedChild;
    }
  };
  (inherited_theme._CaptureAll.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let themes = opts && 'themes' in opts ? opts.themes : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[themes$] = themes;
    this[child$14] = child;
    if (!(themes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_theme.dart", 142, 15, "themes != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_theme.dart", 142, 39, "child != null");
    inherited_theme._CaptureAll.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = inherited_theme._CaptureAll.prototype;
  dart.addTypeTests(inherited_theme._CaptureAll);
  dart.setMethodSignature(inherited_theme._CaptureAll, () => ({
    __proto__: dart.getMethods(inherited_theme._CaptureAll.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(inherited_theme._CaptureAll, "package:flutter/src/widgets/inherited_theme.dart");
  dart.setFieldSignature(inherited_theme._CaptureAll, () => ({
    __proto__: dart.getFields(inherited_theme._CaptureAll.__proto__),
    themes: dart.finalFieldType(core.List$(inherited_theme.InheritedTheme)),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _keys = dart.privateName(shortcuts$, "_keys");
  const _is_KeySet_default = Symbol('_is_KeySet_default');
  shortcuts$.KeySet$ = dart.generic(T => {
    var _HashSetOfT = () => (_HashSetOfT = dart.constFn(collection._HashSet$(T)))();
    var HashSetOfT = () => (HashSetOfT = dart.constFn(collection.HashSet$(T)))();
    var UnmodifiableSetViewOfT = () => (UnmodifiableSetViewOfT = dart.constFn(unmodifiable_wrappers.UnmodifiableSetView$(T)))();
    var KeySetOfT = () => (KeySetOfT = dart.constFn(shortcuts$.KeySet$(T)))();
    class KeySet extends core.Object {
      get keys() {
        return new (UnmodifiableSetViewOfT()).new(this[_keys]);
      }
      _equals(other) {
        if (other == null) return false;
        if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) {
          return false;
        }
        return KeySetOfT().is(other) && dart.test(collections.setEquals(T, other[_keys], this[_keys]));
      }
      get hashCode() {
        return ui.hashList(this[_keys]);
      }
    }
    (KeySet.new = function(key1, key2 = null, key3 = null, key4 = null) {
      let t24;
      if (!(key1 != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 42, 16, "key1 != null");
      this[_keys] = (t24 = new (_HashSetOfT()).new(), t24.add(key1), t24);
      let count = 1;
      if (key2 != null) {
        this[_keys].add(key2);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 47, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (key3 != null) {
        this[_keys].add(key3);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 54, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (key4 != null) {
        this[_keys].add(key4);
        if (!dart.test(dart.fn(() => {
          count = count + 1;
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 61, 14, "() {\r\n        count++;\r\n        return true;\r\n      }()");
      }
      if (!(this[_keys][$length] === count)) dart.assertFailed("Two or more provided keys are identical. Each key must appear only once.", "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 66, 12, "_keys.length == count");
    }).prototype = KeySet.prototype;
    (KeySet.fromSet = function(keys) {
      if (!(keys != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 75, 16, "keys != null");
      if (!dart.test(keys[$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 76, 16, "keys.isNotEmpty");
      if (!!dart.test(keys.contains(null))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 77, 16, "!keys.contains(null)");
      this[_keys] = HashSetOfT().from(keys);
      ;
    }).prototype = KeySet.prototype;
    dart.addTypeTests(KeySet);
    KeySet.prototype[_is_KeySet_default] = true;
    dart.setMethodSignature(KeySet, () => ({
      __proto__: dart.getMethods(KeySet.__proto__),
      _equals: dart.fnType(core.bool, [core.Object]),
      [$_equals]: dart.fnType(core.bool, [core.Object])
    }));
    dart.setGetterSignature(KeySet, () => ({
      __proto__: dart.getGetters(KeySet.__proto__),
      keys: core.Set$(T)
    }));
    dart.setLibraryUri(KeySet, "package:flutter/src/widgets/shortcuts.dart");
    dart.setFieldSignature(KeySet, () => ({
      __proto__: dart.getFields(KeySet.__proto__),
      [_keys]: dart.finalFieldType(collection.HashSet$(T))
    }));
    dart.defineExtensionMethods(KeySet, ['_equals']);
    dart.defineExtensionAccessors(KeySet, ['hashCode']);
    return KeySet;
  });
  shortcuts$.KeySet = shortcuts$.KeySet$();
  dart.addTypeTests(shortcuts$.KeySet, _is_KeySet_default);
  const KeySet_DiagnosticableMixin$36 = class KeySet_DiagnosticableMixin extends shortcuts$.KeySet$(keyboard_key.LogicalKeyboardKey) {};
  (KeySet_DiagnosticableMixin$36.new = function(key1, key2, key3, key4) {
    KeySet_DiagnosticableMixin$36.__proto__.new.call(this, key1, key2, key3, key4);
  }).prototype = KeySet_DiagnosticableMixin$36.prototype;
  (KeySet_DiagnosticableMixin$36.fromSet = function(keys) {
    KeySet_DiagnosticableMixin$36.__proto__.fromSet.call(this, keys);
  }).prototype = KeySet_DiagnosticableMixin$36.prototype;
  dart.applyMixin(KeySet_DiagnosticableMixin$36, diagnostics$.DiagnosticableMixin);
  shortcuts$.LogicalKeySet = class LogicalKeySet extends KeySet_DiagnosticableMixin$36 {
    debugDescribeKeys() {
      let t24;
      let sortedKeys = (t24 = this.keys[$toList](), t24[$sort](dart.fn((a, b) => {
        let aIsModifier = dart.test(a.synonyms[$isNotEmpty]) || dart.test(shortcuts$.LogicalKeySet._modifiers.contains(a));
        let bIsModifier = dart.test(b.synonyms[$isNotEmpty]) || dart.test(shortcuts$.LogicalKeySet._modifiers.contains(b));
        if (aIsModifier && !bIsModifier) {
          return -1;
        } else if (bIsModifier && !aIsModifier) {
          return 1;
        }
        return a.debugName[$compareTo](b.debugName);
      }, LogicalKeyboardKeyAndLogicalKeyboardKeyToint())), t24);
      return sortedKeys[$map](core.String, dart.fn(key => dart.toString(key.debugName), LogicalKeyboardKeyToString()))[$join](" + ");
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSetOfLogicalKeyboardKey()).new("keys", this[_keys], {description: this.debugDescribeKeys()}));
    }
  };
  (shortcuts$.LogicalKeySet.new = function(key1, key2 = null, key3 = null, key4 = null) {
    shortcuts$.LogicalKeySet.__proto__.new.call(this, key1, key2, key3, key4);
    ;
  }).prototype = shortcuts$.LogicalKeySet.prototype;
  (shortcuts$.LogicalKeySet.fromSet = function(keys) {
    shortcuts$.LogicalKeySet.__proto__.fromSet.call(this, keys);
    ;
  }).prototype = shortcuts$.LogicalKeySet.prototype;
  dart.addTypeTests(shortcuts$.LogicalKeySet);
  shortcuts$.LogicalKeySet[dart.implements] = () => [diagnostics$.Diagnosticable];
  dart.setMethodSignature(shortcuts$.LogicalKeySet, () => ({
    __proto__: dart.getMethods(shortcuts$.LogicalKeySet.__proto__),
    debugDescribeKeys: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(shortcuts$.LogicalKeySet, "package:flutter/src/widgets/shortcuts.dart");
  dart.defineLazy(shortcuts$.LogicalKeySet, {
    /*shortcuts$.LogicalKeySet._modifiers*/get _modifiers() {
      return LinkedHashSetOfLogicalKeyboardKey().from([keyboard_key.LogicalKeyboardKey.alt, keyboard_key.LogicalKeyboardKey.control, keyboard_key.LogicalKeyboardKey.meta, keyboard_key.LogicalKeyboardKey.shift]);
    }
  });
  var C560;
  var C561;
  shortcuts$.ShortcutMapProperty = class ShortcutMapProperty extends diagnostics$.DiagnosticsProperty$(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)) {
    valueToString(opts) {
      let parentConfiguration = opts && 'parentConfiguration' in opts ? opts.parentConfiguration : null;
      return "{" + dart.str(this.value[$keys][$map](core.String, dart.fn(keySet => "{" + dart.str(keySet.debugDescribeKeys()) + "}: " + dart.str(this.value[$_get](keySet)), LogicalKeySetToString()))[$join](", ")) + "}";
    }
  };
  (shortcuts$.ShortcutMapProperty.new = function(name, value, opts) {
    let showName = opts && 'showName' in opts ? opts.showName : true;
    let defaultValue = opts && 'defaultValue' in opts ? opts.defaultValue : C560 || CT.C560;
    let level = opts && 'level' in opts ? opts.level : C561 || CT.C561;
    let description = opts && 'description' in opts ? opts.description : null;
    if (!(showName != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 183, 15, "showName != null");
    if (!(level != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 184, 15, "level != null");
    shortcuts$.ShortcutMapProperty.__proto__.new.call(this, name, value, {showName: showName, defaultValue: defaultValue, level: level, description: description});
    ;
  }).prototype = shortcuts$.ShortcutMapProperty.prototype;
  dart.addTypeTests(shortcuts$.ShortcutMapProperty);
  dart.setLibraryUri(shortcuts$.ShortcutMapProperty, "package:flutter/src/widgets/shortcuts.dart");
  var C562;
  var _shortcuts = dart.privateName(shortcuts$, "_shortcuts");
  var modal$ = dart.privateName(shortcuts$, "ShortcutManager.modal");
  const ChangeNotifier_DiagnosticableMixin$36 = class ChangeNotifier_DiagnosticableMixin extends change_notifier.ChangeNotifier {};
  (ChangeNotifier_DiagnosticableMixin$36.new = function() {
    ChangeNotifier_DiagnosticableMixin$36.__proto__.new.call(this);
  }).prototype = ChangeNotifier_DiagnosticableMixin$36.prototype;
  dart.applyMixin(ChangeNotifier_DiagnosticableMixin$36, diagnostics$.DiagnosticableMixin);
  shortcuts$.ShortcutManager = class ShortcutManager extends ChangeNotifier_DiagnosticableMixin$36 {
    get modal() {
      return this[modal$];
    }
    set modal(value) {
      super.modal = value;
    }
    get shortcuts() {
      return this[_shortcuts];
    }
    set shortcuts(value) {
      if (!dart.test(collections.mapEquals(shortcuts$.LogicalKeySet, actions$.Intent, this[_shortcuts], value))) {
        this[_shortcuts] = value;
        this.notifyListeners();
      }
    }
    handleKeypress(context, event, opts) {
      let t24, t24$;
      let keysPressed = opts && 'keysPressed' in opts ? opts.keysPressed : null;
      if (!raw_keyboard.RawKeyDownEvent.is(event)) {
        return false;
      }
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 250, 12, "context != null");
      let keySet = (t24 = keysPressed, t24 == null ? new shortcuts$.LogicalKeySet.fromSet(raw_keyboard.RawKeyboard.instance.keysPressed) : t24);
      let matchedIntent = this[_shortcuts][$_get](keySet);
      if (matchedIntent == null) {
        let pseudoKeys = LinkedHashSetOfLogicalKeyboardKey().new();
        for (let setKey of keySet.keys) {
          let synonyms = setKey.synonyms;
          if (dart.test(synonyms[$isNotEmpty])) {
            pseudoKeys.add(synonyms[$first]);
          } else {
            pseudoKeys.add(setKey);
          }
        }
        matchedIntent = this[_shortcuts][$_get](new shortcuts$.LogicalKeySet.fromSet(pseudoKeys));
      }
      if (matchedIntent != null) {
        let primaryContext = (t24$ = focus_manager.primaryFocus, t24$ == null ? null : t24$.context);
        if (primaryContext == null) {
          return false;
        }
        return actions$.Actions.invoke(primaryContext, matchedIntent, {nullOk: true});
      }
      return false;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfMapOfLogicalKeySet$Intent()).new("shortcuts", this[_shortcuts]));
      properties.add(new diagnostics$.FlagProperty.new("modal", {value: this.modal, ifTrue: "modal", defaultValue: false}));
    }
  };
  (shortcuts$.ShortcutManager.new = function(opts) {
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : C562 || CT.C562;
    let modal = opts && 'modal' in opts ? opts.modal : false;
    this[modal$] = modal;
    if (!(shortcuts != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 211, 16, "shortcuts != null");
    this[_shortcuts] = shortcuts;
    shortcuts$.ShortcutManager.__proto__.new.call(this);
    ;
  }).prototype = shortcuts$.ShortcutManager.prototype;
  dart.addTypeTests(shortcuts$.ShortcutManager);
  shortcuts$.ShortcutManager[dart.implements] = () => [diagnostics$.Diagnosticable];
  dart.setMethodSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getMethods(shortcuts$.ShortcutManager.__proto__),
    handleKeypress: dart.fnType(core.bool, [framework.BuildContext, raw_keyboard.RawKeyEvent], {keysPressed: shortcuts$.LogicalKeySet}, {})
  }));
  dart.setGetterSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getGetters(shortcuts$.ShortcutManager.__proto__),
    shortcuts: core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)
  }));
  dart.setSetterSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getSetters(shortcuts$.ShortcutManager.__proto__),
    shortcuts: core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)
  }));
  dart.setLibraryUri(shortcuts$.ShortcutManager, "package:flutter/src/widgets/shortcuts.dart");
  dart.setFieldSignature(shortcuts$.ShortcutManager, () => ({
    __proto__: dart.getFields(shortcuts$.ShortcutManager.__proto__),
    modal: dart.finalFieldType(core.bool),
    [_shortcuts]: dart.fieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent))
  }));
  var manager$ = dart.privateName(shortcuts$, "Shortcuts.manager");
  var shortcuts$1 = dart.privateName(shortcuts$, "Shortcuts.shortcuts");
  var child$15 = dart.privateName(shortcuts$, "Shortcuts.child");
  var debugLabel$ = dart.privateName(shortcuts$, "Shortcuts.debugLabel");
  shortcuts$.Shortcuts = class Shortcuts extends framework.StatefulWidget {
    get manager() {
      return this[manager$];
    }
    set manager(value) {
      super.manager = value;
    }
    get shortcuts() {
      return this[shortcuts$1];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get child() {
      return this[child$15];
    }
    set child(value) {
      super.child = value;
    }
    get debugLabel() {
      return this[debugLabel$];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    static of(context, opts) {
      let t24;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 345, 12, "context != null");
      let inherited = context.dependOnInheritedWidgetOfExactType(shortcuts$._ShortcutsMarker);
      if (!dart.test(dart.fn(() => {
        if (dart.test(nullOk)) {
          return true;
        }
        if (inherited == null) {
          dart.throw(assertions.FlutterError.new("Unable to find a " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " widget in the context.\n" + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + ".of() was called with a context that does not contain a " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " widget.\n" + "No " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + " ancestor could be found starting from the context that was " + "passed to " + dart.str(dart.wrapType(shortcuts$.Shortcuts)) + ".of().\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 347, 12, "() {\r\n      if (nullOk) {\r\n        return true;\r\n      }\r\n      if (inherited == null) {\r\n        throw FlutterError('Unable to find a $Shortcuts widget in the context.\\n'\r\n            '$Shortcuts.of() was called with a context that does not contain a '\r\n            '$Shortcuts widget.\\n'\r\n            'No $Shortcuts ancestor could be found starting from the context that was '\r\n            'passed to $Shortcuts.of().\\n'\r\n            'The context used was:\\n'\r\n            '  $context');\r\n      }\r\n      return true;\r\n    }()");
      t24 = inherited;
      return t24 == null ? null : t24.notifier;
    }
    createState() {
      return new shortcuts$._ShortcutsState.new();
    }
    debugFillProperties(properties) {
      let t24, t24$;
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfShortcutManager()).new("manager", this.manager, {defaultValue: null}));
      properties.add(new shortcuts$.ShortcutMapProperty.new("shortcuts", this.shortcuts, {description: dart.test((t24$ = (t24 = this.debugLabel, t24 == null ? null : t24[$isNotEmpty]), t24$ == null ? false : t24$)) ? this.debugLabel : null}));
    }
  };
  (shortcuts$.Shortcuts.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let manager = opts && 'manager' in opts ? opts.manager : null;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[manager$] = manager;
    this[shortcuts$1] = shortcuts;
    this[child$15] = child;
    this[debugLabel$] = debugLabel;
    shortcuts$.Shortcuts.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = shortcuts$.Shortcuts.prototype;
  dart.addTypeTests(shortcuts$.Shortcuts);
  dart.setMethodSignature(shortcuts$.Shortcuts, () => ({
    __proto__: dart.getMethods(shortcuts$.Shortcuts.__proto__),
    createState: dart.fnType(shortcuts$._ShortcutsState, [])
  }));
  dart.setLibraryUri(shortcuts$.Shortcuts, "package:flutter/src/widgets/shortcuts.dart");
  dart.setFieldSignature(shortcuts$.Shortcuts, () => ({
    __proto__: dart.getFields(shortcuts$.Shortcuts.__proto__),
    manager: dart.finalFieldType(shortcuts$.ShortcutManager),
    shortcuts: dart.finalFieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)),
    child: dart.finalFieldType(framework.Widget),
    debugLabel: dart.finalFieldType(core.String)
  }));
  var _internalManager = dart.privateName(shortcuts$, "_internalManager");
  var _handleOnKey = dart.privateName(shortcuts$, "_handleOnKey");
  var C565;
  var C566;
  var C564;
  var C563;
  var C569;
  var C570;
  var C571;
  var C572;
  var C568;
  var C567;
  shortcuts$._ShortcutsState = class _ShortcutsState extends framework.State$(shortcuts$.Shortcuts) {
    get manager() {
      let t24;
      t24 = this.widget.manager;
      return t24 == null ? this[_internalManager] : t24;
    }
    dispose() {
      let t24;
      t24 = this[_internalManager];
      t24 == null ? null : t24.dispose();
      super.dispose();
    }
    initState() {
      super.initState();
      if (this.widget.manager == null) {
        this[_internalManager] = new shortcuts$.ShortcutManager.new();
      }
      this.manager.shortcuts = this.widget.shortcuts;
    }
    didUpdateWidget(oldWidget) {
      let t24;
      shortcuts$.Shortcuts._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.manager, oldWidget.manager)) {
        if (this.widget.manager != null) {
          t24 = this[_internalManager];
          t24 == null ? null : t24.dispose();
          this[_internalManager] = null;
        } else {
          this[_internalManager] == null ? this[_internalManager] = new shortcuts$.ShortcutManager.new() : null;
        }
      }
      this.manager.shortcuts = this.widget.shortcuts;
    }
    [_handleOnKey](node, event) {
      if (node.context == null) {
        return false;
      }
      return dart.test(this.manager.handleKeypress(node.context, event)) || dart.test(this.manager.modal);
    }
    build(context) {
      return new focus_scope.Focus.new({debugLabel: dart.str(dart.wrapType(shortcuts$.Shortcuts)), canRequestFocus: false, onKey: dart.bind(this, _handleOnKey), child: new shortcuts$._ShortcutsMarker.new({manager: this.manager, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C563 || CT.C563}), $creationLocationd_0dea112b090073317d4: C567 || CT.C567});
    }
  };
  (shortcuts$._ShortcutsState.new = function() {
    this[_internalManager] = null;
    shortcuts$._ShortcutsState.__proto__.new.call(this);
    ;
  }).prototype = shortcuts$._ShortcutsState.prototype;
  dart.addTypeTests(shortcuts$._ShortcutsState);
  dart.setMethodSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getMethods(shortcuts$._ShortcutsState.__proto__),
    [_handleOnKey]: dart.fnType(core.bool, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getGetters(shortcuts$._ShortcutsState.__proto__),
    manager: shortcuts$.ShortcutManager
  }));
  dart.setLibraryUri(shortcuts$._ShortcutsState, "package:flutter/src/widgets/shortcuts.dart");
  dart.setFieldSignature(shortcuts$._ShortcutsState, () => ({
    __proto__: dart.getFields(shortcuts$._ShortcutsState.__proto__),
    [_internalManager]: dart.fieldType(shortcuts$.ShortcutManager)
  }));
  const _is_InheritedNotifier_default = Symbol('_is_InheritedNotifier_default');
  var notifier$ = dart.privateName(inherited_notifier, "InheritedNotifier.notifier");
  inherited_notifier.InheritedNotifier$ = dart.generic(T => {
    var InheritedNotifierOfT = () => (InheritedNotifierOfT = dart.constFn(inherited_notifier.InheritedNotifier$(T)))();
    var _InheritedNotifierElementOfT = () => (_InheritedNotifierElementOfT = dart.constFn(inherited_notifier._InheritedNotifierElement$(T)))();
    class InheritedNotifier extends framework.InheritedWidget {
      get notifier() {
        return this[notifier$];
      }
      set notifier(value) {
        super.notifier = value;
      }
      updateShouldNotify(oldWidget) {
        InheritedNotifierOfT()._check(oldWidget);
        return !dart.equals(oldWidget.notifier, this.notifier);
      }
      createElement() {
        return new (_InheritedNotifierElementOfT()).new(this);
      }
    }
    (InheritedNotifier.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let notifier = opts && 'notifier' in opts ? opts.notifier : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[notifier$] = notifier;
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/inherited_notifier.dart", 50, 15, "child != null");
      InheritedNotifier.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = InheritedNotifier.prototype;
    dart.addTypeTests(InheritedNotifier);
    InheritedNotifier.prototype[_is_InheritedNotifier_default] = true;
    dart.setMethodSignature(InheritedNotifier, () => ({
      __proto__: dart.getMethods(InheritedNotifier.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [core.Object]),
      createElement: dart.fnType(inherited_notifier._InheritedNotifierElement$(T), [])
    }));
    dart.setLibraryUri(InheritedNotifier, "package:flutter/src/widgets/inherited_notifier.dart");
    dart.setFieldSignature(InheritedNotifier, () => ({
      __proto__: dart.getFields(InheritedNotifier.__proto__),
      notifier: dart.finalFieldType(T)
    }));
    return InheritedNotifier;
  });
  inherited_notifier.InheritedNotifier = inherited_notifier.InheritedNotifier$();
  dart.addTypeTests(inherited_notifier.InheritedNotifier, _is_InheritedNotifier_default);
  shortcuts$._ShortcutsMarker = class _ShortcutsMarker extends inherited_notifier.InheritedNotifier$(shortcuts$.ShortcutManager) {};
  (shortcuts$._ShortcutsMarker.new = function(opts) {
    let manager = opts && 'manager' in opts ? opts.manager : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(manager != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 434, 16, "manager != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/shortcuts.dart", 435, 16, "child != null");
    shortcuts$._ShortcutsMarker.__proto__.new.call(this, {notifier: manager, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = shortcuts$._ShortcutsMarker.prototype;
  dart.addTypeTests(shortcuts$._ShortcutsMarker);
  dart.setLibraryUri(shortcuts$._ShortcutsMarker, "package:flutter/src/widgets/shortcuts.dart");
  var _dirty$ = dart.privateName(inherited_notifier, "_dirty");
  var _handleUpdate = dart.privateName(inherited_notifier, "_handleUpdate");
  const _is__InheritedNotifierElement_default = Symbol('_is__InheritedNotifierElement_default');
  inherited_notifier._InheritedNotifierElement$ = dart.generic(T => {
    var InheritedNotifierOfT = () => (InheritedNotifierOfT = dart.constFn(inherited_notifier.InheritedNotifier$(T)))();
    class _InheritedNotifierElement extends framework.InheritedElement {
      get widget() {
        return InheritedNotifierOfT().as(super.widget);
      }
      update(newWidget) {
        let t24, t24$;
        InheritedNotifierOfT()._check(newWidget);
        let oldNotifier = this.widget.notifier;
        let newNotifier = newWidget.notifier;
        if (!dart.equals(oldNotifier, newNotifier)) {
          t24 = oldNotifier;
          t24 == null ? null : t24.removeListener(dart.bind(this, _handleUpdate));
          t24$ = newNotifier;
          t24$ == null ? null : t24$.addListener(dart.bind(this, _handleUpdate));
        }
        super.update(newWidget);
      }
      build() {
        if (dart.test(this[_dirty$])) this.notifyClients(this.widget);
        return super.build();
      }
      [_handleUpdate]() {
        this[_dirty$] = true;
        this.markNeedsBuild();
      }
      notifyClients(oldWidget) {
        InheritedNotifierOfT()._check(oldWidget);
        super.notifyClients(oldWidget);
        this[_dirty$] = false;
      }
      unmount() {
        let t24;
        t24 = this.widget.notifier;
        t24 == null ? null : t24.removeListener(dart.bind(this, _handleUpdate));
        super.unmount();
      }
    }
    (_InheritedNotifierElement.new = function(widget) {
      let t24;
      this[_dirty$] = false;
      _InheritedNotifierElement.__proto__.new.call(this, widget);
      t24 = widget.notifier;
      t24 == null ? null : t24.addListener(dart.bind(this, _handleUpdate));
    }).prototype = _InheritedNotifierElement.prototype;
    dart.addTypeTests(_InheritedNotifierElement);
    _InheritedNotifierElement.prototype[_is__InheritedNotifierElement_default] = true;
    dart.setMethodSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getMethods(_InheritedNotifierElement.__proto__),
      [_handleUpdate]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getGetters(_InheritedNotifierElement.__proto__),
      widget: inherited_notifier.InheritedNotifier$(T)
    }));
    dart.setLibraryUri(_InheritedNotifierElement, "package:flutter/src/widgets/inherited_notifier.dart");
    dart.setFieldSignature(_InheritedNotifierElement, () => ({
      __proto__: dart.getFields(_InheritedNotifierElement.__proto__),
      [_dirty$]: dart.fieldType(core.bool)
    }));
    return _InheritedNotifierElement;
  });
  inherited_notifier._InheritedNotifierElement = inherited_notifier._InheritedNotifierElement$();
  dart.addTypeTests(inherited_notifier._InheritedNotifierElement, _is__InheritedNotifierElement_default);
  var debugLabel$0 = dart.privateName(focus_scope, "Focus.debugLabel");
  var child$16 = dart.privateName(focus_scope, "Focus.child");
  var onKey$ = dart.privateName(focus_scope, "Focus.onKey");
  var onFocusChange$ = dart.privateName(focus_scope, "Focus.onFocusChange");
  var autofocus$ = dart.privateName(focus_scope, "Focus.autofocus");
  var focusNode$ = dart.privateName(focus_scope, "Focus.focusNode");
  var skipTraversal$ = dart.privateName(focus_scope, "Focus.skipTraversal");
  var canRequestFocus$ = dart.privateName(focus_scope, "Focus.canRequestFocus");
  focus_scope.Focus = class Focus extends framework.StatefulWidget {
    get debugLabel() {
      return this[debugLabel$0];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get child() {
      return this[child$16];
    }
    set child(value) {
      super.child = value;
    }
    get onKey() {
      return this[onKey$];
    }
    set onKey(value) {
      super.onKey = value;
    }
    get onFocusChange() {
      return this[onFocusChange$];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[autofocus$];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[focusNode$];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get skipTraversal() {
      return this[skipTraversal$];
    }
    set skipTraversal(value) {
      super.skipTraversal = value;
    }
    get canRequestFocus() {
      return this[canRequestFocus$];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    static of(context, opts) {
      let t24;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      let scopeOk = opts && 'scopeOk' in opts ? opts.scopeOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 267, 12, "context != null");
      if (!(nullOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 268, 12, "nullOk != null");
      if (!(scopeOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 269, 12, "scopeOk != null");
      let marker = context.dependOnInheritedWidgetOfExactType(focus_scope._FocusMarker);
      let node = (t24 = marker, t24 == null ? null : t24.notifier);
      if (node == null) {
        if (!dart.test(nullOk)) {
          dart.throw(assertions.FlutterError.new("Focus.of() was called with a context that does not contain a Focus widget.\n" + "No Focus widget ancestor could be found starting from the context that was passed to " + "Focus.of(). This can happen because you are using a widget that looks for a Focus " + "ancestor, and do not have a Focus widget descendant in the nearest FocusScope.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return null;
      }
      if (!dart.test(scopeOk) && focus_manager.FocusScopeNode.is(node)) {
        if (!dart.test(nullOk)) {
          dart.throw(assertions.FlutterError.new("Focus.of() was called with a context that does not contain a Focus between the given " + "context and the nearest FocusScope widget.\n" + "No Focus ancestor could be found starting from the context that was passed to " + "Focus.of() to the point where it found the nearest FocusScope widget. This can happen " + "because you are using a widget that looks for a Focus ancestor, and do not have a " + "Focus widget ancestor in the current FocusScope.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return null;
      }
      return node;
    }
    static isAt(context) {
      let t24, t24$;
      t24$ = (t24 = focus_scope.Focus.of(context, {nullOk: true}), t24 == null ? null : t24.hasFocus);
      return t24$ == null ? false : t24$;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("debugLabel", this.debugLabel, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("autofocus", {value: this.autofocus, ifTrue: "AUTOFOCUS", defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("node", this.focusNode, {defaultValue: null}));
    }
    createState() {
      return new focus_scope._FocusState.new();
    }
  };
  (focus_scope.Focus.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$16] = child;
    this[focusNode$] = focusNode;
    this[autofocus$] = autofocus;
    this[onFocusChange$] = onFocusChange;
    this[onKey$] = onKey;
    this[debugLabel$0] = debugLabel;
    this[canRequestFocus$] = canRequestFocus;
    this[skipTraversal$] = skipTraversal;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 152, 16, "child != null");
    if (!(autofocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 153, 16, "autofocus != null");
    focus_scope.Focus.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope.Focus.prototype;
  dart.addTypeTests(focus_scope.Focus);
  dart.setMethodSignature(focus_scope.Focus, () => ({
    __proto__: dart.getMethods(focus_scope.Focus.__proto__),
    createState: dart.fnType(focus_scope._FocusState, [])
  }));
  dart.setLibraryUri(focus_scope.Focus, "package:flutter/src/widgets/focus_scope.dart");
  dart.setFieldSignature(focus_scope.Focus, () => ({
    __proto__: dart.getFields(focus_scope.Focus.__proto__),
    debugLabel: dart.finalFieldType(core.String),
    child: dart.finalFieldType(framework.Widget),
    onKey: dart.finalFieldType(dart.fnType(core.bool, [focus_manager.FocusNode, raw_keyboard.RawKeyEvent])),
    onFocusChange: dart.finalFieldType(dart.fnType(dart.void, [core.bool])),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(focus_manager.FocusNode),
    skipTraversal: dart.finalFieldType(core.bool),
    canRequestFocus: dart.finalFieldType(core.bool)
  }));
  var _internalNode = dart.privateName(focus_scope, "_internalNode");
  var _hasPrimaryFocus = dart.privateName(focus_scope, "_hasPrimaryFocus");
  var _canRequestFocus$ = dart.privateName(focus_scope, "_canRequestFocus");
  var _didAutofocus = dart.privateName(focus_scope, "_didAutofocus");
  var _focusAttachment = dart.privateName(focus_scope, "_focusAttachment");
  var _initNode = dart.privateName(focus_scope, "_initNode");
  var _createNode = dart.privateName(focus_scope, "_createNode");
  var _handleFocusChanged = dart.privateName(focus_scope, "_handleFocusChanged");
  var _handleAutofocus = dart.privateName(focus_scope, "_handleAutofocus");
  var C575;
  var C576;
  var C577;
  var C574;
  var C573;
  var C580;
  var C581;
  var C579;
  var C578;
  focus_scope._FocusState = class _FocusState extends framework.State$(focus_scope.Focus) {
    get focusNode() {
      let t24;
      t24 = this.widget.focusNode;
      return t24 == null ? this[_internalNode] : t24;
    }
    initState() {
      super.initState();
      this[_initNode]();
    }
    [_initNode]() {
      if (this.widget.focusNode == null) {
        this[_internalNode] == null ? this[_internalNode] = this[_createNode]() : null;
      }
      if (this.widget.skipTraversal != null) {
        this.focusNode.skipTraversal = this.widget.skipTraversal;
      }
      if (this.widget.canRequestFocus != null) {
        this.focusNode.canRequestFocus = this.widget.canRequestFocus;
      }
      this[_canRequestFocus$] = this.focusNode.canRequestFocus;
      this[_hasPrimaryFocus] = this.focusNode.hasPrimaryFocus;
      this[_focusAttachment] = this.focusNode.attach(this.context, {onKey: this.widget.onKey});
      this.focusNode.addListener(dart.bind(this, _handleFocusChanged));
    }
    [_createNode]() {
      let t24, t24$;
      return new focus_manager.FocusNode.new({debugLabel: this.widget.debugLabel, canRequestFocus: (t24 = this.widget.canRequestFocus, t24 == null ? true : t24), skipTraversal: (t24$ = this.widget.skipTraversal, t24$ == null ? false : t24$)});
    }
    dispose() {
      let t24;
      this.focusNode.removeListener(dart.bind(this, _handleFocusChanged));
      this[_focusAttachment].detach();
      t24 = this[_internalNode];
      t24 == null ? null : t24.dispose();
      super.dispose();
    }
    didChangeDependencies() {
      let t24;
      super.didChangeDependencies();
      t24 = this[_focusAttachment];
      t24 == null ? null : t24.reparent();
      this[_handleAutofocus]();
    }
    [_handleAutofocus]() {
      if (!dart.test(this[_didAutofocus]) && dart.test(this.widget.autofocus)) {
        focus_scope.FocusScope.of(this.context).autofocus(this.focusNode);
        this[_didAutofocus] = true;
      }
    }
    deactivate() {
      let t24;
      super.deactivate();
      t24 = this[_focusAttachment];
      t24 == null ? null : t24.reparent();
      this[_didAutofocus] = false;
    }
    didUpdateWidget(oldWidget) {
      focus_scope.Focus._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.test(dart.fn(() => {
        if (oldWidget.debugLabel != this.widget.debugLabel && this[_internalNode] != null) {
          this[_internalNode].debugLabel = this.widget.debugLabel;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 414, 12, "() {\r\n      // Only update the debug label in debug builds, and only if we own the\r\n      // node.\r\n      if (oldWidget.debugLabel != widget.debugLabel && _internalNode != null) {\r\n        _internalNode.debugLabel = widget.debugLabel;\r\n      }\r\n      return true;\r\n    }()");
      if (dart.equals(oldWidget.focusNode, this.widget.focusNode)) {
        if (this.widget.skipTraversal != null) {
          this.focusNode.skipTraversal = this.widget.skipTraversal;
        }
        if (this.widget.canRequestFocus != null) {
          this.focusNode.canRequestFocus = this.widget.canRequestFocus;
        }
      } else {
        this[_focusAttachment].detach();
        this.focusNode.removeListener(dart.bind(this, _handleFocusChanged));
        this[_initNode]();
      }
      if (!dart.equals(oldWidget.autofocus, this.widget.autofocus)) {
        this[_handleAutofocus]();
      }
    }
    [_handleFocusChanged]() {
      let hasPrimaryFocus = this.focusNode.hasPrimaryFocus;
      let canRequestFocus = this.focusNode.canRequestFocus;
      if (this.widget.onFocusChange != null) {
        this.widget.onFocusChange(this.focusNode.hasFocus);
      }
      if (!dart.equals(this[_hasPrimaryFocus], hasPrimaryFocus)) {
        this.setState(dart.fn(() => {
          this[_hasPrimaryFocus] = hasPrimaryFocus;
        }, VoidToNull()));
      }
      if (!dart.equals(this[_canRequestFocus$], canRequestFocus)) {
        this.setState(dart.fn(() => {
          this[_canRequestFocus$] = canRequestFocus;
        }, VoidToNull()));
      }
    }
    build(context) {
      this[_focusAttachment].reparent();
      return new focus_scope._FocusMarker.new({node: this.focusNode, child: new basic.Semantics.new({focusable: this[_canRequestFocus$], focused: this[_hasPrimaryFocus], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C573 || CT.C573}), $creationLocationd_0dea112b090073317d4: C578 || CT.C578});
    }
  };
  (focus_scope._FocusState.new = function() {
    this[_internalNode] = null;
    this[_hasPrimaryFocus] = null;
    this[_canRequestFocus$] = null;
    this[_didAutofocus] = false;
    this[_focusAttachment] = null;
    focus_scope._FocusState.__proto__.new.call(this);
    ;
  }).prototype = focus_scope._FocusState.prototype;
  dart.addTypeTests(focus_scope._FocusState);
  dart.setMethodSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getMethods(focus_scope._FocusState.__proto__),
    [_initNode]: dart.fnType(dart.void, []),
    [_createNode]: dart.fnType(focus_manager.FocusNode, []),
    [_handleAutofocus]: dart.fnType(dart.void, []),
    [_handleFocusChanged]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getGetters(focus_scope._FocusState.__proto__),
    focusNode: focus_manager.FocusNode
  }));
  dart.setLibraryUri(focus_scope._FocusState, "package:flutter/src/widgets/focus_scope.dart");
  dart.setFieldSignature(focus_scope._FocusState, () => ({
    __proto__: dart.getFields(focus_scope._FocusState.__proto__),
    [_internalNode]: dart.fieldType(focus_manager.FocusNode),
    [_hasPrimaryFocus]: dart.fieldType(core.bool),
    [_canRequestFocus$]: dart.fieldType(core.bool),
    [_didAutofocus]: dart.fieldType(core.bool),
    [_focusAttachment]: dart.fieldType(focus_manager.FocusAttachment)
  }));
  focus_scope.FocusScope = class FocusScope extends focus_scope.Focus {
    static of(context) {
      let t24, t24$, t24$0;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 556, 12, "context != null");
      let marker = context.dependOnInheritedWidgetOfExactType(focus_scope._FocusMarker);
      t24$0 = (t24$ = (t24 = marker, t24 == null ? null : t24.notifier), t24$ == null ? null : t24$.nearestScope);
      return t24$0 == null ? context.owner.focusManager.rootScope : t24$0;
    }
    createState() {
      return new focus_scope._FocusScopeState.new();
    }
  };
  (focus_scope.FocusScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let node = opts && 'node' in opts ? opts.node : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : null;
    let skipTraversal = opts && 'skipTraversal' in opts ? opts.skipTraversal : null;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 534, 16, "child != null");
    if (!(autofocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 535, 16, "autofocus != null");
    focus_scope.FocusScope.__proto__.new.call(this, {key: key, child: child, focusNode: node, autofocus: autofocus, onFocusChange: onFocusChange, canRequestFocus: canRequestFocus, skipTraversal: skipTraversal, onKey: onKey, debugLabel: debugLabel, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope.FocusScope.prototype;
  dart.addTypeTests(focus_scope.FocusScope);
  dart.setMethodSignature(focus_scope.FocusScope, () => ({
    __proto__: dart.getMethods(focus_scope.FocusScope.__proto__),
    createState: dart.fnType(focus_scope._FocusScopeState, [])
  }));
  dart.setLibraryUri(focus_scope.FocusScope, "package:flutter/src/widgets/focus_scope.dart");
  var C584;
  var C585;
  var C583;
  var C582;
  var C588;
  var C589;
  var C587;
  var C586;
  focus_scope._FocusScopeState = class _FocusScopeState extends focus_scope._FocusState {
    [_createNode]() {
      let t24, t24$;
      return new focus_manager.FocusScopeNode.new({debugLabel: this.widget.debugLabel, canRequestFocus: (t24 = this.widget.canRequestFocus, t24 == null ? true : t24), skipTraversal: (t24$ = this.widget.skipTraversal, t24$ == null ? false : t24$)});
    }
    build(context) {
      this[_focusAttachment].reparent();
      return new basic.Semantics.new({explicitChildNodes: true, child: new focus_scope._FocusMarker.new({node: this.focusNode, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C582 || CT.C582}), $creationLocationd_0dea112b090073317d4: C586 || CT.C586});
    }
  };
  (focus_scope._FocusScopeState.new = function() {
    focus_scope._FocusScopeState.__proto__.new.call(this);
    ;
  }).prototype = focus_scope._FocusScopeState.prototype;
  dart.addTypeTests(focus_scope._FocusScopeState);
  dart.setMethodSignature(focus_scope._FocusScopeState, () => ({
    __proto__: dart.getMethods(focus_scope._FocusScopeState.__proto__),
    [_createNode]: dart.fnType(focus_manager.FocusScopeNode, [])
  }));
  dart.setLibraryUri(focus_scope._FocusScopeState, "package:flutter/src/widgets/focus_scope.dart");
  focus_scope._FocusMarker = class _FocusMarker extends inherited_notifier.InheritedNotifier$(focus_manager.FocusNode) {};
  (focus_scope._FocusMarker.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let node = opts && 'node' in opts ? opts.node : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(node != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 594, 16, "node != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/focus_scope.dart", 595, 16, "child != null");
    focus_scope._FocusMarker.__proto__.new.call(this, {key: key, notifier: node, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = focus_scope._FocusMarker.prototype;
  dart.addTypeTests(focus_scope._FocusMarker);
  dart.setLibraryUri(focus_scope._FocusMarker, "package:flutter/src/widgets/focus_scope.dart");
  var onInvoke$ = dart.privateName(actions$, "CallbackAction.onInvoke");
  actions$.CallbackAction = class CallbackAction extends actions$.Action {
    get onInvoke() {
      return this[onInvoke$];
    }
    set onInvoke(value) {
      super.onInvoke = value;
    }
    invoke(node, intent) {
      actions$.Intent._check(intent);
      return this.onInvoke(node, intent);
    }
  };
  (actions$.CallbackAction.new = function(intentKey, opts) {
    let onInvoke = opts && 'onInvoke' in opts ? opts.onInvoke : null;
    this[onInvoke$] = onInvoke;
    if (!(onInvoke != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 129, 16, "onInvoke != null");
    actions$.CallbackAction.__proto__.new.call(this, intentKey);
    ;
  }).prototype = actions$.CallbackAction.prototype;
  dart.addTypeTests(actions$.CallbackAction);
  dart.setMethodSignature(actions$.CallbackAction, () => ({
    __proto__: dart.getMethods(actions$.CallbackAction.__proto__),
    invoke: dart.fnType(dart.void, [focus_manager.FocusNode, core.Object])
  }));
  dart.setLibraryUri(actions$.CallbackAction, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$.CallbackAction, () => ({
    __proto__: dart.getFields(actions$.CallbackAction.__proto__),
    onInvoke: dart.finalFieldType(dart.fnType(dart.void, [focus_manager.FocusNode, actions$.Intent]))
  }));
  actions$.ActionDispatcher = class ActionDispatcher extends diagnostics$.Diagnosticable {
    invokeAction(action, intent, opts) {
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      if (!(action != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 157, 12, "action != null");
      if (!(intent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 158, 12, "intent != null");
      focusNode == null ? focusNode = focus_manager.primaryFocus : null;
      if (action != null && dart.test(intent.isEnabled(focusNode.context))) {
        action.invoke(focusNode, intent);
        return true;
      }
      return false;
    }
  };
  (actions$.ActionDispatcher.new = function() {
    actions$.ActionDispatcher.__proto__.new.call(this);
    ;
  }).prototype = actions$.ActionDispatcher.prototype;
  dart.addTypeTests(actions$.ActionDispatcher);
  dart.setMethodSignature(actions$.ActionDispatcher, () => ({
    __proto__: dart.getMethods(actions$.ActionDispatcher.__proto__),
    invokeAction: dart.fnType(core.bool, [actions$.Action, actions$.Intent], {focusNode: focus_manager.FocusNode}, {})
  }));
  dart.setLibraryUri(actions$.ActionDispatcher, "package:flutter/src/widgets/actions.dart");
  var C590;
  var dispatcher$ = dart.privateName(actions$, "Actions.dispatcher");
  var actions$1 = dart.privateName(actions$, "Actions.actions");
  actions$.Actions = class Actions extends framework.InheritedWidget {
    get dispatcher() {
      return this[dispatcher$];
    }
    set dispatcher(value) {
      super.dispatcher = value;
    }
    get actions() {
      return this[actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    static _findDispatcher(element) {
      let t24;
      if (!actions$.Actions.is(element.widget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 217, 12, "element.widget is Actions");
      let actions = actions$.Actions.as(element.widget);
      let dispatcher = actions.dispatcher;
      if (dispatcher == null) {
        function visitAncestorElement(visitedElement) {
          if (!actions$.Actions.is(visitedElement.widget)) {
            return true;
          }
          let actions = actions$.Actions.as(visitedElement.widget);
          if (actions.dispatcher == null) {
            return true;
          }
          dispatcher = actions.dispatcher;
          return false;
        }
        dart.fn(visitAncestorElement, ElementTobool());
        element.visitAncestorElements(visitAncestorElement);
      }
      t24 = dispatcher;
      return t24 == null ? C590 || CT.C590 : t24;
    }
    static of(context, opts) {
      let t24, t24$;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 251, 12, "context != null");
      let inheritedElement = context.getElementForInheritedWidgetOfExactType(actions$.Actions);
      let inherited = actions$.Actions.as(context.dependOnInheritedElement(inheritedElement));
      if (!dart.test(dart.fn(() => {
        if (dart.test(nullOk)) {
          return true;
        }
        if (inherited == null) {
          dart.throw(assertions.FlutterError.new("Unable to find an " + dart.str(dart.wrapType(actions$.Actions)) + " widget in the context.\n" + dart.str(dart.wrapType(actions$.Actions)) + ".of() was called with a context that does not contain an " + dart.str(dart.wrapType(actions$.Actions)) + " widget.\n" + "No " + dart.str(dart.wrapType(actions$.Actions)) + " ancestor could be found starting from the context that " + "was passed to " + dart.str(dart.wrapType(actions$.Actions)) + ".of(). This can happen if the context comes " + "from a widget above those widgets.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 254, 12, "() {\r\n      if (nullOk) {\r\n        return true;\r\n      }\r\n      if (inherited == null) {\r\n        throw FlutterError('Unable to find an $Actions widget in the context.\\n'\r\n            '$Actions.of() was called with a context that does not contain an '\r\n            '$Actions widget.\\n'\r\n            'No $Actions ancestor could be found starting from the context that '\r\n            'was passed to $Actions.of(). This can happen if the context comes '\r\n            'from a widget above those widgets.\\n'\r\n            'The context used was:\\n'\r\n            '  $context');\r\n      }\r\n      return true;\r\n    }()");
      t24$ = (t24 = inherited, t24 == null ? null : t24.dispatcher);
      return t24$ == null ? actions$.Actions._findDispatcher(inheritedElement) : t24$;
    }
    static invoke(context, intent, opts) {
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 296, 12, "context != null");
      if (!(intent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 297, 12, "intent != null");
      let actionsElement = null;
      let action = null;
      function visitAncestorElement(element) {
        let t24;
        if (!actions$.Actions.is(element.widget)) {
          return true;
        }
        actionsElement = element;
        let actions = actions$.Actions.as(element.widget);
        action = (t24 = actions.actions[$_get](intent.key), t24 == null ? null : t24());
        return action == null;
      }
      dart.fn(visitAncestorElement, ElementTobool());
      context.visitAncestorElements(visitAncestorElement);
      if (!dart.test(dart.fn(() => {
        if (dart.test(nullOk)) {
          return true;
        }
        if (actionsElement == null) {
          dart.throw(assertions.FlutterError.new("Unable to find a " + dart.str(dart.wrapType(actions$.Actions)) + " widget in the context.\n" + dart.str(dart.wrapType(actions$.Actions)) + ".invoke() was called with a context that does not contain an " + dart.str(dart.wrapType(actions$.Actions)) + " widget.\n" + "No " + dart.str(dart.wrapType(actions$.Actions)) + " ancestor could be found starting from the context that " + "was passed to " + dart.str(dart.wrapType(actions$.Actions)) + ".invoke(). This can happen if the context comes " + "from a widget above those widgets.\n" + "The context used was:\n" + "  " + dart.str(context)));
        }
        if (action == null) {
          dart.throw(assertions.FlutterError.new("Unable to find an action for an intent in the " + dart.str(dart.wrapType(actions$.Actions)) + " widget in the context.\n" + dart.str(dart.wrapType(actions$.Actions)) + ".invoke() was called on an " + dart.str(dart.wrapType(actions$.Actions)) + " widget that doesn't " + "contain a mapping for the given intent.\n" + "The context used was:\n" + "  " + dart.str(context) + "\n" + "The intent requested was:\n" + "  " + dart.str(intent)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 316, 12, "() {\r\n      if (nullOk) {\r\n        return true;\r\n      }\r\n      if (actionsElement == null) {\r\n        throw FlutterError('Unable to find a $Actions widget in the context.\\n'\r\n            '$Actions.invoke() was called with a context that does not contain an '\r\n            '$Actions widget.\\n'\r\n            'No $Actions ancestor could be found starting from the context that '\r\n            'was passed to $Actions.invoke(). This can happen if the context comes '\r\n            'from a widget above those widgets.\\n'\r\n            'The context used was:\\n'\r\n            '  $context');\r\n      }\r\n      if (action == null) {\r\n        throw FlutterError('Unable to find an action for an intent in the $Actions widget in the context.\\n'\r\n            '$Actions.invoke() was called on an $Actions widget that doesn\\'t '\r\n            'contain a mapping for the given intent.\\n'\r\n            'The context used was:\\n'\r\n            '  $context\\n'\r\n            'The intent requested was:\\n'\r\n            '  $intent');\r\n      }\r\n      return true;\r\n    }()");
      if (action == null) {
        return false;
      }
      return actions$.Actions._findDispatcher(actionsElement).invokeAction(action, intent, {focusNode: focusNode});
    }
    updateShouldNotify(oldWidget) {
      actions$.Actions._check(oldWidget);
      return !dart.equals(oldWidget.dispatcher, this.dispatcher) || !dart.test(collections.mapEquals(key.LocalKey, VoidToAction(), oldWidget.actions, this.actions));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfActionDispatcher()).new("dispatcher", this.dispatcher));
      properties.add(new (DiagnosticsPropertyOfMapOfLocalKey$VoidToAction()).new("actions", this.actions));
    }
  };
  (actions$.Actions.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let dispatcher = opts && 'dispatcher' in opts ? opts.dispatcher : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dispatcher$] = dispatcher;
    this[actions$1] = actions;
    if (!(actions != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 191, 16, "actions != null");
    actions$.Actions.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$.Actions.prototype;
  dart.addTypeTests(actions$.Actions);
  dart.setMethodSignature(actions$.Actions, () => ({
    __proto__: dart.getMethods(actions$.Actions.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(actions$.Actions, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$.Actions, () => ({
    __proto__: dart.getFields(actions$.Actions.__proto__),
    dispatcher: dart.finalFieldType(actions$.ActionDispatcher),
    actions: dart.finalFieldType(core.Map$(key.LocalKey, dart.fnType(actions$.Action, [])))
  }));
  var enabled$1 = dart.privateName(actions$, "FocusableActionDetector.enabled");
  var focusNode$0 = dart.privateName(actions$, "FocusableActionDetector.focusNode");
  var autofocus$0 = dart.privateName(actions$, "FocusableActionDetector.autofocus");
  var actions$2 = dart.privateName(actions$, "FocusableActionDetector.actions");
  var shortcuts$2 = dart.privateName(actions$, "FocusableActionDetector.shortcuts");
  var onShowFocusHighlight$ = dart.privateName(actions$, "FocusableActionDetector.onShowFocusHighlight");
  var onShowHoverHighlight$ = dart.privateName(actions$, "FocusableActionDetector.onShowHoverHighlight");
  var onFocusChange$0 = dart.privateName(actions$, "FocusableActionDetector.onFocusChange");
  var child$17 = dart.privateName(actions$, "FocusableActionDetector.child");
  actions$.FocusableActionDetector = class FocusableActionDetector extends framework.StatefulWidget {
    get enabled() {
      return this[enabled$1];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get focusNode() {
      return this[focusNode$0];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$0];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get actions() {
      return this[actions$2];
    }
    set actions(value) {
      super.actions = value;
    }
    get shortcuts() {
      return this[shortcuts$2];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get onShowFocusHighlight() {
      return this[onShowFocusHighlight$];
    }
    set onShowFocusHighlight(value) {
      super.onShowFocusHighlight = value;
    }
    get onShowHoverHighlight() {
      return this[onShowHoverHighlight$];
    }
    set onShowHoverHighlight(value) {
      super.onShowHoverHighlight = value;
    }
    get onFocusChange() {
      return this[onFocusChange$0];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get child() {
      return this[child$17];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new actions$._FocusableActionDetectorState.new();
    }
  };
  (actions$.FocusableActionDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let onShowFocusHighlight = opts && 'onShowFocusHighlight' in opts ? opts.onShowFocusHighlight : null;
    let onShowHoverHighlight = opts && 'onShowHoverHighlight' in opts ? opts.onShowHoverHighlight : null;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[enabled$1] = enabled;
    this[focusNode$0] = focusNode;
    this[autofocus$0] = autofocus;
    this[shortcuts$2] = shortcuts;
    this[actions$2] = actions;
    this[onShowFocusHighlight$] = onShowFocusHighlight;
    this[onShowHoverHighlight$] = onShowHoverHighlight;
    this[onFocusChange$0] = onFocusChange;
    this[child$17] = child;
    if (!(enabled != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 526, 16, "enabled != null");
    if (!(autofocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 527, 16, "autofocus != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 528, 16, "child != null");
    actions$.FocusableActionDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = actions$.FocusableActionDetector.prototype;
  dart.addTypeTests(actions$.FocusableActionDetector);
  dart.setMethodSignature(actions$.FocusableActionDetector, () => ({
    __proto__: dart.getMethods(actions$.FocusableActionDetector.__proto__),
    createState: dart.fnType(actions$._FocusableActionDetectorState, [])
  }));
  dart.setLibraryUri(actions$.FocusableActionDetector, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$.FocusableActionDetector, () => ({
    __proto__: dart.getFields(actions$.FocusableActionDetector.__proto__),
    enabled: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(focus_manager.FocusNode),
    autofocus: dart.finalFieldType(core.bool),
    actions: dart.finalFieldType(core.Map$(key.LocalKey, dart.fnType(actions$.Action, []))),
    shortcuts: dart.finalFieldType(core.Map$(shortcuts$.LogicalKeySet, actions$.Intent)),
    onShowFocusHighlight: dart.finalFieldType(dart.fnType(dart.void, [core.bool])),
    onShowHoverHighlight: dart.finalFieldType(dart.fnType(dart.void, [core.bool])),
    onFocusChange: dart.finalFieldType(dart.fnType(dart.void, [core.bool])),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _canShowHighlight = dart.privateName(actions$, "_canShowHighlight");
  var _hovering = dart.privateName(actions$, "_hovering");
  var _focused = dart.privateName(actions$, "_focused");
  var _updateHighlightMode$ = dart.privateName(actions$, "_updateHighlightMode");
  var _handleFocusHighlightModeChange = dart.privateName(actions$, "_handleFocusHighlightModeChange");
  var _mayTriggerCallback = dart.privateName(actions$, "_mayTriggerCallback");
  var _handleMouseEnter = dart.privateName(actions$, "_handleMouseEnter");
  var _handleMouseExit = dart.privateName(actions$, "_handleMouseExit");
  var _handleFocusChange = dart.privateName(actions$, "_handleFocusChange");
  var C593;
  var C594;
  var C595;
  var C596;
  var C597;
  var C592;
  var C591;
  var C600;
  var C601;
  var C602;
  var C599;
  var C598;
  var C605;
  var C606;
  var C604;
  var C603;
  var C609;
  var C610;
  var C608;
  var C607;
  actions$._FocusableActionDetectorState = class _FocusableActionDetectorState extends framework.State$(actions$.FocusableActionDetector) {
    initState() {
      super.initState();
      binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(duration => {
        this[_updateHighlightMode$](focus_manager.FocusManager.instance.highlightMode);
      }, DurationToNull()));
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, _handleFocusHighlightModeChange));
      super.dispose();
    }
    [_updateHighlightMode$](mode) {
      this[_mayTriggerCallback]({task: dart.fn(() => {
          switch (focus_manager.FocusManager.instance.highlightMode) {
            case C43 || CT.C43:
            {
              this[_canShowHighlight] = false;
              break;
            }
            case C44 || CT.C44:
            {
              this[_canShowHighlight] = true;
              break;
            }
          }
        }, VoidToNull())});
    }
    [_handleFocusHighlightModeChange](mode) {
      if (!dart.test(this.mounted)) {
        return;
      }
      this[_updateHighlightMode$](mode);
    }
    [_handleMouseEnter](event) {
      if (!(this.widget.onShowHoverHighlight != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 620, 12, "widget.onShowHoverHighlight != null");
      if (!dart.test(this[_hovering])) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_hovering] = true;
          }, VoidToNull())});
      }
    }
    [_handleMouseExit](event) {
      if (!(this.widget.onShowHoverHighlight != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 629, 12, "widget.onShowHoverHighlight != null");
      if (dart.test(this[_hovering])) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_hovering] = false;
          }, VoidToNull())});
      }
    }
    [_handleFocusChange](focused) {
      let t24;
      if (!dart.equals(this[_focused], focused)) {
        this[_mayTriggerCallback]({task: dart.fn(() => {
            this[_focused] = focused;
          }, VoidToNull())});
        t24 = this.widget.onFocusChange;
        t24 == null ? null : t24(this[_focused]);
      }
    }
    [_mayTriggerCallback](opts) {
      let t24, t24$, t24$0;
      let task = opts && 'task' in opts ? opts.task : null;
      let oldWidget = opts && 'oldWidget' in opts ? opts.oldWidget : null;
      const shouldShowHoverHighlight = target => {
        return dart.test(this[_hovering]) && dart.test(target.enabled) && dart.test(this[_canShowHighlight]);
      };
      dart.fn(shouldShowHoverHighlight, FocusableActionDetectorTobool());
      const shouldShowFocusHighlight = target => {
        return dart.test(this[_focused]) && dart.test(target.enabled) && dart.test(this[_canShowHighlight]);
      };
      dart.fn(shouldShowFocusHighlight, FocusableActionDetectorTobool());
      if (!!dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.persistentCallbacks)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/actions.dart", 661, 12, "SchedulerBinding.instance.schedulerPhase != SchedulerPhase.persistentCallbacks");
      let oldTarget = (t24 = oldWidget, t24 == null ? this.widget : t24);
      let didShowHoverHighlight = shouldShowHoverHighlight(oldTarget);
      let didShowFocusHighlight = shouldShowFocusHighlight(oldTarget);
      if (task != null) task();
      let doShowHoverHighlight = shouldShowHoverHighlight(this.widget);
      let doShowFocusHighlight = shouldShowFocusHighlight(this.widget);
      if (!dart.equals(didShowFocusHighlight, doShowFocusHighlight)) {
        t24$ = this.widget.onShowFocusHighlight;
        t24$ == null ? null : t24$(doShowFocusHighlight);
      }
      if (!dart.equals(didShowHoverHighlight, doShowHoverHighlight)) {
        t24$0 = this.widget.onShowHoverHighlight;
        t24$0 == null ? null : t24$0(doShowHoverHighlight);
      }
    }
    didUpdateWidget(oldWidget) {
      actions$.FocusableActionDetector._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.enabled, oldWidget.enabled)) {
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(duration => {
          this[_mayTriggerCallback]({oldWidget: oldWidget});
        }, DurationToNull()));
      }
    }
    build(context) {
      let child = new basic.MouseRegion.new({onEnter: dart.bind(this, _handleMouseEnter), onExit: dart.bind(this, _handleMouseExit), child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, autofocus: this.widget.autofocus, canRequestFocus: this.widget.enabled, onFocusChange: dart.bind(this, _handleFocusChange), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C591 || CT.C591}), $creationLocationd_0dea112b090073317d4: C598 || CT.C598});
      if (dart.test(this.widget.enabled) && this.widget.actions != null && dart.test(this.widget.actions[$isNotEmpty])) {
        child = new actions$.Actions.new({actions: this.widget.actions, child: child, $creationLocationd_0dea112b090073317d4: C603 || CT.C603});
      }
      if (dart.test(this.widget.enabled) && this.widget.shortcuts != null && dart.test(this.widget.shortcuts[$isNotEmpty])) {
        child = new shortcuts$.Shortcuts.new({shortcuts: this.widget.shortcuts, child: child, $creationLocationd_0dea112b090073317d4: C607 || CT.C607});
      }
      return child;
    }
  };
  (actions$._FocusableActionDetectorState.new = function() {
    this[_canShowHighlight] = false;
    this[_hovering] = false;
    this[_focused] = false;
    actions$._FocusableActionDetectorState.__proto__.new.call(this);
    ;
  }).prototype = actions$._FocusableActionDetectorState.prototype;
  dart.addTypeTests(actions$._FocusableActionDetectorState);
  dart.setMethodSignature(actions$._FocusableActionDetectorState, () => ({
    __proto__: dart.getMethods(actions$._FocusableActionDetectorState.__proto__),
    [_updateHighlightMode$]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [_handleFocusHighlightModeChange]: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    [_handleMouseEnter]: dart.fnType(dart.void, [events.PointerEnterEvent]),
    [_handleMouseExit]: dart.fnType(dart.void, [events.PointerExitEvent]),
    [_handleFocusChange]: dart.fnType(dart.void, [core.bool]),
    [_mayTriggerCallback]: dart.fnType(dart.void, [], {oldWidget: actions$.FocusableActionDetector, task: dart.fnType(dart.void, [])}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(actions$._FocusableActionDetectorState, "package:flutter/src/widgets/actions.dart");
  dart.setFieldSignature(actions$._FocusableActionDetectorState, () => ({
    __proto__: dart.getFields(actions$._FocusableActionDetectorState.__proto__),
    [_canShowHighlight]: dart.fieldType(core.bool),
    [_hovering]: dart.fieldType(core.bool),
    [_focused]: dart.fieldType(core.bool)
  }));
  actions$.DoNothingAction = class DoNothingAction extends actions$.Action {
    invoke(node, intent) {
      actions$.Intent._check(intent);
    }
  };
  (actions$.DoNothingAction.new = function() {
    actions$.DoNothingAction.__proto__.new.call(this, actions$.DoNothingAction.key);
    ;
  }).prototype = actions$.DoNothingAction.prototype;
  dart.addTypeTests(actions$.DoNothingAction);
  dart.setMethodSignature(actions$.DoNothingAction, () => ({
    __proto__: dart.getMethods(actions$.DoNothingAction.__proto__),
    invoke: dart.fnType(dart.void, [focus_manager.FocusNode, core.Object])
  }));
  dart.setLibraryUri(actions$.DoNothingAction, "package:flutter/src/widgets/actions.dart");
  dart.defineLazy(actions$.DoNothingAction, {
    /*actions$.DoNothingAction.key*/get key() {
      return C67 || CT.C67;
    }
  });
  actions$.ActivateAction = class ActivateAction extends actions$.Action {};
  (actions$.ActivateAction.new = function() {
    actions$.ActivateAction.__proto__.new.call(this, actions$.ActivateAction.key);
    ;
  }).prototype = actions$.ActivateAction.prototype;
  dart.addTypeTests(actions$.ActivateAction);
  dart.setLibraryUri(actions$.ActivateAction, "package:flutter/src/widgets/actions.dart");
  dart.defineLazy(actions$.ActivateAction, {
    /*actions$.ActivateAction.key*/get key() {
      return C411 || CT.C411;
    }
  });
  var C612;
  var C611;
  actions$.SelectAction = class SelectAction extends actions$.Action {};
  (actions$.SelectAction.new = function() {
    actions$.SelectAction.__proto__.new.call(this, actions$.SelectAction.key);
    ;
  }).prototype = actions$.SelectAction.prototype;
  dart.addTypeTests(actions$.SelectAction);
  dart.setLibraryUri(actions$.SelectAction, "package:flutter/src/widgets/actions.dart");
  dart.defineLazy(actions$.SelectAction, {
    /*actions$.SelectAction.key*/get key() {
      return C611 || CT.C611;
    }
  });
  var C613;
  var child$18 = dart.privateName(semantics_debugger, "SemanticsDebugger.child");
  var labelStyle$ = dart.privateName(semantics_debugger, "SemanticsDebugger.labelStyle");
  semantics_debugger.SemanticsDebugger = class SemanticsDebugger extends framework.StatefulWidget {
    get child() {
      return this[child$18];
    }
    set child(value) {
      super.child = value;
    }
    get labelStyle() {
      return this[labelStyle$];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    createState() {
      return new semantics_debugger._SemanticsDebuggerState.new();
    }
  };
  (semantics_debugger.SemanticsDebugger.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : C613 || CT.C613;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$18] = child;
    this[labelStyle$] = labelStyle;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart", 35, 15, "child != null");
    if (!(labelStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart", 36, 15, "labelStyle != null");
    semantics_debugger.SemanticsDebugger.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = semantics_debugger.SemanticsDebugger.prototype;
  dart.addTypeTests(semantics_debugger.SemanticsDebugger);
  dart.setMethodSignature(semantics_debugger.SemanticsDebugger, () => ({
    __proto__: dart.getMethods(semantics_debugger.SemanticsDebugger.__proto__),
    createState: dart.fnType(semantics_debugger._SemanticsDebuggerState, [])
  }));
  dart.setLibraryUri(semantics_debugger.SemanticsDebugger, "package:flutter/src/widgets/semantics_debugger.dart");
  dart.setFieldSignature(semantics_debugger.SemanticsDebugger, () => ({
    __proto__: dart.getFields(semantics_debugger.SemanticsDebugger.__proto__),
    child: dart.finalFieldType(framework.Widget),
    labelStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var _client = dart.privateName(semantics_debugger, "_client");
  var _lastPointerDownLocation = dart.privateName(semantics_debugger, "_lastPointerDownLocation");
  var _update = dart.privateName(semantics_debugger, "_update");
  var _handlePointerDown$ = dart.privateName(semantics_debugger, "_handlePointerDown");
  var _performAction = dart.privateName(semantics_debugger, "_performAction");
  var _handleTap$ = dart.privateName(semantics_debugger, "_handleTap");
  var _handleLongPress = dart.privateName(semantics_debugger, "_handleLongPress");
  var _handlePanEnd$ = dart.privateName(semantics_debugger, "_handlePanEnd");
  var _pipelineOwner = dart.privateName(semantics_debugger, "_pipelineOwner");
  var C616;
  var C617;
  var C615;
  var C614;
  var C620;
  var C621;
  var C622;
  var C619;
  var C618;
  var C625;
  var C626;
  var C627;
  var C628;
  var C629;
  var C630;
  var C624;
  var C623;
  var C633;
  var C634;
  var C632;
  var C631;
  const State_WidgetsBindingObserver$36$2 = class State_WidgetsBindingObserver extends framework.State$(semantics_debugger.SemanticsDebugger) {};
  (State_WidgetsBindingObserver$36$2.new = function() {
    State_WidgetsBindingObserver$36$2.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$2.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$2, binding$5.WidgetsBindingObserver);
  semantics_debugger._SemanticsDebuggerState = class _SemanticsDebuggerState extends State_WidgetsBindingObserver$36$2 {
    initState() {
      let t24;
      super.initState();
      this[_client] = (t24 = new semantics_debugger._SemanticsClient.new(binding$5.WidgetsBinding.instance.pipelineOwner), t24.addListener(dart.bind(this, _update)), t24);
      binding$5.WidgetsBinding.instance.addObserver(this);
    }
    dispose() {
      let t24;
      t24 = this[_client];
      t24.removeListener(dart.bind(this, _update));
      t24.dispose();
      t24;
      binding$5.WidgetsBinding.instance.removeObserver(this);
      super.dispose();
    }
    didChangeMetrics() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    [_update]() {
      binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(timeStamp => {
        if (dart.test(this.mounted)) {
          this.setState(dart.fn(() => {
          }, VoidToNull()));
          binding$3.SchedulerBinding.instance.scheduleFrame();
        }
      }, DurationToNull()));
    }
    [_handlePointerDown$](event) {
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = event.position['*'](binding$5.WidgetsBinding.instance.window.devicePixelRatio);
      }, VoidToNull()));
    }
    [_handleTap$]() {
      if (!(this[_lastPointerDownLocation] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart", 113, 12, "_lastPointerDownLocation != null");
      this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.tap);
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidToNull()));
    }
    [_handleLongPress]() {
      if (!(this[_lastPointerDownLocation] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart", 121, 12, "_lastPointerDownLocation != null");
      this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.longPress);
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidToNull()));
    }
    [_handlePanEnd$](details) {
      let vx = details.velocity.pixelsPerSecond.dx;
      let vy = details.velocity.pixelsPerSecond.dy;
      if (vx[$abs]() === vy[$abs]()) return;
      if (vx[$abs]() > vy[$abs]()) {
        if (vx[$sign] < 0) {
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.decrease);
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.scrollLeft);
        } else {
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.increase);
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.scrollRight);
        }
      } else {
        if (vy[$sign] < 0)
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.scrollUp);
        else
          this[_performAction](this[_lastPointerDownLocation], ui.SemanticsAction.scrollDown);
      }
      this.setState(dart.fn(() => {
        this[_lastPointerDownLocation] = null;
      }, VoidToNull()));
    }
    [_performAction](position, action) {
      let t24;
      t24 = this[_pipelineOwner].semanticsOwner;
      t24 == null ? null : t24.performActionAt(position, action);
    }
    get [_pipelineOwner]() {
      return binding$5.WidgetsBinding.instance.pipelineOwner;
    }
    build(context) {
      return new basic.CustomPaint.new({foregroundPainter: new semantics_debugger._SemanticsDebuggerPainter.new(this[_pipelineOwner], this[_client].generation, this[_lastPointerDownLocation], binding$5.WidgetsBinding.instance.window.devicePixelRatio, this.widget.labelStyle), child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, _handleTap$), onLongPress: dart.bind(this, _handleLongPress), onPanEnd: dart.bind(this, _handlePanEnd$), excludeFromSemantics: true, child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown$), behavior: proxy_box.HitTestBehavior.opaque, child: new basic.IgnorePointer.new({ignoringSemantics: false, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C614 || CT.C614}), $creationLocationd_0dea112b090073317d4: C618 || CT.C618}), $creationLocationd_0dea112b090073317d4: C623 || CT.C623}), $creationLocationd_0dea112b090073317d4: C631 || CT.C631});
    }
  };
  (semantics_debugger._SemanticsDebuggerState.new = function() {
    this[_client] = null;
    this[_lastPointerDownLocation] = null;
    semantics_debugger._SemanticsDebuggerState.__proto__.new.call(this);
    ;
  }).prototype = semantics_debugger._SemanticsDebuggerState.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsDebuggerState);
  dart.setMethodSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_update]: dart.fnType(dart.void, []),
    [_handlePointerDown$]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handleTap$]: dart.fnType(dart.void, []),
    [_handleLongPress]: dart.fnType(dart.void, []),
    [_handlePanEnd$]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_performAction]: dart.fnType(dart.void, [ui.Offset, ui.SemanticsAction]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getGetters(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_pipelineOwner]: object$.PipelineOwner
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsDebuggerState, "package:flutter/src/widgets/semantics_debugger.dart");
  dart.setFieldSignature(semantics_debugger._SemanticsDebuggerState, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsDebuggerState.__proto__),
    [_client]: dart.fieldType(semantics_debugger._SemanticsClient),
    [_lastPointerDownLocation]: dart.fieldType(ui.Offset)
  }));
  var _semanticsHandle = dart.privateName(semantics_debugger, "_semanticsHandle");
  var _didUpdateSemantics = dart.privateName(semantics_debugger, "_didUpdateSemantics");
  semantics_debugger._SemanticsClient = class _SemanticsClient extends change_notifier.ChangeNotifier {
    dispose() {
      this[_semanticsHandle].dispose();
      this[_semanticsHandle] = null;
      super.dispose();
    }
    [_didUpdateSemantics]() {
      this.generation = dart.notNull(this.generation) + 1;
      this.notifyListeners();
    }
  };
  (semantics_debugger._SemanticsClient.new = function(pipelineOwner) {
    this[_semanticsHandle] = null;
    this.generation = 0;
    semantics_debugger._SemanticsClient.__proto__.new.call(this);
    this[_semanticsHandle] = pipelineOwner.ensureSemantics({listener: dart.bind(this, _didUpdateSemantics)});
  }).prototype = semantics_debugger._SemanticsClient.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsClient);
  dart.setMethodSignature(semantics_debugger._SemanticsClient, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsClient.__proto__),
    [_didUpdateSemantics]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsClient, "package:flutter/src/widgets/semantics_debugger.dart");
  dart.setFieldSignature(semantics_debugger._SemanticsClient, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsClient.__proto__),
    [_semanticsHandle]: dart.fieldType(object$.SemanticsHandle),
    generation: dart.fieldType(core.int)
  }));
  var _rootSemanticsNode = dart.privateName(semantics_debugger, "_rootSemanticsNode");
  var _findDepth = dart.privateName(semantics_debugger, "_findDepth");
  var _paint = dart.privateName(semantics_debugger, "_paint");
  var C635;
  var _paintMessage = dart.privateName(semantics_debugger, "_paintMessage");
  var owner$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.owner");
  var generation$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.generation");
  var pointerPosition$ = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.pointerPosition");
  var devicePixelRatio$0 = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.devicePixelRatio");
  var labelStyle$0 = dart.privateName(semantics_debugger, "_SemanticsDebuggerPainter.labelStyle");
  semantics_debugger._SemanticsDebuggerPainter = class _SemanticsDebuggerPainter extends custom_paint.CustomPainter {
    get owner() {
      return this[owner$];
    }
    set owner(value) {
      super.owner = value;
    }
    get generation() {
      return this[generation$];
    }
    set generation(value) {
      super.generation = value;
    }
    get pointerPosition() {
      return this[pointerPosition$];
    }
    set pointerPosition(value) {
      super.pointerPosition = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$0];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    get labelStyle() {
      return this[labelStyle$0];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get [_rootSemanticsNode]() {
      let t24;
      t24 = this.owner.semanticsOwner;
      return t24 == null ? null : t24.rootSemanticsNode;
    }
    paint(canvas, size) {
      let rootNode = this[_rootSemanticsNode];
      canvas.save();
      canvas.scale(1.0 / dart.notNull(this.devicePixelRatio), 1.0 / dart.notNull(this.devicePixelRatio));
      if (rootNode != null) this[_paint](canvas, rootNode, this[_findDepth](rootNode));
      if (this.pointerPosition != null) {
        let paint = ui.Paint.new();
        paint.color = C635 || CT.C635;
        canvas.drawCircle(this.pointerPosition, 10.0 * dart.notNull(this.devicePixelRatio), paint);
      }
      canvas.restore();
    }
    shouldRepaint(oldDelegate) {
      semantics_debugger._SemanticsDebuggerPainter._check(oldDelegate);
      return !dart.equals(this.owner, oldDelegate.owner) || this.generation != oldDelegate.generation || !dart.equals(this.pointerPosition, oldDelegate.pointerPosition);
    }
    getMessage(node) {
      let data = node.getSemanticsData();
      let annotations = JSArrayOfString().of([]);
      let wantsTap = false;
      if (dart.test(data.hasFlag(ui.SemanticsFlag.hasCheckedState))) {
        annotations[$add](dart.test(data.hasFlag(ui.SemanticsFlag.isChecked)) ? "checked" : "unchecked");
        wantsTap = true;
      }
      if (dart.test(data.hasFlag(ui.SemanticsFlag.isTextField))) {
        annotations[$add]("textfield");
        wantsTap = true;
      }
      if (dart.test(data.hasAction(ui.SemanticsAction.tap))) {
        if (!wantsTap) annotations[$add]("button");
      } else {
        if (wantsTap) annotations[$add]("disabled");
      }
      if (dart.test(data.hasAction(ui.SemanticsAction.longPress))) annotations[$add]("long-pressable");
      let isScrollable = dart.test(data.hasAction(ui.SemanticsAction.scrollLeft)) || dart.test(data.hasAction(ui.SemanticsAction.scrollRight)) || dart.test(data.hasAction(ui.SemanticsAction.scrollUp)) || dart.test(data.hasAction(ui.SemanticsAction.scrollDown));
      let isAdjustable = dart.test(data.hasAction(ui.SemanticsAction.increase)) || dart.test(data.hasAction(ui.SemanticsAction.decrease));
      if (isScrollable) annotations[$add]("scrollable");
      if (isAdjustable) annotations[$add]("adjustable");
      if (!(data.label != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/semantics_debugger.dart", 288, 12, "data.label != null");
      let message = null;
      if (data.label[$isEmpty]) {
        message = annotations[$join]("; ");
      } else {
        let label = null;
        if (data.textDirection == null) {
          label = "⁨" + dart.str(data.label) + "⁩";
          annotations[$insert](0, "MISSING TEXT DIRECTION");
        } else {
          switch (data.textDirection) {
            case C20 || CT.C20:
            {
              label = "⁧" + dart.str(data.label) + "‬";
              break;
            }
            case C21 || CT.C21:
            {
              label = data.label;
              break;
            }
          }
        }
        if (dart.test(annotations[$isEmpty])) {
          message = label;
        } else {
          message = dart.str(label) + " (" + dart.str(annotations[$join]("; ")) + ")";
        }
      }
      return message[$trim]();
    }
    [_paintMessage](canvas, node) {
      let t24;
      let message = this.getMessage(node);
      if (message[$isEmpty]) return;
      let rect = node.rect;
      canvas.save();
      canvas.clipRect(rect);
      let textPainter = (t24 = new text_painter.TextPainter.new(), t24.text = new text_span.TextSpan.new({style: this.labelStyle, text: message}), t24.textDirection = ui.TextDirection.ltr, t24.textAlign = ui.TextAlign.center, t24.layout({maxWidth: rect.width}), t24);
      textPainter.paint(canvas, alignment$.Alignment.center.inscribe(textPainter.size, rect).topLeft);
      canvas.restore();
    }
    [_findDepth](node) {
      if (!dart.test(node.hasChildren) || dart.test(node.mergeAllDescendantsIntoThisNode)) return 1;
      let childrenDepth = 0;
      node.visitChildren(dart.fn(child => {
        childrenDepth = math.max(core.int, childrenDepth, this[_findDepth](child));
        return true;
      }, SemanticsNodeTobool()));
      return childrenDepth + 1;
    }
    [_paint](canvas, node, rank) {
      let t24, t24$, t24$0;
      canvas.save();
      if (node.transform != null) canvas.transform(node.transform.storage);
      let rect = node.rect;
      if (!dart.test(rect.isEmpty)) {
        let lineColor = new ui.Color.new(4278190080 + dart.notNull(math.Random.new(node.id).nextInt(16777215)));
        let innerRect = rect.deflate(dart.notNull(rank) * 1.0);
        if (dart.test(innerRect.isEmpty)) {
          let fill = (t24 = ui.Paint.new(), t24.color = lineColor, t24.style = ui.PaintingStyle.fill, t24);
          canvas.drawRect(rect, fill);
        } else {
          let fill = (t24$ = ui.Paint.new(), t24$.color = C377 || CT.C377, t24$.style = ui.PaintingStyle.fill, t24$);
          canvas.drawRect(rect, fill);
          let line = (t24$0 = ui.Paint.new(), t24$0.strokeWidth = dart.notNull(rank) * 2.0, t24$0.color = lineColor, t24$0.style = ui.PaintingStyle.stroke, t24$0);
          canvas.drawRect(innerRect, line);
        }
        this[_paintMessage](canvas, node);
      }
      if (!dart.test(node.mergeAllDescendantsIntoThisNode)) {
        let childRank = dart.notNull(rank) - 1;
        node.visitChildren(dart.fn(child => {
          this[_paint](canvas, child, childRank);
          return true;
        }, SemanticsNodeTobool()));
      }
      canvas.restore();
    }
  };
  (semantics_debugger._SemanticsDebuggerPainter.new = function(owner, generation, pointerPosition, devicePixelRatio, labelStyle) {
    this[owner$] = owner;
    this[generation$] = generation;
    this[pointerPosition$] = pointerPosition;
    this[devicePixelRatio$0] = devicePixelRatio;
    this[labelStyle$0] = labelStyle;
    semantics_debugger._SemanticsDebuggerPainter.__proto__.new.call(this);
    ;
  }).prototype = semantics_debugger._SemanticsDebuggerPainter.prototype;
  dart.addTypeTests(semantics_debugger._SemanticsDebuggerPainter);
  dart.setMethodSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getMethods(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [core.Object]),
    getMessage: dart.fnType(core.String, [semantics.SemanticsNode]),
    [_paintMessage]: dart.fnType(dart.void, [ui.Canvas, semantics.SemanticsNode]),
    [_findDepth]: dart.fnType(core.int, [semantics.SemanticsNode]),
    [_paint]: dart.fnType(dart.void, [ui.Canvas, semantics.SemanticsNode, core.int])
  }));
  dart.setGetterSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getGetters(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    [_rootSemanticsNode]: semantics.SemanticsNode
  }));
  dart.setLibraryUri(semantics_debugger._SemanticsDebuggerPainter, "package:flutter/src/widgets/semantics_debugger.dart");
  dart.setFieldSignature(semantics_debugger._SemanticsDebuggerPainter, () => ({
    __proto__: dart.getFields(semantics_debugger._SemanticsDebuggerPainter.__proto__),
    owner: dart.finalFieldType(object$.PipelineOwner),
    generation: dart.finalFieldType(core.int),
    pointerPosition: dart.finalFieldType(ui.Offset),
    devicePixelRatio: dart.finalFieldType(core.double),
    labelStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var optionsMask$ = dart.privateName(performance_overlay$, "PerformanceOverlay.optionsMask");
  var rasterizerThreshold$ = dart.privateName(performance_overlay$, "PerformanceOverlay.rasterizerThreshold");
  var checkerboardRasterCacheImages$0 = dart.privateName(performance_overlay$, "PerformanceOverlay.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$0 = dart.privateName(performance_overlay$, "PerformanceOverlay.checkerboardOffscreenLayers");
  performance_overlay$.PerformanceOverlay = class PerformanceOverlay extends framework.LeafRenderObjectWidget {
    get optionsMask() {
      return this[optionsMask$];
    }
    set optionsMask(value) {
      super.optionsMask = value;
    }
    get rasterizerThreshold() {
      return this[rasterizerThreshold$];
    }
    set rasterizerThreshold(value) {
      super.rasterizerThreshold = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$0];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$0];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    createRenderObject(context) {
      return new performance_overlay.RenderPerformanceOverlay.new({optionsMask: this.optionsMask, rasterizerThreshold: this.rasterizerThreshold, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers});
    }
    updateRenderObject(context, renderObject) {
      let t24;
      performance_overlay.RenderPerformanceOverlay._check(renderObject);
      t24 = renderObject;
      t24.optionsMask = this.optionsMask;
      t24.rasterizerThreshold = this.rasterizerThreshold;
      t24;
    }
  };
  (performance_overlay$.PerformanceOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let optionsMask = opts && 'optionsMask' in opts ? opts.optionsMask : 0;
    let rasterizerThreshold = opts && 'rasterizerThreshold' in opts ? opts.rasterizerThreshold : 0;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[optionsMask$] = optionsMask;
    this[rasterizerThreshold$] = rasterizerThreshold;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    performance_overlay$.PerformanceOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = performance_overlay$.PerformanceOverlay.prototype;
  (performance_overlay$.PerformanceOverlay.allEnabled = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rasterizerThreshold = opts && 'rasterizerThreshold' in opts ? opts.rasterizerThreshold : 0;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[rasterizerThreshold$] = rasterizerThreshold;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[optionsMask$] = ((1)[$leftShift](performance_overlay.PerformanceOverlayOption.displayRasterizerStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.visualizeRasterizerStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.displayEngineStatistics.index) | (1)[$leftShift](performance_overlay.PerformanceOverlayOption.visualizeEngineStatistics.index)) >>> 0;
    performance_overlay$.PerformanceOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = performance_overlay$.PerformanceOverlay.prototype;
  dart.addTypeTests(performance_overlay$.PerformanceOverlay);
  dart.setMethodSignature(performance_overlay$.PerformanceOverlay, () => ({
    __proto__: dart.getMethods(performance_overlay$.PerformanceOverlay.__proto__),
    createRenderObject: dart.fnType(performance_overlay.RenderPerformanceOverlay, [framework.BuildContext])
  }));
  dart.setLibraryUri(performance_overlay$.PerformanceOverlay, "package:flutter/src/widgets/performance_overlay.dart");
  dart.setFieldSignature(performance_overlay$.PerformanceOverlay, () => ({
    __proto__: dart.getFields(performance_overlay$.PerformanceOverlay.__proto__),
    optionsMask: dart.finalFieldType(core.int),
    rasterizerThreshold: dart.finalFieldType(core.int),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool)
  }));
  var _offstage = dart.privateName(routes, "_offstage");
  var _animationProxy = dart.privateName(routes, "_animationProxy");
  var _secondaryAnimationProxy = dart.privateName(routes, "_secondaryAnimationProxy");
  var _willPopCallbacks = dart.privateName(routes, "_willPopCallbacks");
  var _scopeKey = dart.privateName(routes, "_scopeKey");
  var _subtreeKey = dart.privateName(routes, "_subtreeKey");
  var _storageBucket = dart.privateName(routes, "_storageBucket");
  var _modalBarrier = dart.privateName(routes, "_modalBarrier");
  var _modalScopeCache = dart.privateName(routes, "_modalScopeCache");
  var _filter = dart.privateName(routes, "_filter");
  var _routeSetState = dart.privateName(routes, "_routeSetState");
  var _forceRebuildPage = dart.privateName(routes, "_forceRebuildPage");
  var C638;
  var C639;
  var C640;
  var C641;
  var C637;
  var C636;
  var C644;
  var C645;
  var C646;
  var C643;
  var C642;
  var C649;
  var C650;
  var C648;
  var C647;
  var C653;
  var C654;
  var C652;
  var C651;
  var _buildModalBarrier = dart.privateName(routes, "_buildModalBarrier");
  var C657;
  var C658;
  var C656;
  var C655;
  var _buildModalScope = dart.privateName(routes, "_buildModalScope");
  var _animation = dart.privateName(routes, "_animation");
  var _transitionCompleter = dart.privateName(routes, "_transitionCompleter");
  var _controller = dart.privateName(routes, "_controller");
  var _secondaryAnimation = dart.privateName(routes, "_secondaryAnimation");
  var _result = dart.privateName(routes, "_result");
  var _trainHoppingListenerRemover = dart.privateName(routes, "_trainHoppingListenerRemover");
  var _name$21 = dart.privateName(animation$, "_name");
  var C659;
  var C660;
  var C661;
  var C662;
  var _handleStatusChanged = dart.privateName(routes, "_handleStatusChanged");
  var _didPushOrReplace = dart.privateName(routes, "_didPushOrReplace");
  var _updateSecondaryAnimation = dart.privateName(routes, "_updateSecondaryAnimation");
  var _setSecondaryAnimation = dart.privateName(routes, "_setSecondaryAnimation");
  var _overlayEntries = dart.privateName(routes, "_overlayEntries");
  var _navigator$ = dart.privateName(navigator$, "_navigator");
  var _popCompleter = dart.privateName(navigator$, "_popCompleter");
  var RouteSettings_arguments = dart.privateName(navigator$, "RouteSettings.arguments");
  var RouteSettings_isInitialRoute = dart.privateName(navigator$, "RouteSettings.isInitialRoute");
  var RouteSettings_name = dart.privateName(navigator$, "RouteSettings.name");
  var C663;
  var C664;
  var _history = dart.privateName(navigator$, "_history");
  const _is_Route_default = Symbol('_is_Route_default');
  var settings$ = dart.privateName(navigator$, "Route.settings");
  navigator$.Route$ = dart.generic(T => {
    var CompleterOfT = () => (CompleterOfT = dart.constFn(async.Completer$(T)))();
    class Route extends core.Object {
      get settings() {
        return this[settings$];
      }
      set settings(value) {
        super.settings = value;
      }
      get navigator() {
        return this[_navigator$];
      }
      get overlayEntries() {
        return C664 || CT.C664;
      }
      install() {
      }
      didPush() {
        let t24;
        t24 = new ticker.TickerFuture.complete();
        t24.then(dart.void, dart.fn(_ => {
          let t25, t25$;
          t25$ = (t25 = this.navigator, t25 == null ? null : t25.focusScopeNode);
          t25$ == null ? null : t25$.requestFocus();
        }, voidToNull()));
        return t24;
      }
      didAdd() {
        let t24;
        t24 = new ticker.TickerFuture.complete();
        t24.then(dart.void, dart.fn(_ => {
          this.navigator.focusScopeNode.requestFocus();
        }, voidToNull()));
        t24;
      }
      didReplace(oldRoute) {
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop() {
          return dart.test(this.isFirst) ? navigator$.RoutePopDisposition.bubble : navigator$.RoutePopDisposition.pop;
        }).bind(this));
      }
      get willHandlePopInternally() {
        return false;
      }
      get currentResult() {
        return null;
      }
      get popped() {
        return this[_popCompleter].future;
      }
      didPop(result) {
        T._check(result);
        this.didComplete(result);
        return true;
      }
      didComplete(result) {
        let t24;
        T._check(result);
        this[_popCompleter].complete((t24 = result, t24 == null ? this.currentResult : t24));
      }
      didPopNext(nextRoute) {
      }
      didChangeNext(nextRoute) {
      }
      didChangePrevious(previousRoute) {
      }
      changedInternalState() {
      }
      changedExternalState() {
      }
      dispose() {
        this[_navigator$] = null;
      }
      get isCurrent() {
        if (this[_navigator$] == null) return false;
        let currentRouteEntry = this[_navigator$][_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate, {orElse: dart.fn(() => null, VoidToNull())});
        if (currentRouteEntry == null) return false;
        return dart.equals(currentRouteEntry.route, this);
      }
      get isFirst() {
        if (this[_navigator$] == null) return false;
        let currentRouteEntry = this[_navigator$][_history][$firstWhere](navigator$._RouteEntry.isPresentPredicate, {orElse: dart.fn(() => null, VoidToNull())});
        if (currentRouteEntry == null) return false;
        return dart.equals(currentRouteEntry.route, this);
      }
      get isActive() {
        let t24;
        if (this[_navigator$] == null) return false;
        return dart.equals((t24 = this[_navigator$][_history][$firstWhere](navigator$._RouteEntry.isRoutePredicate(this), {orElse: dart.fn(() => null, VoidToNull())}), t24 == null ? null : t24.isPresent), true);
      }
    }
    (Route.new = function(opts) {
      let t24;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_navigator$] = null;
      this[_popCompleter] = CompleterOfT().new();
      this[settings$] = (t24 = settings, t24 == null ? C663 || CT.C663 : t24);
      ;
    }).prototype = Route.prototype;
    dart.addTypeTests(Route);
    Route.prototype[_is_Route_default] = true;
    dart.setMethodSignature(Route, () => ({
      __proto__: dart.getMethods(Route.__proto__),
      install: dart.fnType(dart.void, []),
      didPush: dart.fnType(ticker.TickerFuture, []),
      didAdd: dart.fnType(dart.void, []),
      didReplace: dart.fnType(dart.void, [navigator$.Route]),
      willPop: dart.fnType(async.Future$(navigator$.RoutePopDisposition), []),
      didPop: dart.fnType(core.bool, [core.Object]),
      didComplete: dart.fnType(dart.void, [core.Object]),
      didPopNext: dart.fnType(dart.void, [navigator$.Route]),
      didChangeNext: dart.fnType(dart.void, [navigator$.Route]),
      didChangePrevious: dart.fnType(dart.void, [navigator$.Route]),
      changedInternalState: dart.fnType(dart.void, []),
      changedExternalState: dart.fnType(dart.void, []),
      dispose: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(Route, () => ({
      __proto__: dart.getGetters(Route.__proto__),
      navigator: navigator$.NavigatorState,
      overlayEntries: core.List$(overlay$.OverlayEntry),
      willHandlePopInternally: core.bool,
      currentResult: T,
      popped: async.Future$(T),
      isCurrent: core.bool,
      isFirst: core.bool,
      isActive: core.bool
    }));
    dart.setLibraryUri(Route, "package:flutter/src/widgets/navigator.dart");
    dart.setFieldSignature(Route, () => ({
      __proto__: dart.getFields(Route.__proto__),
      [_navigator$]: dart.fieldType(navigator$.NavigatorState),
      settings: dart.finalFieldType(navigator$.RouteSettings),
      [_popCompleter]: dart.finalFieldType(async.Completer$(T))
    }));
    return Route;
  });
  navigator$.Route = navigator$.Route$();
  dart.addTypeTests(navigator$.Route, _is_Route_default);
  const _is_OverlayRoute_default = Symbol('_is_OverlayRoute_default');
  routes.OverlayRoute$ = dart.generic(T => {
    class OverlayRoute extends navigator$.Route$(T) {
      get overlayEntries() {
        return this[_overlayEntries];
      }
      install() {
        if (!dart.test(this[_overlayEntries][$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 41, 12, "_overlayEntries.isEmpty");
        this[_overlayEntries][$addAll](this.createOverlayEntries());
        super.install();
      }
      get finishedWhenPopped() {
        return true;
      }
      didPop(result) {
        T._check(result);
        let returnValue = super.didPop(result);
        if (!dart.test(returnValue)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 61, 12, "returnValue");
        if (dart.test(this.finishedWhenPopped)) this.navigator.finalizeRoute(this);
        return returnValue;
      }
      dispose() {
        this[_overlayEntries][$clear]();
        super.dispose();
      }
    }
    (OverlayRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_overlayEntries] = JSArrayOfOverlayEntry().of([]);
      OverlayRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = OverlayRoute.prototype;
    dart.addTypeTests(OverlayRoute);
    OverlayRoute.prototype[_is_OverlayRoute_default] = true;
    dart.setGetterSignature(OverlayRoute, () => ({
      __proto__: dart.getGetters(OverlayRoute.__proto__),
      finishedWhenPopped: core.bool
    }));
    dart.setLibraryUri(OverlayRoute, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(OverlayRoute, () => ({
      __proto__: dart.getFields(OverlayRoute.__proto__),
      [_overlayEntries]: dart.finalFieldType(core.List$(overlay$.OverlayEntry))
    }));
    return OverlayRoute;
  });
  routes.OverlayRoute = routes.OverlayRoute$();
  dart.addTypeTests(routes.OverlayRoute, _is_OverlayRoute_default);
  const _is_TransitionRoute_default = Symbol('_is_TransitionRoute_default');
  routes.TransitionRoute$ = dart.generic(T => {
    var CompleterOfT = () => (CompleterOfT = dart.constFn(async.Completer$(T)))();
    class TransitionRoute extends routes.OverlayRoute$(T) {
      get completed() {
        return this[_transitionCompleter].future;
      }
      get reverseTransitionDuration() {
        return this.transitionDuration;
      }
      get finishedWhenPopped() {
        return dart.equals(this[_controller].status, animation$.AnimationStatus.dismissed);
      }
      get animation() {
        return this[_animation];
      }
      get controller() {
        return this[_controller];
      }
      get secondaryAnimation() {
        return this[_secondaryAnimation];
      }
      createAnimationController() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 139, 12, "!_transitionCompleter.isCompleted");
        let duration = this.transitionDuration;
        let reverseDuration = this.reverseTransitionDuration;
        if (!(duration != null && dart.test(duration['>='](core.Duration.zero)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 142, 12, "duration != null && duration >= Duration.zero");
        return new animation_controller.AnimationController.new({duration: duration, reverseDuration: reverseDuration, debugLabel: this.debugLabel, vsync: this.navigator});
      }
      createAnimation() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 155, 12, "!_transitionCompleter.isCompleted");
        if (!(this[_controller] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 156, 12, "_controller != null");
        return this[_controller].view;
      }
      [_handleStatusChanged](status) {
        switch (status) {
          case C659 || CT.C659:
          {
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = this.opaque;
            break;
          }
          case C660 || CT.C660:
          case C661 || CT.C661:
          {
            if (dart.test(this.overlayEntries[$isNotEmpty])) this.overlayEntries[$first].opaque = false;
            break;
          }
          case C662 || CT.C662:
          {
            if (!dart.test(this.isActive)) {
              this.navigator.finalizeRoute(this);
              if (!dart.test(this.overlayEntries[$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 180, 18, "overlayEntries.isEmpty");
            }
            break;
          }
        }
        this.changedInternalState();
      }
      install() {
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot install a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 189, 12, "!_transitionCompleter.isCompleted");
        this[_controller] = this.createAnimationController();
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimationController() returned null.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 191, 12, "_controller != null");
        this[_animation] = this.createAnimation();
        if (!(this[_animation] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".createAnimation() returned null.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 193, 12, "_animation != null");
        super.install();
      }
      didPush() {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPush called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 199, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 200, 12, "!_transitionCompleter.isCompleted");
        this[_didPushOrReplace]();
        super.didPush();
        return this[_controller].forward();
      }
      didAdd() {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPush called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 208, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 209, 12, "!_transitionCompleter.isCompleted");
        this[_didPushOrReplace]();
        super.didAdd();
        this[_controller].value = this[_controller].upperBound;
      }
      didReplace(oldRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didReplace called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 217, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 218, 12, "!_transitionCompleter.isCompleted");
        if (routes.TransitionRoute.is(oldRoute)) this[_controller].value = oldRoute[_controller].value;
        this[_didPushOrReplace]();
        super.didReplace(oldRoute);
      }
      [_didPushOrReplace]() {
        this[_animation].addStatusListener(dart.bind(this, _handleStatusChanged));
        if (dart.test(this[_animation].isCompleted) && dart.test(this.overlayEntries[$isNotEmpty])) {
          this.overlayEntries[$first].opaque = this.opaque;
        }
      }
      didPop(result) {
        T._check(result);
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPop called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 236, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 237, 12, "!_transitionCompleter.isCompleted");
        this[_result] = result;
        this[_controller].reverse();
        return super.didPop(result);
      }
      didPopNext(nextRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didPopNext called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 245, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 246, 12, "!_transitionCompleter.isCompleted");
        this[_updateSecondaryAnimation](nextRoute);
        super.didPopNext(nextRoute);
      }
      didChangeNext(nextRoute) {
        if (!(this[_controller] != null)) dart.assertFailed(dart.str(this[$runtimeType]) + ".didChangeNext called before calling install() or after calling dispose().", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 253, 12, "_controller != null");
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot reuse a " + dart.str(this[$runtimeType]) + " after disposing it.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 254, 12, "!_transitionCompleter.isCompleted");
        this[_updateSecondaryAnimation](nextRoute);
        super.didChangeNext(nextRoute);
      }
      [_updateSecondaryAnimation](nextRoute) {
        let previousTrainHoppingListenerRemover = this[_trainHoppingListenerRemover];
        this[_trainHoppingListenerRemover] = null;
        if (routes.TransitionRoute.is(nextRoute) && dart.test(this.canTransitionTo(nextRoute)) && dart.test(nextRoute.canTransitionFrom(this))) {
          let current = this[_secondaryAnimation].parent;
          if (current != null) {
            let currentTrain = animations.TrainHoppingAnimation.is(current) ? current.currentTrain : current;
            let nextTrain = nextRoute[_animation];
            if (currentTrain.value == nextTrain.value || dart.equals(nextTrain.status, animation$.AnimationStatus.completed) || dart.equals(nextTrain.status, animation$.AnimationStatus.dismissed)) {
              this[_setSecondaryAnimation](nextTrain, nextRoute.completed);
            } else {
              let newAnimation = null;
              const _jumpOnAnimationEnd = status => {
                switch (status) {
                  case C659 || CT.C659:
                  case C662 || CT.C662:
                  {
                    this[_setSecondaryAnimation](nextTrain, nextRoute.completed);
                    if (this[_trainHoppingListenerRemover] != null) {
                      this[_trainHoppingListenerRemover]();
                      this[_trainHoppingListenerRemover] = null;
                    }
                    break;
                  }
                  case C660 || CT.C660:
                  case C661 || CT.C661:
                  {
                    break;
                  }
                }
              };
              dart.fn(_jumpOnAnimationEnd, AnimationStatusTovoid());
              this[_trainHoppingListenerRemover] = dart.fn(() => {
                let t24;
                nextTrain.removeStatusListener(_jumpOnAnimationEnd);
                t24 = newAnimation;
                t24 == null ? null : t24.dispose();
              }, VoidToNull());
              nextTrain.addStatusListener(_jumpOnAnimationEnd);
              newAnimation = new animations.TrainHoppingAnimation.new(currentTrain, nextTrain, {onSwitchedTrain: dart.fn(() => {
                  if (!dart.equals(this[_secondaryAnimation].parent, newAnimation)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 323, 22, "_secondaryAnimation.parent == newAnimation");
                  if (!dart.equals(newAnimation.currentTrain, nextRoute[_animation])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 324, 22, "newAnimation.currentTrain == nextRoute._animation");
                  this[_setSecondaryAnimation](newAnimation.currentTrain, nextRoute.completed);
                  if (this[_trainHoppingListenerRemover] != null) {
                    this[_trainHoppingListenerRemover]();
                    this[_trainHoppingListenerRemover] = null;
                  }
                }, VoidToNull())});
              this[_setSecondaryAnimation](newAnimation, nextRoute.completed);
            }
          } else {
            this[_setSecondaryAnimation](nextRoute[_animation], nextRoute.completed);
          }
        } else {
          this[_setSecondaryAnimation](animations.kAlwaysDismissedAnimation);
        }
        if (previousTrainHoppingListenerRemover != null) {
          previousTrainHoppingListenerRemover();
        }
      }
      [_setSecondaryAnimation](animation, disposed = null) {
        let t24;
        this[_secondaryAnimation].parent = animation;
        t24 = disposed;
        t24 == null ? null : t24.then(core.Null, dart.fn(_ => {
          if (dart.equals(this[_secondaryAnimation].parent, animation)) {
            this[_secondaryAnimation].parent = animations.kAlwaysDismissedAnimation;
            if (animations.TrainHoppingAnimation.is(animation)) {
              animation.dispose();
            }
          }
        }, dynamicToNull()));
      }
      canTransitionTo(nextRoute) {
        return true;
      }
      canTransitionFrom(previousRoute) {
        return true;
      }
      dispose() {
        let t24;
        if (!!dart.test(this[_transitionCompleter].isCompleted)) dart.assertFailed("Cannot dispose a " + dart.str(this[$runtimeType]) + " twice.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 416, 12, "!_transitionCompleter.isCompleted");
        t24 = this[_controller];
        t24 == null ? null : t24.dispose();
        this[_transitionCompleter].complete(this[_result]);
        super.dispose();
      }
      get debugLabel() {
        return object.objectRuntimeType(this, "TransitionRoute");
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "TransitionRoute")) + "(animation: " + dart.str(this[_controller]) + ")";
      }
    }
    (TransitionRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[_transitionCompleter] = CompleterOfT().new();
      this[_animation] = null;
      this[_controller] = null;
      this[_secondaryAnimation] = new animations.ProxyAnimation.new(animations.kAlwaysDismissedAnimation);
      this[_result] = null;
      this[_trainHoppingListenerRemover] = null;
      TransitionRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = TransitionRoute.prototype;
    dart.addTypeTests(TransitionRoute);
    TransitionRoute.prototype[_is_TransitionRoute_default] = true;
    dart.setMethodSignature(TransitionRoute, () => ({
      __proto__: dart.getMethods(TransitionRoute.__proto__),
      createAnimationController: dart.fnType(animation_controller.AnimationController, []),
      createAnimation: dart.fnType(animation$.Animation$(core.double), []),
      [_handleStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
      [_didPushOrReplace]: dart.fnType(dart.void, []),
      [_updateSecondaryAnimation]: dart.fnType(dart.void, [navigator$.Route]),
      [_setSecondaryAnimation]: dart.fnType(dart.void, [animation$.Animation$(core.double)], [async.Future]),
      canTransitionTo: dart.fnType(core.bool, [routes.TransitionRoute]),
      canTransitionFrom: dart.fnType(core.bool, [routes.TransitionRoute])
    }));
    dart.setGetterSignature(TransitionRoute, () => ({
      __proto__: dart.getGetters(TransitionRoute.__proto__),
      completed: async.Future$(T),
      reverseTransitionDuration: core.Duration,
      animation: animation$.Animation$(core.double),
      controller: animation_controller.AnimationController,
      secondaryAnimation: animation$.Animation$(core.double),
      debugLabel: core.String
    }));
    dart.setLibraryUri(TransitionRoute, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(TransitionRoute, () => ({
      __proto__: dart.getFields(TransitionRoute.__proto__),
      [_transitionCompleter]: dart.finalFieldType(async.Completer$(T)),
      [_animation]: dart.fieldType(animation$.Animation$(core.double)),
      [_controller]: dart.fieldType(animation_controller.AnimationController),
      [_secondaryAnimation]: dart.finalFieldType(animations.ProxyAnimation),
      [_result]: dart.fieldType(T),
      [_trainHoppingListenerRemover]: dart.fieldType(dart.fnType(dart.void, []))
    }));
    dart.defineExtensionMethods(TransitionRoute, ['toString']);
    return TransitionRoute;
  });
  routes.TransitionRoute = routes.TransitionRoute$();
  dart.addTypeTests(routes.TransitionRoute, _is_TransitionRoute_default);
  var _localHistory = dart.privateName(routes, "_localHistory");
  var _owner$ = dart.privateName(routes, "_owner");
  var _notifyRemoved = dart.privateName(routes, "_notifyRemoved");
  const _is_LocalHistoryRoute_default = Symbol('_is_LocalHistoryRoute_default');
  routes.LocalHistoryRoute$ = dart.generic(T => {
    const willPop = Symbol("willPop");
    class LocalHistoryRoute extends navigator$.Route$(T) {}
    LocalHistoryRoute[dart.mixinOn] = Route => class LocalHistoryRoute extends Route {
      addLocalHistoryEntry(entry) {
        if (!(entry[_owner$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 589, 12, "entry._owner == null");
        entry[_owner$] = this;
        this[_localHistory] == null ? this[_localHistory] = JSArrayOfLocalHistoryEntry().of([]) : null;
        let wasEmpty = this[_localHistory][$isEmpty];
        this[_localHistory][$add](entry);
        if (dart.test(wasEmpty)) this.changedInternalState();
      }
      removeLocalHistoryEntry(entry) {
        if (!(entry != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 603, 12, "entry != null");
        if (!dart.equals(entry[_owner$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 604, 12, "entry._owner == this");
        if (!dart.test(this[_localHistory][$contains](entry))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 605, 12, "_localHistory.contains(entry)");
        this[_localHistory][$remove](entry);
        entry[_owner$] = null;
        entry[_notifyRemoved]();
        if (dart.test(this[_localHistory][$isEmpty])) this.changedInternalState();
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop$() {
          if (dart.test(this.willHandlePopInternally)) return navigator$.RoutePopDisposition.pop;
          return this[willPop]();
        }).bind(this));
      }
      didPop(result) {
        T._check(result);
        if (this[_localHistory] != null && dart.test(this[_localHistory][$isNotEmpty])) {
          let entry = this[_localHistory][$removeLast]();
          if (!dart.equals(entry[_owner$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 624, 14, "entry._owner == this");
          entry[_owner$] = null;
          entry[_notifyRemoved]();
          if (dart.test(this[_localHistory][$isEmpty])) this.changedInternalState();
          return false;
        }
        return super.didPop(result);
      }
      get willHandlePopInternally() {
        return this[_localHistory] != null && dart.test(this[_localHistory][$isNotEmpty]);
      }
      [willPop]() {
        return super.willPop();
      }
    };
    (LocalHistoryRoute[dart.mixinNew] = function() {
      this[_localHistory] = null;
    }).prototype = LocalHistoryRoute.prototype;
    dart.addTypeTests(LocalHistoryRoute);
    LocalHistoryRoute.prototype[_is_LocalHistoryRoute_default] = true;
    LocalHistoryRoute[dart.implements] = () => [navigator$.Route$(T)];
    dart.setMethodSignature(LocalHistoryRoute, () => ({
      __proto__: dart.getMethods(LocalHistoryRoute.__proto__),
      addLocalHistoryEntry: dart.fnType(dart.void, [routes.LocalHistoryEntry]),
      removeLocalHistoryEntry: dart.fnType(dart.void, [routes.LocalHistoryEntry])
    }));
    dart.setLibraryUri(LocalHistoryRoute, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(LocalHistoryRoute, () => ({
      __proto__: dart.getFields(LocalHistoryRoute.__proto__),
      [_localHistory]: dart.fieldType(core.List$(routes.LocalHistoryEntry))
    }));
    return LocalHistoryRoute;
  });
  routes.LocalHistoryRoute = routes.LocalHistoryRoute$();
  dart.addTypeTests(routes.LocalHistoryRoute, _is_LocalHistoryRoute_default);
  const _is_ModalRoute_default = Symbol('_is_ModalRoute_default');
  routes.ModalRoute$ = dart.generic(T => {
    var _ModalScopeStateOfT = () => (_ModalScopeStateOfT = dart.constFn(routes._ModalScopeState$(T)))();
    var GlobalKeyOf_ModalScopeStateOfT = () => (GlobalKeyOf_ModalScopeStateOfT = dart.constFn(framework.GlobalKey$(_ModalScopeStateOfT())))();
    var _ModalScopeOfT = () => (_ModalScopeOfT = dart.constFn(routes._ModalScope$(T)))();
    const willPop = Symbol("willPop");
    const TransitionRoute_LocalHistoryRoute$36 = class TransitionRoute_LocalHistoryRoute extends routes.TransitionRoute$(T) {};
    (TransitionRoute_LocalHistoryRoute$36.new = function(opts) {
      routes.LocalHistoryRoute$(T)[dart.mixinNew].call(this);
      TransitionRoute_LocalHistoryRoute$36.__proto__.new.call(this, opts);
    }).prototype = TransitionRoute_LocalHistoryRoute$36.prototype;
    dart.applyMixin(TransitionRoute_LocalHistoryRoute$36, routes.LocalHistoryRoute$(T));
    class ModalRoute extends TransitionRoute_LocalHistoryRoute$36 {
      static of(T, context) {
        let t24;
        let widget = context.dependOnInheritedWidgetOfExactType(routes._ModalScopeStatus);
        return routes.ModalRoute$(T).as((t24 = widget, t24 == null ? null : t24.route));
      }
      setState(fn) {
        if (this[_scopeKey].currentState != null) {
          this[_scopeKey].currentState[_routeSetState](fn);
        } else {
          fn();
        }
      }
      static withName(name) {
        return dart.fn(route => !dart.test(route.willHandlePopInternally) && routes.ModalRoute.is(route) && route.settings.name == name, RouteTobool());
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        return child;
      }
      install() {
        super.install();
        this[_animationProxy] = new animations.ProxyAnimation.new(super.animation);
        this[_secondaryAnimationProxy] = new animations.ProxyAnimation.new(super.secondaryAnimation);
      }
      didPush() {
        if (this[_scopeKey].currentState != null) {
          this.navigator.focusScopeNode.setFirstFocus(this[_scopeKey].currentState.focusScopeNode);
        }
        return super.didPush();
      }
      didAdd() {
        if (this[_scopeKey].currentState != null) {
          this.navigator.focusScopeNode.setFirstFocus(this[_scopeKey].currentState.focusScopeNode);
        }
        super.didAdd();
      }
      get semanticsDismissible() {
        return true;
      }
      get barrierCurve() {
        return curves.Curves.ease;
      }
      get offstage() {
        return this[_offstage];
      }
      set offstage(value) {
        if (dart.equals(this[_offstage], value)) return;
        this.setState(dart.fn(() => {
          this[_offstage] = value;
        }, VoidToNull()));
        this[_animationProxy].parent = dart.test(this[_offstage]) ? animations.kAlwaysCompleteAnimation : super.animation;
        this[_secondaryAnimationProxy].parent = dart.test(this[_offstage]) ? animations.kAlwaysDismissedAnimation : super.secondaryAnimation;
      }
      get subtreeContext() {
        return this[_subtreeKey].currentContext;
      }
      get animation() {
        return this[_animationProxy];
      }
      get secondaryAnimation() {
        return this[_secondaryAnimationProxy];
      }
      willPop() {
        return async.async(navigator$.RoutePopDisposition, (function* willPop$() {
          let scope = this[_scopeKey].currentState;
          if (!(scope != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1250, 12, "scope != null");
          for (let callback of ListOfVoidToFutureOfbool().from(this[_willPopCallbacks])) {
            if (!dart.test(yield callback())) return navigator$.RoutePopDisposition.doNotPop;
          }
          return yield this[willPop]();
        }).bind(this));
      }
      addScopedWillPopCallback(callback) {
        if (!(this[_scopeKey].currentState != null)) dart.assertFailed("Tried to add a willPop callback to a route that is not currently in the tree.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1319, 12, "_scopeKey.currentState != null");
        this[_willPopCallbacks][$add](callback);
      }
      removeScopedWillPopCallback(callback) {
        if (!(this[_scopeKey].currentState != null)) dart.assertFailed("Tried to remove a willPop callback from a route that is not currently in the tree.", "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1331, 12, "_scopeKey.currentState != null");
        this[_willPopCallbacks][$remove](callback);
      }
      get hasScopedWillPopCallback() {
        return this[_willPopCallbacks][$isNotEmpty];
      }
      didChangePrevious(previousRoute) {
        super.didChangePrevious(previousRoute);
        this.changedInternalState();
      }
      changedInternalState() {
        super.changedInternalState();
        this.setState(dart.fn(() => {
        }, VoidToNull()));
        this[_modalBarrier].markNeedsBuild();
      }
      changedExternalState() {
        super.changedExternalState();
        if (this[_scopeKey].currentState != null) this[_scopeKey].currentState[_forceRebuildPage]();
      }
      get canPop() {
        return !dart.test(this.isFirst) || dart.test(this.willHandlePopInternally);
      }
      [_buildModalBarrier](context) {
        let barrier = null;
        if (this.barrierColor != null && !dart.test(this.offstage)) {
          if (!!dart.equals(this.barrierColor, routes._kTransparent)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1394, 14, "barrierColor != _kTransparent");
          let color = this.animation.drive(ui.Color, new tween.ColorTween.new({begin: routes._kTransparent, end: this.barrierColor}).chain(new tween.CurveTween.new({curve: this.barrierCurve})));
          barrier = new modal_barrier.AnimatedModalBarrier.new({color: color, dismissible: this.barrierDismissible, semanticsLabel: this.barrierLabel, barrierSemanticsDismissible: this.semanticsDismissible, $creationLocationd_0dea112b090073317d4: C636 || CT.C636});
        } else {
          barrier = new modal_barrier.ModalBarrier.new({dismissible: this.barrierDismissible, semanticsLabel: this.barrierLabel, barrierSemanticsDismissible: this.semanticsDismissible, $creationLocationd_0dea112b090073317d4: C642 || CT.C642});
        }
        if (this[_filter] != null) {
          barrier = new basic.BackdropFilter.new({filter: this[_filter], child: barrier, $creationLocationd_0dea112b090073317d4: C647 || CT.C647});
        }
        return new basic.IgnorePointer.new({ignoring: dart.equals(this.animation.status, animation$.AnimationStatus.reverse) || dart.equals(this.animation.status, animation$.AnimationStatus.dismissed), child: barrier, $creationLocationd_0dea112b090073317d4: C651 || CT.C651});
      }
      [_buildModalScope](context) {
        let t24;
        t24 = this[_modalScopeCache];
        return t24 == null ? this[_modalScopeCache] = new (_ModalScopeOfT()).new({key: this[_scopeKey], route: this, $creationLocationd_0dea112b090073317d4: C655 || CT.C655}) : t24;
      }
      createOverlayEntries() {
        return new (SyncIterableOfOverlayEntry()).new((function* createOverlayEntries() {
          yield this[_modalBarrier] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildModalBarrier)});
          yield new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildModalScope), maintainState: this.maintainState});
        }).bind(this));
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "ModalRoute")) + "(" + dart.str(this.settings) + ", animation: " + dart.str(this[_animation]) + ")";
      }
      [willPop]() {
        return super.willPop();
      }
    }
    (ModalRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      this[_offstage] = false;
      this[_animationProxy] = null;
      this[_secondaryAnimationProxy] = null;
      this[_willPopCallbacks] = JSArrayOfVoidToFutureOfbool().of([]);
      this[_scopeKey] = GlobalKeyOf_ModalScopeStateOfT().new();
      this[_subtreeKey] = GlobalKeyOfStateOfStatefulWidget().new();
      this[_storageBucket] = new page_storage.PageStorageBucket.new();
      this[_modalBarrier] = null;
      this[_modalScopeCache] = null;
      this[_filter] = filter;
      ModalRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = ModalRoute.prototype;
    dart.addTypeTests(ModalRoute);
    ModalRoute.prototype[_is_ModalRoute_default] = true;
    dart.setMethodSignature(ModalRoute, () => ({
      __proto__: dart.getMethods(ModalRoute.__proto__),
      setState: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      buildTransitions: dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget]),
      addScopedWillPopCallback: dart.fnType(dart.void, [dart.fnType(async.Future$(core.bool), [])]),
      removeScopedWillPopCallback: dart.fnType(dart.void, [dart.fnType(async.Future$(core.bool), [])]),
      [_buildModalBarrier]: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_buildModalScope]: dart.fnType(framework.Widget, [framework.BuildContext]),
      createOverlayEntries: dart.fnType(core.Iterable$(overlay$.OverlayEntry), [])
    }));
    dart.setGetterSignature(ModalRoute, () => ({
      __proto__: dart.getGetters(ModalRoute.__proto__),
      semanticsDismissible: core.bool,
      barrierCurve: curves.Curve,
      offstage: core.bool,
      subtreeContext: framework.BuildContext,
      hasScopedWillPopCallback: core.bool,
      canPop: core.bool
    }));
    dart.setSetterSignature(ModalRoute, () => ({
      __proto__: dart.getSetters(ModalRoute.__proto__),
      offstage: core.bool
    }));
    dart.setLibraryUri(ModalRoute, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(ModalRoute, () => ({
      __proto__: dart.getFields(ModalRoute.__proto__),
      [_filter]: dart.finalFieldType(ui.ImageFilter),
      [_offstage]: dart.fieldType(core.bool),
      [_animationProxy]: dart.fieldType(animations.ProxyAnimation),
      [_secondaryAnimationProxy]: dart.fieldType(animations.ProxyAnimation),
      [_willPopCallbacks]: dart.finalFieldType(core.List$(dart.fnType(async.Future$(core.bool), []))),
      [_scopeKey]: dart.finalFieldType(framework.GlobalKey$(routes._ModalScopeState$(T))),
      [_subtreeKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
      [_storageBucket]: dart.finalFieldType(page_storage.PageStorageBucket),
      [_modalBarrier]: dart.fieldType(overlay$.OverlayEntry),
      [_modalScopeCache]: dart.fieldType(framework.Widget)
    }));
    dart.defineExtensionMethods(ModalRoute, ['toString']);
    return ModalRoute;
  });
  routes.ModalRoute = routes.ModalRoute$();
  dart.addTypeTests(routes.ModalRoute, _is_ModalRoute_default);
  const _is_PageRoute_default = Symbol('_is_PageRoute_default');
  var fullscreenDialog$ = dart.privateName(pages, "PageRoute.fullscreenDialog");
  pages.PageRoute$ = dart.generic(T => {
    class PageRoute extends routes.ModalRoute$(T) {
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      get opaque() {
        return true;
      }
      get barrierDismissible() {
        return false;
      }
      canTransitionTo(nextRoute) {
        return pages.PageRoute.is(nextRoute);
      }
      canTransitionFrom(previousRoute) {
        return pages.PageRoute.is(previousRoute);
      }
    }
    (PageRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      this[fullscreenDialog$] = fullscreenDialog;
      PageRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = PageRoute.prototype;
    dart.addTypeTests(PageRoute);
    PageRoute.prototype[_is_PageRoute_default] = true;
    dart.setGetterSignature(PageRoute, () => ({
      __proto__: dart.getGetters(PageRoute.__proto__),
      opaque: core.bool,
      barrierDismissible: core.bool
    }));
    dart.setLibraryUri(PageRoute, "package:flutter/src/widgets/pages.dart");
    dart.setFieldSignature(PageRoute, () => ({
      __proto__: dart.getFields(PageRoute.__proto__),
      fullscreenDialog: dart.finalFieldType(core.bool)
    }));
    return PageRoute;
  });
  pages.PageRoute = pages.PageRoute$();
  dart.addTypeTests(pages.PageRoute, _is_PageRoute_default);
  var C665;
  var C666;
  const _is_PageRouteBuilder_default = Symbol('_is_PageRouteBuilder_default');
  var pageBuilder$ = dart.privateName(pages, "PageRouteBuilder.pageBuilder");
  var transitionsBuilder$ = dart.privateName(pages, "PageRouteBuilder.transitionsBuilder");
  var transitionDuration$ = dart.privateName(pages, "PageRouteBuilder.transitionDuration");
  var opaque$0 = dart.privateName(pages, "PageRouteBuilder.opaque");
  var barrierDismissible$ = dart.privateName(pages, "PageRouteBuilder.barrierDismissible");
  var barrierColor$ = dart.privateName(pages, "PageRouteBuilder.barrierColor");
  var barrierLabel$ = dart.privateName(pages, "PageRouteBuilder.barrierLabel");
  var maintainState$ = dart.privateName(pages, "PageRouteBuilder.maintainState");
  pages.PageRouteBuilder$ = dart.generic(T => {
    class PageRouteBuilder extends pages.PageRoute$(T) {
      get pageBuilder() {
        return this[pageBuilder$];
      }
      set pageBuilder(value) {
        super.pageBuilder = value;
      }
      get transitionsBuilder() {
        return this[transitionsBuilder$];
      }
      set transitionsBuilder(value) {
        super.transitionsBuilder = value;
      }
      get transitionDuration() {
        return this[transitionDuration$];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get opaque() {
        return this[opaque$0];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get barrierDismissible() {
        return this[barrierDismissible$];
      }
      set barrierDismissible(value) {
        super.barrierDismissible = value;
      }
      get barrierColor() {
        return this[barrierColor$];
      }
      set barrierColor(value) {
        super.barrierColor = value;
      }
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      buildPage(context, animation, secondaryAnimation) {
        return this.pageBuilder(context, animation, secondaryAnimation);
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        return this.transitionsBuilder(context, animation, secondaryAnimation, child);
      }
    }
    (PageRouteBuilder.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      let transitionsBuilder = opts && 'transitionsBuilder' in opts ? opts.transitionsBuilder : C665 || CT.C665;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C666 || CT.C666;
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      this[pageBuilder$] = pageBuilder;
      this[transitionsBuilder$] = transitionsBuilder;
      this[transitionDuration$] = transitionDuration;
      this[opaque$0] = opaque;
      this[barrierDismissible$] = barrierDismissible;
      this[barrierColor$] = barrierColor;
      this[barrierLabel$] = barrierLabel;
      this[maintainState$] = maintainState;
      if (!(pageBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 63, 15, "pageBuilder != null");
      if (!(transitionsBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 64, 15, "transitionsBuilder != null");
      if (!(opaque != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 65, 15, "opaque != null");
      if (!(barrierDismissible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 66, 15, "barrierDismissible != null");
      if (!(maintainState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 67, 15, "maintainState != null");
      if (!(fullscreenDialog != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/pages.dart", 68, 15, "fullscreenDialog != null");
      PageRouteBuilder.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = PageRouteBuilder.prototype;
    dart.addTypeTests(PageRouteBuilder);
    PageRouteBuilder.prototype[_is_PageRouteBuilder_default] = true;
    dart.setMethodSignature(PageRouteBuilder, () => ({
      __proto__: dart.getMethods(PageRouteBuilder.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double)])
    }));
    dart.setLibraryUri(PageRouteBuilder, "package:flutter/src/widgets/pages.dart");
    dart.setFieldSignature(PageRouteBuilder, () => ({
      __proto__: dart.getFields(PageRouteBuilder.__proto__),
      pageBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double)])),
      transitionsBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget])),
      transitionDuration: dart.finalFieldType(core.Duration),
      opaque: dart.finalFieldType(core.bool),
      barrierDismissible: dart.finalFieldType(core.bool),
      barrierColor: dart.finalFieldType(ui.Color),
      barrierLabel: dart.finalFieldType(core.String),
      maintainState: dart.finalFieldType(core.bool)
    }));
    return PageRouteBuilder;
  });
  pages.PageRouteBuilder = pages.PageRouteBuilder$();
  dart.addTypeTests(pages.PageRouteBuilder, _is_PageRouteBuilder_default);
  pages._defaultTransitionsBuilder = function _defaultTransitionsBuilder(context, animation, secondaryAnimation, child) {
    return child;
  };
  var onRemove$ = dart.privateName(routes, "LocalHistoryEntry.onRemove");
  routes.LocalHistoryEntry = class LocalHistoryEntry extends core.Object {
    get onRemove() {
      return this[onRemove$];
    }
    set onRemove(value) {
      super.onRemove = value;
    }
    remove() {
      this[_owner$].removeLocalHistoryEntry(this);
      if (!(this[_owner$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 442, 12, "_owner == null");
    }
    [_notifyRemoved]() {
      if (this.onRemove != null) this.onRemove();
    }
  };
  (routes.LocalHistoryEntry.new = function(opts) {
    let onRemove = opts && 'onRemove' in opts ? opts.onRemove : null;
    this[_owner$] = null;
    this[onRemove$] = onRemove;
    ;
  }).prototype = routes.LocalHistoryEntry.prototype;
  dart.addTypeTests(routes.LocalHistoryEntry);
  dart.setMethodSignature(routes.LocalHistoryEntry, () => ({
    __proto__: dart.getMethods(routes.LocalHistoryEntry.__proto__),
    remove: dart.fnType(dart.void, []),
    [_notifyRemoved]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(routes.LocalHistoryEntry, "package:flutter/src/widgets/routes.dart");
  dart.setFieldSignature(routes.LocalHistoryEntry, () => ({
    __proto__: dart.getFields(routes.LocalHistoryEntry.__proto__),
    onRemove: dart.finalFieldType(dart.fnType(dart.void, [])),
    [_owner$]: dart.fieldType(routes.LocalHistoryRoute)
  }));
  var isCurrent$ = dart.privateName(routes, "_ModalScopeStatus.isCurrent");
  var canPop$ = dart.privateName(routes, "_ModalScopeStatus.canPop");
  var route$ = dart.privateName(routes, "_ModalScopeStatus.route");
  routes._ModalScopeStatus = class _ModalScopeStatus extends framework.InheritedWidget {
    get isCurrent() {
      return this[isCurrent$];
    }
    set isCurrent(value) {
      super.isCurrent = value;
    }
    get canPop() {
      return this[canPop$];
    }
    set canPop(value) {
      super.canPop = value;
    }
    get route() {
      return this[route$];
    }
    set route(value) {
      super.route = value;
    }
    updateShouldNotify(old) {
      routes._ModalScopeStatus._check(old);
      return !dart.equals(this.isCurrent, old.isCurrent) || !dart.equals(this.canPop, old.canPop) || !dart.equals(this.route, old.route);
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new diagnostics$.FlagProperty.new("isCurrent", {value: this.isCurrent, ifTrue: "active", ifFalse: "inactive"}));
      description.add(new diagnostics$.FlagProperty.new("canPop", {value: this.canPop, ifTrue: "can pop"}));
    }
  };
  (routes._ModalScopeStatus.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let isCurrent = opts && 'isCurrent' in opts ? opts.isCurrent : null;
    let canPop = opts && 'canPop' in opts ? opts.canPop : null;
    let route = opts && 'route' in opts ? opts.route : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[isCurrent$] = isCurrent;
    this[canPop$] = canPop;
    this[route$] = route;
    if (!(isCurrent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 647, 15, "isCurrent != null");
    if (!(canPop != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 648, 15, "canPop != null");
    if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 649, 15, "route != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 650, 15, "child != null");
    routes._ModalScopeStatus.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = routes._ModalScopeStatus.prototype;
  dart.addTypeTests(routes._ModalScopeStatus);
  dart.setMethodSignature(routes._ModalScopeStatus, () => ({
    __proto__: dart.getMethods(routes._ModalScopeStatus.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(routes._ModalScopeStatus, "package:flutter/src/widgets/routes.dart");
  dart.setFieldSignature(routes._ModalScopeStatus, () => ({
    __proto__: dart.getFields(routes._ModalScopeStatus.__proto__),
    isCurrent: dart.finalFieldType(core.bool),
    canPop: dart.finalFieldType(core.bool),
    route: dart.finalFieldType(navigator$.Route)
  }));
  const _is__ModalScope_default = Symbol('_is__ModalScope_default');
  var route$0 = dart.privateName(routes, "_ModalScope.route");
  routes._ModalScope$ = dart.generic(T => {
    var _ModalScopeStateOfT = () => (_ModalScopeStateOfT = dart.constFn(routes._ModalScopeState$(T)))();
    class _ModalScope extends framework.StatefulWidget {
      get route() {
        return this[route$0];
      }
      set route(value) {
        super.route = value;
      }
      createState() {
        return new (_ModalScopeStateOfT()).new();
      }
    }
    (_ModalScope.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$0] = route;
      _ModalScope.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalScope.prototype;
    dart.addTypeTests(_ModalScope);
    _ModalScope.prototype[_is__ModalScope_default] = true;
    dart.setMethodSignature(_ModalScope, () => ({
      __proto__: dart.getMethods(_ModalScope.__proto__),
      createState: dart.fnType(routes._ModalScopeState$(T), [])
    }));
    dart.setLibraryUri(_ModalScope, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(_ModalScope, () => ({
      __proto__: dart.getFields(_ModalScope.__proto__),
      route: dart.finalFieldType(routes.ModalRoute$(T))
    }));
    return _ModalScope;
  });
  routes._ModalScope = routes._ModalScope$();
  dart.addTypeTests(routes._ModalScope, _is__ModalScope_default);
  var _page = dart.privateName(routes, "_page");
  var _listenable = dart.privateName(routes, "_listenable");
  var _shouldIgnoreFocusRequest = dart.privateName(routes, "_shouldIgnoreFocusRequest");
  var C669;
  var C670;
  var C668;
  var C667;
  var C673;
  var C674;
  var C675;
  var C672;
  var C671;
  var C678;
  var C677;
  var C676;
  var C681;
  var C682;
  var C680;
  var C679;
  var C685;
  var C686;
  var C687;
  var C684;
  var C683;
  var C690;
  var C689;
  var C688;
  var C693;
  var C694;
  var C692;
  var C691;
  var C697;
  var C698;
  var C696;
  var C695;
  var C701;
  var C702;
  var C700;
  var C699;
  var C705;
  var C706;
  var C707;
  var C708;
  var C704;
  var C703;
  const _is__ModalScopeState_default = Symbol('_is__ModalScopeState_default');
  routes._ModalScopeState$ = dart.generic(T => {
    var _ModalScopeOfT = () => (_ModalScopeOfT = dart.constFn(routes._ModalScope$(T)))();
    class _ModalScopeState extends framework.State$(routes._ModalScope$(T)) {
      initState() {
        super.initState();
        let animations = (() => {
          let t24 = JSArrayOfListenable().of([]);
          if (this.widget.route.animation != null) t24[$add](this.widget.route.animation);
          if (this.widget.route.secondaryAnimation != null) t24[$add](this.widget.route.secondaryAnimation);
          return t24;
        })();
        this[_listenable] = new change_notifier._MergingListenable.new(animations);
        if (dart.test(this.widget.route.isCurrent)) {
          this.widget.route.navigator.focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
      }
      didUpdateWidget(oldWidget) {
        _ModalScopeOfT()._check(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.widget.route, oldWidget.route)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 713, 12, "widget.route == oldWidget.route");
        if (dart.test(this.widget.route.isCurrent)) {
          this.widget.route.navigator.focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
      }
      didChangeDependencies() {
        super.didChangeDependencies();
        this[_page] = null;
      }
      [_forceRebuildPage]() {
        this.setState(dart.fn(() => {
          this[_page] = null;
        }, VoidToNull()));
      }
      dispose() {
        this.focusScopeNode.dispose();
        super.dispose();
      }
      get [_shouldIgnoreFocusRequest]() {
        let t25, t25$, t25$0;
        return dart.equals((t25 = this.widget.route.animation, t25 == null ? null : t25.status), animation$.AnimationStatus.reverse) || dart.test((t25$0 = (t25$ = this.widget.route.navigator, t25$ == null ? null : t25$.userGestureInProgress), t25$0 == null ? false : t25$0));
      }
      [_routeSetState](fn) {
        if (dart.test(this.widget.route.isCurrent) && !dart.test(this[_shouldIgnoreFocusRequest])) {
          this.widget.route.navigator.focusScopeNode.setFirstFocus(this.focusScopeNode);
        }
        this.setState(fn);
      }
      build(context) {
        let t25;
        return new routes._ModalScopeStatus.new({route: this.widget.route, isCurrent: this.widget.route.isCurrent, canPop: this.widget.route.canPop, child: new basic.Offstage.new({offstage: this.widget.route.offstage, child: new page_storage.PageStorage.new({bucket: this.widget.route[_storageBucket], child: new focus_scope.FocusScope.new({node: this.focusScopeNode, child: new basic.RepaintBoundary.new({child: new transitions.AnimatedBuilder.new({animation: this[_listenable], builder: dart.fn((context, child) => {
                      let t25, t25$;
                      return this.widget.route.buildTransitions(context, this.widget.route.animation, this.widget.route.secondaryAnimation, new transitions.AnimatedBuilder.new({animation: (t25$ = (t25 = this.widget.route.navigator, t25 == null ? null : t25.userGestureInProgressNotifier), t25$ == null ? new (ValueNotifierOfbool()).new(false) : t25$), builder: dart.fn((context, child) => {
                          let ignoreEvents = this[_shouldIgnoreFocusRequest];
                          this.focusScopeNode.canRequestFocus = !dart.test(ignoreEvents);
                          return new basic.IgnorePointer.new({ignoring: ignoreEvents, child: child, $creationLocationd_0dea112b090073317d4: C667 || CT.C667});
                        }, BuildContextAndWidgetToIgnorePointer()), child: child, $creationLocationd_0dea112b090073317d4: C671 || CT.C671}));
                    }, BuildContextAndWidgetToWidget()), child: (t25 = this[_page], t25 == null ? this[_page] = new basic.RepaintBoundary.new({key: this.widget.route[_subtreeKey], child: new basic.Builder.new({builder: dart.fn(context => this.widget.route.buildPage(context, this.widget.route.animation, this.widget.route.secondaryAnimation), BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C676 || CT.C676}), $creationLocationd_0dea112b090073317d4: C679 || CT.C679}) : t25), $creationLocationd_0dea112b090073317d4: C683 || CT.C683}), $creationLocationd_0dea112b090073317d4: C688 || CT.C688}), $creationLocationd_0dea112b090073317d4: C691 || CT.C691}), $creationLocationd_0dea112b090073317d4: C695 || CT.C695}), $creationLocationd_0dea112b090073317d4: C699 || CT.C699}), $creationLocationd_0dea112b090073317d4: C703 || CT.C703});
      }
    }
    (_ModalScopeState.new = function() {
      this[_page] = null;
      this[_listenable] = null;
      this.focusScopeNode = new focus_manager.FocusScopeNode.new({debugLabel: dart.str(dart.wrapType(routes._ModalScopeState)) + " Focus Scope"});
      _ModalScopeState.__proto__.new.call(this);
      ;
    }).prototype = _ModalScopeState.prototype;
    dart.addTypeTests(_ModalScopeState);
    _ModalScopeState.prototype[_is__ModalScopeState_default] = true;
    dart.setMethodSignature(_ModalScopeState, () => ({
      __proto__: dart.getMethods(_ModalScopeState.__proto__),
      [_forceRebuildPage]: dart.fnType(dart.void, []),
      [_routeSetState]: dart.fnType(dart.void, [dart.fnType(dart.void, [])]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_ModalScopeState, () => ({
      __proto__: dart.getGetters(_ModalScopeState.__proto__),
      [_shouldIgnoreFocusRequest]: core.bool
    }));
    dart.setLibraryUri(_ModalScopeState, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(_ModalScopeState, () => ({
      __proto__: dart.getFields(_ModalScopeState.__proto__),
      [_page]: dart.fieldType(framework.Widget),
      [_listenable]: dart.fieldType(change_notifier.Listenable),
      focusScopeNode: dart.finalFieldType(focus_manager.FocusScopeNode)
    }));
    return _ModalScopeState;
  });
  routes._ModalScopeState = routes._ModalScopeState$();
  dart.addTypeTests(routes._ModalScopeState, _is__ModalScopeState_default);
  const _is_PopupRoute_default = Symbol('_is_PopupRoute_default');
  routes.PopupRoute$ = dart.generic(T => {
    class PopupRoute extends routes.ModalRoute$(T) {
      get opaque() {
        return false;
      }
      get maintainState() {
        return true;
      }
    }
    (PopupRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      PopupRoute.__proto__.new.call(this, {filter: filter, settings: settings});
      ;
    }).prototype = PopupRoute.prototype;
    dart.addTypeTests(PopupRoute);
    PopupRoute.prototype[_is_PopupRoute_default] = true;
    dart.setGetterSignature(PopupRoute, () => ({
      __proto__: dart.getGetters(PopupRoute.__proto__),
      opaque: core.bool,
      maintainState: core.bool
    }));
    dart.setLibraryUri(PopupRoute, "package:flutter/src/widgets/routes.dart");
    return PopupRoute;
  });
  routes.PopupRoute = routes.PopupRoute$();
  dart.addTypeTests(routes.PopupRoute, _is_PopupRoute_default);
  var _listeners$ = dart.privateName(routes, "_listeners");
  navigator$.NavigatorObserver = class NavigatorObserver extends core.Object {
    get navigator() {
      return this[_navigator$];
    }
    didPush(route, previousRoute) {
    }
    didPop(route, previousRoute) {
    }
    didRemove(route, previousRoute) {
    }
    didReplace(opts) {
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
    }
    didStartUserGesture(route, previousRoute) {
    }
    didStopUserGesture() {
    }
  };
  (navigator$.NavigatorObserver.new = function() {
    this[_navigator$] = null;
    ;
  }).prototype = navigator$.NavigatorObserver.prototype;
  dart.addTypeTests(navigator$.NavigatorObserver);
  dart.setMethodSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getMethods(navigator$.NavigatorObserver.__proto__),
    didPush: dart.fnType(dart.void, [navigator$.Route, navigator$.Route]),
    didPop: dart.fnType(dart.void, [navigator$.Route, navigator$.Route]),
    didRemove: dart.fnType(dart.void, [navigator$.Route, navigator$.Route]),
    didReplace: dart.fnType(dart.void, [], {newRoute: navigator$.Route, oldRoute: navigator$.Route}, {}),
    didStartUserGesture: dart.fnType(dart.void, [navigator$.Route, navigator$.Route]),
    didStopUserGesture: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getGetters(navigator$.NavigatorObserver.__proto__),
    navigator: navigator$.NavigatorState
  }));
  dart.setLibraryUri(navigator$.NavigatorObserver, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$.NavigatorObserver, () => ({
    __proto__: dart.getFields(navigator$.NavigatorObserver.__proto__),
    [_navigator$]: dart.fieldType(navigator$.NavigatorState)
  }));
  const _is_RouteObserver_default = Symbol('_is_RouteObserver_default');
  routes.RouteObserver$ = dart.generic(R => {
    var LinkedMapOfR$SetOfRouteAware = () => (LinkedMapOfR$SetOfRouteAware = dart.constFn(_js_helper.LinkedMap$(R, SetOfRouteAware())))();
    class RouteObserver extends navigator$.NavigatorObserver {
      subscribe(routeAware, route) {
        R._check(route);
        if (!(routeAware != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1550, 12, "routeAware != null");
        if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1551, 12, "route != null");
        let subscribers = this[_listeners$][$putIfAbsent](route, dart.fn(() => LinkedHashSetOfRouteAware().new(), VoidToSetOfRouteAware()));
        if (dart.test(subscribers.add(routeAware))) {
          routeAware.didPush();
        }
      }
      unsubscribe(routeAware) {
        let t25;
        if (!(routeAware != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1563, 12, "routeAware != null");
        for (let route of this[_listeners$][$keys]) {
          let subscribers = this[_listeners$][$_get](route);
          t25 = subscribers;
          t25 == null ? null : t25.remove(routeAware);
        }
      }
      didPop(route, previousRoute) {
        let t25, t25$;
        if (R.is(route) && R.is(previousRoute)) {
          let previousSubscribers = (t25 = this[_listeners$][$_get](previousRoute), t25 == null ? null : t25[$toList]());
          if (previousSubscribers != null) {
            for (let routeAware of previousSubscribers) {
              routeAware.didPopNext();
            }
          }
          let subscribers = (t25$ = this[_listeners$][$_get](route), t25$ == null ? null : t25$[$toList]());
          if (subscribers != null) {
            for (let routeAware of subscribers) {
              routeAware.didPop();
            }
          }
        }
      }
      didPush(route, previousRoute) {
        if (R.is(route) && R.is(previousRoute)) {
          let previousSubscribers = this[_listeners$][$_get](previousRoute);
          if (previousSubscribers != null) {
            for (let routeAware of previousSubscribers) {
              routeAware.didPushNext();
            }
          }
        }
      }
    }
    (RouteObserver.new = function() {
      this[_listeners$] = new (LinkedMapOfR$SetOfRouteAware()).new();
      RouteObserver.__proto__.new.call(this);
      ;
    }).prototype = RouteObserver.prototype;
    dart.addTypeTests(RouteObserver);
    RouteObserver.prototype[_is_RouteObserver_default] = true;
    dart.setMethodSignature(RouteObserver, () => ({
      __proto__: dart.getMethods(RouteObserver.__proto__),
      subscribe: dart.fnType(dart.void, [routes.RouteAware, core.Object]),
      unsubscribe: dart.fnType(dart.void, [routes.RouteAware])
    }));
    dart.setLibraryUri(RouteObserver, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(RouteObserver, () => ({
      __proto__: dart.getFields(RouteObserver.__proto__),
      [_listeners$]: dart.finalFieldType(core.Map$(R, core.Set$(routes.RouteAware)))
    }));
    return RouteObserver;
  });
  routes.RouteObserver = routes.RouteObserver$();
  dart.addTypeTests(routes.RouteObserver, _is_RouteObserver_default);
  routes.RouteAware = class RouteAware extends core.Object {
    didPopNext() {
    }
    didPush() {
    }
    didPop() {
    }
    didPushNext() {
    }
  };
  (routes.RouteAware.new = function() {
    ;
  }).prototype = routes.RouteAware.prototype;
  dart.addTypeTests(routes.RouteAware);
  dart.setMethodSignature(routes.RouteAware, () => ({
    __proto__: dart.getMethods(routes.RouteAware.__proto__),
    didPopNext: dart.fnType(dart.void, []),
    didPush: dart.fnType(dart.void, []),
    didPop: dart.fnType(dart.void, []),
    didPushNext: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(routes.RouteAware, "package:flutter/src/widgets/routes.dart");
  var C709;
  var C710;
  var _pageBuilder = dart.privateName(routes, "_pageBuilder");
  var _barrierDismissible = dart.privateName(routes, "_barrierDismissible");
  var _barrierLabel = dart.privateName(routes, "_barrierLabel");
  var _barrierColor = dart.privateName(routes, "_barrierColor");
  var _transitionDuration = dart.privateName(routes, "_transitionDuration");
  var _transitionBuilder = dart.privateName(routes, "_transitionBuilder");
  var C713;
  var C714;
  var C715;
  var C712;
  var C711;
  var C718;
  var C719;
  var C717;
  var C716;
  const _is__DialogRoute_default = Symbol('_is__DialogRoute_default');
  routes._DialogRoute$ = dart.generic(T => {
    class _DialogRoute extends routes.PopupRoute$(T) {
      get barrierDismissible() {
        return this[_barrierDismissible];
      }
      get barrierLabel() {
        return this[_barrierLabel];
      }
      get barrierColor() {
        return this[_barrierColor];
      }
      get transitionDuration() {
        return this[_transitionDuration];
      }
      buildPage(context, animation, secondaryAnimation) {
        return new basic.Semantics.new({child: this[_pageBuilder](context, animation, secondaryAnimation), scopesRoute: true, explicitChildNodes: true, $creationLocationd_0dea112b090073317d4: C711 || CT.C711});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (this[_transitionBuilder] == null) {
          return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.linear}), child: child, $creationLocationd_0dea112b090073317d4: C716 || CT.C716});
        }
        return this[_transitionBuilder](context, animation, secondaryAnimation, child);
      }
    }
    (_DialogRoute.new = function(opts) {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C709 || CT.C709;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C710 || CT.C710;
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      if (!(barrierDismissible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1634, 15, "barrierDismissible != null");
      this[_pageBuilder] = pageBuilder;
      this[_barrierDismissible] = barrierDismissible;
      this[_barrierLabel] = barrierLabel;
      this[_barrierColor] = barrierColor;
      this[_transitionDuration] = transitionDuration;
      this[_transitionBuilder] = transitionBuilder;
      _DialogRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _DialogRoute.prototype;
    dart.addTypeTests(_DialogRoute);
    _DialogRoute.prototype[_is__DialogRoute_default] = true;
    dart.setMethodSignature(_DialogRoute, () => ({
      __proto__: dart.getMethods(_DialogRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double)])
    }));
    dart.setGetterSignature(_DialogRoute, () => ({
      __proto__: dart.getGetters(_DialogRoute.__proto__),
      barrierDismissible: core.bool,
      barrierLabel: core.String,
      barrierColor: ui.Color,
      transitionDuration: core.Duration
    }));
    dart.setLibraryUri(_DialogRoute, "package:flutter/src/widgets/routes.dart");
    dart.setFieldSignature(_DialogRoute, () => ({
      __proto__: dart.getFields(_DialogRoute.__proto__),
      [_pageBuilder]: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double)])),
      [_barrierDismissible]: dart.finalFieldType(core.bool),
      [_barrierLabel]: dart.finalFieldType(core.String),
      [_barrierColor]: dart.finalFieldType(ui.Color),
      [_transitionDuration]: dart.finalFieldType(core.Duration),
      [_transitionBuilder]: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget]))
    }));
    return _DialogRoute;
  });
  routes._DialogRoute = routes._DialogRoute$();
  dart.addTypeTests(routes._DialogRoute, _is__DialogRoute_default);
  routes.showGeneralDialog = function showGeneralDialog(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : null;
    let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : true;
    if (!(pageBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1747, 10, "pageBuilder != null");
    if (!(useRootNavigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1748, 10, "useRootNavigator != null");
    if (!(!dart.test(barrierDismissible) || barrierLabel != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/routes.dart", 1749, 10, "!barrierDismissible || barrierLabel != null");
    return navigator$.Navigator.of(context, {rootNavigator: useRootNavigator}).push(T, new (routes._DialogRoute$(T)).new({pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder}));
  };
  var C720;
  dart.defineLazy(routes, {
    /*routes._kTransparent*/get _kTransparent() {
      return C720 || CT.C720;
    }
  });
  var listenable$ = dart.privateName(transitions, "AnimatedWidget.listenable");
  transitions.AnimatedWidget = class AnimatedWidget extends framework.StatefulWidget {
    get listenable() {
      return this[listenable$];
    }
    set listenable(value) {
      super.listenable = value;
    }
    createState() {
      return new transitions._AnimatedState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfListenable()).new("animation", this.listenable));
    }
  };
  (transitions.AnimatedWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let listenable = opts && 'listenable' in opts ? opts.listenable : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[listenable$] = listenable;
    if (!(listenable != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 125, 15, "listenable != null");
    transitions.AnimatedWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AnimatedWidget.prototype;
  dart.addTypeTests(transitions.AnimatedWidget);
  dart.setMethodSignature(transitions.AnimatedWidget, () => ({
    __proto__: dart.getMethods(transitions.AnimatedWidget.__proto__),
    createState: dart.fnType(transitions._AnimatedState, [])
  }));
  dart.setLibraryUri(transitions.AnimatedWidget, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.AnimatedWidget, () => ({
    __proto__: dart.getFields(transitions.AnimatedWidget.__proto__),
    listenable: dart.finalFieldType(change_notifier.Listenable)
  }));
  var _handleChange = dart.privateName(transitions, "_handleChange");
  transitions._AnimatedState = class _AnimatedState extends framework.State$(transitions.AnimatedWidget) {
    initState() {
      super.initState();
      this.widget.listenable.addListener(dart.bind(this, _handleChange));
    }
    didUpdateWidget(oldWidget) {
      transitions.AnimatedWidget._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.listenable, oldWidget.listenable)) {
        oldWidget.listenable.removeListener(dart.bind(this, _handleChange));
        this.widget.listenable.addListener(dart.bind(this, _handleChange));
      }
    }
    dispose() {
      this.widget.listenable.removeListener(dart.bind(this, _handleChange));
      super.dispose();
    }
    [_handleChange]() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    build(context) {
      return this.widget.build(context);
    }
  };
  (transitions._AnimatedState.new = function() {
    transitions._AnimatedState.__proto__.new.call(this);
    ;
  }).prototype = transitions._AnimatedState.prototype;
  dart.addTypeTests(transitions._AnimatedState);
  dart.setMethodSignature(transitions._AnimatedState, () => ({
    __proto__: dart.getMethods(transitions._AnimatedState.__proto__),
    [_handleChange]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions._AnimatedState, "package:flutter/src/widgets/transitions.dart");
  var C723;
  var C724;
  var C725;
  var C722;
  var C721;
  var textDirection$7 = dart.privateName(transitions, "SlideTransition.textDirection");
  var transformHitTests$1 = dart.privateName(transitions, "SlideTransition.transformHitTests");
  var child$19 = dart.privateName(transitions, "SlideTransition.child");
  transitions.SlideTransition = class SlideTransition extends transitions.AnimatedWidget {
    get textDirection() {
      return this[textDirection$7];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get transformHitTests() {
      return this[transformHitTests$1];
    }
    set transformHitTests(value) {
      super.transformHitTests = value;
    }
    get child() {
      return this[child$19];
    }
    set child(value) {
      super.child = value;
    }
    get position() {
      return AnimationOfOffset().as(this.listenable);
    }
    build(context) {
      let offset = this.position.value;
      if (dart.equals(this.textDirection, ui.TextDirection.rtl)) offset = new ui.Offset.new(-dart.notNull(offset.dx), offset.dy);
      return new basic.FractionalTranslation.new({translation: offset, transformHitTests: this.transformHitTests, child: this.child, $creationLocationd_0dea112b090073317d4: C721 || CT.C721});
    }
  };
  (transitions.SlideTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let transformHitTests = opts && 'transformHitTests' in opts ? opts.transformHitTests : true;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[transformHitTests$1] = transformHitTests;
    this[textDirection$7] = textDirection;
    this[child$19] = child;
    if (!(position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 260, 15, "position != null");
    transitions.SlideTransition.__proto__.new.call(this, {key: key, listenable: position, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SlideTransition.prototype;
  dart.addTypeTests(transitions.SlideTransition);
  dart.setMethodSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getMethods(transitions.SlideTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getGetters(transitions.SlideTransition.__proto__),
    position: animation$.Animation$(ui.Offset)
  }));
  dart.setLibraryUri(transitions.SlideTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.SlideTransition, () => ({
    __proto__: dart.getFields(transitions.SlideTransition.__proto__),
    textDirection: dart.finalFieldType(ui.TextDirection),
    transformHitTests: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C728;
  var C729;
  var C730;
  var C727;
  var C726;
  var alignment$12 = dart.privateName(transitions, "ScaleTransition.alignment");
  var child$20 = dart.privateName(transitions, "ScaleTransition.child");
  transitions.ScaleTransition = class ScaleTransition extends transitions.AnimatedWidget {
    get alignment() {
      return this[alignment$12];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get child() {
      return this[child$20];
    }
    set child(value) {
      super.child = value;
    }
    get scale() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      let t25;
      let scaleValue = this.scale.value;
      let transform = (t25 = vector_math_64.Matrix4.identity(), t25.scale(scaleValue, scaleValue, 1.0), t25);
      return new basic.Transform.new({transform: transform, alignment: this.alignment, child: this.child, $creationLocationd_0dea112b090073317d4: C726 || CT.C726});
    }
  };
  (transitions.ScaleTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scale = opts && 'scale' in opts ? opts.scale : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$12] = alignment;
    this[child$20] = child;
    if (!(scale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 333, 15, "scale != null");
    transitions.ScaleTransition.__proto__.new.call(this, {key: key, listenable: scale, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.ScaleTransition.prototype;
  dart.addTypeTests(transitions.ScaleTransition);
  dart.setMethodSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getMethods(transitions.ScaleTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getGetters(transitions.ScaleTransition.__proto__),
    scale: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.ScaleTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.ScaleTransition, () => ({
    __proto__: dart.getFields(transitions.ScaleTransition.__proto__),
    alignment: dart.finalFieldType(alignment$.Alignment),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C733;
  var C734;
  var C735;
  var C732;
  var C731;
  var alignment$13 = dart.privateName(transitions, "RotationTransition.alignment");
  var child$21 = dart.privateName(transitions, "RotationTransition.child");
  transitions.RotationTransition = class RotationTransition extends transitions.AnimatedWidget {
    get alignment() {
      return this[alignment$13];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get child() {
      return this[child$21];
    }
    set child(value) {
      super.child = value;
    }
    get turns() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      let turnsValue = this.turns.value;
      let transform = vector_math_64.Matrix4.rotationZ(dart.notNull(turnsValue) * 3.141592653589793 * 2.0);
      return new basic.Transform.new({transform: transform, alignment: this.alignment, child: this.child, $creationLocationd_0dea112b090073317d4: C731 || CT.C731});
    }
  };
  (transitions.RotationTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let turns = opts && 'turns' in opts ? opts.turns : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$13] = alignment;
    this[child$21] = child;
    if (!(turns != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 387, 15, "turns != null");
    transitions.RotationTransition.__proto__.new.call(this, {key: key, listenable: turns, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.RotationTransition.prototype;
  dart.addTypeTests(transitions.RotationTransition);
  dart.setMethodSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getMethods(transitions.RotationTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getGetters(transitions.RotationTransition.__proto__),
    turns: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.RotationTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.RotationTransition, () => ({
    __proto__: dart.getFields(transitions.RotationTransition.__proto__),
    alignment: dart.finalFieldType(alignment$.Alignment),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C738;
  var C739;
  var C740;
  var C741;
  var C737;
  var C736;
  var C744;
  var C743;
  var C742;
  var axis$ = dart.privateName(transitions, "SizeTransition.axis");
  var axisAlignment$ = dart.privateName(transitions, "SizeTransition.axisAlignment");
  var child$22 = dart.privateName(transitions, "SizeTransition.child");
  transitions.SizeTransition = class SizeTransition extends transitions.AnimatedWidget {
    get axis() {
      return this[axis$];
    }
    set axis(value) {
      super.axis = value;
    }
    get axisAlignment() {
      return this[axisAlignment$];
    }
    set axisAlignment(value) {
      super.axisAlignment = value;
    }
    get child() {
      return this[child$22];
    }
    set child(value) {
      super.child = value;
    }
    get sizeFactor() {
      return AnimationOfdouble().as(this.listenable);
    }
    build(context) {
      let alignment = null;
      if (dart.equals(this.axis, basic_types$.Axis.vertical))
        alignment = new alignment$.AlignmentDirectional.new(-1.0, this.axisAlignment);
      else
        alignment = new alignment$.AlignmentDirectional.new(this.axisAlignment, -1.0);
      return new basic.ClipRect.new({child: new basic.Align.new({alignment: alignment, heightFactor: dart.equals(this.axis, basic_types$.Axis.vertical) ? math.max(core.double, this.sizeFactor.value, 0.0) : null, widthFactor: dart.equals(this.axis, basic_types$.Axis.horizontal) ? math.max(core.double, this.sizeFactor.value, 0.0) : null, child: this.child, $creationLocationd_0dea112b090073317d4: C736 || CT.C736}), $creationLocationd_0dea112b090073317d4: C742 || CT.C742});
    }
  };
  (transitions.SizeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axis = opts && 'axis' in opts ? opts.axis : C77 || CT.C77;
    let sizeFactor = opts && 'sizeFactor' in opts ? opts.sizeFactor : null;
    let axisAlignment = opts && 'axisAlignment' in opts ? opts.axisAlignment : 0;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axis$] = axis;
    this[axisAlignment$] = axisAlignment;
    this[child$22] = child;
    if (!(axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 459, 15, "axis != null");
    if (!(sizeFactor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 460, 15, "sizeFactor != null");
    if (!(axisAlignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 461, 15, "axisAlignment != null");
    transitions.SizeTransition.__proto__.new.call(this, {key: key, listenable: sizeFactor, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SizeTransition.prototype;
  dart.addTypeTests(transitions.SizeTransition);
  dart.setMethodSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getMethods(transitions.SizeTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getGetters(transitions.SizeTransition.__proto__),
    sizeFactor: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(transitions.SizeTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.SizeTransition, () => ({
    __proto__: dart.getFields(transitions.SizeTransition.__proto__),
    axis: dart.finalFieldType(basic_types$.Axis),
    axisAlignment: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  var opacity$0 = dart.privateName(transitions, "FadeTransition.opacity");
  var alwaysIncludeSemantics$0 = dart.privateName(transitions, "FadeTransition.alwaysIncludeSemantics");
  transitions.FadeTransition = class FadeTransition extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$0];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$0];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_box.RenderAnimatedOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t25;
      proxy_box.RenderAnimatedOpacity._check(renderObject);
      t25 = renderObject;
      t25.opacity = this.opacity;
      t25.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
      t25;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (transitions.FadeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$0] = opacity;
    this[alwaysIncludeSemantics$0] = alwaysIncludeSemantics;
    if (!(opacity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 540, 15, "opacity != null");
    transitions.FadeTransition.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.FadeTransition.prototype;
  dart.addTypeTests(transitions.FadeTransition);
  dart.setMethodSignature(transitions.FadeTransition, () => ({
    __proto__: dart.getMethods(transitions.FadeTransition.__proto__),
    createRenderObject: dart.fnType(proxy_box.RenderAnimatedOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.FadeTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.FadeTransition, () => ({
    __proto__: dart.getFields(transitions.FadeTransition.__proto__),
    opacity: dart.finalFieldType(animation$.Animation$(core.double)),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var opacity$1 = dart.privateName(transitions, "SliverFadeTransition.opacity");
  var alwaysIncludeSemantics$1 = dart.privateName(transitions, "SliverFadeTransition.alwaysIncludeSemantics");
  transitions.SliverFadeTransition = class SliverFadeTransition extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$1];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$1];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_sliver.RenderSliverAnimatedOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t25;
      proxy_sliver.RenderSliverAnimatedOpacity._check(renderObject);
      t25 = renderObject;
      t25.opacity = this.opacity;
      t25.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
      t25;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (transitions.SliverFadeTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$1] = opacity;
    this[alwaysIncludeSemantics$1] = alwaysIncludeSemantics;
    if (!(opacity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 655, 15, "opacity != null");
    transitions.SliverFadeTransition.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.SliverFadeTransition.prototype;
  dart.addTypeTests(transitions.SliverFadeTransition);
  dart.setMethodSignature(transitions.SliverFadeTransition, () => ({
    __proto__: dart.getMethods(transitions.SliverFadeTransition.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverAnimatedOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.SliverFadeTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.SliverFadeTransition, () => ({
    __proto__: dart.getFields(transitions.SliverFadeTransition.__proto__),
    opacity: dart.finalFieldType(animation$.Animation$(core.double)),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  transitions.RelativeRectTween = class RelativeRectTween extends tween.Tween$(stack.RelativeRect) {
    lerp(t) {
      return stack.RelativeRect.lerp(this.begin, this.end, t);
    }
  };
  (transitions.RelativeRectTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    transitions.RelativeRectTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = transitions.RelativeRectTween.prototype;
  dart.addTypeTests(transitions.RelativeRectTween);
  dart.setLibraryUri(transitions.RelativeRectTween, "package:flutter/src/widgets/transitions.dart");
  var C747;
  var C748;
  var C746;
  var C745;
  var child$23 = dart.privateName(transitions, "PositionedTransition.child");
  transitions.PositionedTransition = class PositionedTransition extends transitions.AnimatedWidget {
    get child() {
      return this[child$23];
    }
    set child(value) {
      super.child = value;
    }
    get rect() {
      return AnimationOfRelativeRect().as(this.listenable);
    }
    build(context) {
      return new basic.Positioned.fromRelativeRect({rect: this.rect.value, child: this.child, $creationLocationd_0dea112b090073317d4: C745 || CT.C745});
    }
  };
  (transitions.PositionedTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$23] = child;
    if (!(rect != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 750, 15, "rect != null");
    transitions.PositionedTransition.__proto__.new.call(this, {key: key, listenable: rect, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.PositionedTransition.prototype;
  dart.addTypeTests(transitions.PositionedTransition);
  dart.setMethodSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getMethods(transitions.PositionedTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getGetters(transitions.PositionedTransition.__proto__),
    rect: animation$.Animation$(stack.RelativeRect)
  }));
  dart.setLibraryUri(transitions.PositionedTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.PositionedTransition, () => ({
    __proto__: dart.getFields(transitions.PositionedTransition.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C751;
  var C752;
  var C753;
  var C754;
  var C755;
  var C750;
  var C749;
  var size$2 = dart.privateName(transitions, "RelativePositionedTransition.size");
  var child$24 = dart.privateName(transitions, "RelativePositionedTransition.child");
  transitions.RelativePositionedTransition = class RelativePositionedTransition extends transitions.AnimatedWidget {
    get size() {
      return this[size$2];
    }
    set size(value) {
      super.size = value;
    }
    get child() {
      return this[child$24];
    }
    set child(value) {
      super.child = value;
    }
    get rect() {
      return AnimationOfRect().as(this.listenable);
    }
    build(context) {
      let offsets = stack.RelativeRect.fromSize(this.rect.value, this.size);
      return new basic.Positioned.new({top: offsets.top, right: offsets.right, bottom: offsets.bottom, left: offsets.left, child: this.child, $creationLocationd_0dea112b090073317d4: C749 || CT.C749});
    }
  };
  (transitions.RelativePositionedTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[size$2] = size;
    this[child$24] = child;
    if (!(rect != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 803, 15, "rect != null");
    if (!(size != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 804, 15, "size != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 805, 15, "child != null");
    transitions.RelativePositionedTransition.__proto__.new.call(this, {key: key, listenable: rect, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.RelativePositionedTransition.prototype;
  dart.addTypeTests(transitions.RelativePositionedTransition);
  dart.setMethodSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getMethods(transitions.RelativePositionedTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getGetters(transitions.RelativePositionedTransition.__proto__),
    rect: animation$.Animation$(ui.Rect)
  }));
  dart.setLibraryUri(transitions.RelativePositionedTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.RelativePositionedTransition, () => ({
    __proto__: dart.getFields(transitions.RelativePositionedTransition.__proto__),
    size: dart.finalFieldType(ui.Size),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C758;
  var C759;
  var C760;
  var C757;
  var C756;
  var decoration$2 = dart.privateName(transitions, "DecoratedBoxTransition.decoration");
  var position$2 = dart.privateName(transitions, "DecoratedBoxTransition.position");
  var child$25 = dart.privateName(transitions, "DecoratedBoxTransition.child");
  transitions.DecoratedBoxTransition = class DecoratedBoxTransition extends transitions.AnimatedWidget {
    get decoration() {
      return this[decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get position() {
      return this[position$2];
    }
    set position(value) {
      super.position = value;
    }
    get child() {
      return this[child$25];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return new container.DecoratedBox.new({decoration: this.decoration.value, position: this.position, child: this.child, $creationLocationd_0dea112b090073317d4: C756 || CT.C756});
    }
  };
  (transitions.DecoratedBoxTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let position = opts && 'position' in opts ? opts.position : C216 || CT.C216;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[decoration$2] = decoration;
    this[position$2] = position;
    this[child$25] = child;
    if (!(decoration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 864, 15, "decoration != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 865, 15, "child != null");
    transitions.DecoratedBoxTransition.__proto__.new.call(this, {key: key, listenable: decoration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.DecoratedBoxTransition.prototype;
  dart.addTypeTests(transitions.DecoratedBoxTransition);
  dart.setMethodSignature(transitions.DecoratedBoxTransition, () => ({
    __proto__: dart.getMethods(transitions.DecoratedBoxTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.DecoratedBoxTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.DecoratedBoxTransition, () => ({
    __proto__: dart.getFields(transitions.DecoratedBoxTransition.__proto__),
    decoration: dart.finalFieldType(animation$.Animation$(decoration.Decoration)),
    position: dart.finalFieldType(proxy_box.DecorationPosition),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C763;
  var C764;
  var C765;
  var C766;
  var C762;
  var C761;
  var widthFactor$1 = dart.privateName(transitions, "AlignTransition.widthFactor");
  var heightFactor$1 = dart.privateName(transitions, "AlignTransition.heightFactor");
  var child$26 = dart.privateName(transitions, "AlignTransition.child");
  transitions.AlignTransition = class AlignTransition extends transitions.AnimatedWidget {
    get widthFactor() {
      return this[widthFactor$1];
    }
    set widthFactor(value) {
      super.widthFactor = value;
    }
    get heightFactor() {
      return this[heightFactor$1];
    }
    set heightFactor(value) {
      super.heightFactor = value;
    }
    get child() {
      return this[child$26];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return AnimationOfAlignmentGeometry().as(this.listenable);
    }
    build(context) {
      return new basic.Align.new({alignment: this.alignment.value, widthFactor: this.widthFactor, heightFactor: this.heightFactor, child: this.child, $creationLocationd_0dea112b090073317d4: C761 || CT.C761});
    }
  };
  (transitions.AlignTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let widthFactor = opts && 'widthFactor' in opts ? opts.widthFactor : null;
    let heightFactor = opts && 'heightFactor' in opts ? opts.heightFactor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$26] = child;
    this[widthFactor$1] = widthFactor;
    this[heightFactor$1] = heightFactor;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 923, 15, "alignment != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 924, 15, "child != null");
    transitions.AlignTransition.__proto__.new.call(this, {key: key, listenable: alignment, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AlignTransition.prototype;
  dart.addTypeTests(transitions.AlignTransition);
  dart.setMethodSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getMethods(transitions.AlignTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getGetters(transitions.AlignTransition.__proto__),
    alignment: animation$.Animation$(alignment$.AlignmentGeometry)
  }));
  dart.setLibraryUri(transitions.AlignTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.AlignTransition, () => ({
    __proto__: dart.getFields(transitions.AlignTransition.__proto__),
    widthFactor: dart.finalFieldType(core.double),
    heightFactor: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C769;
  var C770;
  var C771;
  var C772;
  var C773;
  var C774;
  var C768;
  var C767;
  var textAlign$2 = dart.privateName(transitions, "DefaultTextStyleTransition.textAlign");
  var softWrap$2 = dart.privateName(transitions, "DefaultTextStyleTransition.softWrap");
  var overflow$3 = dart.privateName(transitions, "DefaultTextStyleTransition.overflow");
  var maxLines$2 = dart.privateName(transitions, "DefaultTextStyleTransition.maxLines");
  var child$27 = dart.privateName(transitions, "DefaultTextStyleTransition.child");
  transitions.DefaultTextStyleTransition = class DefaultTextStyleTransition extends transitions.AnimatedWidget {
    get textAlign() {
      return this[textAlign$2];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get softWrap() {
      return this[softWrap$2];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$3];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get maxLines() {
      return this[maxLines$2];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get child() {
      return this[child$27];
    }
    set child(value) {
      super.child = value;
    }
    get style() {
      return AnimationOfTextStyle().as(this.listenable);
    }
    build(context) {
      return new text.DefaultTextStyle.new({style: this.style.value, textAlign: this.textAlign, softWrap: this.softWrap, overflow: this.overflow, maxLines: this.maxLines, child: this.child, $creationLocationd_0dea112b090073317d4: C767 || CT.C767});
    }
  };
  (transitions.DefaultTextStyleTransition.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    let overflow = opts && 'overflow' in opts ? opts.overflow : C164 || CT.C164;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$27] = child;
    this[textAlign$2] = textAlign;
    this[softWrap$2] = softWrap;
    this[overflow$3] = overflow;
    this[maxLines$2] = maxLines;
    if (!(style != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 972, 15, "style != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 973, 15, "child != null");
    transitions.DefaultTextStyleTransition.__proto__.new.call(this, {key: key, listenable: style, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.DefaultTextStyleTransition.prototype;
  dart.addTypeTests(transitions.DefaultTextStyleTransition);
  dart.setMethodSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getMethods(transitions.DefaultTextStyleTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getGetters(transitions.DefaultTextStyleTransition.__proto__),
    style: animation$.Animation$(text_style.TextStyle)
  }));
  dart.setLibraryUri(transitions.DefaultTextStyleTransition, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.DefaultTextStyleTransition, () => ({
    __proto__: dart.getFields(transitions.DefaultTextStyleTransition.__proto__),
    textAlign: dart.finalFieldType(ui.TextAlign),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    maxLines: dart.finalFieldType(core.int),
    child: dart.finalFieldType(framework.Widget)
  }));
  var builder$2 = dart.privateName(transitions, "AnimatedBuilder.builder");
  var child$28 = dart.privateName(transitions, "AnimatedBuilder.child");
  transitions.AnimatedBuilder = class AnimatedBuilder extends transitions.AnimatedWidget {
    get builder() {
      return this[builder$2];
    }
    set builder(value) {
      super.builder = value;
    }
    get child() {
      return this[child$28];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return this.builder(context, this.child);
    }
  };
  (transitions.AnimatedBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$2] = builder;
    this[child$28] = child;
    if (!(animation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 1108, 15, "animation != null");
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/transitions.dart", 1109, 15, "builder != null");
    transitions.AnimatedBuilder.__proto__.new.call(this, {key: key, listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = transitions.AnimatedBuilder.prototype;
  dart.addTypeTests(transitions.AnimatedBuilder);
  dart.setMethodSignature(transitions.AnimatedBuilder, () => ({
    __proto__: dart.getMethods(transitions.AnimatedBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transitions.AnimatedBuilder, "package:flutter/src/widgets/transitions.dart");
  dart.setFieldSignature(transitions.AnimatedBuilder, () => ({
    __proto__: dart.getFields(transitions.AnimatedBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])),
    child: dart.finalFieldType(framework.Widget)
  }));
  const _is_PageStorageKey_default = Symbol('_is_PageStorageKey_default');
  page_storage.PageStorageKey$ = dart.generic(T => {
    class PageStorageKey extends key.ValueKey$(T) {}
    (PageStorageKey.new = function(value) {
      PageStorageKey.__proto__.new.call(this, value);
      ;
    }).prototype = PageStorageKey.prototype;
    dart.addTypeTests(PageStorageKey);
    PageStorageKey.prototype[_is_PageStorageKey_default] = true;
    dart.setLibraryUri(PageStorageKey, "package:flutter/src/widgets/page_storage.dart");
    return PageStorageKey;
  });
  page_storage.PageStorageKey = page_storage.PageStorageKey$();
  dart.addTypeTests(page_storage.PageStorageKey, _is_PageStorageKey_default);
  page_storage._StorageEntryIdentifier = class _StorageEntryIdentifier extends core.Object {
    get isNotEmpty() {
      return this.keys[$isNotEmpty];
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return page_storage._StorageEntryIdentifier.is(other) && dart.test(collections.listEquals(page_storage.PageStorageKey, other.keys, this.keys));
    }
    get hashCode() {
      return ui.hashList(this.keys);
    }
    toString() {
      let t25;
      return "StorageEntryIdentifier(" + dart.str((t25 = this.keys, t25 == null ? null : t25[$join](":"))) + ")";
    }
  };
  (page_storage._StorageEntryIdentifier.new = function(keys) {
    this.keys = keys;
    if (!(keys != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_storage.dart", 43, 14, "keys != null");
    ;
  }).prototype = page_storage._StorageEntryIdentifier.prototype;
  dart.addTypeTests(page_storage._StorageEntryIdentifier);
  dart.setMethodSignature(page_storage._StorageEntryIdentifier, () => ({
    __proto__: dart.getMethods(page_storage._StorageEntryIdentifier.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(page_storage._StorageEntryIdentifier, () => ({
    __proto__: dart.getGetters(page_storage._StorageEntryIdentifier.__proto__),
    isNotEmpty: core.bool
  }));
  dart.setLibraryUri(page_storage._StorageEntryIdentifier, "package:flutter/src/widgets/page_storage.dart");
  dart.setFieldSignature(page_storage._StorageEntryIdentifier, () => ({
    __proto__: dart.getFields(page_storage._StorageEntryIdentifier.__proto__),
    keys: dart.finalFieldType(core.List$(page_storage.PageStorageKey))
  }));
  dart.defineExtensionMethods(page_storage._StorageEntryIdentifier, ['_equals', 'toString']);
  dart.defineExtensionAccessors(page_storage._StorageEntryIdentifier, ['hashCode']);
  var _storage = dart.privateName(page_storage, "_storage");
  var _allKeys = dart.privateName(page_storage, "_allKeys");
  var _computeIdentifier = dart.privateName(page_storage, "_computeIdentifier");
  page_storage.PageStorageBucket = class PageStorageBucket extends core.Object {
    static _maybeAddKey(context, keys) {
      let widget = context.widget;
      let key = widget.key;
      if (page_storage.PageStorageKey.is(key)) keys[$add](key);
      return !page_storage.PageStorage.is(widget);
    }
    [_allKeys](context) {
      let keys = JSArrayOfPageStorageKey().of([]);
      if (dart.test(page_storage.PageStorageBucket._maybeAddKey(context, keys))) {
        context.visitAncestorElements(dart.fn(element => page_storage.PageStorageBucket._maybeAddKey(element, keys), ElementTobool()));
      }
      return keys;
    }
    [_computeIdentifier](context) {
      return new page_storage._StorageEntryIdentifier.new(this[_allKeys](context));
    }
    writeState(context, data, opts) {
      let identifier = opts && 'identifier' in opts ? opts.identifier : null;
      this[_storage] == null ? this[_storage] = new (LinkedMapOfObject$dynamic()).new() : null;
      if (identifier != null) {
        this[_storage][$_set](identifier, data);
      } else {
        let contextIdentifier = this[_computeIdentifier](context);
        if (dart.test(contextIdentifier.isNotEmpty)) this[_storage][$_set](contextIdentifier, data);
      }
    }
    readState(context, opts) {
      let identifier = opts && 'identifier' in opts ? opts.identifier : null;
      if (this[_storage] == null) return null;
      if (identifier != null) return this[_storage][$_get](identifier);
      let contextIdentifier = this[_computeIdentifier](context);
      return dart.test(contextIdentifier.isNotEmpty) ? this[_storage][$_get](contextIdentifier) : null;
    }
  };
  (page_storage.PageStorageBucket.new = function() {
    this[_storage] = null;
    ;
  }).prototype = page_storage.PageStorageBucket.prototype;
  dart.addTypeTests(page_storage.PageStorageBucket);
  dart.setMethodSignature(page_storage.PageStorageBucket, () => ({
    __proto__: dart.getMethods(page_storage.PageStorageBucket.__proto__),
    [_allKeys]: dart.fnType(core.List$(page_storage.PageStorageKey), [framework.BuildContext]),
    [_computeIdentifier]: dart.fnType(page_storage._StorageEntryIdentifier, [framework.BuildContext]),
    writeState: dart.fnType(dart.void, [framework.BuildContext, dart.dynamic], {identifier: core.Object}, {}),
    readState: dart.fnType(dart.dynamic, [framework.BuildContext], {identifier: core.Object}, {})
  }));
  dart.setLibraryUri(page_storage.PageStorageBucket, "package:flutter/src/widgets/page_storage.dart");
  dart.setFieldSignature(page_storage.PageStorageBucket, () => ({
    __proto__: dart.getFields(page_storage.PageStorageBucket.__proto__),
    [_storage]: dart.fieldType(core.Map$(core.Object, dart.dynamic))
  }));
  var child$29 = dart.privateName(page_storage, "PageStorage.child");
  var bucket$ = dart.privateName(page_storage, "PageStorage.bucket");
  page_storage.PageStorage = class PageStorage extends framework.StatelessWidget {
    get child() {
      return this[child$29];
    }
    set child(value) {
      super.child = value;
    }
    get bucket() {
      return this[bucket$];
    }
    set bucket(value) {
      super.bucket = value;
    }
    static of(context) {
      let t25;
      let widget = context.findAncestorWidgetOfExactType(page_storage.PageStorage);
      t25 = widget;
      return t25 == null ? null : t25.bucket;
    }
    build(context) {
      return this.child;
    }
  };
  (page_storage.PageStorage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[bucket$] = bucket;
    this[child$29] = child;
    if (!(bucket != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_storage.dart", 141, 15, "bucket != null");
    page_storage.PageStorage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_storage.PageStorage.prototype;
  dart.addTypeTests(page_storage.PageStorage);
  dart.setMethodSignature(page_storage.PageStorage, () => ({
    __proto__: dart.getMethods(page_storage.PageStorage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_storage.PageStorage, "package:flutter/src/widgets/page_storage.dart");
  dart.setFieldSignature(page_storage.PageStorage, () => ({
    __proto__: dart.getFields(page_storage.PageStorage.__proto__),
    child: dart.finalFieldType(framework.Widget),
    bucket: dart.finalFieldType(page_storage.PageStorageBucket)
  }));
  var _overlay = dart.privateName(overlay$, "_overlay");
  var _key = dart.privateName(overlay$, "_key");
  var _opaque = dart.privateName(overlay$, "_opaque");
  var _maintainState = dart.privateName(overlay$, "_maintainState");
  var _didChangeEntryOpacity = dart.privateName(overlay$, "_didChangeEntryOpacity");
  var _remove = dart.privateName(overlay$, "_remove");
  var _markNeedsBuild = dart.privateName(overlay$, "_markNeedsBuild");
  var builder$3 = dart.privateName(overlay$, "OverlayEntry.builder");
  overlay$.OverlayEntry = class OverlayEntry extends core.Object {
    get builder() {
      return this[builder$3];
    }
    set builder(value) {
      super.builder = value;
    }
    get opaque() {
      return this[_opaque];
    }
    set opaque(value) {
      let t25;
      if (dart.equals(this[_opaque], value)) return;
      this[_opaque] = value;
      t25 = this[_overlay];
      t25 == null ? null : t25[_didChangeEntryOpacity]();
    }
    get maintainState() {
      return this[_maintainState];
    }
    set maintainState(value) {
      if (!(this[_maintainState] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 109, 12, "_maintainState != null");
      if (dart.equals(this[_maintainState], value)) return;
      this[_maintainState] = value;
      if (!(this[_overlay] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 113, 12, "_overlay != null");
      this[_overlay][_didChangeEntryOpacity]();
    }
    remove() {
      if (!(this[_overlay] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 132, 12, "_overlay != null");
      let overlay = this[_overlay];
      this[_overlay] = null;
      if (dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.persistentCallbacks)) {
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(duration => {
          overlay[_remove](this);
        }, DurationToNull()));
      } else {
        overlay[_remove](this);
      }
    }
    markNeedsBuild() {
      let t25;
      t25 = this[_key].currentState;
      t25 == null ? null : t25[_markNeedsBuild]();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(opaque: " + dart.str(this.opaque) + "; maintainState: " + dart.str(this.maintainState) + ")";
    }
  };
  (overlay$.OverlayEntry.new = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    this[_overlay] = null;
    this[_key] = GlobalKeyOf_OverlayEntryWidgetState().new();
    this[builder$3] = builder;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 65, 15, "builder != null");
    if (!(opaque != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 66, 15, "opaque != null");
    if (!(maintainState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 67, 15, "maintainState != null");
    this[_opaque] = opaque;
    this[_maintainState] = maintainState;
    ;
  }).prototype = overlay$.OverlayEntry.prototype;
  dart.addTypeTests(overlay$.OverlayEntry);
  dart.setMethodSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getMethods(overlay$.OverlayEntry.__proto__),
    remove: dart.fnType(dart.void, []),
    markNeedsBuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getGetters(overlay$.OverlayEntry.__proto__),
    opaque: core.bool,
    maintainState: core.bool
  }));
  dart.setSetterSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getSetters(overlay$.OverlayEntry.__proto__),
    opaque: core.bool,
    maintainState: core.bool
  }));
  dart.setLibraryUri(overlay$.OverlayEntry, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$.OverlayEntry, () => ({
    __proto__: dart.getFields(overlay$.OverlayEntry.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    [_opaque]: dart.fieldType(core.bool),
    [_maintainState]: dart.fieldType(core.bool),
    [_overlay]: dart.fieldType(overlay$.OverlayState),
    [_key]: dart.finalFieldType(framework.GlobalKey$(overlay$._OverlayEntryWidgetState))
  }));
  dart.defineExtensionMethods(overlay$.OverlayEntry, ['toString']);
  var entry$ = dart.privateName(overlay$, "_OverlayEntryWidget.entry");
  var tickerEnabled$ = dart.privateName(overlay$, "_OverlayEntryWidget.tickerEnabled");
  overlay$._OverlayEntryWidget = class _OverlayEntryWidget extends framework.StatefulWidget {
    get entry() {
      return this[entry$];
    }
    set entry(value) {
      super.entry = value;
    }
    get tickerEnabled() {
      return this[tickerEnabled$];
    }
    set tickerEnabled(value) {
      super.tickerEnabled = value;
    }
    createState() {
      return new overlay$._OverlayEntryWidgetState.new();
    }
  };
  (overlay$._OverlayEntryWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let entry = opts && 'entry' in opts ? opts.entry : null;
    let tickerEnabled = opts && 'tickerEnabled' in opts ? opts.tickerEnabled : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[entry$] = entry;
    this[tickerEnabled$] = tickerEnabled;
    if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 160, 15, "key != null");
    if (!(entry != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 161, 15, "entry != null");
    if (!(tickerEnabled != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 162, 15, "tickerEnabled != null");
    overlay$._OverlayEntryWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$._OverlayEntryWidget.prototype;
  dart.addTypeTests(overlay$._OverlayEntryWidget);
  dart.setMethodSignature(overlay$._OverlayEntryWidget, () => ({
    __proto__: dart.getMethods(overlay$._OverlayEntryWidget.__proto__),
    createState: dart.fnType(overlay$._OverlayEntryWidgetState, [])
  }));
  dart.setLibraryUri(overlay$._OverlayEntryWidget, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$._OverlayEntryWidget, () => ({
    __proto__: dart.getFields(overlay$._OverlayEntryWidget.__proto__),
    entry: dart.finalFieldType(overlay$.OverlayEntry),
    tickerEnabled: dart.finalFieldType(core.bool)
  }));
  var C777;
  var C778;
  var C776;
  var C775;
  overlay$._OverlayEntryWidgetState = class _OverlayEntryWidgetState extends framework.State$(overlay$._OverlayEntryWidget) {
    build(context) {
      return new ticker_provider.TickerMode.new({enabled: this.widget.tickerEnabled, child: this.widget.entry.builder(context), $creationLocationd_0dea112b090073317d4: C775 || CT.C775});
    }
    [_markNeedsBuild]() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
  };
  (overlay$._OverlayEntryWidgetState.new = function() {
    overlay$._OverlayEntryWidgetState.__proto__.new.call(this);
    ;
  }).prototype = overlay$._OverlayEntryWidgetState.prototype;
  dart.addTypeTests(overlay$._OverlayEntryWidgetState);
  dart.setMethodSignature(overlay$._OverlayEntryWidgetState, () => ({
    __proto__: dart.getMethods(overlay$._OverlayEntryWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_markNeedsBuild]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(overlay$._OverlayEntryWidgetState, "package:flutter/src/widgets/overlay.dart");
  var initialEntries$ = dart.privateName(overlay$, "Overlay.initialEntries");
  overlay$.Overlay = class Overlay extends framework.StatefulWidget {
    get initialEntries() {
      return this[initialEntries$];
    }
    set initialEntries(value) {
      super.initialEntries = value;
    }
    static of(context, opts) {
      let rootOverlay = opts && 'rootOverlay' in opts ? opts.rootOverlay : false;
      let debugRequiredFor = opts && 'debugRequiredFor' in opts ? opts.debugRequiredFor : null;
      let result = dart.test(rootOverlay) ? context.findRootAncestorStateOfType(overlay$.OverlayState) : context.findAncestorStateOfType(overlay$.OverlayState);
      if (!dart.test(dart.fn(() => {
        if (debugRequiredFor != null && result == null) {
          let information = (() => {
            let t25 = JSArrayOfDiagnosticsNode().of([]);
            t25[$add](new assertions.ErrorSummary.new("No Overlay widget found."));
            t25[$add](new assertions.ErrorDescription.new(dart.str(dart.runtimeType(debugRequiredFor)) + " widgets require an Overlay widget ancestor for correct operation."));
            t25[$add](new assertions.ErrorHint.new("The most common way to add an Overlay to an application is to include a MaterialApp or Navigator widget in the runApp() call."));
            t25[$add](new (DiagnosticsPropertyOfWidget()).new("The specific widget that failed to find an overlay was", debugRequiredFor, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}));
            if (!dart.equals(context.widget, debugRequiredFor)) t25[$add](context.describeElement("The context from which that widget was searching for an overlay was"));
            return t25;
          })();
          dart.throw(new assertions.FlutterError.fromParts(information));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 257, 12, "() {\r\n      if (debugRequiredFor != null && result == null) {\r\n        final List<DiagnosticsNode> information = <DiagnosticsNode>[\r\n          ErrorSummary('No Overlay widget found.'),\r\n          ErrorDescription('${debugRequiredFor.runtimeType} widgets require an Overlay widget ancestor for correct operation.'),\r\n          ErrorHint('The most common way to add an Overlay to an application is to include a MaterialApp or Navigator widget in the runApp() call.'),\r\n          DiagnosticsProperty<Widget>('The specific widget that failed to find an overlay was', debugRequiredFor, style: DiagnosticsTreeStyle.errorProperty),\r\n          if (context.widget != debugRequiredFor)\r\n            context.describeElement('The context from which that widget was searching for an overlay was')\r\n        ];\r\n\r\n        throw FlutterError.fromParts(information);\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    createState() {
      return new overlay$.OverlayState.new();
    }
  };
  (overlay$.Overlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialEntries = opts && 'initialEntries' in opts ? opts.initialEntries : C664 || CT.C664;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[initialEntries$] = initialEntries;
    if (!(initialEntries != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 214, 15, "initialEntries != null");
    overlay$.Overlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$.Overlay.prototype;
  dart.addTypeTests(overlay$.Overlay);
  dart.setMethodSignature(overlay$.Overlay, () => ({
    __proto__: dart.getMethods(overlay$.Overlay.__proto__),
    createState: dart.fnType(overlay$.OverlayState, [])
  }));
  dart.setLibraryUri(overlay$.Overlay, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$.Overlay, () => ({
    __proto__: dart.getFields(overlay$.Overlay.__proto__),
    initialEntries: dart.finalFieldType(core.List$(overlay$.OverlayEntry))
  }));
  var _entries = dart.privateName(overlay$, "_entries");
  var _insertionIndex = dart.privateName(overlay$, "_insertionIndex");
  var C781;
  var C782;
  var C780;
  var C779;
  var C785;
  var C786;
  var C787;
  var C784;
  var C783;
  var C790;
  var C791;
  var C789;
  var C788;
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(overlay$.Overlay) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(overlay$.Overlay)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(overlay$.Overlay));
  overlay$.OverlayState = class OverlayState extends State_TickerProviderStateMixin$36$ {
    initState() {
      super.initState();
      this.insertAll(this.widget.initialEntries);
    }
    [_insertionIndex](below, above) {
      if (!(above == null || below == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 293, 12, "above == null || below == null");
      if (below != null) return this[_entries][$indexOf](below);
      if (above != null) return dart.notNull(this[_entries][$indexOf](above)) + 1;
      return this[_entries][$length];
    }
    insert(entry, opts) {
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      if (!(above == null || below == null)) dart.assertFailed("Only one of `above` and `below` may be specified.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 310, 7, "above == null || below == null");
      if (!(above == null || dart.equals(above[_overlay], this) && dart.test(this[_entries][$contains](above)))) dart.assertFailed("The provided entry for `above` is not present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 314, 7, "above == null || (above._overlay == this && _entries.contains(above))");
      if (!(below == null || dart.equals(below[_overlay], this) && dart.test(this[_entries][$contains](below)))) dart.assertFailed("The provided entry for `below` is not present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 318, 7, "below == null || (below._overlay == this && _entries.contains(below))");
      if (!!dart.test(this[_entries][$contains](entry))) dart.assertFailed("The specified entry is already present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 321, 12, "!_entries.contains(entry)");
      if (!(entry[_overlay] == null)) dart.assertFailed("The specified entry is already present in another Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 322, 12, "entry._overlay == null");
      entry[_overlay] = this;
      this.setState(dart.fn(() => {
        this[_entries][$insert](this[_insertionIndex](below, above), entry);
      }, VoidToNull()));
    }
    insertAll(entries, opts) {
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      if (!(above == null || below == null)) dart.assertFailed("Only one of `above` and `below` may be specified.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 338, 7, "above == null || below == null");
      if (!(above == null || dart.equals(above[_overlay], this) && dart.test(this[_entries][$contains](above)))) dart.assertFailed("The provided entry for `above` is not present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 342, 7, "above == null || (above._overlay == this && _entries.contains(above))");
      if (!(below == null || dart.equals(below[_overlay], this) && dart.test(this[_entries][$contains](below)))) dart.assertFailed("The provided entry for `below` is not present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 346, 7, "below == null || (below._overlay == this && _entries.contains(below))");
      if (!dart.test(entries[$every](dart.fn(entry => !dart.test(this[_entries][$contains](entry)), OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in the Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 350, 7, "entries.every((OverlayEntry entry) => !_entries.contains(entry))");
      if (!dart.test(entries[$every](dart.fn(entry => entry[_overlay] == null, OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in another Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 354, 7, "entries.every((OverlayEntry entry) => entry._overlay == null)");
      if (dart.test(entries[$isEmpty])) return;
      for (let entry of entries) {
        if (!(entry[_overlay] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 360, 14, "entry._overlay == null");
        entry[_overlay] = this;
      }
      this.setState(dart.fn(() => {
        this[_entries][$insertAll](this[_insertionIndex](below, above), entries);
      }, VoidToNull()));
    }
    rearrange(newEntries, opts) {
      let t26;
      let below = opts && 'below' in opts ? opts.below : null;
      let above = opts && 'above' in opts ? opts.above : null;
      let newEntriesList = ListOfOverlayEntry().is(newEntries) ? newEntries : newEntries[$toList]({growable: false});
      if (!(above == null || below == null)) dart.assertFailed("Only one of `above` and `below` may be specified.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 388, 7, "above == null || below == null");
      if (!(above == null || dart.equals(above[_overlay], this) && dart.test(this[_entries][$contains](above)) && dart.test(newEntriesList[$contains](above)))) dart.assertFailed("The entry used for `above` must be in the Overlay and in the `newEntriesList`.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 392, 7, "above == null || (above._overlay == this && _entries.contains(above) && newEntriesList.contains(above))");
      if (!(below == null || dart.equals(below[_overlay], this) && dart.test(this[_entries][$contains](below)) && dart.test(newEntriesList[$contains](below)))) dart.assertFailed("The entry used for `below` must be in the Overlay and in the `newEntriesList`.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 396, 7, "below == null || (below._overlay == this && _entries.contains(below) && newEntriesList.contains(below))");
      if (!dart.test(newEntriesList[$every](dart.fn(entry => entry[_overlay] == null || dart.equals(entry[_overlay], this), OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are already present in another Overlay.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 400, 7, "newEntriesList.every((OverlayEntry entry) => entry._overlay == null || entry._overlay == this)");
      if (!dart.test(newEntriesList[$every](dart.fn(entry => this[_entries][$indexOf](entry) == this[_entries][$lastIndexOf](entry), OverlayEntryTobool())))) dart.assertFailed("One or more of the specified entries are specified multiple times.", "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 404, 7, "newEntriesList.every((OverlayEntry entry) => _entries.indexOf(entry) == _entries.lastIndexOf(entry))");
      if (dart.test(newEntriesList[$isEmpty])) return;
      if (dart.test(collections.listEquals(overlay$.OverlayEntry, this[_entries], newEntriesList))) return;
      let old = LinkedHashSetOfOverlayEntry().from(this[_entries]);
      for (let entry of newEntriesList) {
        t26 = entry;
        t26[_overlay] == null ? t26[_overlay] = this : null;
      }
      this.setState(dart.fn(() => {
        this[_entries][$clear]();
        this[_entries][$addAll](newEntriesList);
        old.removeAll(newEntriesList);
        this[_entries][$insertAll](this[_insertionIndex](below, above), old);
      }, VoidToNull()));
    }
    [_remove](entry) {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          this[_entries][$remove](entry);
        }, VoidToNull()));
      }
    }
    debugIsVisible(entry) {
      let result = false;
      if (!dart.test(this[_entries][$contains](entry))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 439, 12, "_entries.contains(entry)");
      if (!dart.test(dart.fn(() => {
        for (let i = dart.notNull(this[_entries][$length]) - 1; i > 0; i = i - 1) {
          let candidate = this[_entries][$_get](i);
          if (dart.equals(candidate, entry)) {
            result = true;
            break;
          }
          if (dart.test(candidate.opaque)) break;
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 440, 12, "() {\r\n      for (int i = _entries.length - 1; i > 0; i -= 1) {\r\n        final OverlayEntry candidate = _entries[i];\r\n        if (candidate == entry) {\r\n          result = true;\r\n          break;\r\n        }\r\n        if (candidate.opaque)\r\n          break;\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    [_didChangeEntryOpacity]() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    build(context) {
      let children = JSArrayOfWidget().of([]);
      let onstage = true;
      let onstageCount = 0;
      for (let i = dart.notNull(this[_entries][$length]) - 1; i >= 0; i = i - 1) {
        let entry = this[_entries][$_get](i);
        if (onstage) {
          onstageCount = onstageCount + 1;
          children[$add](new overlay$._OverlayEntryWidget.new({key: entry[_key], entry: entry, $creationLocationd_0dea112b090073317d4: C779 || CT.C779}));
          if (dart.test(entry.opaque)) onstage = false;
        } else if (dart.test(entry.maintainState)) {
          children[$add](new overlay$._OverlayEntryWidget.new({key: entry[_key], entry: entry, tickerEnabled: false, $creationLocationd_0dea112b090073317d4: C783 || CT.C783}));
        }
      }
      return new overlay$._Theatre.new({skipCount: dart.notNull(children[$length]) - onstageCount, children: children[$reversed][$toList]({growable: false}), $creationLocationd_0dea112b090073317d4: C788 || CT.C788});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfListOfOverlayEntry()).new("entries", this[_entries]));
    }
  };
  (overlay$.OverlayState.new = function() {
    this[_entries] = JSArrayOfOverlayEntry().of([]);
    overlay$.OverlayState.__proto__.new.call(this);
    ;
  }).prototype = overlay$.OverlayState.prototype;
  dart.addTypeTests(overlay$.OverlayState);
  dart.setMethodSignature(overlay$.OverlayState, () => ({
    __proto__: dart.getMethods(overlay$.OverlayState.__proto__),
    [_insertionIndex]: dart.fnType(core.int, [overlay$.OverlayEntry, overlay$.OverlayEntry]),
    insert: dart.fnType(dart.void, [overlay$.OverlayEntry], {above: overlay$.OverlayEntry, below: overlay$.OverlayEntry}, {}),
    insertAll: dart.fnType(dart.void, [core.Iterable$(overlay$.OverlayEntry)], {above: overlay$.OverlayEntry, below: overlay$.OverlayEntry}, {}),
    rearrange: dart.fnType(dart.void, [core.Iterable$(overlay$.OverlayEntry)], {above: overlay$.OverlayEntry, below: overlay$.OverlayEntry}, {}),
    [_remove]: dart.fnType(dart.void, [overlay$.OverlayEntry]),
    debugIsVisible: dart.fnType(core.bool, [overlay$.OverlayEntry]),
    [_didChangeEntryOpacity]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(overlay$.OverlayState, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$.OverlayState, () => ({
    __proto__: dart.getFields(overlay$.OverlayState.__proto__),
    [_entries]: dart.finalFieldType(core.List$(overlay$.OverlayEntry))
  }));
  overlay$._Theatre = class _Theatre extends framework.MultiChildRenderObjectWidget {
    createElement() {
      return new overlay$._TheatreElement.new(this);
    }
    createRenderObject(context) {
      return new overlay$._RenderTheatre.new({skipCount: this.skipCount, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t26;
      overlay$._RenderTheatre._check(renderObject);
      t26 = renderObject;
      t26.skipCount = this.skipCount;
      t26.textDirection = basic.Directionality.of(context);
      t26;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("skipCount", this.skipCount));
    }
  };
  (overlay$._Theatre.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let skipCount = opts && 'skipCount' in opts ? opts.skipCount : 0;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.skipCount = skipCount;
    if (!(skipCount != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 511, 15, "skipCount != null");
    if (!(dart.notNull(skipCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 512, 15, "skipCount >= 0");
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 513, 15, "children != null");
    if (!(dart.notNull(children[$length]) >= dart.notNull(skipCount))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 514, 15, "children.length >= skipCount");
    overlay$._Theatre.__proto__.new.call(this, {key: key, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overlay$._Theatre.prototype;
  dart.addTypeTests(overlay$._Theatre);
  dart.setMethodSignature(overlay$._Theatre, () => ({
    __proto__: dart.getMethods(overlay$._Theatre.__proto__),
    createElement: dart.fnType(overlay$._TheatreElement, []),
    createRenderObject: dart.fnType(overlay$._RenderTheatre, [framework.BuildContext])
  }));
  dart.setLibraryUri(overlay$._Theatre, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$._Theatre, () => ({
    __proto__: dart.getFields(overlay$._Theatre.__proto__),
    skipCount: dart.finalFieldType(core.int)
  }));
  overlay$._TheatreElement = class _TheatreElement extends framework.MultiChildRenderObjectElement {
    get widget() {
      return overlay$._Theatre.as(super.widget);
    }
    get renderObject() {
      return overlay$._RenderTheatre.as(super.renderObject);
    }
    debugVisitOnstageChildren(visitor) {
      if (!(dart.notNull(this.children[$length]) >= dart.notNull(this.widget.skipCount))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 555, 12, "children.length >= widget.skipCount");
      this.children[$skip](this.widget.skipCount)[$forEach](visitor);
    }
  };
  (overlay$._TheatreElement.new = function(widget) {
    overlay$._TheatreElement.__proto__.new.call(this, widget);
    ;
  }).prototype = overlay$._TheatreElement.prototype;
  dart.addTypeTests(overlay$._TheatreElement);
  dart.setGetterSignature(overlay$._TheatreElement, () => ({
    __proto__: dart.getGetters(overlay$._TheatreElement.__proto__),
    widget: overlay$._Theatre,
    renderObject: overlay$._RenderTheatre
  }));
  dart.setLibraryUri(overlay$._TheatreElement, "package:flutter/src/widgets/overlay.dart");
  var _hasVisualOverflow = dart.privateName(overlay$, "_hasVisualOverflow");
  var _resolvedAlignment = dart.privateName(overlay$, "_resolvedAlignment");
  var _textDirection$ = dart.privateName(overlay$, "_textDirection");
  var _skipCount = dart.privateName(overlay$, "_skipCount");
  var _resolve = dart.privateName(overlay$, "_resolve");
  var _markNeedResolution = dart.privateName(overlay$, "_markNeedResolution");
  var _firstOnstageChild = dart.privateName(overlay$, "_firstOnstageChild");
  var _lastOnstageChild = dart.privateName(overlay$, "_lastOnstageChild");
  var _onstageChildCount = dart.privateName(overlay$, "_onstageChildCount");
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box$.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object$.ContainerRenderObjectMixin$(box$.RenderBox, stack.StackParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object$.ContainerRenderObjectMixin$(box$.RenderBox, stack.StackParentData));
  overlay$._RenderTheatre = class _RenderTheatre extends RenderBox_ContainerRenderObjectMixin$36 {
    setupParentData(child) {
      box$.RenderBox._check(child);
      if (!stack.StackParentData.is(child.parentData)) child.parentData = new stack.StackParentData.new();
    }
    [_resolve]() {
      if (this[_resolvedAlignment] != null) return;
      this[_resolvedAlignment] = alignment$.AlignmentDirectional.topStart.resolve(this.textDirection);
    }
    [_markNeedResolution]() {
      this[_resolvedAlignment] = null;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[_textDirection$];
    }
    set textDirection(value) {
      if (dart.equals(this[_textDirection$], value)) return;
      this[_textDirection$] = value;
      this[_markNeedResolution]();
    }
    get skipCount() {
      return this[_skipCount];
    }
    set skipCount(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 606, 12, "value != null");
      if (this[_skipCount] != value) {
        this[_skipCount] = value;
        this.markNeedsLayout();
      }
    }
    get [_firstOnstageChild]() {
      if (this.skipCount == super.childCount) {
        return null;
      }
      let child = super.firstChild;
      for (let toSkip = this.skipCount; dart.notNull(toSkip) > 0; toSkip = dart.notNull(toSkip) - 1) {
        let childParentData = stack.StackParentData.as(child.parentData);
        child = childParentData.nextSibling;
        if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 621, 14, "child != null");
      }
      return child;
    }
    get [_lastOnstageChild]() {
      return this.skipCount == super.childCount ? null : this.lastChild;
    }
    get [_onstageChildCount]() {
      return dart.notNull(this.childCount) - dart.notNull(this.skipCount);
    }
    computeMinIntrinsicWidth(height) {
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => child.getMinIntrinsicWidth(height), RenderBoxTodouble()));
    }
    computeMaxIntrinsicWidth(height) {
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => child.getMaxIntrinsicWidth(height), RenderBoxTodouble()));
    }
    computeMinIntrinsicHeight(width) {
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => child.getMinIntrinsicHeight(width), RenderBoxTodouble()));
    }
    computeMaxIntrinsicHeight(width) {
      return stack.RenderStack.getIntrinsicDimension(this[_firstOnstageChild], dart.fn(child => child.getMaxIntrinsicHeight(width), RenderBoxTodouble()));
    }
    computeDistanceToActualBaseline(baseline) {
      if (!!dart.test(this.debugNeedsLayout)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 652, 12, "!debugNeedsLayout");
      let result = null;
      let child = this[_firstOnstageChild];
      while (child != null) {
        if (!!dart.test(child.debugNeedsLayout)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 656, 14, "!child.debugNeedsLayout");
        let childParentData = stack.StackParentData.as(child.parentData);
        let candidate = child.getDistanceToActualBaseline(baseline);
        if (candidate != null) {
          candidate = dart.notNull(candidate) + dart.notNull(childParentData.offset.dy);
          if (result != null) {
            result = math.min(core.double, result, candidate);
          } else {
            result = candidate;
          }
        }
        child = childParentData.nextSibling;
      }
      return result;
    }
    get sizedByParent() {
      return true;
    }
    performResize() {
      this.size = this.constraints.biggest;
      if (!dart.test(this.size.isFinite)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 678, 12, "size.isFinite");
    }
    performLayout() {
      this[_hasVisualOverflow] = false;
      if (this[_onstageChildCount] === 0) {
        return;
      }
      this[_resolve]();
      if (!(this[_resolvedAlignment] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 690, 12, "_resolvedAlignment != null");
      let nonPositionedConstraints = new box$.BoxConstraints.tight(this.constraints.biggest);
      let child = this[_firstOnstageChild];
      while (child != null) {
        let childParentData = stack.StackParentData.as(child.parentData);
        if (!dart.test(childParentData.isPositioned)) {
          child.layout(nonPositionedConstraints, {parentUsesSize: true});
          childParentData.offset = this[_resolvedAlignment].alongOffset(ui.Offset.as(this.size['-'](child.size)));
        } else {
          this[_hasVisualOverflow] = dart.test(stack.RenderStack.layoutPositionedChild(child, childParentData, this.size, this[_resolvedAlignment])) || dart.test(this[_hasVisualOverflow]);
        }
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 706, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      let child = this[_lastOnstageChild];
      for (let i = 0; i < dart.notNull(this[_onstageChildCount]); i = i + 1) {
        if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 715, 14, "child != null");
        let childParentData = stack.StackParentData.as(child.parentData);
        let isHit = result.addWithPaintOffset({offset: childParentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['-'](childParentData.offset))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 721, 18, "transformed == position - childParentData.offset");
            return child.hitTest(result, {position: transformed});
          }, BoxHitTestResultAndOffsetTobool())});
        if (dart.test(isHit)) return true;
        child = childParentData.previousSibling;
      }
      return false;
    }
    paintStack(context, offset) {
      let child = this[_firstOnstageChild];
      while (child != null) {
        let childParentData = stack.StackParentData.as(child.parentData);
        context.paintChild(child, childParentData.offset['+'](offset));
        child = childParentData.nextSibling;
      }
    }
    paint(context, offset) {
      if (dart.test(this[_hasVisualOverflow])) {
        context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), dart.bind(this, 'paintStack'));
      } else {
        this.paintStack(context, offset);
      }
    }
    visitChildrenForSemantics(visitor) {
      let child = this[_firstOnstageChild];
      while (child != null) {
        visitor(child);
        let childParentData = stack.StackParentData.as(child.parentData);
        child = childParentData.nextSibling;
      }
    }
    describeApproximatePaintClip(child) {
      object$.RenderObject._check(child);
      return dart.test(this[_hasVisualOverflow]) ? ui.Offset.zero['&'](this.size) : null;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("skipCount", this.skipCount));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection));
    }
    debugDescribeChildren() {
      let offstageChildren = JSArrayOfDiagnosticsNode().of([]);
      let onstageChildren = JSArrayOfDiagnosticsNode().of([]);
      let count = 1;
      let onstage = false;
      let child = this.firstChild;
      let firstOnstageChild = this[_firstOnstageChild];
      while (child != null) {
        if (dart.equals(child, firstOnstageChild)) {
          onstage = true;
          count = 1;
        }
        if (onstage) {
          onstageChildren[$add](child.toDiagnosticsNode({name: "onstage " + dart.str(count)}));
        } else {
          offstageChildren[$add](child.toDiagnosticsNode({name: "offstage " + dart.str(count), style: diagnostics$.DiagnosticsTreeStyle.offstage}));
        }
        let childParentData = stack.StackParentData.as(child.parentData);
        child = childParentData.nextSibling;
        count = count + 1;
      }
      return (() => {
        let t26 = JSArrayOfDiagnosticsNode().of([]);
        for (let t27 of onstageChildren)
          t26[$add](t27);
        if (dart.test(offstageChildren[$isNotEmpty]))
          for (let t28 of offstageChildren)
            t26[$add](t28);
        else
          t26[$add](diagnostics$.DiagnosticsNode.message("no offstage children", {style: diagnostics$.DiagnosticsTreeStyle.offstage}));
        return t26;
      })();
    }
  };
  (overlay$._RenderTheatre.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let skipCount = opts && 'skipCount' in opts ? opts.skipCount : 0;
    this[_hasVisualOverflow] = false;
    this[_resolvedAlignment] = null;
    if (!(skipCount != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 565, 15, "skipCount != null");
    if (!(dart.notNull(skipCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 566, 15, "skipCount >= 0");
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overlay.dart", 567, 15, "textDirection != null");
    this[_textDirection$] = textDirection;
    this[_skipCount] = skipCount;
    overlay$._RenderTheatre.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = overlay$._RenderTheatre.prototype;
  dart.addTypeTests(overlay$._RenderTheatre);
  dart.setMethodSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getMethods(overlay$._RenderTheatre.__proto__),
    [_resolve]: dart.fnType(dart.void, []),
    [_markNeedResolution]: dart.fnType(dart.void, []),
    paintStack: dart.fnType(dart.void, [object$.PaintingContext, ui.Offset])
  }));
  dart.setGetterSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getGetters(overlay$._RenderTheatre.__proto__),
    textDirection: ui.TextDirection,
    skipCount: core.int,
    [_firstOnstageChild]: box$.RenderBox,
    [_lastOnstageChild]: box$.RenderBox,
    [_onstageChildCount]: core.int
  }));
  dart.setSetterSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getSetters(overlay$._RenderTheatre.__proto__),
    textDirection: ui.TextDirection,
    skipCount: core.int
  }));
  dart.setLibraryUri(overlay$._RenderTheatre, "package:flutter/src/widgets/overlay.dart");
  dart.setFieldSignature(overlay$._RenderTheatre, () => ({
    __proto__: dart.getFields(overlay$._RenderTheatre.__proto__),
    [_hasVisualOverflow]: dart.fieldType(core.bool),
    [_resolvedAlignment]: dart.fieldType(alignment$.Alignment),
    [_textDirection$]: dart.fieldType(ui.TextDirection),
    [_skipCount]: dart.fieldType(core.int)
  }));
  var _name$22 = dart.privateName(navigator$, "_name");
  var C792;
  var C793;
  var C794;
  var C795;
  navigator$.RoutePopDisposition = class RoutePopDisposition extends core.Object {
    toString() {
      return this[_name$22];
    }
  };
  (navigator$.RoutePopDisposition.new = function(index, _name) {
    this.index = index;
    this[_name$22] = _name;
    ;
  }).prototype = navigator$.RoutePopDisposition.prototype;
  dart.addTypeTests(navigator$.RoutePopDisposition);
  dart.setLibraryUri(navigator$.RoutePopDisposition, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$.RoutePopDisposition, () => ({
    __proto__: dart.getFields(navigator$.RoutePopDisposition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigator$.RoutePopDisposition, ['toString']);
  navigator$.RoutePopDisposition.pop = C792 || CT.C792;
  navigator$.RoutePopDisposition.doNotPop = C793 || CT.C793;
  navigator$.RoutePopDisposition.bubble = C794 || CT.C794;
  navigator$.RoutePopDisposition.values = C795 || CT.C795;
  navigator$.RouteSettings = class RouteSettings extends core.Object {
    get name() {
      return this[name$0];
    }
    set name(value) {
      super.name = value;
    }
    get isInitialRoute() {
      return this[isInitialRoute$];
    }
    set isInitialRoute(value) {
      super.isInitialRoute = value;
    }
    get arguments() {
      return this[arguments$];
    }
    set arguments(value) {
      super.arguments = value;
    }
    copyWith(opts) {
      let t29, t29$;
      let name = opts && 'name' in opts ? opts.name : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return new navigator$.RouteSettings.new({name: (t29 = name, t29 == null ? this.name : t29), arguments: (t29$ = $arguments, t29$ == null ? this.arguments : t29$)});
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "RouteSettings")) + "(\"" + dart.str(this.name) + "\", " + dart.str(this.arguments) + ")";
    }
  };
  (navigator$.RouteSettings.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let isInitialRoute = opts && 'isInitialRoute' in opts ? opts.isInitialRoute : false;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    this[name$0] = name;
    this[isInitialRoute$] = isInitialRoute;
    this[arguments$] = $arguments;
    ;
  }).prototype = navigator$.RouteSettings.prototype;
  dart.addTypeTests(navigator$.RouteSettings);
  const name$0 = RouteSettings_name;
  const isInitialRoute$ = RouteSettings_isInitialRoute;
  const arguments$ = RouteSettings_arguments;
  dart.setMethodSignature(navigator$.RouteSettings, () => ({
    __proto__: dart.getMethods(navigator$.RouteSettings.__proto__),
    copyWith: dart.fnType(navigator$.RouteSettings, [], {arguments: core.Object, name: core.String}, {})
  }));
  dart.setLibraryUri(navigator$.RouteSettings, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$.RouteSettings, () => ({
    __proto__: dart.getFields(navigator$.RouteSettings.__proto__),
    name: dart.finalFieldType(core.String),
    isInitialRoute: dart.finalFieldType(core.bool),
    arguments: dart.finalFieldType(core.Object)
  }));
  dart.defineExtensionMethods(navigator$.RouteSettings, ['toString']);
  var _routeNamed = dart.privateName(navigator$, "_routeNamed");
  var initialRoute$0 = dart.privateName(navigator$, "Navigator.initialRoute");
  var onGenerateRoute$0 = dart.privateName(navigator$, "Navigator.onGenerateRoute");
  var onUnknownRoute$0 = dart.privateName(navigator$, "Navigator.onUnknownRoute");
  var observers$ = dart.privateName(navigator$, "Navigator.observers");
  var onGenerateInitialRoutes$0 = dart.privateName(navigator$, "Navigator.onGenerateInitialRoutes");
  navigator$.Navigator = class Navigator extends framework.StatefulWidget {
    get initialRoute() {
      return this[initialRoute$0];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$0];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$0];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get observers() {
      return this[observers$];
    }
    set observers(value) {
      super.observers = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$0];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    static pushNamed(T, context, routeName, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushNamed(T, routeName, {arguments: $arguments});
    }
    static pushReplacementNamed(T, TO, context, routeName, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushReplacementNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static popAndPushNamed(T, TO, context, routeName, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).popAndPushNamed(T, TO, routeName, {arguments: $arguments, result: result});
    }
    static pushNamedAndRemoveUntil(T, context, newRouteName, predicate, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return navigator$.Navigator.of(context).pushNamedAndRemoveUntil(T, newRouteName, predicate, {arguments: $arguments});
    }
    static push(T, context, route) {
      return navigator$.Navigator.of(context).push(T, route);
    }
    static pushReplacement(T, TO, context, newRoute, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      return navigator$.Navigator.of(context).pushReplacement(T, TO, newRoute, {result: result});
    }
    static pushAndRemoveUntil(T, context, newRoute, predicate) {
      return navigator$.Navigator.of(context).pushAndRemoveUntil(T, newRoute, predicate);
    }
    static replace(T, context, opts) {
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      return navigator$.Navigator.of(context).replace(T, {oldRoute: oldRoute, newRoute: newRoute});
    }
    static replaceRouteBelow(T, context, opts) {
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      return navigator$.Navigator.of(context).replaceRouteBelow(T, {anchorRoute: anchorRoute, newRoute: newRoute});
    }
    static canPop(context) {
      let navigator = navigator$.Navigator.of(context, {nullOk: true});
      return navigator != null && dart.test(navigator.canPop());
    }
    static maybePop(T, context, result = null) {
      return navigator$.Navigator.of(context).maybePop(T, result);
    }
    static pop(T, context, result = null) {
      navigator$.Navigator.of(context).pop(T, result);
    }
    static popUntil(context, predicate) {
      navigator$.Navigator.of(context).popUntil(predicate);
    }
    static removeRoute(context, route) {
      return navigator$.Navigator.of(context).removeRoute(route);
    }
    static removeRouteBelow(context, anchorRoute) {
      return navigator$.Navigator.of(context).removeRouteBelow(anchorRoute);
    }
    static of(context, opts) {
      let rootNavigator = opts && 'rootNavigator' in opts ? opts.rootNavigator : false;
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      let navigator = dart.test(rootNavigator) ? context.findRootAncestorStateOfType(navigator$.NavigatorState) : context.findAncestorStateOfType(navigator$.NavigatorState);
      if (!dart.test(dart.fn(() => {
        if (navigator == null && !dart.test(nullOk)) {
          dart.throw(assertions.FlutterError.new("Navigator operation requested with a context that does not include a Navigator.\n" + "The context used to push or pop routes from the Navigator must be that of a " + "widget that is a descendant of a Navigator widget."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1621, 12, "() {\r\n      if (navigator == null && !nullOk) {\r\n        throw FlutterError(\r\n          'Navigator operation requested with a context that does not include a Navigator.\\n'\r\n          'The context used to push or pop routes from the Navigator must be that of a '\r\n          'widget that is a descendant of a Navigator widget.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return navigator;
    }
    static defaultGenerateInitialRoutes(navigator, initialRouteName) {
      let result = JSArrayOfRoute().of([]);
      if (initialRouteName[$startsWith]("/") && initialRouteName.length > 1) {
        initialRouteName = initialRouteName[$substring](1);
        if (!("/" === "/")) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1651, 14, "Navigator.defaultRouteName == '/'");
        let debugRouteNames = null;
        if (!dart.test(dart.fn(() => {
          debugRouteNames = JSArrayOfString().of(["/"]);
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1653, 14, "() {\r\n        debugRouteNames = <String>[ Navigator.defaultRouteName ];\r\n        return true;\r\n      }()");
        result[$add](navigator[_routeNamed](dart.dynamic, "/", {arguments: null, allowNull: true}));
        let routeParts = initialRouteName[$split]("/");
        if (initialRouteName[$isNotEmpty]) {
          let routeName = "";
          for (let part of routeParts) {
            routeName = routeName + ("/" + dart.str(part));
            if (!dart.test(dart.fn(() => {
              debugRouteNames[$add](routeName);
              return true;
            }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1663, 18, "() {\r\n            debugRouteNames.add(routeName);\r\n            return true;\r\n          }()");
            result[$add](navigator[_routeNamed](dart.dynamic, routeName, {arguments: null, allowNull: true}));
          }
        }
        if (result[$last] == null) {
          if (!dart.test(dart.fn(() => {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({exception: "Could not navigate to initial route.\n" + "The requested route name was: \"/" + dart.str(initialRouteName) + "\"\n" + "There was no corresponding route in the app, and therefore the initial route specified will be " + "ignored and \"" + "/" + "\" will be used instead."}));
            return true;
          }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1671, 16, "() {\r\n          FlutterError.reportError(\r\n            FlutterErrorDetails(\r\n              exception:\r\n                'Could not navigate to initial route.\\n'\r\n                'The requested route name was: \"/$initialRouteName\"\\n'\r\n                'There was no corresponding route in the app, and therefore the initial route specified will be '\r\n                'ignored and \"${Navigator.defaultRouteName}\" will be used instead.'\r\n            ),\r\n          );\r\n          return true;\r\n        }()");
          result[$clear]();
        }
      } else if (initialRouteName !== "/") {
        result[$add](navigator[_routeNamed](dart.dynamic, initialRouteName, {arguments: null, allowNull: true}));
      }
      result[$removeWhere](dart.fn(route => route == null, RouteTobool()));
      if (dart.test(result[$isEmpty])) result[$add](navigator[_routeNamed](dart.dynamic, "/", {arguments: null}));
      return result;
    }
    createState() {
      return new navigator$.NavigatorState.new();
    }
  };
  (navigator$.Navigator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : C426 || CT.C426;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let observers = opts && 'observers' in opts ? opts.observers : C402 || CT.C402;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[initialRoute$0] = initialRoute;
    this[onGenerateInitialRoutes$0] = onGenerateInitialRoutes;
    this[onGenerateRoute$0] = onGenerateRoute;
    this[onUnknownRoute$0] = onUnknownRoute;
    this[observers$] = observers;
    if (!(onGenerateInitialRoutes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 896, 15, "onGenerateInitialRoutes != null");
    navigator$.Navigator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigator$.Navigator.prototype;
  dart.addTypeTests(navigator$.Navigator);
  dart.setMethodSignature(navigator$.Navigator, () => ({
    __proto__: dart.getMethods(navigator$.Navigator.__proto__),
    createState: dart.fnType(navigator$.NavigatorState, [])
  }));
  dart.setLibraryUri(navigator$.Navigator, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$.Navigator, () => ({
    __proto__: dart.getFields(navigator$.Navigator.__proto__),
    initialRoute: dart.finalFieldType(core.String),
    onGenerateRoute: dart.finalFieldType(dart.fnType(navigator$.Route, [navigator$.RouteSettings])),
    onUnknownRoute: dart.finalFieldType(dart.fnType(navigator$.Route, [navigator$.RouteSettings])),
    observers: dart.finalFieldType(core.List$(navigator$.NavigatorObserver)),
    onGenerateInitialRoutes: dart.finalFieldType(dart.fnType(core.List$(navigator$.Route), [navigator$.NavigatorState, core.String]))
  }));
  dart.defineLazy(navigator$.Navigator, {
    /*navigator$.Navigator.defaultRouteName*/get defaultRouteName() {
      return "/";
    }
  });
  var C796;
  var C797;
  var C798;
  var C799;
  var C800;
  var C801;
  var C802;
  var C803;
  var C804;
  var C805;
  var C806;
  var C807;
  var C808;
  navigator$._RouteLifecycle = class _RouteLifecycle extends core.Object {
    toString() {
      return this[_name$22];
    }
  };
  (navigator$._RouteLifecycle.new = function(index, _name) {
    this.index = index;
    this[_name$22] = _name;
    ;
  }).prototype = navigator$._RouteLifecycle.prototype;
  dart.addTypeTests(navigator$._RouteLifecycle);
  dart.setLibraryUri(navigator$._RouteLifecycle, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$._RouteLifecycle, () => ({
    __proto__: dart.getFields(navigator$._RouteLifecycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$22]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(navigator$._RouteLifecycle, ['toString']);
  navigator$._RouteLifecycle.add = C796 || CT.C796;
  navigator$._RouteLifecycle.push = C797 || CT.C797;
  navigator$._RouteLifecycle.pushReplace = C798 || CT.C798;
  navigator$._RouteLifecycle.pushing = C799 || CT.C799;
  navigator$._RouteLifecycle.replace = C800 || CT.C800;
  navigator$._RouteLifecycle.idle = C801 || CT.C801;
  navigator$._RouteLifecycle.pop = C802 || CT.C802;
  navigator$._RouteLifecycle.remove = C803 || CT.C803;
  navigator$._RouteLifecycle.popping = C804 || CT.C804;
  navigator$._RouteLifecycle.removing = C805 || CT.C805;
  navigator$._RouteLifecycle.dispose = C806 || CT.C806;
  navigator$._RouteLifecycle.disposed = C807 || CT.C807;
  navigator$._RouteLifecycle.values = C808 || CT.C808;
  var _reportRemovalToObserver = dart.privateName(navigator$, "_reportRemovalToObserver");
  var _debugLocked = dart.privateName(navigator$, "_debugLocked");
  var _flushHistoryUpdates = dart.privateName(navigator$, "_flushHistoryUpdates");
  navigator$._RouteEntry = class _RouteEntry extends core.Object {
    handleAdd(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let isNewFirst = opts && 'isNewFirst' in opts ? opts.isNewFirst : null;
      let previous = opts && 'previous' in opts ? opts.previous : null;
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!dart.equals(this.currentState, navigator$._RouteLifecycle.add)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1784, 12, "currentState == _RouteLifecycle.add");
      if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1785, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1786, 12, "navigator._debugLocked");
      if (!(this.route[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1787, 12, "route._navigator == null");
      this.route[_navigator$] = navigator;
      this.route.install();
      if (!dart.test(this.route.overlayEntries[$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1790, 12, "route.overlayEntries.isNotEmpty");
      this.route.didAdd();
      this.currentState = navigator$._RouteLifecycle.idle;
      if (dart.test(isNewFirst)) {
        this.route.didChangeNext(null);
      }
      route_notification_messages.RouteNotificationMessages.maybeNotifyRouteChange("routePushed", this.route, previous);
      for (let observer of navigator.widget.observers)
        observer.didPush(this.route, previousPresent);
    }
    handlePush(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let isNewFirst = opts && 'isNewFirst' in opts ? opts.isNewFirst : null;
      let previous = opts && 'previous' in opts ? opts.previous : null;
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(dart.equals(this.currentState, navigator$._RouteLifecycle.push) || dart.equals(this.currentState, navigator$._RouteLifecycle.pushReplace) || dart.equals(this.currentState, navigator$._RouteLifecycle.replace))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1802, 12, "currentState == _RouteLifecycle.push || currentState == _RouteLifecycle.pushReplace || currentState == _RouteLifecycle.replace");
      if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1803, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1804, 12, "navigator._debugLocked");
      if (!(this.route[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1805, 12, "route._navigator == null");
      let previousState = this.currentState;
      this.route[_navigator$] = navigator;
      this.route.install();
      if (!dart.test(this.route.overlayEntries[$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1809, 12, "route.overlayEntries.isNotEmpty");
      if (dart.equals(this.currentState, navigator$._RouteLifecycle.push) || dart.equals(this.currentState, navigator$._RouteLifecycle.pushReplace)) {
        let routeFuture = this.route.didPush();
        this.currentState = navigator$._RouteLifecycle.pushing;
        routeFuture.whenCompleteOrCancel(dart.fn(() => {
          if (dart.equals(this.currentState, navigator$._RouteLifecycle.pushing)) {
            this.currentState = navigator$._RouteLifecycle.idle;
            if (!!dart.test(navigator[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1816, 18, "!navigator._debugLocked");
            if (!dart.test(dart.fn(() => {
              navigator[_debugLocked] = true;
              return true;
            }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1817, 18, "() { navigator._debugLocked = true; return true; }()");
            navigator[_flushHistoryUpdates]();
            if (!dart.test(dart.fn(() => {
              navigator[_debugLocked] = false;
              return true;
            }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1819, 18, "() { navigator._debugLocked = false; return true; }()");
          }
        }, VoidToNull()));
      } else {
        if (!dart.equals(this.currentState, navigator$._RouteLifecycle.replace)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1823, 14, "currentState == _RouteLifecycle.replace");
        this.route.didReplace(previous);
        this.currentState = navigator$._RouteLifecycle.idle;
      }
      if (dart.test(isNewFirst)) {
        this.route.didChangeNext(null);
      }
      if (dart.equals(previousState, navigator$._RouteLifecycle.replace) || dart.equals(previousState, navigator$._RouteLifecycle.pushReplace)) {
        route_notification_messages.RouteNotificationMessages.maybeNotifyRouteChange("routeReplaced", this.route, previous);
        for (let observer of navigator.widget.observers)
          observer.didReplace({newRoute: this.route, oldRoute: previous});
      } else {
        if (!dart.equals(previousState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1836, 14, "previousState == _RouteLifecycle.push");
        route_notification_messages.RouteNotificationMessages.maybeNotifyRouteChange("routePushed", this.route, previous);
        for (let observer of navigator.widget.observers)
          observer.didPush(this.route, previousPresent);
      }
    }
    handleDidPopNext(poppedRoute) {
      this.route.didPopNext(poppedRoute);
      this.lastAnnouncedPoppedNextRoute = poppedRoute;
    }
    handlePop(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1849, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1850, 12, "navigator._debugLocked");
      if (!dart.equals(this.route[_navigator$], navigator)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1851, 12, "route._navigator == navigator");
      this.currentState = navigator$._RouteLifecycle.popping;
      for (let observer of navigator.widget.observers)
        observer.didPop(this.route, previousPresent);
      route_notification_messages.RouteNotificationMessages.maybeNotifyRouteChange("routePopped", this.route, previousPresent);
    }
    handleRemoval(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let previousPresent = opts && 'previousPresent' in opts ? opts.previousPresent : null;
      if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1863, 12, "navigator != null");
      if (!dart.test(navigator[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1864, 12, "navigator._debugLocked");
      if (!dart.equals(this.route[_navigator$], navigator)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1865, 12, "route._navigator == navigator");
      this.currentState = navigator$._RouteLifecycle.removing;
      if (dart.test(this[_reportRemovalToObserver])) {
        for (let observer of navigator.widget.observers)
          observer.didRemove(this.route, previousPresent);
      }
    }
    pop(T, result) {
      if (!dart.test(this.isPresent)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1876, 12, "isPresent");
      this.doingPop = true;
      if (dart.test(this.route.didPop(result)) && dart.test(this.doingPop)) {
        this.currentState = navigator$._RouteLifecycle.pop;
      }
      this.doingPop = false;
    }
    remove(opts) {
      let isReplaced = opts && 'isReplaced' in opts ? opts.isReplaced : false;
      if (dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.remove.index)) return;
      if (!dart.test(this.isPresent)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1890, 12, "isPresent");
      this[_reportRemovalToObserver] = !dart.test(isReplaced);
      this.currentState = navigator$._RouteLifecycle.remove;
    }
    complete(T, result, opts) {
      let isReplaced = opts && 'isReplaced' in opts ? opts.isReplaced : false;
      if (dart.notNull(this.currentState.index) >= dart.notNull(navigator$._RouteLifecycle.remove.index)) return;
      if (!dart.test(this.isPresent)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1899, 12, "isPresent");
      this[_reportRemovalToObserver] = !dart.test(isReplaced);
      this.route.didComplete(result);
      if (!dart.test(this.route[_popCompleter].isCompleted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1902, 12, "route._popCompleter.isCompleted");
      this.currentState = navigator$._RouteLifecycle.remove;
    }
    finalize() {
      if (!(dart.notNull(this.currentState.index) < dart.notNull(navigator$._RouteLifecycle.dispose.index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1907, 12, "currentState.index < _RouteLifecycle.dispose.index");
      this.currentState = navigator$._RouteLifecycle.dispose;
    }
    dispose() {
      if (!(dart.notNull(this.currentState.index) < dart.notNull(navigator$._RouteLifecycle.disposed.index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1912, 12, "currentState.index < _RouteLifecycle.disposed.index");
      this.route.dispose();
      this.currentState = navigator$._RouteLifecycle.disposed;
    }
    get willBePresent() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.idle.index);
    }
    get isPresent() {
      return dart.notNull(this.currentState.index) <= dart.notNull(navigator$._RouteLifecycle.remove.index);
    }
    shouldAnnounceChangeToNext(nextRoute) {
      if (!!dart.equals(nextRoute, this.lastAnnouncedNextRoute)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1921, 12, "nextRoute != lastAnnouncedNextRoute");
      return !(nextRoute == null && this.lastAnnouncedPoppedNextRoute != null && dart.equals(this.lastAnnouncedPoppedNextRoute, this.lastAnnouncedNextRoute));
    }
    static isRoutePredicate(route) {
      return dart.fn(entry => dart.equals(entry.route, route), _RouteEntryTobool());
    }
  };
  (navigator$._RouteEntry.new = function(route, opts) {
    let initialState = opts && 'initialState' in opts ? opts.initialState : null;
    this.lastAnnouncedNextRoute = null;
    this.lastAnnouncedPreviousRoute = null;
    this.lastAnnouncedPoppedNextRoute = null;
    this.doingPop = false;
    this[_reportRemovalToObserver] = true;
    this.route = route;
    if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1766, 17, "route != null");
    if (!(initialState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1767, 17, "initialState != null");
    if (!(dart.equals(initialState, navigator$._RouteLifecycle.add) || dart.equals(initialState, navigator$._RouteLifecycle.push) || dart.equals(initialState, navigator$._RouteLifecycle.pushReplace) || dart.equals(initialState, navigator$._RouteLifecycle.replace))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1769, 12, "initialState == _RouteLifecycle.add ||\r\n           initialState == _RouteLifecycle.push ||\r\n           initialState == _RouteLifecycle.pushReplace ||\r\n           initialState == _RouteLifecycle.replace");
    this.currentState = initialState;
    ;
  }).prototype = navigator$._RouteEntry.prototype;
  dart.addTypeTests(navigator$._RouteEntry);
  dart.setMethodSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getMethods(navigator$._RouteEntry.__proto__),
    handleAdd: dart.fnType(dart.void, [], {isNewFirst: core.bool, navigator: navigator$.NavigatorState, previous: navigator$.Route, previousPresent: navigator$.Route}, {}),
    handlePush: dart.fnType(dart.void, [], {isNewFirst: core.bool, navigator: navigator$.NavigatorState, previous: navigator$.Route, previousPresent: navigator$.Route}, {}),
    handleDidPopNext: dart.fnType(dart.void, [navigator$.Route]),
    handlePop: dart.fnType(dart.void, [], {navigator: navigator$.NavigatorState, previousPresent: navigator$.Route}, {}),
    handleRemoval: dart.fnType(dart.void, [], {navigator: navigator$.NavigatorState, previousPresent: navigator$.Route}, {}),
    pop: dart.gFnType(T => [dart.void, [T]]),
    remove: dart.fnType(dart.void, [], {isReplaced: core.bool}, {}),
    complete: dart.gFnType(T => [dart.void, [T], {isReplaced: core.bool}, {}]),
    finalize: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    shouldAnnounceChangeToNext: dart.fnType(core.bool, [navigator$.Route])
  }));
  dart.setGetterSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getGetters(navigator$._RouteEntry.__proto__),
    willBePresent: core.bool,
    isPresent: core.bool
  }));
  dart.setLibraryUri(navigator$._RouteEntry, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$._RouteEntry, () => ({
    __proto__: dart.getFields(navigator$._RouteEntry.__proto__),
    route: dart.finalFieldType(navigator$.Route),
    currentState: dart.fieldType(navigator$._RouteLifecycle),
    lastAnnouncedNextRoute: dart.fieldType(navigator$.Route),
    lastAnnouncedPreviousRoute: dart.fieldType(navigator$.Route),
    lastAnnouncedPoppedNextRoute: dart.fieldType(navigator$.Route),
    doingPop: dart.fieldType(core.bool),
    [_reportRemovalToObserver]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(navigator$._RouteEntry, {
    /*navigator$._RouteEntry.isPresentPredicate*/get isPresentPredicate() {
      return dart.fn(entry => entry.isPresent, _RouteEntryTobool());
    },
    /*navigator$._RouteEntry.willBePresentPredicate*/get willBePresentPredicate() {
      return dart.fn(entry => entry.willBePresent, _RouteEntryTobool());
    }
  });
  var _overlayKey = dart.privateName(navigator$, "_overlayKey");
  var _userGesturesInProgressCount = dart.privateName(navigator$, "_userGesturesInProgressCount");
  var _activePointers = dart.privateName(navigator$, "_activePointers");
  var _allRouteOverlayEntries = dart.privateName(navigator$, "_allRouteOverlayEntries");
  var _getRouteBefore = dart.privateName(navigator$, "_getRouteBefore");
  var _flushRouteAnnouncement = dart.privateName(navigator$, "_flushRouteAnnouncement");
  var _getRouteAfter = dart.privateName(navigator$, "_getRouteAfter");
  var _getIndexBefore = dart.privateName(navigator$, "_getIndexBefore");
  var _afterNavigation = dart.privateName(navigator$, "_afterNavigation");
  var _cancelActivePointers = dart.privateName(navigator$, "_cancelActivePointers");
  var _userGesturesInProgress = dart.privateName(navigator$, "_userGesturesInProgress");
  var _handlePointerDown$0 = dart.privateName(navigator$, "_handlePointerDown");
  var _handlePointerUpOrCancel = dart.privateName(navigator$, "_handlePointerUpOrCancel");
  var C811;
  var C812;
  var C810;
  var C809;
  var C815;
  var C816;
  var C817;
  var C814;
  var C813;
  var C820;
  var C821;
  var C819;
  var C818;
  var C824;
  var C825;
  var C826;
  var C827;
  var C823;
  var C822;
  var focusScopeNode = dart.privateName(navigator$, "NavigatorState.focusScopeNode");
  var userGestureInProgressNotifier = dart.privateName(navigator$, "NavigatorState.userGestureInProgressNotifier");
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(navigator$.Navigator) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(navigator$.Navigator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(navigator$.Navigator));
  navigator$.NavigatorState = class NavigatorState extends State_TickerProviderStateMixin$36$0 {
    get focusScopeNode() {
      return this[focusScopeNode];
    }
    set focusScopeNode(value) {
      super.focusScopeNode = value;
    }
    get userGestureInProgressNotifier() {
      return this[userGestureInProgressNotifier];
    }
    set userGestureInProgressNotifier(value) {
      super.userGestureInProgressNotifier = value;
    }
    initState() {
      let t29;
      super.initState();
      for (let observer of this.widget.observers) {
        if (!(observer.navigator == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1953, 14, "observer.navigator == null");
        observer[_navigator$] = this;
      }
      this[_history][$addAll](this.widget.onGenerateInitialRoutes(this, (t29 = this.widget.initialRoute, t29 == null ? "/" : t29))[$map](navigator$._RouteEntry, dart.fn(route => new navigator$._RouteEntry.new(route, {initialState: navigator$._RouteLifecycle.add}), RouteTo_RouteEntry())));
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1966, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1967, 12, "() { _debugLocked = true; return true; }()");
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1969, 12, "() { _debugLocked = false; return true; }()");
    }
    didUpdateWidget(oldWidget) {
      navigator$.Navigator._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(oldWidget.observers, this.widget.observers)) {
        for (let observer of oldWidget.observers)
          observer[_navigator$] = null;
        for (let observer of this.widget.observers) {
          if (!(observer.navigator == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1979, 16, "observer.navigator == null");
          observer[_navigator$] = this;
        }
      }
      for (let entry of this[_history])
        entry.route.changedExternalState();
    }
    dispose() {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1989, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 1990, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      for (let observer of this.widget.observers)
        observer[_navigator$] = null;
      this.focusScopeNode.dispose();
      for (let entry of this[_history])
        entry.dispose();
      super.dispose();
      if (!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2001, 12, "_debugLocked");
    }
    get overlay() {
      return this[_overlayKey].currentState;
    }
    get [_allRouteOverlayEntries]() {
      return new (SyncIterableOfOverlayEntry()).new((function* _allRouteOverlayEntries() {
        for (let entry of this[_history])
          yield* entry.route.overlayEntries;
      }).bind(this));
    }
    [_flushHistoryUpdates](opts) {
      let t29, t29$, t29$0, t29$1, t29$2, t29$3, t29$4;
      let rearrangeOverlay = opts && 'rearrangeOverlay' in opts ? opts.rearrangeOverlay : true;
      if (!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2013, 12, "_debugLocked");
      let index = dart.notNull(this[_history][$length]) - 1;
      let next = null;
      let entry = this[_history][$_get](index);
      let previous = index > 0 ? this[_history][$_get](index - 1) : null;
      let canRemove = false;
      let poppedRoute = null;
      let seenTopActiveRoute = false;
      let toBeDisposed = JSArrayOf_RouteEntry().of([]);
      while (index >= 0) {
        switch (entry.currentState) {
          case C796 || CT.C796:
          {
            if (!dart.test(rearrangeOverlay)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2029, 18, "rearrangeOverlay");
            entry.handleAdd({navigator: this, previous: (t29 = previous, t29 == null ? null : t29.route), previousPresent: (t29$ = this[_getRouteBefore](index - 1, navigator$._RouteEntry.isPresentPredicate), t29$ == null ? null : t29$.route), isNewFirst: next == null});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.idle)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2036, 18, "entry.currentState == _RouteLifecycle.idle");
            continue;
          }
          case C797 || CT.C797:
          case C798 || CT.C798:
          case C800 || CT.C800:
          {
            if (!dart.test(rearrangeOverlay)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2041, 18, "rearrangeOverlay");
            entry.handlePush({navigator: this, previous: (t29$0 = previous, t29$0 == null ? null : t29$0.route), previousPresent: (t29$1 = this[_getRouteBefore](index - 1, navigator$._RouteEntry.isPresentPredicate), t29$1 == null ? null : t29$1.route), isNewFirst: next == null});
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.push)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2048, 18, "entry.currentState != _RouteLifecycle.push");
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.pushReplace)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2049, 18, "entry.currentState != _RouteLifecycle.pushReplace");
            if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.replace)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2050, 18, "entry.currentState != _RouteLifecycle.replace");
            if (dart.equals(entry.currentState, navigator$._RouteLifecycle.idle)) {
              continue;
            }
            break;
          }
          case C799 || CT.C799:
          {
            if (!seenTopActiveRoute && poppedRoute != null) entry.handleDidPopNext(poppedRoute);
            seenTopActiveRoute = true;
            break;
          }
          case C801 || CT.C801:
          {
            if (!seenTopActiveRoute && poppedRoute != null) entry.handleDidPopNext(poppedRoute);
            seenTopActiveRoute = true;
            canRemove = true;
            break;
          }
          case C802 || CT.C802:
          {
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) entry.handleDidPopNext(poppedRoute);
              poppedRoute = entry.route;
            }
            entry.handlePop({navigator: this, previousPresent: (t29$2 = this[_getRouteBefore](index, navigator$._RouteEntry.willBePresentPredicate), t29$2 == null ? null : t29$2.route)});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.popping)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2078, 18, "entry.currentState == _RouteLifecycle.popping");
            break;
          }
          case C804 || CT.C804:
          {
            break;
          }
          case C803 || CT.C803:
          {
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) entry.route.didPopNext(poppedRoute);
              poppedRoute = null;
            }
            entry.handleRemoval({navigator: this, previousPresent: (t29$3 = this[_getRouteBefore](index, navigator$._RouteEntry.willBePresentPredicate), t29$3 == null ? null : t29$3.route)});
            if (!dart.equals(entry.currentState, navigator$._RouteLifecycle.removing)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2093, 18, "entry.currentState == _RouteLifecycle.removing");
            continue;
          }
          case C805 || CT.C805:
          {
            if (!canRemove && next != null) {
              break;
            }
            entry.currentState = navigator$._RouteLifecycle.dispose;
            continue;
          }
          case C806 || CT.C806:
          {
            toBeDisposed[$add](this[_history][$removeAt](index));
            entry = next;
            break;
          }
          case C807 || CT.C807:
          {
            if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2108, 18, "false");
            break;
          }
        }
        index = index - 1;
        next = entry;
        entry = previous;
        previous = index > 0 ? this[_history][$_get](index - 1) : null;
      }
      this[_flushRouteAnnouncement]();
      for (let entry of toBeDisposed) {
        for (let overlayEntry of entry.route.overlayEntries)
          overlayEntry.remove();
        entry.dispose();
      }
      if (dart.test(rearrangeOverlay)) {
        t29$4 = this.overlay;
        t29$4 == null ? null : t29$4.rearrange(this[_allRouteOverlayEntries]);
      }
    }
    [_flushRouteAnnouncement]() {
      let t29, t29$, t29$0, t29$1, t29$2, t29$3, t29$4;
      let index = dart.notNull(this[_history][$length]) - 1;
      while (index >= 0) {
        let entry = this[_history][$_get](index);
        let next = this[_getRouteAfter](index + 1, navigator$._RouteEntry.isPresentPredicate);
        if (!dart.equals((t29 = next, t29 == null ? null : t29.route), entry.lastAnnouncedNextRoute)) {
          if (dart.test(entry.shouldAnnounceChangeToNext((t29$ = next, t29$ == null ? null : t29$.route)))) {
            entry.route.didChangeNext((t29$0 = next, t29$0 == null ? null : t29$0.route));
          }
          entry.lastAnnouncedNextRoute = (t29$1 = next, t29$1 == null ? null : t29$1.route);
        }
        let previous = this[_getRouteBefore](index - 1, navigator$._RouteEntry.isPresentPredicate);
        if (!dart.equals((t29$2 = previous, t29$2 == null ? null : t29$2.route), entry.lastAnnouncedPreviousRoute)) {
          entry.route.didChangePrevious((t29$3 = previous, t29$3 == null ? null : t29$3.route));
          entry.lastAnnouncedPreviousRoute = (t29$4 = previous, t29$4 == null ? null : t29$4.route);
        }
        index = index - 1;
      }
    }
    [_getRouteBefore](index, predicate) {
      index = this[_getIndexBefore](index, predicate);
      return dart.notNull(index) >= 0 ? this[_history][$_get](index) : null;
    }
    [_getIndexBefore](index, predicate) {
      while (dart.notNull(index) >= 0 && !dart.test(predicate(this[_history][$_get](index)))) {
        index = dart.notNull(index) - 1;
      }
      return index;
    }
    [_getRouteAfter](index, predicate) {
      while (dart.notNull(index) < dart.notNull(this[_history][$length]) && !dart.test(predicate(this[_history][$_get](index)))) {
        index = dart.notNull(index) + 1;
      }
      return dart.notNull(index) < dart.notNull(this[_history][$length]) ? this[_history][$_get](index) : null;
    }
    [_routeNamed](T, name, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let allowNull = opts && 'allowNull' in opts ? opts.allowNull : false;
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2172, 12, "!_debugLocked");
      if (!(name != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2173, 12, "name != null");
      if (dart.test(allowNull) && this.widget.onGenerateRoute == null) return null;
      if (!dart.test(dart.fn(() => {
        if (this.widget.onGenerateRoute == null) {
          dart.throw(assertions.FlutterError.new("Navigator.onGenerateRoute was null, but the route named \"" + dart.str(name) + "\" was referenced.\n" + "To use the Navigator API with named routes (pushNamed, pushReplacementNamed, or " + "pushNamedAndRemoveUntil), the Navigator must be provided with an " + "onGenerateRoute handler.\n" + "The Navigator was:\n" + "  " + dart.str(this)));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2176, 12, "() {\r\n      if (widget.onGenerateRoute == null) {\r\n        throw FlutterError(\r\n          'Navigator.onGenerateRoute was null, but the route named \"$name\" was referenced.\\n'\r\n          'To use the Navigator API with named routes (pushNamed, pushReplacementNamed, or '\r\n          'pushNamedAndRemoveUntil), the Navigator must be provided with an '\r\n          'onGenerateRoute handler.\\n'\r\n          'The Navigator was:\\n'\r\n          '  $this'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      let settings = new navigator$.RouteSettings.new({name: name, isInitialRoute: this[_history][$isEmpty], arguments: $arguments});
      let route = navigator$.Route$(T).as(this.widget.onGenerateRoute(settings));
      if (route == null && !dart.test(allowNull)) {
        if (!dart.test(dart.fn(() => {
          if (this.widget.onUnknownRoute == null) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Navigator.onGenerateRoute returned null when requested to build route \"" + dart.str(name) + "\"."), new assertions.ErrorDescription.new("The onGenerateRoute callback must never return null, unless an onUnknownRoute " + "callback is provided as well."), new (DiagnosticsPropertyOfNavigatorState()).new("The Navigator was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2196, 14, "() {\r\n        if (widget.onUnknownRoute == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Navigator.onGenerateRoute returned null when requested to build route \"$name\".'),\r\n            ErrorDescription(\r\n              'The onGenerateRoute callback must never return null, unless an onUnknownRoute '\r\n              'callback is provided as well.'\r\n            ),\r\n            DiagnosticsProperty<NavigatorState>('The Navigator was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        route = navigator$.Route$(T).as(this.widget.onUnknownRoute(settings));
        if (!dart.test(dart.fn(() => {
          if (route == null) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Navigator.onUnknownRoute returned null when requested to build route \"" + dart.str(name) + "\"."), new assertions.ErrorDescription.new("The onUnknownRoute callback must never return null."), new (DiagnosticsPropertyOfNavigatorState()).new("The Navigator was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2210, 14, "() {\r\n        if (route == null) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('Navigator.onUnknownRoute returned null when requested to build route \"$name\".'),\r\n            ErrorDescription('The onUnknownRoute callback must never return null.'),\r\n            DiagnosticsProperty<NavigatorState>('The Navigator was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
      }
      if (!(route != null || dart.test(allowNull))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2221, 12, "route != null || allowNull");
      return route;
    }
    pushNamed(T, routeName, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.push(T, this[_routeNamed](T, routeName, {arguments: $arguments}));
    }
    pushReplacementNamed(T, TO, routeName, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.pushReplacement(T, TO, this[_routeNamed](T, routeName, {arguments: $arguments}), {result: result});
    }
    popAndPushNamed(T, TO, routeName, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      this.pop(TO, result);
      return this.pushNamed(T, routeName, {arguments: $arguments});
    }
    pushNamedAndRemoveUntil(T, newRouteName, predicate, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return this.pushAndRemoveUntil(T, this[_routeNamed](T, newRouteName, {arguments: $arguments}), predicate);
    }
    push(T, route) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2345, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2346, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2350, 12, "route != null");
      if (!(route[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2351, 12, "route._navigator == null");
      this[_history][$add](new navigator$._RouteEntry.new(route, {initialState: navigator$._RouteLifecycle.push}));
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2354, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](T, route);
      return route.popped;
    }
    [_afterNavigation](T, route) {
      if (!false) {
        let routeJsonable = null;
        if (route != null) {
          routeJsonable = new (IdentityMapOfString$dynamic()).new();
          let description = null;
          if (routes.TransitionRoute$(T).is(route)) {
            let transitionRoute = route;
            description = transitionRoute.debugLabel;
          } else {
            description = dart.str(route);
          }
          routeJsonable[$_set]("description", description);
          let settings = route.settings;
          let settingsJsonable = new (IdentityMapOfString$dynamic()).from(["name", settings.name]);
          if (settings.arguments != null) {
            settingsJsonable[$_set]("arguments", convert.jsonEncode(settings.arguments, {toEncodable: dart.fn(object => dart.str(object), ObjectToString())}));
          }
          routeJsonable[$_set]("settings", settingsJsonable);
        }
        developer.postEvent("Flutter.Navigation", new (IdentityMapOfString$dynamic()).from(["route", routeJsonable]));
      }
      this[_cancelActivePointers]();
    }
    pushReplacement(T, TO, newRoute, opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2420, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2421, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(newRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2425, 12, "newRoute != null");
      if (!(newRoute[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2426, 12, "newRoute._navigator == null");
      if (!dart.test(this[_history][$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2427, 12, "_history.isNotEmpty");
      if (!dart.test(this[_history][$any](navigator$._RouteEntry.isPresentPredicate))) dart.assertFailed("Navigator has no active routes to replace.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2428, 12, "_history.any(_RouteEntry.isPresentPredicate)");
      this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate).complete(TO, result, {isReplaced: true});
      this[_history][$add](new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.pushReplace}));
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2432, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](T, newRoute);
      return newRoute.popped;
    }
    pushAndRemoveUntil(T, newRoute, predicate) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2460, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2461, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(newRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2465, 12, "newRoute != null");
      if (!(newRoute[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2466, 12, "newRoute._navigator == null");
      if (!dart.test(newRoute.overlayEntries[$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2467, 12, "newRoute.overlayEntries.isEmpty");
      if (!(predicate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2468, 12, "predicate != null");
      let index = dart.notNull(this[_history][$length]) - 1;
      this[_history][$add](new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.push}));
      while (index >= 0) {
        let entry = this[_history][$_get](index);
        if (dart.test(entry.isPresent) && !dart.test(predicate(entry.route))) this[_history][$_get](index).remove();
        index = index - 1;
      }
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2479, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](T, newRoute);
      return newRoute.popped;
    }
    replace(T, opts) {
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2497, 12, "!_debugLocked");
      if (!(oldRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2498, 12, "oldRoute != null");
      if (!(newRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2499, 12, "newRoute != null");
      if (dart.equals(oldRoute, newRoute)) return;
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2502, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!dart.equals(oldRoute[_navigator$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2506, 12, "oldRoute._navigator == this");
      if (!(newRoute[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2507, 12, "newRoute._navigator == null");
      let index = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(oldRoute));
      if (!(dart.notNull(index) >= 0)) dart.assertFailed("This Navigator does not contain the specified oldRoute.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2509, 12, "index >= 0");
      if (!dart.test(this[_history][$_get](index).isPresent)) dart.assertFailed("The specified oldRoute has already been removed from the Navigator.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2510, 12, "_history[index].isPresent");
      let wasCurrent = oldRoute.isCurrent;
      this[_history][$insert](dart.notNull(index) + 1, new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.replace}));
      this[_history][$_get](index).remove({isReplaced: true});
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2515, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      if (dart.test(wasCurrent)) this[_afterNavigation](T, newRoute);
    }
    replaceRouteBelow(T, opts) {
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2534, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2535, 12, "() { _debugLocked = true; return true; }()");
      if (!(anchorRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2536, 12, "anchorRoute != null");
      if (!dart.equals(anchorRoute[_navigator$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2537, 12, "anchorRoute._navigator == this");
      if (!(newRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2538, 12, "newRoute != null");
      if (!(newRoute[_navigator$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2539, 12, "newRoute._navigator == null");
      let anchorIndex = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(anchorRoute));
      if (!(dart.notNull(anchorIndex) >= 0)) dart.assertFailed("This Navigator does not contain the specified anchorRoute.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2541, 12, "anchorIndex >= 0");
      if (!dart.test(this[_history][$_get](anchorIndex).isPresent)) dart.assertFailed("The specified anchorRoute has already been removed from the Navigator.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2542, 12, "_history[anchorIndex].isPresent");
      let index = dart.notNull(anchorIndex) - 1;
      while (index >= 0) {
        if (dart.test(this[_history][$_get](index).isPresent)) break;
        index = index - 1;
      }
      if (!(index >= 0)) dart.assertFailed("There are no routes below the specified anchorRoute.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2549, 12, "index >= 0");
      this[_history][$insert](index + 1, new navigator$._RouteEntry.new(newRoute, {initialState: navigator$._RouteLifecycle.replace}));
      this[_history][$_get](index).remove({isReplaced: true});
      this[_flushHistoryUpdates]();
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2553, 12, "() { _debugLocked = false; return true; }()");
    }
    canPop() {
      let iterator = this[_history][$where](navigator$._RouteEntry.isPresentPredicate)[$iterator];
      if (!dart.test(iterator.moveNext())) return false;
      if (dart.test(iterator.current.route.willHandlePopInternally)) return true;
      if (!dart.test(iterator.moveNext())) return false;
      return true;
    }
    maybePop(T, result = null) {
      return async.async(core.bool, (function* maybePop() {
        let lastEntry = this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate, {orElse: dart.fn(() => null, VoidToNull())});
        if (lastEntry == null) return false;
        if (!dart.equals(lastEntry.route[_navigator$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2591, 12, "lastEntry.route._navigator == this");
        let disposition = (yield lastEntry.route.willPop());
        if (!(disposition != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2593, 12, "disposition != null");
        if (!dart.test(this.mounted)) return true;
        let newLastEntry = this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate, {orElse: dart.fn(() => null, VoidToNull())});
        if (!dart.equals(lastEntry, newLastEntry)) return true;
        switch (disposition) {
          case C794 || CT.C794:
          {
            return false;
          }
          case C792 || CT.C792:
          {
            this.pop(T, result);
            return true;
          }
          case C793 || CT.C793:
          {
            return true;
          }
        }
        return null;
      }).bind(this));
    }
    pop(T, result = null) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2637, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2638, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      let entry = this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate);
      entry.pop(T, result);
      if (dart.equals(entry.currentState, navigator$._RouteLifecycle.pop)) {
        this[_flushHistoryUpdates]({rearrangeOverlay: false});
        if (!dart.test(entry.route[_popCompleter].isCompleted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2648, 14, "entry.route._popCompleter.isCompleted");
      }
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2650, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      this[_afterNavigation](dart.dynamic, entry.route);
    }
    popUntil(predicate) {
      while (!dart.test(predicate(this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate).route))) {
        this.pop(core.Object);
      }
    }
    removeRoute(route) {
      let t29;
      if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2681, 12, "route != null");
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2682, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2683, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!dart.equals(route[_navigator$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2687, 12, "route._navigator == this");
      let wasCurrent = route.isCurrent;
      let entry = this[_history][$firstWhere](navigator$._RouteEntry.isRoutePredicate(route), {orElse: dart.fn(() => null, VoidToNull())});
      if (!(entry != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2690, 12, "entry != null");
      entry.remove();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2693, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
      if (dart.test(wasCurrent)) this[_afterNavigation](dart.dynamic, (t29 = this[_history][$lastWhere](navigator$._RouteEntry.isPresentPredicate, {orElse: dart.fn(() => null, VoidToNull())}), t29 == null ? null : t29.route));
    }
    removeRouteBelow(anchorRoute) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2711, 12, "!_debugLocked");
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2712, 12, "() {\r\n      _debugLocked = true;\r\n      return true;\r\n    }()");
      if (!(anchorRoute != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2716, 12, "anchorRoute != null");
      if (!dart.equals(anchorRoute[_navigator$], this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2717, 12, "anchorRoute._navigator == this");
      let anchorIndex = this[_history][$indexWhere](navigator$._RouteEntry.isRoutePredicate(anchorRoute));
      if (!(dart.notNull(anchorIndex) >= 0)) dart.assertFailed("This Navigator does not contain the specified anchorRoute.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2719, 12, "anchorIndex >= 0");
      if (!dart.test(this[_history][$_get](anchorIndex).isPresent)) dart.assertFailed("The specified anchorRoute has already been removed from the Navigator.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2720, 12, "_history[anchorIndex].isPresent");
      let index = dart.notNull(anchorIndex) - 1;
      while (index >= 0) {
        if (dart.test(this[_history][$_get](index).isPresent)) break;
        index = index - 1;
      }
      if (!(index >= 0)) dart.assertFailed("There are no routes below the specified anchorRoute.", "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2727, 12, "index >= 0");
      this[_history][$_get](index).remove();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = false;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2730, 12, "() {\r\n      _debugLocked = false;\r\n      return true;\r\n    }()");
    }
    finalizeRoute(route) {
      let wasDebugLocked = null;
      if (!dart.test(dart.fn(() => {
        wasDebugLocked = this[_debugLocked];
        this[_debugLocked] = true;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2752, 12, "() { wasDebugLocked = _debugLocked; _debugLocked = true; return true; }()");
      if (!(this[_history][$where](navigator$._RouteEntry.isRoutePredicate(route))[$length] === 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2753, 12, "_history.where(_RouteEntry.isRoutePredicate(route)).length == 1");
      let entry = this[_history][$firstWhere](navigator$._RouteEntry.isRoutePredicate(route));
      if (dart.test(entry.doingPop)) {
        entry.currentState = navigator$._RouteLifecycle.pop;
        this[_flushHistoryUpdates]({rearrangeOverlay: false});
      }
      if (!!dart.equals(entry.currentState, navigator$._RouteLifecycle.pop)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2761, 12, "entry.currentState != _RouteLifecycle.pop");
      entry.finalize();
      this[_flushHistoryUpdates]({rearrangeOverlay: false});
      if (!dart.test(dart.fn(() => {
        this[_debugLocked] = wasDebugLocked;
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2764, 12, "() { _debugLocked = wasDebugLocked; return true; }()");
    }
    get [_userGesturesInProgress]() {
      return this[_userGesturesInProgressCount];
    }
    set [_userGesturesInProgress](value) {
      this[_userGesturesInProgressCount] = value;
      this.userGestureInProgressNotifier.value = dart.notNull(this[_userGesturesInProgress]) > 0;
    }
    get userGestureInProgress() {
      return this.userGestureInProgressNotifier.value;
    }
    didStartUserGesture() {
      this[_userGesturesInProgress] = dart.notNull(this[_userGesturesInProgress]) + 1;
      if (this[_userGesturesInProgress] === 1) {
        let routeIndex = this[_getIndexBefore](dart.notNull(this[_history][$length]) - 1, navigator$._RouteEntry.willBePresentPredicate);
        if (!(routeIndex != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2799, 14, "routeIndex != null");
        let route = this[_history][$_get](routeIndex).route;
        let previousRoute = null;
        if (!dart.test(route.willHandlePopInternally) && dart.notNull(routeIndex) > 0) {
          previousRoute = this[_getRouteBefore](dart.notNull(routeIndex) - 1, navigator$._RouteEntry.willBePresentPredicate).route;
        }
        for (let observer of this.widget.observers)
          observer.didStartUserGesture(route, previousRoute);
      }
    }
    didStopUserGesture() {
      if (!(dart.notNull(this[_userGesturesInProgress]) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2818, 12, "_userGesturesInProgress > 0");
      this[_userGesturesInProgress] = dart.notNull(this[_userGesturesInProgress]) - 1;
      if (this[_userGesturesInProgress] === 0) {
        for (let observer of this.widget.observers)
          observer.didStopUserGesture();
      }
    }
    [_handlePointerDown$0](event) {
      this[_activePointers].add(event.pointer);
    }
    [_handlePointerUpOrCancel](event) {
      this[_activePointers].remove(event.pointer);
    }
    [_cancelActivePointers]() {
      let t29;
      if (dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.idle)) {
        let absorber = (t29 = this[_overlayKey].currentContext, t29 == null ? null : t29.findAncestorRenderObjectOfType(proxy_box.RenderAbsorbPointer));
        this.setState(dart.fn(() => {
          let t29;
          t29 = absorber;
          t29 == null ? null : t29.absorbing = true;
        }, VoidToNull()));
      }
      this[_activePointers][$toList]()[$forEach](dart.bind(binding$5.WidgetsBinding.instance, 'cancelPointer'));
    }
    build(context) {
      if (!!dart.test(this[_debugLocked])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2854, 12, "!_debugLocked");
      if (!dart.test(this[_history][$isNotEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/navigator.dart", 2855, 12, "_history.isNotEmpty");
      return new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown$0), onPointerUp: dart.bind(this, _handlePointerUpOrCancel), onPointerCancel: dart.bind(this, _handlePointerUpOrCancel), child: new basic.AbsorbPointer.new({absorbing: false, child: new focus_scope.FocusScope.new({node: this.focusScopeNode, autofocus: true, child: new overlay$.Overlay.new({key: this[_overlayKey], initialEntries: this.overlay == null ? this[_allRouteOverlayEntries][$toList]({growable: false}) : C664 || CT.C664, $creationLocationd_0dea112b090073317d4: C809 || CT.C809}), $creationLocationd_0dea112b090073317d4: C813 || CT.C813}), $creationLocationd_0dea112b090073317d4: C818 || CT.C818}), $creationLocationd_0dea112b090073317d4: C822 || CT.C822});
    }
  };
  (navigator$.NavigatorState.new = function() {
    this[_overlayKey] = GlobalKeyOfOverlayState().new();
    this[_history] = JSArrayOf_RouteEntry().of([]);
    this[focusScopeNode] = new focus_manager.FocusScopeNode.new({debugLabel: "Navigator Scope"});
    this[_debugLocked] = false;
    this[_userGesturesInProgressCount] = 0;
    this[userGestureInProgressNotifier] = new (ValueNotifierOfbool()).new(false);
    this[_activePointers] = LinkedHashSetOfint().new();
    navigator$.NavigatorState.__proto__.new.call(this);
    ;
  }).prototype = navigator$.NavigatorState.prototype;
  dart.addTypeTests(navigator$.NavigatorState);
  dart.setMethodSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getMethods(navigator$.NavigatorState.__proto__),
    [_flushHistoryUpdates]: dart.fnType(dart.void, [], {rearrangeOverlay: core.bool}, {}),
    [_flushRouteAnnouncement]: dart.fnType(dart.void, []),
    [_getRouteBefore]: dart.fnType(navigator$._RouteEntry, [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_getIndexBefore]: dart.fnType(core.int, [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_getRouteAfter]: dart.fnType(navigator$._RouteEntry, [core.int, dart.fnType(core.bool, [navigator$._RouteEntry])]),
    [_routeNamed]: dart.gFnType(T => [navigator$.Route$(T), [core.String], {allowNull: core.bool, arguments: core.Object}, {}]),
    pushNamed: dart.gFnType(T => [async.Future$(T), [core.String], {arguments: core.Object}, {}], T => [core.Object]),
    pushReplacementNamed: dart.gFnType((T, TO) => [async.Future$(T), [core.String], {arguments: core.Object, result: TO}, {}], (T, TO) => [core.Object, core.Object]),
    popAndPushNamed: dart.gFnType((T, TO) => [async.Future$(T), [core.String], {arguments: core.Object, result: TO}, {}], (T, TO) => [core.Object, core.Object]),
    pushNamedAndRemoveUntil: dart.gFnType(T => [async.Future$(T), [core.String, dart.fnType(core.bool, [navigator$.Route])], {arguments: core.Object}, {}], T => [core.Object]),
    push: dart.gFnType(T => [async.Future$(T), [navigator$.Route$(T)]], T => [core.Object]),
    [_afterNavigation]: dart.gFnType(T => [dart.void, [navigator$.Route$(T)]]),
    pushReplacement: dart.gFnType((T, TO) => [async.Future$(T), [navigator$.Route$(T)], {result: TO}, {}], (T, TO) => [core.Object, core.Object]),
    pushAndRemoveUntil: dart.gFnType(T => [async.Future$(T), [navigator$.Route$(T), dart.fnType(core.bool, [navigator$.Route])]], T => [core.Object]),
    replace: dart.gFnType(T => [dart.void, [], {newRoute: navigator$.Route$(T), oldRoute: navigator$.Route}, {}], T => [core.Object]),
    replaceRouteBelow: dart.gFnType(T => [dart.void, [], {anchorRoute: navigator$.Route, newRoute: navigator$.Route$(T)}, {}], T => [core.Object]),
    canPop: dart.fnType(core.bool, []),
    maybePop: dart.gFnType(T => [async.Future$(core.bool), [], [T]], T => [core.Object]),
    pop: dart.gFnType(T => [dart.void, [], [T]], T => [core.Object]),
    popUntil: dart.fnType(dart.void, [dart.fnType(core.bool, [navigator$.Route])]),
    removeRoute: dart.fnType(dart.void, [navigator$.Route]),
    removeRouteBelow: dart.fnType(dart.void, [navigator$.Route]),
    finalizeRoute: dart.fnType(dart.void, [navigator$.Route]),
    didStartUserGesture: dart.fnType(dart.void, []),
    didStopUserGesture: dart.fnType(dart.void, []),
    [_handlePointerDown$0]: dart.fnType(dart.void, [events.PointerDownEvent]),
    [_handlePointerUpOrCancel]: dart.fnType(dart.void, [events.PointerEvent]),
    [_cancelActivePointers]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getGetters(navigator$.NavigatorState.__proto__),
    overlay: overlay$.OverlayState,
    [_allRouteOverlayEntries]: core.Iterable$(overlay$.OverlayEntry),
    [_userGesturesInProgress]: core.int,
    userGestureInProgress: core.bool
  }));
  dart.setSetterSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getSetters(navigator$.NavigatorState.__proto__),
    [_userGesturesInProgress]: core.int
  }));
  dart.setLibraryUri(navigator$.NavigatorState, "package:flutter/src/widgets/navigator.dart");
  dart.setFieldSignature(navigator$.NavigatorState, () => ({
    __proto__: dart.getFields(navigator$.NavigatorState.__proto__),
    [_overlayKey]: dart.finalFieldType(framework.GlobalKey$(overlay$.OverlayState)),
    [_history]: dart.finalFieldType(core.List$(navigator$._RouteEntry)),
    focusScopeNode: dart.finalFieldType(focus_manager.FocusScopeNode),
    [_debugLocked]: dart.fieldType(core.bool),
    [_userGesturesInProgressCount]: dart.fieldType(core.int),
    userGestureInProgressNotifier: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_activePointers]: dart.finalFieldType(core.Set$(core.int))
  }));
  dart.defineLazy(navigator$, {
    /*navigator$._routePoppedMethod*/get _routePoppedMethod() {
      return "routePopped";
    },
    /*navigator$._routePushedMethod*/get _routePushedMethod() {
      return "routePushed";
    },
    /*navigator$._routeReplacedMethod*/get _routeReplacedMethod() {
      return "routeReplaced";
    }
  });
  route_notification_messages.RouteNotificationMessages = class RouteNotificationMessages extends core.Object {
    static maybeNotifyRouteChange(methodName, route, previousRoute) {
      if (true) {
        route_notification_messages.RouteNotificationMessages._notifyRouteChange(methodName, route, previousRoute);
      } else {
      }
    }
    static _notifyRouteChange(methodName, route, previousRoute) {
      let t29, t29$, t29$0, t29$1;
      let previousRouteName = (t29$ = (t29 = previousRoute, t29 == null ? null : t29.settings), t29$ == null ? null : t29$.name);
      let routeName = (t29$1 = (t29$0 = route, t29$0 == null ? null : t29$0.settings), t29$1 == null ? null : t29$1.name);
      system_channels.SystemChannels.navigation.invokeMethod(dart.void, methodName, new (IdentityMapOfString$dynamic()).from(["previousRouteName", previousRouteName, "routeName", routeName]));
    }
  };
  (route_notification_messages.RouteNotificationMessages.__ = function() {
    ;
  }).prototype = route_notification_messages.RouteNotificationMessages.prototype;
  dart.addTypeTests(route_notification_messages.RouteNotificationMessages);
  dart.setLibraryUri(route_notification_messages.RouteNotificationMessages, "package:flutter/src/widgets/route_notification_messages.dart");
  var C830;
  var C829;
  var C828;
  var C833;
  var C834;
  var C832;
  var C831;
  var C837;
  var C838;
  var C836;
  var C835;
  var C841;
  var C842;
  var C843;
  var C840;
  var C839;
  var C846;
  var C847;
  var C845;
  var C844;
  var C850;
  var C851;
  var C849;
  var C848;
  var C854;
  var C853;
  var C852;
  var color$5 = dart.privateName(modal_barrier, "ModalBarrier.color");
  var dismissible$ = dart.privateName(modal_barrier, "ModalBarrier.dismissible");
  var barrierSemanticsDismissible$ = dart.privateName(modal_barrier, "ModalBarrier.barrierSemanticsDismissible");
  var semanticsLabel$0 = dart.privateName(modal_barrier, "ModalBarrier.semanticsLabel");
  modal_barrier.ModalBarrier = class ModalBarrier extends framework.StatelessWidget {
    get color() {
      return this[color$5];
    }
    set color(value) {
      super.color = value;
    }
    get dismissible() {
      return this[dismissible$];
    }
    set dismissible(value) {
      super.dismissible = value;
    }
    get barrierSemanticsDismissible() {
      return this[barrierSemanticsDismissible$];
    }
    set barrierSemanticsDismissible(value) {
      super.barrierSemanticsDismissible = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$0];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    build(context) {
      let t29;
      if (!(!dart.test(this.dismissible) || this.semanticsLabel == null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart", 77, 12, "!dismissible || semanticsLabel == null || debugCheckHasDirectionality(context)");
      let platformSupportsDismissingBarrier = null;
      switch (platform.defaultTargetPlatform) {
        case C406 || CT.C406:
        case C407 || CT.C407:
        {
          platformSupportsDismissingBarrier = false;
          break;
        }
        case C409 || CT.C409:
        case C408 || CT.C408:
        {
          platformSupportsDismissingBarrier = true;
          break;
        }
      }
      if (!(platformSupportsDismissingBarrier != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart", 89, 12, "platformSupportsDismissingBarrier != null");
      let semanticsDismissible = dart.test(this.dismissible) && dart.test(platformSupportsDismissingBarrier);
      let modalBarrierSemanticsDismissible = (t29 = this.barrierSemanticsDismissible, t29 == null ? semanticsDismissible : t29);
      return new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: !semanticsDismissible || !dart.test(modalBarrierSemanticsDismissible), child: new modal_barrier._ModalBarrierGestureDetector.new({onDismiss: dart.fn(() => {
              if (dart.test(this.dismissible)) navigator$.Navigator.maybePop(core.Object, context);
            }, VoidToNull()), child: new basic.Semantics.new({label: semanticsDismissible ? this.semanticsLabel : null, textDirection: semanticsDismissible && this.semanticsLabel != null ? basic.Directionality.of(context) : null, child: new basic.MouseRegion.new({opaque: true, child: new basic.ConstrainedBox.new({constraints: C218 || CT.C218, child: this.color == null ? null : new container.DecoratedBox.new({decoration: new box_decoration.BoxDecoration.new({color: this.color}), $creationLocationd_0dea112b090073317d4: C828 || CT.C828}), $creationLocationd_0dea112b090073317d4: C831 || CT.C831}), $creationLocationd_0dea112b090073317d4: C835 || CT.C835}), $creationLocationd_0dea112b090073317d4: C839 || CT.C839}), $creationLocationd_0dea112b090073317d4: C844 || CT.C844}), $creationLocationd_0dea112b090073317d4: C848 || CT.C848}), $creationLocationd_0dea112b090073317d4: C852 || CT.C852});
    }
  };
  (modal_barrier.ModalBarrier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let dismissible = opts && 'dismissible' in opts ? opts.dismissible : true;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let barrierSemanticsDismissible = opts && 'barrierSemanticsDismissible' in opts ? opts.barrierSemanticsDismissible : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$5] = color;
    this[dismissible$] = dismissible;
    this[semanticsLabel$0] = semanticsLabel;
    this[barrierSemanticsDismissible$] = barrierSemanticsDismissible;
    modal_barrier.ModalBarrier.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier.ModalBarrier.prototype;
  dart.addTypeTests(modal_barrier.ModalBarrier);
  dart.setMethodSignature(modal_barrier.ModalBarrier, () => ({
    __proto__: dart.getMethods(modal_barrier.ModalBarrier.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(modal_barrier.ModalBarrier, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier.ModalBarrier, () => ({
    __proto__: dart.getFields(modal_barrier.ModalBarrier.__proto__),
    color: dart.finalFieldType(ui.Color),
    dismissible: dart.finalFieldType(core.bool),
    barrierSemanticsDismissible: dart.finalFieldType(core.bool),
    semanticsLabel: dart.finalFieldType(core.String)
  }));
  var C857;
  var C858;
  var C859;
  var C860;
  var C856;
  var C855;
  var dismissible$0 = dart.privateName(modal_barrier, "AnimatedModalBarrier.dismissible");
  var semanticsLabel$1 = dart.privateName(modal_barrier, "AnimatedModalBarrier.semanticsLabel");
  var barrierSemanticsDismissible$0 = dart.privateName(modal_barrier, "AnimatedModalBarrier.barrierSemanticsDismissible");
  modal_barrier.AnimatedModalBarrier = class AnimatedModalBarrier extends transitions.AnimatedWidget {
    get dismissible() {
      return this[dismissible$0];
    }
    set dismissible(value) {
      super.dismissible = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$1];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    get barrierSemanticsDismissible() {
      return this[barrierSemanticsDismissible$0];
    }
    set barrierSemanticsDismissible(value) {
      super.barrierSemanticsDismissible = value;
    }
    get color() {
      return AnimationOfColor().as(this.listenable);
    }
    build(context) {
      let t29;
      return new modal_barrier.ModalBarrier.new({color: (t29 = this.color, t29 == null ? null : t29.value), dismissible: this.dismissible, semanticsLabel: this.semanticsLabel, barrierSemanticsDismissible: this.barrierSemanticsDismissible, $creationLocationd_0dea112b090073317d4: C855 || CT.C855});
    }
  };
  (modal_barrier.AnimatedModalBarrier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let dismissible = opts && 'dismissible' in opts ? opts.dismissible : true;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let barrierSemanticsDismissible = opts && 'barrierSemanticsDismissible' in opts ? opts.barrierSemanticsDismissible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[dismissible$0] = dismissible;
    this[semanticsLabel$1] = semanticsLabel;
    this[barrierSemanticsDismissible$0] = barrierSemanticsDismissible;
    modal_barrier.AnimatedModalBarrier.__proto__.new.call(this, {key: key, listenable: color, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier.AnimatedModalBarrier.prototype;
  dart.addTypeTests(modal_barrier.AnimatedModalBarrier);
  dart.setMethodSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getMethods(modal_barrier.AnimatedModalBarrier.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getGetters(modal_barrier.AnimatedModalBarrier.__proto__),
    color: animation$.Animation$(ui.Color)
  }));
  dart.setLibraryUri(modal_barrier.AnimatedModalBarrier, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier.AnimatedModalBarrier, () => ({
    __proto__: dart.getFields(modal_barrier.AnimatedModalBarrier.__proto__),
    dismissible: dart.finalFieldType(core.bool),
    semanticsLabel: dart.finalFieldType(core.String),
    barrierSemanticsDismissible: dart.finalFieldType(core.bool)
  }));
  modal_barrier._AnyTapGestureRecognizer = class _AnyTapGestureRecognizer extends tap$.BaseTapGestureRecognizer {
    isPointerAllowed(event) {
      if (this.onAnyTapUp == null) return false;
      return super.isPointerAllowed(event);
    }
    handleTapDown(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
    }
    handleTapUp(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let up = opts && 'up' in opts ? opts.up : null;
      if (this.onAnyTapUp != null) this.onAnyTapUp();
    }
    handleTapCancel(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let cancel = opts && 'cancel' in opts ? opts.cancel : null;
      let reason = opts && 'reason' in opts ? opts.reason : null;
    }
    get debugDescription() {
      return "any tap";
    }
  };
  (modal_barrier._AnyTapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    this.onAnyTapUp = null;
    modal_barrier._AnyTapGestureRecognizer.__proto__.new.call(this, {debugOwner: debugOwner});
    ;
  }).prototype = modal_barrier._AnyTapGestureRecognizer.prototype;
  dart.addTypeTests(modal_barrier._AnyTapGestureRecognizer);
  dart.setMethodSignature(modal_barrier._AnyTapGestureRecognizer, () => ({
    __proto__: dart.getMethods(modal_barrier._AnyTapGestureRecognizer.__proto__),
    handleTapDown: dart.fnType(dart.void, [], {down: events.PointerDownEvent}, {}),
    handleTapUp: dart.fnType(dart.void, [], {down: events.PointerDownEvent, up: events.PointerUpEvent}, {}),
    handleTapCancel: dart.fnType(dart.void, [], {cancel: events.PointerCancelEvent, down: events.PointerDownEvent, reason: core.String}, {})
  }));
  dart.setLibraryUri(modal_barrier._AnyTapGestureRecognizer, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier._AnyTapGestureRecognizer, () => ({
    __proto__: dart.getFields(modal_barrier._AnyTapGestureRecognizer.__proto__),
    onAnyTapUp: dart.fieldType(dart.fnType(dart.void, []))
  }));
  var onDismiss$ = dart.privateName(modal_barrier, "_ModalBarrierSemanticsDelegate.onDismiss");
  modal_barrier._ModalBarrierSemanticsDelegate = class _ModalBarrierSemanticsDelegate extends gesture_detector.SemanticsGestureDelegate {
    get onDismiss() {
      return this[onDismiss$];
    }
    set onDismiss(value) {
      super.onDismiss = value;
    }
    assignSemantics(renderObject) {
      renderObject.onTap = this.onDismiss;
    }
  };
  (modal_barrier._ModalBarrierSemanticsDelegate.new = function(opts) {
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    this[onDismiss$] = onDismiss;
    modal_barrier._ModalBarrierSemanticsDelegate.__proto__.new.call(this);
    ;
  }).prototype = modal_barrier._ModalBarrierSemanticsDelegate.prototype;
  dart.addTypeTests(modal_barrier._ModalBarrierSemanticsDelegate);
  dart.setMethodSignature(modal_barrier._ModalBarrierSemanticsDelegate, () => ({
    __proto__: dart.getMethods(modal_barrier._ModalBarrierSemanticsDelegate.__proto__),
    assignSemantics: dart.fnType(dart.void, [proxy_box.RenderSemanticsGestureHandler])
  }));
  dart.setLibraryUri(modal_barrier._ModalBarrierSemanticsDelegate, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier._ModalBarrierSemanticsDelegate, () => ({
    __proto__: dart.getFields(modal_barrier._ModalBarrierSemanticsDelegate.__proto__),
    onDismiss: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var onAnyTapUp$ = dart.privateName(modal_barrier, "_AnyTapGestureRecognizerFactory.onAnyTapUp");
  modal_barrier._AnyTapGestureRecognizerFactory = class _AnyTapGestureRecognizerFactory extends gesture_detector.GestureRecognizerFactory$(modal_barrier._AnyTapGestureRecognizer) {
    get onAnyTapUp() {
      return this[onAnyTapUp$];
    }
    set onAnyTapUp(value) {
      super.onAnyTapUp = value;
    }
    _constructor() {
      return new modal_barrier._AnyTapGestureRecognizer.new();
    }
    initializer(instance) {
      modal_barrier._AnyTapGestureRecognizer._check(instance);
      instance.onAnyTapUp = this.onAnyTapUp;
    }
  };
  (modal_barrier._AnyTapGestureRecognizerFactory.new = function(opts) {
    let onAnyTapUp = opts && 'onAnyTapUp' in opts ? opts.onAnyTapUp : null;
    this[onAnyTapUp$] = onAnyTapUp;
    modal_barrier._AnyTapGestureRecognizerFactory.__proto__.new.call(this);
    ;
  }).prototype = modal_barrier._AnyTapGestureRecognizerFactory.prototype;
  dart.addTypeTests(modal_barrier._AnyTapGestureRecognizerFactory);
  dart.setMethodSignature(modal_barrier._AnyTapGestureRecognizerFactory, () => ({
    __proto__: dart.getMethods(modal_barrier._AnyTapGestureRecognizerFactory.__proto__),
    _constructor: dart.fnType(modal_barrier._AnyTapGestureRecognizer, []),
    initializer: dart.fnType(dart.void, [core.Object])
  }));
  dart.setLibraryUri(modal_barrier._AnyTapGestureRecognizerFactory, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier._AnyTapGestureRecognizerFactory, () => ({
    __proto__: dart.getFields(modal_barrier._AnyTapGestureRecognizerFactory.__proto__),
    onAnyTapUp: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var C863;
  var C864;
  var C865;
  var C866;
  var C862;
  var C861;
  var child$30 = dart.privateName(modal_barrier, "_ModalBarrierGestureDetector.child");
  var onDismiss$0 = dart.privateName(modal_barrier, "_ModalBarrierGestureDetector.onDismiss");
  modal_barrier._ModalBarrierGestureDetector = class _ModalBarrierGestureDetector extends framework.StatelessWidget {
    get child() {
      return this[child$30];
    }
    set child(value) {
      super.child = value;
    }
    get onDismiss() {
      return this[onDismiss$0];
    }
    set onDismiss(value) {
      super.onDismiss = value;
    }
    build(context) {
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).from([dart.wrapType(modal_barrier._AnyTapGestureRecognizer), new modal_barrier._AnyTapGestureRecognizerFactory.new({onAnyTapUp: this.onDismiss})]);
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, behavior: proxy_box.HitTestBehavior.opaque, semantics: new modal_barrier._ModalBarrierSemanticsDelegate.new({onDismiss: this.onDismiss}), child: this.child, $creationLocationd_0dea112b090073317d4: C861 || CT.C861});
    }
  };
  (modal_barrier._ModalBarrierGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onDismiss = opts && 'onDismiss' in opts ? opts.onDismiss : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$30] = child;
    this[onDismiss$0] = onDismiss;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart", 268, 15, "child != null");
    if (!(onDismiss != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/modal_barrier.dart", 269, 15, "onDismiss != null");
    modal_barrier._ModalBarrierGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modal_barrier._ModalBarrierGestureDetector.prototype;
  dart.addTypeTests(modal_barrier._ModalBarrierGestureDetector);
  dart.setMethodSignature(modal_barrier._ModalBarrierGestureDetector, () => ({
    __proto__: dart.getMethods(modal_barrier._ModalBarrierGestureDetector.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(modal_barrier._ModalBarrierGestureDetector, "package:flutter/src/widgets/modal_barrier.dart");
  dart.setFieldSignature(modal_barrier._ModalBarrierGestureDetector, () => ({
    __proto__: dart.getFields(modal_barrier._ModalBarrierGestureDetector.__proto__),
    child: dart.finalFieldType(framework.Widget),
    onDismiss: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var _name$23 = dart.privateName(banner, "_name");
  var C867;
  var C868;
  var C869;
  var C870;
  var C871;
  banner.BannerLocation = class BannerLocation extends core.Object {
    toString() {
      return this[_name$23];
    }
  };
  (banner.BannerLocation.new = function(index, _name) {
    this.index = index;
    this[_name$23] = _name;
    ;
  }).prototype = banner.BannerLocation.prototype;
  dart.addTypeTests(banner.BannerLocation);
  dart.setLibraryUri(banner.BannerLocation, "package:flutter/src/widgets/banner.dart");
  dart.setFieldSignature(banner.BannerLocation, () => ({
    __proto__: dart.getFields(banner.BannerLocation.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$23]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(banner.BannerLocation, ['toString']);
  banner.BannerLocation.topStart = C867 || CT.C867;
  banner.BannerLocation.topEnd = C868 || CT.C868;
  banner.BannerLocation.bottomStart = C869 || CT.C869;
  banner.BannerLocation.bottomEnd = C870 || CT.C870;
  banner.BannerLocation.values = C871 || CT.C871;
  var C872;
  var C874;
  var C873;
  var _prepared = dart.privateName(banner, "_prepared");
  var _textPainter$ = dart.privateName(banner, "_textPainter");
  var _paintShadow = dart.privateName(banner, "_paintShadow");
  var _paintBanner = dart.privateName(banner, "_paintBanner");
  var _prepare = dart.privateName(banner, "_prepare");
  var _translationX = dart.privateName(banner, "_translationX");
  var _translationY = dart.privateName(banner, "_translationY");
  var _rotation = dart.privateName(banner, "_rotation");
  var message$0 = dart.privateName(banner, "BannerPainter.message");
  var textDirection$8 = dart.privateName(banner, "BannerPainter.textDirection");
  var location$ = dart.privateName(banner, "BannerPainter.location");
  var layoutDirection$ = dart.privateName(banner, "BannerPainter.layoutDirection");
  var color$6 = dart.privateName(banner, "BannerPainter.color");
  var textStyle$0 = dart.privateName(banner, "BannerPainter.textStyle");
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var C876;
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var C875;
  banner.BannerPainter = class BannerPainter extends custom_paint.CustomPainter {
    get message() {
      return this[message$0];
    }
    set message(value) {
      super.message = value;
    }
    get textDirection() {
      return this[textDirection$8];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get location() {
      return this[location$];
    }
    set location(value) {
      super.location = value;
    }
    get layoutDirection() {
      return this[layoutDirection$];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get color() {
      return this[color$6];
    }
    set color(value) {
      super.color = value;
    }
    get textStyle() {
      return this[textStyle$0];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    [_prepare]() {
      let t29;
      this[_paintShadow] = banner.BannerPainter._shadow.toPaint();
      this[_paintBanner] = (t29 = ui.Paint.new(), t29.color = this.color, t29);
      this[_textPainter$] = new text_painter.TextPainter.new({text: new text_span.TextSpan.new({style: this.textStyle, text: this.message}), textAlign: ui.TextAlign.center, textDirection: this.textDirection});
      this[_prepared] = true;
    }
    paint(canvas, size) {
      let t29;
      if (!dart.test(this[_prepared])) this[_prepare]();
      t29 = canvas;
      t29.translate(this[_translationX](size.width), this[_translationY](size.height));
      t29.rotate(this[_rotation]);
      t29.drawRect(banner._kRect, this[_paintShadow]);
      t29.drawRect(banner._kRect, this[_paintBanner]);
      t29;
      this[_textPainter$].layout({minWidth: 80, maxWidth: 80});
      this[_textPainter$].paint(canvas, banner._kRect.topLeft['+'](new ui.Offset.new(0.0, (dart.notNull(banner._kRect.height) - dart.notNull(this[_textPainter$].height)) / 2.0)));
    }
    shouldRepaint(oldDelegate) {
      banner.BannerPainter._check(oldDelegate);
      return this.message != oldDelegate.message || !dart.equals(this.location, oldDelegate.location) || !dart.equals(this.color, oldDelegate.color) || !dart.equals(this.textStyle, oldDelegate.textStyle);
    }
    hitTest(position) {
      return false;
    }
    [_translationX](width) {
      if (!(this.location != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 163, 12, "location != null");
      if (!(this.layoutDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 164, 12, "layoutDirection != null");
      switch (this.layoutDirection) {
        case C20 || CT.C20:
        {
          switch (this.location) {
            case C870 || CT.C870:
            {
              return 48.484;
            }
            case C868 || CT.C868:
            {
              return 0.0;
            }
            case C869 || CT.C869:
            {
              return dart.notNull(width) - 48.484;
            }
            case C867 || CT.C867:
            {
              return width;
            }
          }
          break;
        }
        case C21 || CT.C21:
        {
          switch (this.location) {
            case C870 || CT.C870:
            {
              return dart.notNull(width) - 48.484;
            }
            case C868 || CT.C868:
            {
              return width;
            }
            case C869 || CT.C869:
            {
              return 48.484;
            }
            case C867 || CT.C867:
            {
              return 0.0;
            }
          }
          break;
        }
      }
      return null;
    }
    [_translationY](height) {
      if (!(this.location != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 195, 12, "location != null");
      switch (this.location) {
        case C869 || CT.C869:
        case C870 || CT.C870:
        {
          return dart.notNull(height) - 48.484;
        }
        case C867 || CT.C867:
        case C868 || CT.C868:
        {
          return 0.0;
        }
      }
      return null;
    }
    get [_rotation]() {
      if (!(this.location != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 208, 12, "location != null");
      if (!(this.layoutDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 209, 12, "layoutDirection != null");
      switch (this.layoutDirection) {
        case C20 || CT.C20:
        {
          switch (this.location) {
            case C869 || CT.C869:
            case C868 || CT.C868:
            {
              return -3.141592653589793 / 4.0;
            }
            case C870 || CT.C870:
            case C867 || CT.C867:
            {
              return 3.141592653589793 / 4.0;
            }
          }
          break;
        }
        case C21 || CT.C21:
        {
          switch (this.location) {
            case C869 || CT.C869:
            case C868 || CT.C868:
            {
              return 3.141592653589793 / 4.0;
            }
            case C870 || CT.C870:
            case C867 || CT.C867:
            {
              return -3.141592653589793 / 4.0;
            }
          }
          break;
        }
      }
      return null;
    }
  };
  (banner.BannerPainter.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let location = opts && 'location' in opts ? opts.location : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let color = opts && 'color' in opts ? opts.color : C872 || CT.C872;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : C873 || CT.C873;
    this[_prepared] = false;
    this[_textPainter$] = null;
    this[_paintShadow] = null;
    this[_paintBanner] = null;
    this[message$0] = message;
    this[textDirection$8] = textDirection;
    this[location$] = location;
    this[layoutDirection$] = layoutDirection;
    this[color$6] = color;
    this[textStyle$0] = textStyle;
    if (!(message != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 68, 15, "message != null");
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 69, 15, "textDirection != null");
    if (!(location != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 70, 15, "location != null");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 71, 15, "color != null");
    if (!(textStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 72, 15, "textStyle != null");
    banner.BannerPainter.__proto__.new.call(this, {repaint: binding$0.PaintingBinding.instance.systemFonts});
    ;
  }).prototype = banner.BannerPainter.prototype;
  dart.addTypeTests(banner.BannerPainter);
  dart.setMethodSignature(banner.BannerPainter, () => ({
    __proto__: dart.getMethods(banner.BannerPainter.__proto__),
    [_prepare]: dart.fnType(dart.void, []),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [core.Object]),
    [_translationX]: dart.fnType(core.double, [core.double]),
    [_translationY]: dart.fnType(core.double, [core.double])
  }));
  dart.setGetterSignature(banner.BannerPainter, () => ({
    __proto__: dart.getGetters(banner.BannerPainter.__proto__),
    [_rotation]: core.double
  }));
  dart.setLibraryUri(banner.BannerPainter, "package:flutter/src/widgets/banner.dart");
  dart.setFieldSignature(banner.BannerPainter, () => ({
    __proto__: dart.getFields(banner.BannerPainter.__proto__),
    message: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection),
    location: dart.finalFieldType(banner.BannerLocation),
    layoutDirection: dart.finalFieldType(ui.TextDirection),
    color: dart.finalFieldType(ui.Color),
    textStyle: dart.finalFieldType(text_style.TextStyle),
    [_prepared]: dart.fieldType(core.bool),
    [_textPainter$]: dart.fieldType(text_painter.TextPainter),
    [_paintShadow]: dart.fieldType(ui.Paint),
    [_paintBanner]: dart.fieldType(ui.Paint)
  }));
  dart.defineLazy(banner.BannerPainter, {
    /*banner.BannerPainter._shadow*/get _shadow() {
      return C875 || CT.C875;
    }
  });
  var C879;
  var C880;
  var C878;
  var C877;
  var child$31 = dart.privateName(banner, "Banner.child");
  var message$1 = dart.privateName(banner, "Banner.message");
  var textDirection$9 = dart.privateName(banner, "Banner.textDirection");
  var location$0 = dart.privateName(banner, "Banner.location");
  var layoutDirection$0 = dart.privateName(banner, "Banner.layoutDirection");
  var color$7 = dart.privateName(banner, "Banner.color");
  var textStyle$1 = dart.privateName(banner, "Banner.textStyle");
  banner.Banner = class Banner extends framework.StatelessWidget {
    get child() {
      return this[child$31];
    }
    set child(value) {
      super.child = value;
    }
    get message() {
      return this[message$1];
    }
    set message(value) {
      super.message = value;
    }
    get textDirection() {
      return this[textDirection$9];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get location() {
      return this[location$0];
    }
    set location(value) {
      super.location = value;
    }
    get layoutDirection() {
      return this[layoutDirection$0];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get color() {
      return this[color$7];
    }
    set color(value) {
      super.color = value;
    }
    get textStyle() {
      return this[textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    build(context) {
      let t29, t29$;
      if (!(this.textDirection != null && this.layoutDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 310, 12, "(textDirection != null && layoutDirection != null) || debugCheckHasDirectionality(context)");
      return new basic.CustomPaint.new({foregroundPainter: new banner.BannerPainter.new({message: this.message, textDirection: (t29 = this.textDirection, t29 == null ? basic.Directionality.of(context) : t29), location: this.location, layoutDirection: (t29$ = this.layoutDirection, t29$ == null ? basic.Directionality.of(context) : t29$), color: this.color, textStyle: this.textStyle}), child: this.child, $creationLocationd_0dea112b090073317d4: C877 || CT.C877});
    }
    debugFillProperties(properties) {
      let t29;
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.StringProperty.new("message", this.message, {showName: false}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (EnumPropertyOfBannerLocation()).new("location", this.location));
      properties.add(new (EnumPropertyOfTextDirection()).new("layoutDirection", this.layoutDirection, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {showName: false}));
      t29 = this.textStyle;
      t29 == null ? null : t29.debugFillProperties(properties, {prefix: "text "});
    }
  };
  (banner.Banner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let location = opts && 'location' in opts ? opts.location : null;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let color = opts && 'color' in opts ? opts.color : C872 || CT.C872;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : C873 || CT.C873;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$31] = child;
    this[message$1] = message;
    this[textDirection$9] = textDirection;
    this[location$0] = location;
    this[layoutDirection$0] = layoutDirection;
    this[color$7] = color;
    this[textStyle$1] = textStyle;
    if (!(message != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 258, 15, "message != null");
    if (!(location != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 259, 15, "location != null");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 260, 15, "color != null");
    if (!(textStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 261, 15, "textStyle != null");
    banner.Banner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.Banner.prototype;
  dart.addTypeTests(banner.Banner);
  dart.setMethodSignature(banner.Banner, () => ({
    __proto__: dart.getMethods(banner.Banner.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner.Banner, "package:flutter/src/widgets/banner.dart");
  dart.setFieldSignature(banner.Banner, () => ({
    __proto__: dart.getFields(banner.Banner.__proto__),
    child: dart.finalFieldType(framework.Widget),
    message: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection),
    location: dart.finalFieldType(banner.BannerLocation),
    layoutDirection: dart.finalFieldType(ui.TextDirection),
    color: dart.finalFieldType(ui.Color),
    textStyle: dart.finalFieldType(text_style.TextStyle)
  }));
  var C883;
  var C884;
  var C885;
  var C886;
  var C882;
  var C881;
  var child$32 = dart.privateName(banner, "CheckedModeBanner.child");
  banner.CheckedModeBanner = class CheckedModeBanner extends framework.StatelessWidget {
    get child() {
      return this[child$32];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      let result = this.child;
      if (!dart.test(dart.fn(() => {
        result = new banner.Banner.new({child: result, message: "DEBUG", textDirection: ui.TextDirection.ltr, location: banner.BannerLocation.topEnd, $creationLocationd_0dea112b090073317d4: C881 || CT.C881});
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 354, 12, "() {\r\n      result = Banner(\r\n        child: result,\r\n        message: 'DEBUG',\r\n        textDirection: TextDirection.ltr,\r\n        location: BannerLocation.topEnd,\r\n      );\r\n      return true;\r\n    }()");
      return result;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let message = "disabled";
      if (!dart.test(dart.fn(() => {
        message = "\"DEBUG\"";
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/banner.dart", 370, 12, "() {\r\n      message = '\"DEBUG\"';\r\n      return true;\r\n    }()");
      properties.add(diagnostics$.DiagnosticsNode.message(message));
    }
  };
  (banner.CheckedModeBanner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$32] = child;
    banner.CheckedModeBanner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.CheckedModeBanner.prototype;
  dart.addTypeTests(banner.CheckedModeBanner);
  dart.setMethodSignature(banner.CheckedModeBanner, () => ({
    __proto__: dart.getMethods(banner.CheckedModeBanner.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner.CheckedModeBanner, "package:flutter/src/widgets/banner.dart");
  dart.setFieldSignature(banner.CheckedModeBanner, () => ({
    __proto__: dart.getFields(banner.CheckedModeBanner.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var Rect_bottom = dart.privateName(ui, "Rect.bottom");
  var Rect_right = dart.privateName(ui, "Rect.right");
  var Rect_top = dart.privateName(ui, "Rect.top");
  var Rect_left = dart.privateName(ui, "Rect.left");
  var C887;
  dart.defineLazy(banner, {
    /*banner._kOffset*/get _kOffset() {
      return 40;
    },
    /*banner._kHeight*/get _kHeight() {
      return 12;
    },
    /*banner._kBottomOffset*/get _kBottomOffset() {
      return 48.484;
    },
    /*banner._kRect*/get _kRect() {
      return C887 || CT.C887;
    },
    /*banner._kColor*/get _kColor() {
      return C872 || CT.C872;
    },
    /*banner._kTextStyle*/get _kTextStyle() {
      return C873 || CT.C873;
    }
  });
  var _heldPreviousVelocity = dart.privateName(scroll_position_with_single_context, "_heldPreviousVelocity");
  var _userScrollDirection = dart.privateName(scroll_position_with_single_context, "_userScrollDirection");
  var _currentDrag = dart.privateName(scroll_position_with_single_context, "_currentDrag");
  var _minScrollExtent = dart.privateName(scroll_position, "_minScrollExtent");
  var _maxScrollExtent = dart.privateName(scroll_position, "_maxScrollExtent");
  var _pixels = dart.privateName(scroll_position, "_pixels");
  var _viewportDimension = dart.privateName(scroll_position, "_viewportDimension");
  var _haveDimensions = dart.privateName(scroll_position, "_haveDimensions");
  var _didChangeViewportDimensionOrReceiveCorrection = dart.privateName(scroll_position, "_didChangeViewportDimensionOrReceiveCorrection");
  var _semanticActions = dart.privateName(scroll_position, "_semanticActions");
  var _activity = dart.privateName(scroll_position, "_activity");
  var _updateSemanticActions = dart.privateName(scroll_position, "_updateSemanticActions");
  var C888;
  var C889;
  scroll_metrics.ScrollMetrics = class ScrollMetrics extends core.Object {
    copyWith(opts) {
      let t29, t29$, t29$0, t29$1, t29$2;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      return new scroll_metrics.FixedScrollMetrics.new({minScrollExtent: (t29 = minScrollExtent, t29 == null ? this.minScrollExtent : t29), maxScrollExtent: (t29$ = maxScrollExtent, t29$ == null ? this.maxScrollExtent : t29$), pixels: (t29$0 = pixels, t29$0 == null ? this.pixels : t29$0), viewportDimension: (t29$1 = viewportDimension, t29$1 == null ? this.viewportDimension : t29$1), axisDirection: (t29$2 = axisDirection, t29$2 == null ? this.axisDirection : t29$2)});
    }
    get axis() {
      return basic_types$.axisDirectionToAxis(this.axisDirection);
    }
    get outOfRange() {
      return dart.notNull(this.pixels) < dart.notNull(this.minScrollExtent) || dart.notNull(this.pixels) > dart.notNull(this.maxScrollExtent);
    }
    get atEdge() {
      return this.pixels == this.minScrollExtent || this.pixels == this.maxScrollExtent;
    }
    get extentBefore() {
      return math.max(core.double, dart.notNull(this.pixels) - dart.notNull(this.minScrollExtent), 0.0);
    }
    get extentInside() {
      if (!(dart.notNull(this.minScrollExtent) <= dart.notNull(this.maxScrollExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_metrics.dart", 107, 12, "minScrollExtent <= maxScrollExtent");
      return dart.notNull(this.viewportDimension) - (dart.notNull(this.minScrollExtent) - dart.notNull(this.pixels))[$clamp](0, this.viewportDimension) - (dart.notNull(this.pixels) - dart.notNull(this.maxScrollExtent))[$clamp](0, this.viewportDimension);
    }
    get extentAfter() {
      return math.max(core.double, dart.notNull(this.maxScrollExtent) - dart.notNull(this.pixels), 0.0);
    }
  };
  (scroll_metrics.ScrollMetrics.new = function() {
    ;
  }).prototype = scroll_metrics.ScrollMetrics.prototype;
  dart.addTypeTests(scroll_metrics.ScrollMetrics);
  dart.setMethodSignature(scroll_metrics.ScrollMetrics, () => ({
    __proto__: dart.getMethods(scroll_metrics.ScrollMetrics.__proto__),
    copyWith: dart.fnType(scroll_metrics.ScrollMetrics, [], {axisDirection: basic_types$.AxisDirection, maxScrollExtent: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double}, {})
  }));
  dart.setGetterSignature(scroll_metrics.ScrollMetrics, () => ({
    __proto__: dart.getGetters(scroll_metrics.ScrollMetrics.__proto__),
    axis: basic_types$.Axis,
    outOfRange: core.bool,
    atEdge: core.bool,
    extentBefore: core.double,
    extentInside: core.double,
    extentAfter: core.double
  }));
  dart.setLibraryUri(scroll_metrics.ScrollMetrics, "package:flutter/src/widgets/scroll_metrics.dart");
  var physics$0 = dart.privateName(scroll_position, "ScrollPosition.physics");
  var context$0 = dart.privateName(scroll_position, "ScrollPosition.context");
  var keepScrollOffset$ = dart.privateName(scroll_position, "ScrollPosition.keepScrollOffset");
  var debugLabel$1 = dart.privateName(scroll_position, "ScrollPosition.debugLabel");
  var isScrollingNotifier = dart.privateName(scroll_position, "ScrollPosition.isScrollingNotifier");
  const ViewportOffset_ScrollMetrics$36 = class ViewportOffset_ScrollMetrics extends viewport_offset.ViewportOffset {};
  (ViewportOffset_ScrollMetrics$36.new = function() {
    ViewportOffset_ScrollMetrics$36.__proto__.new.call(this);
  }).prototype = ViewportOffset_ScrollMetrics$36.prototype;
  dart.applyMixin(ViewportOffset_ScrollMetrics$36, scroll_metrics.ScrollMetrics);
  scroll_position.ScrollPosition = class ScrollPosition extends ViewportOffset_ScrollMetrics$36 {
    get physics() {
      return this[physics$0];
    }
    set physics(value) {
      super.physics = value;
    }
    get context() {
      return this[context$0];
    }
    set context(value) {
      super.context = value;
    }
    get keepScrollOffset() {
      return this[keepScrollOffset$];
    }
    set keepScrollOffset(value) {
      super.keepScrollOffset = value;
    }
    get debugLabel() {
      return this[debugLabel$1];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get isScrollingNotifier() {
      return this[isScrollingNotifier];
    }
    set isScrollingNotifier(value) {
      super.isScrollingNotifier = value;
    }
    get minScrollExtent() {
      return this[_minScrollExtent];
    }
    get maxScrollExtent() {
      return this[_maxScrollExtent];
    }
    get pixels() {
      return this[_pixels];
    }
    get viewportDimension() {
      return this[_viewportDimension];
    }
    get haveDimensions() {
      return this[_haveDimensions];
    }
    absorb(other) {
      if (!(other != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 190, 12, "other != null");
      if (!dart.equals(other.context, this.context)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 191, 12, "other.context == context");
      if (!(this[_pixels] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 192, 12, "_pixels == null");
      this[_minScrollExtent] = other.minScrollExtent;
      this[_maxScrollExtent] = other.maxScrollExtent;
      this[_pixels] = other[_pixels];
      this[_viewportDimension] = other.viewportDimension;
      if (!(this.activity == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 198, 12, "activity == null");
      if (!(other.activity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 199, 12, "other.activity != null");
      this[_activity] = other.activity;
      other[_activity] = null;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) this.activity.resetActivity();
      this.context.setIgnorePointer(this.activity.shouldIgnorePointer);
      this.isScrollingNotifier.value = this.activity.isScrolling;
    }
    setPixels(newPixels) {
      if (!(this[_pixels] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 225, 12, "_pixels != null");
      if (!(dart.notNull(binding$3.SchedulerBinding.instance.schedulerPhase.index) <= dart.notNull(binding$3.SchedulerPhase.transientCallbacks.index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 226, 12, "SchedulerBinding.instance.schedulerPhase.index <= SchedulerPhase.transientCallbacks.index");
      if (newPixels != this.pixels) {
        let overscroll = this.applyBoundaryConditions(newPixels);
        if (!dart.test(dart.fn(() => {
          let delta = dart.notNull(newPixels) - dart.notNull(this.pixels);
          if (overscroll[$abs]() > delta[$abs]()) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + ".applyBoundaryConditions returned invalid overscroll value."), new assertions.ErrorDescription.new("setPixels() was called to change the scroll offset from " + dart.str(this.pixels) + " to " + dart.str(newPixels) + ".\n" + "That is a delta of " + dart.str(delta) + " units.\n" + dart.str(this[$runtimeType]) + ".applyBoundaryConditions reported an overscroll of " + dart.str(overscroll) + " units.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 229, 14, "() {\r\n        final double delta = newPixels - pixels;\r\n        if (overscroll.abs() > delta.abs()) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('$runtimeType.applyBoundaryConditions returned invalid overscroll value.'),\r\n            ErrorDescription(\r\n              'setPixels() was called to change the scroll offset from $pixels to $newPixels.\\n'\r\n              'That is a delta of $delta units.\\n'\r\n              '$runtimeType.applyBoundaryConditions reported an overscroll of $overscroll units.'\r\n            )\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        let oldPixels = this[_pixels];
        this[_pixels] = dart.notNull(newPixels) - dart.notNull(overscroll);
        if (this[_pixels] != oldPixels) {
          this.notifyListeners();
          this.didUpdateScrollPositionBy(dart.notNull(this[_pixels]) - dart.notNull(oldPixels));
        }
        if (overscroll !== 0.0) {
          this.didOverscrollBy(overscroll);
          return overscroll;
        }
      }
      return 0.0;
    }
    correctPixels(value) {
      this[_pixels] = value;
    }
    correctBy(correction) {
      if (!(this[_pixels] != null)) dart.assertFailed("An initial pixels value must exist by caling correctPixels on the ScrollPosition", "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 313, 7, "_pixels != null");
      this[_pixels] = dart.notNull(this[_pixels]) + dart.notNull(correction);
      this[_didChangeViewportDimensionOrReceiveCorrection] = true;
    }
    forcePixels(value) {
      if (!(this.pixels != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 344, 12, "pixels != null");
      this[_pixels] = value;
      this.notifyListeners();
    }
    saveScrollOffset() {
      let t29;
      t29 = page_storage.PageStorage.of(this.context.storageContext);
      t29 == null ? null : t29.writeState(this.context.storageContext, this.pixels);
    }
    restoreScrollOffset() {
      let t29;
      if (this.pixels == null) {
        let value = core.double.as((t29 = page_storage.PageStorage.of(this.context.storageContext), t29 == null ? null : t29.readState(this.context.storageContext)));
        if (value != null) this.correctPixels(value);
      }
    }
    applyBoundaryConditions(value) {
      let result = this.physics.applyBoundaryConditions(this, value);
      if (!dart.test(dart.fn(() => {
        let delta = dart.notNull(value) - dart.notNull(this.pixels);
        if (result[$abs]() > delta[$abs]()) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(dart.runtimeType(this.physics)) + ".applyBoundaryConditions returned invalid overscroll value."), new assertions.ErrorDescription.new("The method was called to consider a change from " + dart.str(this.pixels) + " to " + dart.str(value) + ", which is a " + "delta of " + delta[$toStringAsFixed](1) + " units. However, it returned an overscroll of " + result[$toStringAsFixed](1) + " units, which has a greater magnitude than the delta. " + "The applyBoundaryConditions method is only supposed to reduce the possible range " + "of movement, not increase it.\n" + "The scroll extents are " + dart.str(this.minScrollExtent) + " .. " + dart.str(this.maxScrollExtent) + ", and the " + "viewport dimension is " + dart.str(this.viewportDimension) + ".")])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 402, 12, "() {\r\n      final double delta = value - pixels;\r\n      if (result.abs() > delta.abs()) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('${physics.runtimeType}.applyBoundaryConditions returned invalid overscroll value.'),\r\n          ErrorDescription(\r\n            'The method was called to consider a change from $pixels to $value, which is a '\r\n            'delta of ${delta.toStringAsFixed(1)} units. However, it returned an overscroll of '\r\n            '${result.toStringAsFixed(1)} units, which has a greater magnitude than the delta. '\r\n            'The applyBoundaryConditions method is only supposed to reduce the possible range '\r\n            'of movement, not increase it.\\n'\r\n            'The scroll extents are $minScrollExtent .. $maxScrollExtent, and the '\r\n            'viewport dimension is $viewportDimension.'\r\n          )\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      return result;
    }
    applyViewportDimension(viewportDimension) {
      if (this[_viewportDimension] != viewportDimension) {
        this[_viewportDimension] = viewportDimension;
        this[_didChangeViewportDimensionOrReceiveCorrection] = true;
      }
      return true;
    }
    [_updateSemanticActions]() {
      let forward = null;
      let backward = null;
      switch (this.axis) {
        case C77 || CT.C77:
        {
          forward = ui.SemanticsAction.scrollUp;
          backward = ui.SemanticsAction.scrollDown;
          break;
        }
        case C78 || CT.C78:
        {
          forward = ui.SemanticsAction.scrollLeft;
          backward = ui.SemanticsAction.scrollRight;
          break;
        }
      }
      let actions = LinkedHashSetOfSemanticsAction().new();
      if (dart.notNull(this.pixels) > dart.notNull(this.minScrollExtent)) actions.add(backward);
      if (dart.notNull(this.pixels) < dart.notNull(this.maxScrollExtent)) actions.add(forward);
      if (dart.test(collections.setEquals(ui.SemanticsAction, actions, this[_semanticActions]))) return;
      this[_semanticActions] = actions;
      this.context.setSemanticsActions(this[_semanticActions]);
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      if (!(minScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 480, 12, "minScrollExtent != null");
      if (!(maxScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 481, 12, "maxScrollExtent != null");
      if (!dart.test(utils.nearEqual(this[_minScrollExtent], minScrollExtent, tolerance.Tolerance.defaultTolerance.distance)) || !dart.test(utils.nearEqual(this[_maxScrollExtent], maxScrollExtent, tolerance.Tolerance.defaultTolerance.distance)) || dart.test(this[_didChangeViewportDimensionOrReceiveCorrection])) {
        if (!(minScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 485, 14, "minScrollExtent != null");
        if (!(maxScrollExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 486, 14, "maxScrollExtent != null");
        if (!(dart.notNull(minScrollExtent) <= dart.notNull(maxScrollExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 487, 14, "minScrollExtent <= maxScrollExtent");
        this[_minScrollExtent] = minScrollExtent;
        this[_maxScrollExtent] = maxScrollExtent;
        this[_haveDimensions] = true;
        this.applyNewDimensions();
        this[_didChangeViewportDimensionOrReceiveCorrection] = false;
      }
      return true;
    }
    applyNewDimensions() {
      if (!(this.pixels != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 519, 12, "pixels != null");
      this.activity.applyNewDimensions();
      this[_updateSemanticActions]();
    }
    ensureVisible(object, opts) {
      let alignment = opts && 'alignment' in opts ? opts.alignment : 0;
      let duration = opts && 'duration' in opts ? opts.duration : C74 || CT.C74;
      let curve = opts && 'curve' in opts ? opts.curve : C75 || CT.C75;
      let alignmentPolicy = opts && 'alignmentPolicy' in opts ? opts.alignmentPolicy : C71 || CT.C71;
      if (!(alignmentPolicy != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 538, 12, "alignmentPolicy != null");
      if (!dart.test(object.attached)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 539, 12, "object.attached");
      let viewport = viewport$.RenderAbstractViewport.of(object);
      if (!(viewport != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 541, 12, "viewport != null");
      let target = null;
      switch (alignmentPolicy) {
        case C71 || CT.C71:
        {
          target = viewport.getOffsetToReveal(object, alignment).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          break;
        }
        case C888 || CT.C888:
        {
          target = viewport.getOffsetToReveal(object, 1.0).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          if (dart.notNull(target) < dart.notNull(this.pixels)) {
            target = this.pixels;
          }
          break;
        }
        case C889 || CT.C889:
        {
          target = viewport.getOffsetToReveal(object, 0.0).offset[$clamp](this.minScrollExtent, this.maxScrollExtent);
          if (dart.notNull(target) > dart.notNull(this.pixels)) {
            target = this.pixels;
          }
          break;
        }
      }
      if (target == this.pixels) return FutureOfvoid().value();
      if (dart.equals(duration, core.Duration.zero)) {
        this.jumpTo(target);
        return FutureOfvoid().value();
      }
      return this.animateTo(target, {duration: duration, curve: curve});
    }
    moveTo(to, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let clamp = opts && 'clamp' in opts ? opts.clamp : true;
      if (!(to != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 640, 12, "to != null");
      if (!(clamp != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 641, 12, "clamp != null");
      if (dart.test(clamp)) to = to[$clamp](this.minScrollExtent, this.maxScrollExtent);
      return super.moveTo(to, {duration: duration, curve: curve});
    }
    get allowImplicitScrolling() {
      return this.physics.allowImplicitScrolling;
    }
    get activity() {
      return this[_activity];
    }
    beginActivity(newActivity) {
      if (newActivity == null) return;
      let wasScrolling = null;
      let oldIgnorePointer = null;
      if (this[_activity] != null) {
        oldIgnorePointer = this[_activity].shouldIgnorePointer;
        wasScrolling = this[_activity].isScrolling;
        if (dart.test(wasScrolling) && !dart.test(newActivity.isScrolling)) this.didEndScroll();
        this[_activity].dispose();
      } else {
        oldIgnorePointer = false;
        wasScrolling = false;
      }
      this[_activity] = newActivity;
      if (!dart.equals(oldIgnorePointer, this.activity.shouldIgnorePointer)) this.context.setIgnorePointer(this.activity.shouldIgnorePointer);
      this.isScrollingNotifier.value = this.activity.isScrolling;
      if (!dart.test(wasScrolling) && dart.test(this[_activity].isScrolling)) this.didStartScroll();
    }
    didStartScroll() {
      this.activity.dispatchScrollStartNotification(this.copyWith(), this.context.notificationContext);
    }
    didUpdateScrollPositionBy(delta) {
      this.activity.dispatchScrollUpdateNotification(this.copyWith(), this.context.notificationContext, delta);
    }
    didEndScroll() {
      this.activity.dispatchScrollEndNotification(this.copyWith(), this.context.notificationContext);
      if (dart.test(this.keepScrollOffset)) this.saveScrollOffset();
    }
    didOverscrollBy(value) {
      if (!dart.test(this.activity.isScrolling)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 733, 12, "activity.isScrolling");
      this.activity.dispatchOverscrollNotification(this.copyWith(), this.context.notificationContext, value);
    }
    didUpdateScrollDirection(direction) {
      new scroll_notification.UserScrollNotification.new({metrics: this.copyWith(), context: this.context.notificationContext, direction: direction}).dispatch(this.context.notificationContext);
    }
    recommendDeferredLoading(context) {
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 755, 12, "context != null");
      if (!(this.activity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 756, 12, "activity != null");
      if (!(this.activity.velocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 757, 12, "activity.velocity != null");
      return this.physics.recommendDeferredLoading(this.activity.velocity, this.copyWith(), context);
    }
    dispose() {
      let t29;
      t29 = this.activity;
      t29 == null ? null : t29.dispose();
      this[_activity] = null;
      super.dispose();
    }
    notifyListeners() {
      this[_updateSemanticActions]();
      super.notifyListeners();
    }
    debugFillDescription(description) {
      let t29, t29$, t29$0;
      if (this.debugLabel != null) description[$add](this.debugLabel);
      super.debugFillDescription(description);
      description[$add]("range: " + dart.str((t29 = this.minScrollExtent, t29 == null ? null : t29[$toStringAsFixed](1))) + ".." + dart.str((t29$ = this.maxScrollExtent, t29$ == null ? null : t29$[$toStringAsFixed](1))));
      description[$add]("viewport: " + dart.str((t29$0 = this.viewportDimension, t29$0 == null ? null : t29$0[$toStringAsFixed](1))));
    }
  };
  (scroll_position.ScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_minScrollExtent] = null;
    this[_maxScrollExtent] = null;
    this[_pixels] = null;
    this[_viewportDimension] = null;
    this[_haveDimensions] = false;
    this[_didChangeViewportDimensionOrReceiveCorrection] = true;
    this[_semanticActions] = null;
    this[isScrollingNotifier] = new (ValueNotifierOfbool()).new(false);
    this[_activity] = null;
    this[physics$0] = physics;
    this[context$0] = context;
    this[keepScrollOffset$] = keepScrollOffset;
    this[debugLabel$1] = debugLabel;
    if (!(physics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 101, 15, "physics != null");
    if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 102, 15, "context != null");
    if (!(context.vsync != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 103, 15, "context.vsync != null");
    if (!(keepScrollOffset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position.dart", 104, 15, "keepScrollOffset != null");
    scroll_position.ScrollPosition.__proto__.new.call(this);
    if (oldPosition != null) this.absorb(oldPosition);
    if (dart.test(this.keepScrollOffset)) this.restoreScrollOffset();
  }).prototype = scroll_position.ScrollPosition.prototype;
  dart.addTypeTests(scroll_position.ScrollPosition);
  dart.setMethodSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getMethods(scroll_position.ScrollPosition.__proto__),
    absorb: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    setPixels: dart.fnType(core.double, [core.double]),
    correctPixels: dart.fnType(dart.void, [core.double]),
    correctBy: dart.fnType(dart.void, [core.double]),
    forcePixels: dart.fnType(dart.void, [core.double]),
    saveScrollOffset: dart.fnType(dart.void, []),
    restoreScrollOffset: dart.fnType(dart.void, []),
    applyBoundaryConditions: dart.fnType(core.double, [core.double]),
    applyViewportDimension: dart.fnType(core.bool, [core.double]),
    [_updateSemanticActions]: dart.fnType(dart.void, []),
    applyContentDimensions: dart.fnType(core.bool, [core.double, core.double]),
    applyNewDimensions: dart.fnType(dart.void, []),
    ensureVisible: dart.fnType(async.Future$(dart.void), [object$.RenderObject], {alignment: core.double, alignmentPolicy: scroll_position.ScrollPositionAlignmentPolicy, curve: curves.Curve, duration: core.Duration}, {}),
    beginActivity: dart.fnType(dart.void, [scroll_activity.ScrollActivity]),
    didStartScroll: dart.fnType(dart.void, []),
    didUpdateScrollPositionBy: dart.fnType(dart.void, [core.double]),
    didEndScroll: dart.fnType(dart.void, []),
    didOverscrollBy: dart.fnType(dart.void, [core.double]),
    didUpdateScrollDirection: dart.fnType(dart.void, [viewport_offset.ScrollDirection]),
    recommendDeferredLoading: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setGetterSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getGetters(scroll_position.ScrollPosition.__proto__),
    minScrollExtent: core.double,
    maxScrollExtent: core.double,
    pixels: core.double,
    viewportDimension: core.double,
    haveDimensions: core.bool,
    allowImplicitScrolling: core.bool,
    activity: scroll_activity.ScrollActivity
  }));
  dart.setLibraryUri(scroll_position.ScrollPosition, "package:flutter/src/widgets/scroll_position.dart");
  dart.setFieldSignature(scroll_position.ScrollPosition, () => ({
    __proto__: dart.getFields(scroll_position.ScrollPosition.__proto__),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    context: dart.finalFieldType(scroll_context.ScrollContext),
    keepScrollOffset: dart.finalFieldType(core.bool),
    debugLabel: dart.finalFieldType(core.String),
    [_minScrollExtent]: dart.fieldType(core.double),
    [_maxScrollExtent]: dart.fieldType(core.double),
    [_pixels]: dart.fieldType(core.double),
    [_viewportDimension]: dart.fieldType(core.double),
    [_haveDimensions]: dart.fieldType(core.bool),
    [_didChangeViewportDimensionOrReceiveCorrection]: dart.fieldType(core.bool),
    [_semanticActions]: dart.fieldType(core.Set$(ui.SemanticsAction)),
    isScrollingNotifier: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_activity]: dart.fieldType(scroll_activity.ScrollActivity)
  }));
  scroll_position_with_single_context.ScrollPositionWithSingleContext = class ScrollPositionWithSingleContext extends scroll_position.ScrollPosition {
    get axisDirection() {
      return this.context.axisDirection;
    }
    setPixels(newPixels) {
      if (!dart.test(this.activity.isScrolling)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 82, 12, "activity.isScrolling");
      return super.setPixels(newPixels);
    }
    absorb(other) {
      super.absorb(other);
      if (!scroll_position_with_single_context.ScrollPositionWithSingleContext.is(other)) {
        this.goIdle();
        return;
      }
      this.activity.updateDelegate(this);
      let typedOther = scroll_position_with_single_context.ScrollPositionWithSingleContext.as(other);
      this[_userScrollDirection] = typedOther[_userScrollDirection];
      if (!(this[_currentDrag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 96, 12, "_currentDrag == null");
      if (typedOther[_currentDrag] != null) {
        this[_currentDrag] = typedOther[_currentDrag];
        this[_currentDrag].updateDelegate(this);
        typedOther[_currentDrag] = null;
      }
    }
    applyNewDimensions() {
      super.applyNewDimensions();
      this.context.setCanDrag(this.physics.shouldAcceptUserOffset(this));
    }
    beginActivity(newActivity) {
      let t29;
      this[_heldPreviousVelocity] = 0.0;
      if (newActivity == null) return;
      if (!dart.equals(newActivity.delegate, this)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 115, 12, "newActivity.delegate == this");
      super.beginActivity(newActivity);
      t29 = this[_currentDrag];
      t29 == null ? null : t29.dispose();
      this[_currentDrag] = null;
      if (!dart.test(this.activity.isScrolling)) this.updateUserScrollDirection(viewport_offset.ScrollDirection.idle);
    }
    applyUserOffset(delta) {
      this.updateUserScrollDirection(dart.notNull(delta) > 0.0 ? viewport_offset.ScrollDirection.forward : viewport_offset.ScrollDirection.reverse);
      this.setPixels(dart.notNull(this.pixels) - dart.notNull(this.physics.applyPhysicsToUserOffset(this, delta)));
    }
    goIdle() {
      this.beginActivity(new scroll_activity.IdleScrollActivity.new(this));
    }
    goBallistic(velocity) {
      if (!(this.pixels != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 145, 12, "pixels != null");
      let simulation = this.physics.createBallisticSimulation(this, velocity);
      if (simulation != null) {
        this.beginActivity(new scroll_activity.BallisticScrollActivity.new(this, simulation, this.context.vsync));
      } else {
        this.goIdle();
      }
    }
    get userScrollDirection() {
      return this[_userScrollDirection];
    }
    updateUserScrollDirection(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 164, 12, "value != null");
      if (dart.equals(this.userScrollDirection, value)) return;
      this[_userScrollDirection] = value;
      this.didUpdateScrollDirection(value);
    }
    animateTo(to, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      if (dart.test(utils.nearEqual(to, this.pixels, this.physics.tolerance.distance))) {
        this.jumpTo(to);
        return FutureOfvoid().value();
      }
      let activity = new scroll_activity.DrivenScrollActivity.new(this, {from: this.pixels, to: to, duration: duration, curve: curve, vsync: this.context.vsync});
      this.beginActivity(activity);
      return activity.done;
    }
    jumpTo(value) {
      this.goIdle();
      if (this.pixels != value) {
        let oldPixels = this.pixels;
        this.forcePixels(value);
        this.notifyListeners();
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
      }
      this.goBallistic(0.0);
    }
    jumpToWithoutSettling(value) {
      this.goIdle();
      if (this.pixels != value) {
        let oldPixels = this.pixels;
        this.forcePixels(value);
        this.notifyListeners();
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
      }
    }
    hold(holdCancelCallback) {
      let previousVelocity = this.activity.velocity;
      let holdActivity = new scroll_activity.HoldScrollActivity.new({delegate: this, onHoldCanceled: holdCancelCallback});
      this.beginActivity(holdActivity);
      this[_heldPreviousVelocity] = previousVelocity;
      return holdActivity;
    }
    drag(details, dragCancelCallback) {
      let drag = new scroll_activity.ScrollDragController.new({delegate: this, details: details, onDragCanceled: dragCancelCallback, carriedVelocity: this.physics.carriedMomentum(this[_heldPreviousVelocity]), motionStartDistanceThreshold: this.physics.dragStartDistanceMotionThreshold});
      this.beginActivity(new scroll_activity.DragScrollActivity.new(this, drag));
      if (!(this[_currentDrag] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 247, 12, "_currentDrag == null");
      this[_currentDrag] = drag;
      return drag;
    }
    dispose() {
      let t29;
      t29 = this[_currentDrag];
      t29 == null ? null : t29.dispose();
      this[_currentDrag] = null;
      super.dispose();
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add](dart.str(dart.runtimeType(this.context)));
      description[$add](dart.str(this.physics));
      description[$add](dart.str(this.activity));
      description[$add](dart.str(this.userScrollDirection));
    }
  };
  (scroll_position_with_single_context.ScrollPositionWithSingleContext.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialPixels = opts && 'initialPixels' in opts ? opts.initialPixels : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_heldPreviousVelocity] = 0.0;
    this[_userScrollDirection] = viewport_offset.ScrollDirection.idle;
    this[_currentDrag] = null;
    scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__.new.call(this, {physics: physics, context: context, keepScrollOffset: keepScrollOffset, oldPosition: oldPosition, debugLabel: debugLabel});
    if (this.pixels == null && initialPixels != null) this.correctPixels(initialPixels);
    if (this.activity == null) this.goIdle();
    if (!(this.activity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_position_with_single_context.dart", 70, 12, "activity != null");
  }).prototype = scroll_position_with_single_context.ScrollPositionWithSingleContext.prototype;
  dart.addTypeTests(scroll_position_with_single_context.ScrollPositionWithSingleContext);
  scroll_position_with_single_context.ScrollPositionWithSingleContext[dart.implements] = () => [scroll_activity.ScrollActivityDelegate];
  dart.setMethodSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getMethods(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    applyUserOffset: dart.fnType(dart.void, [core.double]),
    goIdle: dart.fnType(dart.void, []),
    goBallistic: dart.fnType(dart.void, [core.double]),
    updateUserScrollDirection: dart.fnType(dart.void, [viewport_offset.ScrollDirection]),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    jumpToWithoutSettling: dart.fnType(dart.void, [core.double]),
    hold: dart.fnType(scroll_activity.ScrollHoldController, [dart.fnType(dart.void, [])]),
    drag: dart.fnType(drag.Drag, [drag_details.DragStartDetails, dart.fnType(dart.void, [])])
  }));
  dart.setGetterSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getGetters(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    axisDirection: basic_types$.AxisDirection,
    userScrollDirection: viewport_offset.ScrollDirection
  }));
  dart.setLibraryUri(scroll_position_with_single_context.ScrollPositionWithSingleContext, "package:flutter/src/widgets/scroll_position_with_single_context.dart");
  dart.setFieldSignature(scroll_position_with_single_context.ScrollPositionWithSingleContext, () => ({
    __proto__: dart.getFields(scroll_position_with_single_context.ScrollPositionWithSingleContext.__proto__),
    [_heldPreviousVelocity]: dart.fieldType(core.double),
    [_userScrollDirection]: dart.fieldType(viewport_offset.ScrollDirection),
    [_currentDrag]: dart.fieldType(scroll_activity.ScrollDragController)
  }));
  var C890;
  scroll_position.ScrollPositionAlignmentPolicy = class ScrollPositionAlignmentPolicy extends core.Object {
    toString() {
      return this[_name$4];
    }
  };
  (scroll_position.ScrollPositionAlignmentPolicy.new = function(index, _name) {
    this.index = index;
    this[_name$4] = _name;
    ;
  }).prototype = scroll_position.ScrollPositionAlignmentPolicy.prototype;
  dart.addTypeTests(scroll_position.ScrollPositionAlignmentPolicy);
  dart.setLibraryUri(scroll_position.ScrollPositionAlignmentPolicy, "package:flutter/src/widgets/scroll_position.dart");
  dart.setFieldSignature(scroll_position.ScrollPositionAlignmentPolicy, () => ({
    __proto__: dart.getFields(scroll_position.ScrollPositionAlignmentPolicy.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$4]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(scroll_position.ScrollPositionAlignmentPolicy, ['toString']);
  scroll_position.ScrollPositionAlignmentPolicy.explicit = C71 || CT.C71;
  scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtEnd = C888 || CT.C888;
  scroll_position.ScrollPositionAlignmentPolicy.keepVisibleAtStart = C889 || CT.C889;
  scroll_position.ScrollPositionAlignmentPolicy.values = C890 || CT.C890;
  scroll_activity.ScrollActivityDelegate = class ScrollActivityDelegate extends core.Object {};
  (scroll_activity.ScrollActivityDelegate.new = function() {
    ;
  }).prototype = scroll_activity.ScrollActivityDelegate.prototype;
  dart.addTypeTests(scroll_activity.ScrollActivityDelegate);
  dart.setLibraryUri(scroll_activity.ScrollActivityDelegate, "package:flutter/src/widgets/scroll_activity.dart");
  var _delegate$ = dart.privateName(scroll_activity, "_delegate");
  scroll_activity.ScrollActivity = class ScrollActivity extends core.Object {
    get delegate() {
      return this[_delegate$];
    }
    updateDelegate(value) {
      if (!!dart.equals(this[_delegate$], value)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 75, 12, "_delegate != value");
      this[_delegate$] = value;
    }
    resetActivity() {
    }
    dispatchScrollStartNotification(metrics, context) {
      new scroll_notification.ScrollStartNotification.new({metrics: metrics, context: context}).dispatch(context);
    }
    dispatchScrollUpdateNotification(metrics, context, scrollDelta) {
      new scroll_notification.ScrollUpdateNotification.new({metrics: metrics, context: context, scrollDelta: scrollDelta}).dispatch(context);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll}).dispatch(context);
    }
    dispatchScrollEndNotification(metrics, context) {
      new scroll_notification.ScrollEndNotification.new({metrics: metrics, context: context}).dispatch(context);
    }
    applyNewDimensions() {
    }
    dispose() {
      this[_delegate$] = null;
    }
    toString() {
      return diagnostics$.describeIdentity(this);
    }
  };
  (scroll_activity.ScrollActivity.new = function(_delegate) {
    this[_delegate$] = _delegate;
    ;
  }).prototype = scroll_activity.ScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.ScrollActivity);
  dart.setMethodSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.ScrollActivity.__proto__),
    updateDelegate: dart.fnType(dart.void, [scroll_activity.ScrollActivityDelegate]),
    resetActivity: dart.fnType(dart.void, []),
    dispatchScrollStartNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext]),
    dispatchScrollUpdateNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext, core.double]),
    dispatchOverscrollNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext, core.double]),
    dispatchScrollEndNotification: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, framework.BuildContext]),
    applyNewDimensions: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.ScrollActivity.__proto__),
    delegate: scroll_activity.ScrollActivityDelegate
  }));
  dart.setLibraryUri(scroll_activity.ScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.ScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.ScrollActivity.__proto__),
    [_delegate$]: dart.fieldType(scroll_activity.ScrollActivityDelegate)
  }));
  dart.defineExtensionMethods(scroll_activity.ScrollActivity, ['toString']);
  scroll_activity.IdleScrollActivity = class IdleScrollActivity extends scroll_activity.ScrollActivity {
    applyNewDimensions() {
      this.delegate.goBallistic(0.0);
    }
    get shouldIgnorePointer() {
      return false;
    }
    get isScrolling() {
      return false;
    }
    get velocity() {
      return 0.0;
    }
  };
  (scroll_activity.IdleScrollActivity.new = function(delegate) {
    scroll_activity.IdleScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.IdleScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.IdleScrollActivity);
  dart.setGetterSignature(scroll_activity.IdleScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.IdleScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.IdleScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  scroll_activity.ScrollHoldController = class ScrollHoldController extends core.Object {};
  (scroll_activity.ScrollHoldController.new = function() {
    ;
  }).prototype = scroll_activity.ScrollHoldController.prototype;
  dart.addTypeTests(scroll_activity.ScrollHoldController);
  dart.setLibraryUri(scroll_activity.ScrollHoldController, "package:flutter/src/widgets/scroll_activity.dart");
  var onHoldCanceled$ = dart.privateName(scroll_activity, "HoldScrollActivity.onHoldCanceled");
  scroll_activity.HoldScrollActivity = class HoldScrollActivity extends scroll_activity.ScrollActivity {
    get onHoldCanceled() {
      return this[onHoldCanceled$];
    }
    set onHoldCanceled(value) {
      super.onHoldCanceled = value;
    }
    get shouldIgnorePointer() {
      return false;
    }
    get isScrolling() {
      return false;
    }
    get velocity() {
      return 0.0;
    }
    cancel() {
      this.delegate.goBallistic(0.0);
    }
    dispose() {
      if (this.onHoldCanceled != null) this.onHoldCanceled();
      super.dispose();
    }
  };
  (scroll_activity.HoldScrollActivity.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let onHoldCanceled = opts && 'onHoldCanceled' in opts ? opts.onHoldCanceled : null;
    this[onHoldCanceled$] = onHoldCanceled;
    scroll_activity.HoldScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.HoldScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.HoldScrollActivity);
  scroll_activity.HoldScrollActivity[dart.implements] = () => [scroll_activity.ScrollHoldController];
  dart.setMethodSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.HoldScrollActivity.__proto__),
    cancel: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.HoldScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.HoldScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.HoldScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.HoldScrollActivity.__proto__),
    onHoldCanceled: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var _lastDetails = dart.privateName(scroll_activity, "_lastDetails");
  var _retainMomentum = dart.privateName(scroll_activity, "_retainMomentum");
  var _lastNonStationaryTimestamp = dart.privateName(scroll_activity, "_lastNonStationaryTimestamp");
  var _offsetSinceLastStop = dart.privateName(scroll_activity, "_offsetSinceLastStop");
  var _reversed = dart.privateName(scroll_activity, "_reversed");
  var _maybeLoseMomentum = dart.privateName(scroll_activity, "_maybeLoseMomentum");
  var _adjustForScrollStartThreshold = dart.privateName(scroll_activity, "_adjustForScrollStartThreshold");
  var onDragCanceled$ = dart.privateName(scroll_activity, "ScrollDragController.onDragCanceled");
  var carriedVelocity$ = dart.privateName(scroll_activity, "ScrollDragController.carriedVelocity");
  var motionStartDistanceThreshold$ = dart.privateName(scroll_activity, "ScrollDragController.motionStartDistanceThreshold");
  var C891;
  var C892;
  scroll_activity.ScrollDragController = class ScrollDragController extends core.Object {
    get onDragCanceled() {
      return this[onDragCanceled$];
    }
    set onDragCanceled(value) {
      super.onDragCanceled = value;
    }
    get carriedVelocity() {
      return this[carriedVelocity$];
    }
    set carriedVelocity(value) {
      super.carriedVelocity = value;
    }
    get motionStartDistanceThreshold() {
      return this[motionStartDistanceThreshold$];
    }
    set motionStartDistanceThreshold(value) {
      super.motionStartDistanceThreshold = value;
    }
    get delegate() {
      return this[_delegate$];
    }
    get [_reversed]() {
      return basic_types$.axisDirectionIsReversed(this.delegate.axisDirection);
    }
    updateDelegate(value) {
      if (!!dart.equals(this[_delegate$], value)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 287, 12, "_delegate != value");
      this[_delegate$] = value;
    }
    [_maybeLoseMomentum](offset, timestamp) {
      if (dart.test(this[_retainMomentum]) && offset === 0.0 && (timestamp == null || dart.test(timestamp['-'](this[_lastNonStationaryTimestamp])['>'](scroll_activity.ScrollDragController.momentumRetainStationaryDurationThreshold)))) {
        this[_retainMomentum] = false;
      }
    }
    [_adjustForScrollStartThreshold](offset, timestamp) {
      if (timestamp == null) {
        return offset;
      }
      if (offset === 0.0) {
        if (this.motionStartDistanceThreshold != null && this[_offsetSinceLastStop] == null && dart.test(timestamp['-'](this[_lastNonStationaryTimestamp])['>'](scroll_activity.ScrollDragController.motionStoppedDurationThreshold))) {
          this[_offsetSinceLastStop] = 0.0;
        }
        return 0.0;
      } else {
        if (this[_offsetSinceLastStop] == null) {
          return offset;
        } else {
          this[_offsetSinceLastStop] = dart.notNull(this[_offsetSinceLastStop]) + dart.notNull(offset);
          if (this[_offsetSinceLastStop][$abs]() > dart.notNull(this.motionStartDistanceThreshold)) {
            this[_offsetSinceLastStop] = null;
            if (offset[$abs]() > 24) {
              return offset;
            } else {
              return math.min(core.double, dart.notNull(this.motionStartDistanceThreshold) / 3.0, offset[$abs]()) * offset[$sign];
            }
          } else {
            return 0.0;
          }
        }
      }
    }
    update(details) {
      if (!(details.primaryDelta != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 356, 12, "details.primaryDelta != null");
      this[_lastDetails] = details;
      let offset = details.primaryDelta;
      if (offset !== 0.0) {
        this[_lastNonStationaryTimestamp] = details.sourceTimeStamp;
      }
      this[_maybeLoseMomentum](offset, details.sourceTimeStamp);
      offset = this[_adjustForScrollStartThreshold](offset, details.sourceTimeStamp);
      if (offset === 0.0) {
        return;
      }
      if (dart.test(this[_reversed])) offset = -dart.notNull(offset);
      this.delegate.applyUserOffset(offset);
    }
    end(details) {
      if (!(details.primaryVelocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 377, 12, "details.primaryVelocity != null");
      let velocity = -dart.notNull(details.primaryVelocity);
      if (dart.test(this[_reversed])) velocity = -velocity;
      this[_lastDetails] = details;
      if (dart.test(this[_retainMomentum]) && velocity[$sign] === this.carriedVelocity[$sign]) velocity = velocity + dart.notNull(this.carriedVelocity);
      this.delegate.goBallistic(velocity);
    }
    cancel() {
      this.delegate.goBallistic(0.0);
    }
    dispose() {
      this[_lastDetails] = null;
      if (this.onDragCanceled != null) this.onDragCanceled();
    }
    get lastDetails() {
      return this[_lastDetails];
    }
    toString() {
      return diagnostics$.describeIdentity(this);
    }
  };
  (scroll_activity.ScrollDragController.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let details = opts && 'details' in opts ? opts.details : null;
    let onDragCanceled = opts && 'onDragCanceled' in opts ? opts.onDragCanceled : null;
    let carriedVelocity = opts && 'carriedVelocity' in opts ? opts.carriedVelocity : null;
    let motionStartDistanceThreshold = opts && 'motionStartDistanceThreshold' in opts ? opts.motionStartDistanceThreshold : null;
    this[onDragCanceled$] = onDragCanceled;
    this[carriedVelocity$] = carriedVelocity;
    this[motionStartDistanceThreshold$] = motionStartDistanceThreshold;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 232, 15, "delegate != null");
    if (!(details != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 233, 15, "details != null");
    if (!(motionStartDistanceThreshold == null || dart.notNull(motionStartDistanceThreshold) > 0.0)) dart.assertFailed("motionStartDistanceThreshold must be a positive number or null", "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 235, 10, "motionStartDistanceThreshold == null || motionStartDistanceThreshold > 0.0");
    this[_delegate$] = delegate;
    this[_lastDetails] = details;
    this[_retainMomentum] = carriedVelocity != null && carriedVelocity !== 0.0;
    this[_lastNonStationaryTimestamp] = details.sourceTimeStamp;
    this[_offsetSinceLastStop] = motionStartDistanceThreshold == null ? null : 0.0;
    ;
  }).prototype = scroll_activity.ScrollDragController.prototype;
  dart.addTypeTests(scroll_activity.ScrollDragController);
  scroll_activity.ScrollDragController[dart.implements] = () => [drag.Drag];
  dart.setMethodSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getMethods(scroll_activity.ScrollDragController.__proto__),
    updateDelegate: dart.fnType(dart.void, [scroll_activity.ScrollActivityDelegate]),
    [_maybeLoseMomentum]: dart.fnType(dart.void, [core.double, core.Duration]),
    [_adjustForScrollStartThreshold]: dart.fnType(core.double, [core.double, core.Duration]),
    update: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    end: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    cancel: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getGetters(scroll_activity.ScrollDragController.__proto__),
    delegate: scroll_activity.ScrollActivityDelegate,
    [_reversed]: core.bool,
    lastDetails: dart.dynamic
  }));
  dart.setLibraryUri(scroll_activity.ScrollDragController, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.ScrollDragController, () => ({
    __proto__: dart.getFields(scroll_activity.ScrollDragController.__proto__),
    [_delegate$]: dart.fieldType(scroll_activity.ScrollActivityDelegate),
    onDragCanceled: dart.finalFieldType(dart.fnType(dart.void, [])),
    carriedVelocity: dart.finalFieldType(core.double),
    motionStartDistanceThreshold: dart.finalFieldType(core.double),
    [_lastNonStationaryTimestamp]: dart.fieldType(core.Duration),
    [_retainMomentum]: dart.fieldType(core.bool),
    [_offsetSinceLastStop]: dart.fieldType(core.double),
    [_lastDetails]: dart.fieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(scroll_activity.ScrollDragController, ['toString']);
  dart.defineLazy(scroll_activity.ScrollDragController, {
    /*scroll_activity.ScrollDragController.momentumRetainStationaryDurationThreshold*/get momentumRetainStationaryDurationThreshold() {
      return C891 || CT.C891;
    },
    /*scroll_activity.ScrollDragController.motionStoppedDurationThreshold*/get motionStoppedDurationThreshold() {
      return C892 || CT.C892;
    },
    /*scroll_activity.ScrollDragController._bigThresholdBreakDistance*/get _bigThresholdBreakDistance() {
      return 24;
    }
  });
  var _controller$ = dart.privateName(scroll_activity, "_controller");
  scroll_activity.DragScrollActivity = class DragScrollActivity extends scroll_activity.ScrollActivity {
    dispatchScrollStartNotification(metrics, context) {
      let lastDetails = this[_controller$].lastDetails;
      if (!drag_details.DragStartDetails.is(lastDetails)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 435, 12, "lastDetails is DragStartDetails");
      new scroll_notification.ScrollStartNotification.new({metrics: metrics, context: context, dragDetails: drag_details.DragStartDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchScrollUpdateNotification(metrics, context, scrollDelta) {
      let lastDetails = this[_controller$].lastDetails;
      if (!drag_details.DragUpdateDetails.is(lastDetails)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 442, 12, "lastDetails is DragUpdateDetails");
      new scroll_notification.ScrollUpdateNotification.new({metrics: metrics, context: context, scrollDelta: scrollDelta, dragDetails: drag_details.DragUpdateDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      let lastDetails = this[_controller$].lastDetails;
      if (!drag_details.DragUpdateDetails.is(lastDetails)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 449, 12, "lastDetails is DragUpdateDetails");
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, dragDetails: drag_details.DragUpdateDetails.as(lastDetails)}).dispatch(context);
    }
    dispatchScrollEndNotification(metrics, context) {
      let lastDetails = this[_controller$].lastDetails;
      new scroll_notification.ScrollEndNotification.new({metrics: metrics, context: context, dragDetails: drag_details.DragEndDetails.is(lastDetails) ? lastDetails : null}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    get velocity() {
      return 0.0;
    }
    dispose() {
      this[_controller$] = null;
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$]) + ")";
    }
  };
  (scroll_activity.DragScrollActivity.new = function(delegate, controller) {
    this[_controller$] = controller;
    scroll_activity.DragScrollActivity.__proto__.new.call(this, delegate);
    ;
  }).prototype = scroll_activity.DragScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.DragScrollActivity);
  dart.setGetterSignature(scroll_activity.DragScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.DragScrollActivity.__proto__),
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool,
    velocity: core.double
  }));
  dart.setLibraryUri(scroll_activity.DragScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.DragScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.DragScrollActivity.__proto__),
    [_controller$]: dart.fieldType(scroll_activity.ScrollDragController)
  }));
  dart.defineExtensionMethods(scroll_activity.DragScrollActivity, ['toString']);
  var _tick = dart.privateName(scroll_activity, "_tick");
  var _end = dart.privateName(scroll_activity, "_end");
  scroll_activity.BallisticScrollActivity = class BallisticScrollActivity extends scroll_activity.ScrollActivity {
    get velocity() {
      return this[_controller$].velocity;
    }
    resetActivity() {
      this.delegate.goBallistic(this.velocity);
    }
    applyNewDimensions() {
      this.delegate.goBallistic(this.velocity);
    }
    [_tick]() {
      if (!dart.test(this.applyMoveTo(this[_controller$].value))) this.delegate.goIdle();
    }
    applyMoveTo(value) {
      return this.delegate.setPixels(value) === 0.0;
    }
    [_end]() {
      let t29;
      t29 = this.delegate;
      t29 == null ? null : t29.goBallistic(0.0);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, velocity: this.velocity}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    dispose() {
      this[_controller$].dispose();
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$]) + ")";
    }
  };
  (scroll_activity.BallisticScrollActivity.new = function(delegate, simulation, vsync) {
    let t29;
    this[_controller$] = null;
    scroll_activity.BallisticScrollActivity.__proto__.new.call(this, delegate);
    this[_controller$] = (t29 = new animation_controller.AnimationController.unbounded({debugLabel: true ? object.objectRuntimeType(this, "BallisticScrollActivity") : null, vsync: vsync}), t29.addListener(dart.bind(this, _tick)), t29.animateWith(simulation).whenComplete(dart.bind(this, _end)), t29);
  }).prototype = scroll_activity.BallisticScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.BallisticScrollActivity);
  dart.setMethodSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.BallisticScrollActivity.__proto__),
    [_tick]: dart.fnType(dart.void, []),
    applyMoveTo: dart.fnType(core.bool, [core.double]),
    [_end]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.BallisticScrollActivity.__proto__),
    velocity: core.double,
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool
  }));
  dart.setLibraryUri(scroll_activity.BallisticScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.BallisticScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.BallisticScrollActivity.__proto__),
    [_controller$]: dart.fieldType(animation_controller.AnimationController)
  }));
  dart.defineExtensionMethods(scroll_activity.BallisticScrollActivity, ['toString']);
  var _completer = dart.privateName(scroll_activity, "_completer");
  scroll_activity.DrivenScrollActivity = class DrivenScrollActivity extends scroll_activity.ScrollActivity {
    get done() {
      return this[_completer].future;
    }
    get velocity() {
      return this[_controller$].velocity;
    }
    [_tick]() {
      if (this.delegate.setPixels(this[_controller$].value) !== 0.0) this.delegate.goIdle();
    }
    [_end]() {
      let t29;
      t29 = this.delegate;
      t29 == null ? null : t29.goBallistic(this.velocity);
    }
    dispatchOverscrollNotification(metrics, context, overscroll) {
      new scroll_notification.OverscrollNotification.new({metrics: metrics, context: context, overscroll: overscroll, velocity: this.velocity}).dispatch(context);
    }
    get shouldIgnorePointer() {
      return true;
    }
    get isScrolling() {
      return true;
    }
    dispose() {
      this[_completer].complete();
      this[_controller$].dispose();
      super.dispose();
    }
    toString() {
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(this[_controller$]) + ")";
    }
  };
  (scroll_activity.DrivenScrollActivity.new = function(delegate, opts) {
    let t29;
    let from = opts && 'from' in opts ? opts.from : null;
    let to = opts && 'to' in opts ? opts.to : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    this[_completer] = null;
    this[_controller$] = null;
    if (!(from != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 598, 15, "from != null");
    if (!(to != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 599, 15, "to != null");
    if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 600, 15, "duration != null");
    if (!dart.test(duration['>'](core.Duration.zero))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 601, 15, "duration > Duration.zero");
    if (!(curve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_activity.dart", 602, 15, "curve != null");
    scroll_activity.DrivenScrollActivity.__proto__.new.call(this, delegate);
    this[_completer] = CompleterOfvoid().new();
    this[_controller$] = (t29 = new animation_controller.AnimationController.unbounded({value: from, debugLabel: object.objectRuntimeType(this, "DrivenScrollActivity"), vsync: vsync}), t29.addListener(dart.bind(this, _tick)), t29.animateTo(to, {duration: duration, curve: curve}).whenComplete(dart.bind(this, _end)), t29);
  }).prototype = scroll_activity.DrivenScrollActivity.prototype;
  dart.addTypeTests(scroll_activity.DrivenScrollActivity);
  dart.setMethodSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getMethods(scroll_activity.DrivenScrollActivity.__proto__),
    [_tick]: dart.fnType(dart.void, []),
    [_end]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getGetters(scroll_activity.DrivenScrollActivity.__proto__),
    done: async.Future$(dart.void),
    velocity: core.double,
    shouldIgnorePointer: core.bool,
    isScrolling: core.bool
  }));
  dart.setLibraryUri(scroll_activity.DrivenScrollActivity, "package:flutter/src/widgets/scroll_activity.dart");
  dart.setFieldSignature(scroll_activity.DrivenScrollActivity, () => ({
    __proto__: dart.getFields(scroll_activity.DrivenScrollActivity.__proto__),
    [_completer]: dart.fieldType(async.Completer$(dart.void)),
    [_controller$]: dart.fieldType(animation_controller.AnimationController)
  }));
  dart.defineExtensionMethods(scroll_activity.DrivenScrollActivity, ['toString']);
  var _depth$ = dart.privateName(scroll_notification, "_depth");
  var _dispatch = dart.privateName(notification_listener, "_dispatch");
  notification_listener.Notification = class Notification extends core.Object {
    visitAncestor(element) {
      if (framework.StatelessElement.is(element)) {
        let widget = element.widget;
        if (NotificationListenerOfNotification().is(widget)) {
          if (dart.test(widget[_dispatch](this, element))) return false;
        }
      }
      return true;
    }
    dispatch(target) {
      let t29;
      t29 = target;
      t29 == null ? null : t29.visitAncestorElements(dart.bind(this, 'visitAncestor'));
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(object.objectRuntimeType(this, "Notification")) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
    }
  };
  (notification_listener.Notification.new = function() {
    ;
  }).prototype = notification_listener.Notification.prototype;
  dart.addTypeTests(notification_listener.Notification);
  dart.setMethodSignature(notification_listener.Notification, () => ({
    __proto__: dart.getMethods(notification_listener.Notification.__proto__),
    visitAncestor: dart.fnType(core.bool, [framework.Element]),
    dispatch: dart.fnType(dart.void, [framework.BuildContext]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setLibraryUri(notification_listener.Notification, "package:flutter/src/widgets/notification_listener.dart");
  dart.defineExtensionMethods(notification_listener.Notification, ['toString']);
  scroll_notification.ViewportNotificationMixin = class ViewportNotificationMixin extends notification_listener.Notification {};
  scroll_notification.ViewportNotificationMixin[dart.mixinOn] = Notification => class ViewportNotificationMixin extends Notification {
    get depth() {
      return this[_depth$];
    }
    visitAncestor(element) {
      if (framework.RenderObjectElement.is(element) && viewport$.RenderAbstractViewport.is(element.renderObject)) this[_depth$] = dart.notNull(this[_depth$]) + 1;
      return super.visitAncestor(element);
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("depth: " + dart.str(this.depth) + " (" + (this.depth === 0 ? "local" : "remote") + ")");
    }
  };
  (scroll_notification.ViewportNotificationMixin[dart.mixinNew] = function() {
    this[_depth$] = 0;
  }).prototype = scroll_notification.ViewportNotificationMixin.prototype;
  dart.addTypeTests(scroll_notification.ViewportNotificationMixin);
  scroll_notification.ViewportNotificationMixin[dart.implements] = () => [notification_listener.Notification];
  dart.setGetterSignature(scroll_notification.ViewportNotificationMixin, () => ({
    __proto__: dart.getGetters(scroll_notification.ViewportNotificationMixin.__proto__),
    depth: core.int
  }));
  dart.setLibraryUri(scroll_notification.ViewportNotificationMixin, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.ViewportNotificationMixin, () => ({
    __proto__: dart.getFields(scroll_notification.ViewportNotificationMixin.__proto__),
    [_depth$]: dart.fieldType(core.int)
  }));
  notification_listener.LayoutChangedNotification = class LayoutChangedNotification extends notification_listener.Notification {};
  (notification_listener.LayoutChangedNotification.new = function() {
    notification_listener.LayoutChangedNotification.__proto__.new.call(this);
    ;
  }).prototype = notification_listener.LayoutChangedNotification.prototype;
  dart.addTypeTests(notification_listener.LayoutChangedNotification);
  dart.setLibraryUri(notification_listener.LayoutChangedNotification, "package:flutter/src/widgets/notification_listener.dart");
  var metrics$0 = dart.privateName(scroll_notification, "ScrollNotification.metrics");
  var context$1 = dart.privateName(scroll_notification, "ScrollNotification.context");
  const LayoutChangedNotification_ViewportNotificationMixin$36 = class LayoutChangedNotification_ViewportNotificationMixin extends notification_listener.LayoutChangedNotification {};
  (LayoutChangedNotification_ViewportNotificationMixin$36.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    LayoutChangedNotification_ViewportNotificationMixin$36.__proto__.new.call(this);
  }).prototype = LayoutChangedNotification_ViewportNotificationMixin$36.prototype;
  dart.applyMixin(LayoutChangedNotification_ViewportNotificationMixin$36, scroll_notification.ViewportNotificationMixin);
  scroll_notification.ScrollNotification = class ScrollNotification extends LayoutChangedNotification_ViewportNotificationMixin$36 {
    get metrics() {
      return this[metrics$0];
    }
    set metrics(value) {
      super.metrics = value;
    }
    get context() {
      return this[context$1];
    }
    set context(value) {
      super.context = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add](dart.str(this.metrics));
    }
  };
  (scroll_notification.ScrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    this[metrics$0] = metrics;
    this[context$1] = context;
    scroll_notification.ScrollNotification.__proto__.new.call(this);
    ;
  }).prototype = scroll_notification.ScrollNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollNotification);
  dart.setLibraryUri(scroll_notification.ScrollNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.ScrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollNotification.__proto__),
    metrics: dart.finalFieldType(scroll_metrics.ScrollMetrics),
    context: dart.finalFieldType(framework.BuildContext)
  }));
  var dragDetails$ = dart.privateName(scroll_notification, "ScrollStartNotification.dragDetails");
  scroll_notification.ScrollStartNotification = class ScrollStartNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollStartNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    this[dragDetails$] = dragDetails;
    scroll_notification.ScrollStartNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollStartNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollStartNotification);
  dart.setLibraryUri(scroll_notification.ScrollStartNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.ScrollStartNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollStartNotification.__proto__),
    dragDetails: dart.finalFieldType(drag_details.DragStartDetails)
  }));
  var dragDetails$0 = dart.privateName(scroll_notification, "ScrollUpdateNotification.dragDetails");
  var scrollDelta$ = dart.privateName(scroll_notification, "ScrollUpdateNotification.scrollDelta");
  scroll_notification.ScrollUpdateNotification = class ScrollUpdateNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$0];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    get scrollDelta() {
      return this[scrollDelta$];
    }
    set scrollDelta(value) {
      super.scrollDelta = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("scrollDelta: " + dart.str(this.scrollDelta));
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollUpdateNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    let scrollDelta = opts && 'scrollDelta' in opts ? opts.scrollDelta : null;
    this[dragDetails$0] = dragDetails;
    this[scrollDelta$] = scrollDelta;
    scroll_notification.ScrollUpdateNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollUpdateNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollUpdateNotification);
  dart.setLibraryUri(scroll_notification.ScrollUpdateNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.ScrollUpdateNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollUpdateNotification.__proto__),
    dragDetails: dart.finalFieldType(drag_details.DragUpdateDetails),
    scrollDelta: dart.finalFieldType(core.double)
  }));
  var dragDetails$1 = dart.privateName(scroll_notification, "OverscrollNotification.dragDetails");
  var overscroll$ = dart.privateName(scroll_notification, "OverscrollNotification.overscroll");
  var velocity$ = dart.privateName(scroll_notification, "OverscrollNotification.velocity");
  scroll_notification.OverscrollNotification = class OverscrollNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$1];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    get overscroll() {
      return this[overscroll$];
    }
    set overscroll(value) {
      super.overscroll = value;
    }
    get velocity() {
      return this[velocity$];
    }
    set velocity(value) {
      super.velocity = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("overscroll: " + this.overscroll[$toStringAsFixed](1));
      description[$add]("velocity: " + this.velocity[$toStringAsFixed](1));
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.OverscrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    let overscroll = opts && 'overscroll' in opts ? opts.overscroll : null;
    let velocity = opts && 'velocity' in opts ? opts.velocity : 0;
    this[dragDetails$1] = dragDetails;
    this[overscroll$] = overscroll;
    this[velocity$] = velocity;
    if (!(overscroll != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_notification.dart", 185, 15, "overscroll != null");
    if (!overscroll[$isFinite]) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_notification.dart", 186, 15, "overscroll.isFinite");
    if (!(overscroll !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_notification.dart", 187, 15, "overscroll != 0.0");
    if (!(velocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_notification.dart", 188, 15, "velocity != null");
    scroll_notification.OverscrollNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.OverscrollNotification.prototype;
  dart.addTypeTests(scroll_notification.OverscrollNotification);
  dart.setLibraryUri(scroll_notification.OverscrollNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.OverscrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.OverscrollNotification.__proto__),
    dragDetails: dart.finalFieldType(drag_details.DragUpdateDetails),
    overscroll: dart.finalFieldType(core.double),
    velocity: dart.finalFieldType(core.double)
  }));
  var dragDetails$2 = dart.privateName(scroll_notification, "ScrollEndNotification.dragDetails");
  scroll_notification.ScrollEndNotification = class ScrollEndNotification extends scroll_notification.ScrollNotification {
    get dragDetails() {
      return this[dragDetails$2];
    }
    set dragDetails(value) {
      super.dragDetails = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      if (this.dragDetails != null) description[$add](dart.str(this.dragDetails));
    }
  };
  (scroll_notification.ScrollEndNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let dragDetails = opts && 'dragDetails' in opts ? opts.dragDetails : null;
    this[dragDetails$2] = dragDetails;
    scroll_notification.ScrollEndNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.ScrollEndNotification.prototype;
  dart.addTypeTests(scroll_notification.ScrollEndNotification);
  dart.setLibraryUri(scroll_notification.ScrollEndNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.ScrollEndNotification, () => ({
    __proto__: dart.getFields(scroll_notification.ScrollEndNotification.__proto__),
    dragDetails: dart.finalFieldType(drag_details.DragEndDetails)
  }));
  var direction$4 = dart.privateName(scroll_notification, "UserScrollNotification.direction");
  scroll_notification.UserScrollNotification = class UserScrollNotification extends scroll_notification.ScrollNotification {
    get direction() {
      return this[direction$4];
    }
    set direction(value) {
      super.direction = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("direction: " + dart.str(this.direction));
    }
  };
  (scroll_notification.UserScrollNotification.new = function(opts) {
    let metrics = opts && 'metrics' in opts ? opts.metrics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    this[direction$4] = direction;
    scroll_notification.UserScrollNotification.__proto__.new.call(this, {metrics: metrics, context: context});
    ;
  }).prototype = scroll_notification.UserScrollNotification.prototype;
  dart.addTypeTests(scroll_notification.UserScrollNotification);
  dart.setLibraryUri(scroll_notification.UserScrollNotification, "package:flutter/src/widgets/scroll_notification.dart");
  dart.setFieldSignature(scroll_notification.UserScrollNotification, () => ({
    __proto__: dart.getFields(scroll_notification.UserScrollNotification.__proto__),
    direction: dart.finalFieldType(viewport_offset.ScrollDirection)
  }));
  scroll_notification.defaultScrollNotificationPredicate = function defaultScrollNotificationPredicate(notification) {
    return notification.depth === 0;
  };
  var minScrollExtent$ = dart.privateName(scroll_metrics, "FixedScrollMetrics.minScrollExtent");
  var maxScrollExtent$ = dart.privateName(scroll_metrics, "FixedScrollMetrics.maxScrollExtent");
  var pixels$ = dart.privateName(scroll_metrics, "FixedScrollMetrics.pixels");
  var viewportDimension$ = dart.privateName(scroll_metrics, "FixedScrollMetrics.viewportDimension");
  var axisDirection$2 = dart.privateName(scroll_metrics, "FixedScrollMetrics.axisDirection");
  scroll_metrics.FixedScrollMetrics = class FixedScrollMetrics extends scroll_metrics.ScrollMetrics {
    get minScrollExtent() {
      return this[minScrollExtent$];
    }
    set minScrollExtent(value) {
      super.minScrollExtent = value;
    }
    get maxScrollExtent() {
      return this[maxScrollExtent$];
    }
    set maxScrollExtent(value) {
      super.maxScrollExtent = value;
    }
    get pixels() {
      return this[pixels$];
    }
    set pixels(value) {
      super.pixels = value;
    }
    get viewportDimension() {
      return this[viewportDimension$];
    }
    set viewportDimension(value) {
      super.viewportDimension = value;
    }
    get axisDirection() {
      return this[axisDirection$2];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "FixedScrollMetrics")) + "(" + this.extentBefore[$toStringAsFixed](1) + "..[" + this.extentInside[$toStringAsFixed](1) + "].." + this.extentAfter[$toStringAsFixed](1) + ")";
    }
  };
  (scroll_metrics.FixedScrollMetrics.new = function(opts) {
    let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
    let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
    let pixels = opts && 'pixels' in opts ? opts.pixels : null;
    let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    this[minScrollExtent$] = minScrollExtent;
    this[maxScrollExtent$] = maxScrollExtent;
    this[pixels$] = pixels;
    this[viewportDimension$] = viewportDimension;
    this[axisDirection$2] = axisDirection;
    ;
  }).prototype = scroll_metrics.FixedScrollMetrics.prototype;
  dart.addTypeTests(scroll_metrics.FixedScrollMetrics);
  dart.setLibraryUri(scroll_metrics.FixedScrollMetrics, "package:flutter/src/widgets/scroll_metrics.dart");
  dart.setFieldSignature(scroll_metrics.FixedScrollMetrics, () => ({
    __proto__: dart.getFields(scroll_metrics.FixedScrollMetrics.__proto__),
    minScrollExtent: dart.finalFieldType(core.double),
    maxScrollExtent: dart.finalFieldType(core.double),
    pixels: dart.finalFieldType(core.double),
    viewportDimension: dart.finalFieldType(core.double),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection)
  }));
  dart.defineExtensionMethods(scroll_metrics.FixedScrollMetrics, ['toString']);
  const _is_NotificationListener_default = Symbol('_is_NotificationListener_default');
  var child$33 = dart.privateName(notification_listener, "NotificationListener.child");
  var onNotification$ = dart.privateName(notification_listener, "NotificationListener.onNotification");
  notification_listener.NotificationListener$ = dart.generic(T => {
    class NotificationListener extends framework.StatelessWidget {
      get child() {
        return this[child$33];
      }
      set child(value) {
        super.child = value;
      }
      get onNotification() {
        return this[onNotification$];
      }
      set onNotification(value) {
        super.onNotification = value;
      }
      [_dispatch](notification, element) {
        if (this.onNotification != null && T.is(notification)) {
          let result = this.onNotification(notification);
          return dart.equals(result, true);
        }
        return false;
      }
      build(context) {
        return this.child;
      }
    }
    (NotificationListener.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let onNotification = opts && 'onNotification' in opts ? opts.onNotification : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[child$33] = child;
      this[onNotification$] = onNotification;
      NotificationListener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = NotificationListener.prototype;
    dart.addTypeTests(NotificationListener);
    NotificationListener.prototype[_is_NotificationListener_default] = true;
    dart.setMethodSignature(NotificationListener, () => ({
      __proto__: dart.getMethods(NotificationListener.__proto__),
      [_dispatch]: dart.fnType(core.bool, [notification_listener.Notification, framework.Element]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(NotificationListener, "package:flutter/src/widgets/notification_listener.dart");
    dart.setFieldSignature(NotificationListener, () => ({
      __proto__: dart.getFields(NotificationListener.__proto__),
      child: dart.finalFieldType(framework.Widget),
      onNotification: dart.finalFieldType(dart.fnType(core.bool, [T]))
    }));
    return NotificationListener;
  });
  notification_listener.NotificationListener = notification_listener.NotificationListener$();
  dart.addTypeTests(notification_listener.NotificationListener, _is_NotificationListener_default);
  var parent$ = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  scroll_physics.ScrollPhysics = class ScrollPhysics extends core.Object {
    get parent() {
      return this[parent$];
    }
    set parent(value) {
      super.parent = value;
    }
    buildParent(ancestor) {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.applyTo(ancestor));
      return t29$ == null ? ancestor : t29$;
    }
    applyTo(ancestor) {
      return new scroll_physics.ScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    applyPhysicsToUserOffset(position, offset) {
      if (this.parent == null) return offset;
      return this.parent.applyPhysicsToUserOffset(position, offset);
    }
    shouldAcceptUserOffset(position) {
      if (this.parent == null) return position.pixels !== 0.0 || position.minScrollExtent != position.maxScrollExtent;
      return this.parent.shouldAcceptUserOffset(position);
    }
    recommendDeferredLoading(velocity, metrics, context) {
      if (!(velocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 181, 12, "velocity != null");
      if (!(metrics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 182, 12, "metrics != null");
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 183, 12, "context != null");
      if (this.parent == null) {
        let maxPhysicalPixels = binding$5.WidgetsBinding.instance.window.physicalSize.longestSide;
        return velocity[$abs]() > dart.notNull(maxPhysicalPixels);
      }
      return this.parent.recommendDeferredLoading(velocity, metrics, context);
    }
    applyBoundaryConditions(position, value) {
      if (this.parent == null) return 0.0;
      return this.parent.applyBoundaryConditions(position, value);
    }
    createBallisticSimulation(position, velocity) {
      if (this.parent == null) return null;
      return this.parent.createBallisticSimulation(position, velocity);
    }
    get spring() {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.spring);
      return t29$ == null ? scroll_physics.ScrollPhysics._kDefaultSpring : t29$;
    }
    get tolerance() {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.tolerance);
      return t29$ == null ? scroll_physics.ScrollPhysics._kDefaultTolerance : t29$;
    }
    get minFlingDistance() {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.minFlingDistance);
      return t29$ == null ? 18 : t29$;
    }
    get minFlingVelocity() {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.minFlingVelocity);
      return t29$ == null ? 50 : t29$;
    }
    get maxFlingVelocity() {
      let t29, t29$;
      t29$ = (t29 = this.parent, t29 == null ? null : t29.maxFlingVelocity);
      return t29$ == null ? 8000 : t29$;
    }
    carriedMomentum(existingVelocity) {
      if (this.parent == null) return 0.0;
      return this.parent.carriedMomentum(existingVelocity);
    }
    get dragStartDistanceMotionThreshold() {
      let t29;
      t29 = this.parent;
      return t29 == null ? null : t29.dragStartDistanceMotionThreshold;
    }
    get allowImplicitScrolling() {
      return true;
    }
    toString() {
      if (this.parent == null) return object.objectRuntimeType(this, "ScrollPhsyics");
      return dart.str(object.objectRuntimeType(this, "ScrollPhysics")) + " -> " + dart.str(this.parent);
    }
  };
  (scroll_physics.ScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    this[parent$] = parent;
    ;
  }).prototype = scroll_physics.ScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.ScrollPhysics);
  dart.setMethodSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.ScrollPhysics.__proto__),
    buildParent: dart.fnType(scroll_physics.ScrollPhysics, [scroll_physics.ScrollPhysics]),
    applyTo: dart.fnType(scroll_physics.ScrollPhysics, [scroll_physics.ScrollPhysics]),
    applyPhysicsToUserOffset: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    shouldAcceptUserOffset: dart.fnType(core.bool, [scroll_metrics.ScrollMetrics]),
    recommendDeferredLoading: dart.fnType(core.bool, [core.double, scroll_metrics.ScrollMetrics, framework.BuildContext]),
    applyBoundaryConditions: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    createBallisticSimulation: dart.fnType(simulation.Simulation, [scroll_metrics.ScrollMetrics, core.double]),
    carriedMomentum: dart.fnType(core.double, [core.double])
  }));
  dart.setGetterSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getGetters(scroll_physics.ScrollPhysics.__proto__),
    spring: spring_simulation.SpringDescription,
    tolerance: tolerance.Tolerance,
    minFlingDistance: core.double,
    minFlingVelocity: core.double,
    maxFlingVelocity: core.double,
    dragStartDistanceMotionThreshold: core.double,
    allowImplicitScrolling: core.bool
  }));
  dart.setLibraryUri(scroll_physics.ScrollPhysics, "package:flutter/src/widgets/scroll_physics.dart");
  dart.setFieldSignature(scroll_physics.ScrollPhysics, () => ({
    __proto__: dart.getFields(scroll_physics.ScrollPhysics.__proto__),
    parent: dart.finalFieldType(scroll_physics.ScrollPhysics)
  }));
  dart.defineExtensionMethods(scroll_physics.ScrollPhysics, ['toString']);
  dart.defineLazy(scroll_physics.ScrollPhysics, {
    /*scroll_physics.ScrollPhysics._kDefaultSpring*/get _kDefaultSpring() {
      return new spring_simulation.SpringDescription.withDampingRatio({mass: 0.5, stiffness: 100.0, ratio: 1.1});
    },
    /*scroll_physics.ScrollPhysics._kDefaultTolerance*/get _kDefaultTolerance() {
      return new tolerance.Tolerance.new({velocity: 1.0 / (0.05 * dart.notNull(binding$5.WidgetsBinding.instance.window.devicePixelRatio)), distance: 1.0 / dart.notNull(binding$5.WidgetsBinding.instance.window.devicePixelRatio)});
    }
  });
  scroll_physics.BouncingScrollPhysics = class BouncingScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.BouncingScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    frictionFactor(overscrollFraction) {
      return 0.52 * math.pow(1 - dart.notNull(overscrollFraction), 2);
    }
    applyPhysicsToUserOffset(position, offset) {
      if (!(offset !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 364, 12, "offset != 0.0");
      if (!(dart.notNull(position.minScrollExtent) <= dart.notNull(position.maxScrollExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 365, 12, "position.minScrollExtent <= position.maxScrollExtent");
      if (!dart.test(position.outOfRange)) return offset;
      let overscrollPastStart = math.max(core.double, dart.notNull(position.minScrollExtent) - dart.notNull(position.pixels), 0.0);
      let overscrollPastEnd = math.max(core.double, dart.notNull(position.pixels) - dart.notNull(position.maxScrollExtent), 0.0);
      let overscrollPast = math.max(core.double, overscrollPastStart, overscrollPastEnd);
      let easing = overscrollPastStart > 0.0 && dart.notNull(offset) < 0.0 || overscrollPastEnd > 0.0 && dart.notNull(offset) > 0.0;
      let friction = easing ? this.frictionFactor((overscrollPast - offset[$abs]()) / dart.notNull(position.viewportDimension)) : this.frictionFactor(overscrollPast / dart.notNull(position.viewportDimension));
      let direction = offset[$sign];
      return direction * dart.notNull(scroll_physics.BouncingScrollPhysics._applyFriction(overscrollPast, offset[$abs](), friction));
    }
    static _applyFriction(extentOutside, absDelta, gamma) {
      if (!(dart.notNull(absDelta) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 386, 12, "absDelta > 0");
      let total = 0.0;
      if (dart.notNull(extentOutside) > 0) {
        let deltaToLimit = dart.notNull(extentOutside) / dart.notNull(gamma);
        if (dart.notNull(absDelta) < deltaToLimit) return dart.notNull(absDelta) * dart.notNull(gamma);
        total = total + dart.notNull(extentOutside);
        absDelta = dart.notNull(absDelta) - deltaToLimit;
      }
      return total + dart.notNull(absDelta);
    }
    applyBoundaryConditions(position, value) {
      return 0.0;
    }
    createBallisticSimulation(position, velocity) {
      let tolerance = this.tolerance;
      if (velocity[$abs]() >= dart.notNull(tolerance.velocity) || dart.test(position.outOfRange)) {
        return new scroll_simulation.BouncingScrollSimulation.new({spring: this.spring, position: position.pixels, velocity: dart.notNull(velocity) * 0.91, leadingExtent: position.minScrollExtent, trailingExtent: position.maxScrollExtent, tolerance: tolerance});
      }
      return null;
    }
    get minFlingVelocity() {
      return 50 * 2.0;
    }
    carriedMomentum(existingVelocity) {
      return existingVelocity[$sign] * math.min(core.num, 0.000816 * math.pow(existingVelocity[$abs](), 1.967)[$toDouble](), 40000.0);
    }
    get dragStartDistanceMotionThreshold() {
      return 3.5;
    }
  };
  (scroll_physics.BouncingScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.BouncingScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.BouncingScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.BouncingScrollPhysics);
  dart.setMethodSignature(scroll_physics.BouncingScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.BouncingScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.BouncingScrollPhysics, [scroll_physics.ScrollPhysics]),
    frictionFactor: dart.fnType(core.double, [core.double])
  }));
  dart.setLibraryUri(scroll_physics.BouncingScrollPhysics, "package:flutter/src/widgets/scroll_physics.dart");
  scroll_physics.ClampingScrollPhysics = class ClampingScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.ClampingScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    applyBoundaryConditions(position, value) {
      if (!dart.test(dart.fn(() => {
        if (value == position.pixels) {
          dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + ".applyBoundaryConditions() was called redundantly."), new assertions.ErrorDescription.new("The proposed new position, " + dart.str(value) + ", is exactly equal to the current position of the " + "given " + dart.str(dart.runtimeType(position)) + ", " + dart.str(position.pixels) + ".\n" + "The applyBoundaryConditions method should only be called when the value is " + "going to actually change the pixels, otherwise it is redundant."), new (DiagnosticsPropertyOfScrollPhysics()).new("The physics object in question was", this, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty}), new (DiagnosticsPropertyOfScrollMetrics()).new("The position object in question was", position, {style: diagnostics$.DiagnosticsTreeStyle.errorProperty})])));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 476, 12, "() {\r\n      if (value == position.pixels) {\r\n        throw FlutterError.fromParts(<DiagnosticsNode>[\r\n          ErrorSummary('$runtimeType.applyBoundaryConditions() was called redundantly.'),\r\n          ErrorDescription(\r\n            'The proposed new position, $value, is exactly equal to the current position of the '\r\n            'given ${position.runtimeType}, ${position.pixels}.\\n'\r\n            'The applyBoundaryConditions method should only be called when the value is '\r\n            'going to actually change the pixels, otherwise it is redundant.'\r\n          ),\r\n          DiagnosticsProperty<ScrollPhysics>('The physics object in question was', this, style: DiagnosticsTreeStyle.errorProperty),\r\n          DiagnosticsProperty<ScrollMetrics>('The position object in question was', position, style: DiagnosticsTreeStyle.errorProperty)\r\n        ]);\r\n      }\r\n      return true;\r\n    }()");
      if (dart.notNull(value) < dart.notNull(position.pixels) && dart.notNull(position.pixels) <= dart.notNull(position.minScrollExtent)) return dart.notNull(value) - dart.notNull(position.pixels);
      if (dart.notNull(position.maxScrollExtent) <= dart.notNull(position.pixels) && dart.notNull(position.pixels) < dart.notNull(value)) return dart.notNull(value) - dart.notNull(position.pixels);
      if (dart.notNull(value) < dart.notNull(position.minScrollExtent) && dart.notNull(position.minScrollExtent) < dart.notNull(position.pixels)) return dart.notNull(value) - dart.notNull(position.minScrollExtent);
      if (dart.notNull(position.pixels) < dart.notNull(position.maxScrollExtent) && dart.notNull(position.maxScrollExtent) < dart.notNull(value)) return dart.notNull(value) - dart.notNull(position.maxScrollExtent);
      return 0.0;
    }
    createBallisticSimulation(position, velocity) {
      let tolerance = this.tolerance;
      if (dart.test(position.outOfRange)) {
        let end = null;
        if (dart.notNull(position.pixels) > dart.notNull(position.maxScrollExtent)) end = position.maxScrollExtent;
        if (dart.notNull(position.pixels) < dart.notNull(position.minScrollExtent)) end = position.minScrollExtent;
        if (!(end != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_physics.dart", 512, 14, "end != null");
        return new spring_simulation.ScrollSpringSimulation.new(this.spring, position.pixels, end, math.min(core.double, 0.0, velocity), {tolerance: tolerance});
      }
      if (velocity[$abs]() < dart.notNull(tolerance.velocity)) return null;
      if (dart.notNull(velocity) > 0.0 && dart.notNull(position.pixels) >= dart.notNull(position.maxScrollExtent)) return null;
      if (dart.notNull(velocity) < 0.0 && dart.notNull(position.pixels) <= dart.notNull(position.minScrollExtent)) return null;
      return new scroll_simulation.ClampingScrollSimulation.new({position: position.pixels, velocity: velocity, tolerance: tolerance});
    }
  };
  (scroll_physics.ClampingScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.ClampingScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.ClampingScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.ClampingScrollPhysics);
  dart.setMethodSignature(scroll_physics.ClampingScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.ClampingScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.ClampingScrollPhysics, [scroll_physics.ScrollPhysics])
  }));
  dart.setLibraryUri(scroll_physics.ClampingScrollPhysics, "package:flutter/src/widgets/scroll_physics.dart");
  scroll_physics.AlwaysScrollableScrollPhysics = class AlwaysScrollableScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.AlwaysScrollableScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    shouldAcceptUserOffset(position) {
      return true;
    }
  };
  (scroll_physics.AlwaysScrollableScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.AlwaysScrollableScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.AlwaysScrollableScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.AlwaysScrollableScrollPhysics);
  dart.setMethodSignature(scroll_physics.AlwaysScrollableScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.AlwaysScrollableScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.AlwaysScrollableScrollPhysics, [scroll_physics.ScrollPhysics])
  }));
  dart.setLibraryUri(scroll_physics.AlwaysScrollableScrollPhysics, "package:flutter/src/widgets/scroll_physics.dart");
  scroll_physics.NeverScrollableScrollPhysics = class NeverScrollableScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new scroll_physics.NeverScrollableScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    shouldAcceptUserOffset(position) {
      return false;
    }
    get allowImplicitScrolling() {
      return false;
    }
  };
  (scroll_physics.NeverScrollableScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    scroll_physics.NeverScrollableScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = scroll_physics.NeverScrollableScrollPhysics.prototype;
  dart.addTypeTests(scroll_physics.NeverScrollableScrollPhysics);
  dart.setMethodSignature(scroll_physics.NeverScrollableScrollPhysics, () => ({
    __proto__: dart.getMethods(scroll_physics.NeverScrollableScrollPhysics.__proto__),
    applyTo: dart.fnType(scroll_physics.NeverScrollableScrollPhysics, [scroll_physics.ScrollPhysics])
  }));
  dart.setLibraryUri(scroll_physics.NeverScrollableScrollPhysics, "package:flutter/src/widgets/scroll_physics.dart");
  var Tolerance_velocity = dart.privateName(tolerance, "Tolerance.velocity");
  var Tolerance_time = dart.privateName(tolerance, "Tolerance.time");
  var Tolerance_distance = dart.privateName(tolerance, "Tolerance.distance");
  var C893;
  var _frictionSimulation = dart.privateName(scroll_simulation, "_frictionSimulation");
  var _springSimulation = dart.privateName(scroll_simulation, "_springSimulation");
  var _springTime = dart.privateName(scroll_simulation, "_springTime");
  var _timeOffset = dart.privateName(scroll_simulation, "_timeOffset");
  var _underscrollSimulation = dart.privateName(scroll_simulation, "_underscrollSimulation");
  var _overscrollSimulation = dart.privateName(scroll_simulation, "_overscrollSimulation");
  var _simulation = dart.privateName(scroll_simulation, "_simulation");
  var leadingExtent$ = dart.privateName(scroll_simulation, "BouncingScrollSimulation.leadingExtent");
  var trailingExtent$ = dart.privateName(scroll_simulation, "BouncingScrollSimulation.trailingExtent");
  var spring$ = dart.privateName(scroll_simulation, "BouncingScrollSimulation.spring");
  scroll_simulation.BouncingScrollSimulation = class BouncingScrollSimulation extends simulation.Simulation {
    get leadingExtent() {
      return this[leadingExtent$];
    }
    set leadingExtent(value) {
      super.leadingExtent = value;
    }
    get trailingExtent() {
      return this[trailingExtent$];
    }
    set trailingExtent(value) {
      super.trailingExtent = value;
    }
    get spring() {
      return this[spring$];
    }
    set spring(value) {
      super.spring = value;
    }
    [_underscrollSimulation](x, dx) {
      return new spring_simulation.ScrollSpringSimulation.new(this.spring, x, this.leadingExtent, dx);
    }
    [_overscrollSimulation](x, dx) {
      return new spring_simulation.ScrollSpringSimulation.new(this.spring, x, this.trailingExtent, dx);
    }
    [_simulation](time) {
      let t29;
      let simulation = null;
      if (dart.notNull(time) > dart.notNull(this[_springTime])) {
        this[_timeOffset] = this[_springTime][$isFinite] ? this[_springTime] : 0.0;
        simulation = this[_springSimulation];
      } else {
        this[_timeOffset] = 0.0;
        simulation = this[_frictionSimulation];
      }
      t29 = simulation;
      t29.tolerance = this.tolerance;
      return t29;
    }
    x(time) {
      return this[_simulation](time).x(dart.notNull(time) - dart.notNull(this[_timeOffset]));
    }
    dx(time) {
      return this[_simulation](time).dx(dart.notNull(time) - dart.notNull(this[_timeOffset]));
    }
    isDone(time) {
      return this[_simulation](time).isDone(dart.notNull(time) - dart.notNull(this[_timeOffset]));
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "BouncingScrollSimulation")) + "(leadingExtent: " + dart.str(this.leadingExtent) + ", trailingExtent: " + dart.str(this.trailingExtent) + ")";
    }
  };
  (scroll_simulation.BouncingScrollSimulation.new = function(opts) {
    let position = opts && 'position' in opts ? opts.position : null;
    let velocity = opts && 'velocity' in opts ? opts.velocity : null;
    let leadingExtent = opts && 'leadingExtent' in opts ? opts.leadingExtent : null;
    let trailingExtent = opts && 'trailingExtent' in opts ? opts.trailingExtent : null;
    let spring = opts && 'spring' in opts ? opts.spring : null;
    let tolerance = opts && 'tolerance' in opts ? opts.tolerance : C893 || CT.C893;
    this[_frictionSimulation] = null;
    this[_springSimulation] = null;
    this[_springTime] = null;
    this[_timeOffset] = 0.0;
    this[leadingExtent$] = leadingExtent;
    this[trailingExtent$] = trailingExtent;
    this[spring$] = spring;
    if (!(position != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 38, 15, "position != null");
    if (!(velocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 39, 15, "velocity != null");
    if (!(leadingExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 40, 15, "leadingExtent != null");
    if (!(trailingExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 41, 15, "trailingExtent != null");
    if (!(dart.notNull(leadingExtent) <= dart.notNull(trailingExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 42, 15, "leadingExtent <= trailingExtent");
    if (!(spring != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 43, 15, "spring != null");
    scroll_simulation.BouncingScrollSimulation.__proto__.new.call(this, {tolerance: tolerance});
    if (dart.notNull(position) < dart.notNull(this.leadingExtent)) {
      this[_springSimulation] = this[_underscrollSimulation](position, velocity);
      this[_springTime] = -1 / 0;
    } else if (dart.notNull(position) > dart.notNull(this.trailingExtent)) {
      this[_springSimulation] = this[_overscrollSimulation](position, velocity);
      this[_springTime] = -1 / 0;
    } else {
      this[_frictionSimulation] = new friction_simulation.FrictionSimulation.new(0.135, position, velocity);
      let finalX = this[_frictionSimulation].finalX;
      if (dart.notNull(velocity) > 0.0 && dart.notNull(finalX) > dart.notNull(this.trailingExtent)) {
        this[_springTime] = this[_frictionSimulation].timeAtX(this.trailingExtent);
        this[_springSimulation] = this[_overscrollSimulation](this.trailingExtent, math.min(core.double, this[_frictionSimulation].dx(this[_springTime]), 5000));
        if (!this[_springTime][$isFinite]) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 60, 16, "_springTime.isFinite");
      } else if (dart.notNull(velocity) < 0.0 && dart.notNull(finalX) < dart.notNull(this.leadingExtent)) {
        this[_springTime] = this[_frictionSimulation].timeAtX(this.leadingExtent);
        this[_springSimulation] = this[_underscrollSimulation](this.leadingExtent, math.min(core.double, this[_frictionSimulation].dx(this[_springTime]), 5000));
        if (!this[_springTime][$isFinite]) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 67, 16, "_springTime.isFinite");
      } else {
        this[_springTime] = 1 / 0;
      }
    }
    if (!(this[_springTime] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 72, 12, "_springTime != null");
  }).prototype = scroll_simulation.BouncingScrollSimulation.prototype;
  dart.addTypeTests(scroll_simulation.BouncingScrollSimulation);
  dart.setMethodSignature(scroll_simulation.BouncingScrollSimulation, () => ({
    __proto__: dart.getMethods(scroll_simulation.BouncingScrollSimulation.__proto__),
    [_underscrollSimulation]: dart.fnType(simulation.Simulation, [core.double, core.double]),
    [_overscrollSimulation]: dart.fnType(simulation.Simulation, [core.double, core.double]),
    [_simulation]: dart.fnType(simulation.Simulation, [core.double]),
    x: dart.fnType(core.double, [core.double]),
    dx: dart.fnType(core.double, [core.double]),
    isDone: dart.fnType(core.bool, [core.double])
  }));
  dart.setLibraryUri(scroll_simulation.BouncingScrollSimulation, "package:flutter/src/widgets/scroll_simulation.dart");
  dart.setFieldSignature(scroll_simulation.BouncingScrollSimulation, () => ({
    __proto__: dart.getFields(scroll_simulation.BouncingScrollSimulation.__proto__),
    leadingExtent: dart.finalFieldType(core.double),
    trailingExtent: dart.finalFieldType(core.double),
    spring: dart.finalFieldType(spring_simulation.SpringDescription),
    [_frictionSimulation]: dart.fieldType(friction_simulation.FrictionSimulation),
    [_springSimulation]: dart.fieldType(simulation.Simulation),
    [_springTime]: dart.fieldType(core.double),
    [_timeOffset]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(scroll_simulation.BouncingScrollSimulation, ['toString']);
  dart.defineLazy(scroll_simulation.BouncingScrollSimulation, {
    /*scroll_simulation.BouncingScrollSimulation.maxSpringTransferVelocity*/get maxSpringTransferVelocity() {
      return 5000;
    }
  });
  var _duration = dart.privateName(scroll_simulation, "_duration");
  var _distance = dart.privateName(scroll_simulation, "_distance");
  var _flingDuration = dart.privateName(scroll_simulation, "_flingDuration");
  var position$3 = dart.privateName(scroll_simulation, "ClampingScrollSimulation.position");
  var velocity$0 = dart.privateName(scroll_simulation, "ClampingScrollSimulation.velocity");
  var friction$ = dart.privateName(scroll_simulation, "ClampingScrollSimulation.friction");
  scroll_simulation.ClampingScrollSimulation = class ClampingScrollSimulation extends simulation.Simulation {
    get position() {
      return this[position$3];
    }
    set position(value) {
      super.position = value;
    }
    get velocity() {
      return this[velocity$0];
    }
    set velocity(value) {
      super.velocity = value;
    }
    get friction() {
      return this[friction$];
    }
    set friction(value) {
      super.friction = value;
    }
    static _decelerationForFriction(friction) {
      return dart.notNull(friction) * 61774.04968;
    }
    [_flingDuration](velocity) {
      let scaledFriction = dart.notNull(this.friction) * dart.notNull(scroll_simulation.ClampingScrollSimulation._decelerationForFriction(0.84));
      let deceleration = math.log(0.35 * velocity[$abs]() / scaledFriction);
      return math.exp(deceleration / (dart.notNull(scroll_simulation.ClampingScrollSimulation._kDecelerationRate) - 1.0));
    }
    static _flingDistancePenetration(t) {
      return 1.2 * dart.notNull(t) * dart.notNull(t) * dart.notNull(t) - 3.27 * dart.notNull(t) * dart.notNull(t) + 3.065 * dart.notNull(t);
    }
    static _flingVelocityPenetration(t) {
      return 3.6 * dart.notNull(t) * dart.notNull(t) - 6.54 * dart.notNull(t) + 3.065;
    }
    x(time) {
      let t = (dart.notNull(time) / dart.notNull(this[_duration]))[$clamp](0.0, 1.0);
      return dart.notNull(this.position) + dart.notNull(this[_distance]) * dart.notNull(scroll_simulation.ClampingScrollSimulation._flingDistancePenetration(t)) * this.velocity[$sign];
    }
    dx(time) {
      let t = (dart.notNull(time) / dart.notNull(this[_duration]))[$clamp](0.0, 1.0);
      return dart.notNull(this[_distance]) * dart.notNull(scroll_simulation.ClampingScrollSimulation._flingVelocityPenetration(t)) * this.velocity[$sign] / dart.notNull(this[_duration]);
    }
    isDone(time) {
      return dart.notNull(time) >= dart.notNull(this[_duration]);
    }
  };
  (scroll_simulation.ClampingScrollSimulation.new = function(opts) {
    let position = opts && 'position' in opts ? opts.position : null;
    let velocity = opts && 'velocity' in opts ? opts.velocity : null;
    let friction = opts && 'friction' in opts ? opts.friction : 0.015;
    let tolerance = opts && 'tolerance' in opts ? opts.tolerance : C893 || CT.C893;
    this[_duration] = null;
    this[_distance] = null;
    this[position$3] = position;
    this[velocity$0] = velocity;
    this[friction$] = friction;
    if (!(scroll_simulation.ClampingScrollSimulation._flingVelocityPenetration(0.0) === 3.065)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_simulation.dart", 148, 15, "_flingVelocityPenetration(0.0) == _initialVelocityPenetration");
    scroll_simulation.ClampingScrollSimulation.__proto__.new.call(this, {tolerance: tolerance});
    this[_duration] = this[_flingDuration](this.velocity);
    this[_distance] = (dart.notNull(this.velocity) * dart.notNull(this[_duration]) / 3.065)[$abs]();
  }).prototype = scroll_simulation.ClampingScrollSimulation.prototype;
  dart.addTypeTests(scroll_simulation.ClampingScrollSimulation);
  dart.setMethodSignature(scroll_simulation.ClampingScrollSimulation, () => ({
    __proto__: dart.getMethods(scroll_simulation.ClampingScrollSimulation.__proto__),
    [_flingDuration]: dart.fnType(core.double, [core.double]),
    x: dart.fnType(core.double, [core.double]),
    dx: dart.fnType(core.double, [core.double]),
    isDone: dart.fnType(core.bool, [core.double])
  }));
  dart.setLibraryUri(scroll_simulation.ClampingScrollSimulation, "package:flutter/src/widgets/scroll_simulation.dart");
  dart.setFieldSignature(scroll_simulation.ClampingScrollSimulation, () => ({
    __proto__: dart.getFields(scroll_simulation.ClampingScrollSimulation.__proto__),
    position: dart.finalFieldType(core.double),
    velocity: dart.finalFieldType(core.double),
    friction: dart.finalFieldType(core.double),
    [_duration]: dart.fieldType(core.double),
    [_distance]: dart.fieldType(core.double)
  }));
  dart.defineLazy(scroll_simulation.ClampingScrollSimulation, {
    /*scroll_simulation.ClampingScrollSimulation._kDecelerationRate*/get _kDecelerationRate() {
      return math.log(0.78) / math.log(0.9);
    },
    /*scroll_simulation.ClampingScrollSimulation._initialVelocityPenetration*/get _initialVelocityPenetration() {
      return 3.065;
    }
  });
  var C894;
  var showLeading$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.showLeading");
  var showTrailing$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.showTrailing");
  var axisDirection$3 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.axisDirection");
  var color$8 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.color");
  var notificationPredicate$ = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.notificationPredicate");
  var child$34 = dart.privateName(overscroll_indicator, "GlowingOverscrollIndicator.child");
  overscroll_indicator.GlowingOverscrollIndicator = class GlowingOverscrollIndicator extends framework.StatefulWidget {
    get showLeading() {
      return this[showLeading$];
    }
    set showLeading(value) {
      super.showLeading = value;
    }
    get showTrailing() {
      return this[showTrailing$];
    }
    set showTrailing(value) {
      super.showTrailing = value;
    }
    get axisDirection() {
      return this[axisDirection$3];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get color() {
      return this[color$8];
    }
    set color(value) {
      super.color = value;
    }
    get notificationPredicate() {
      return this[notificationPredicate$];
    }
    set notificationPredicate(value) {
      super.notificationPredicate = value;
    }
    get child() {
      return this[child$34];
    }
    set child(value) {
      super.child = value;
    }
    get axis() {
      return basic_types$.axisDirectionToAxis(this.axisDirection);
    }
    createState() {
      return new overscroll_indicator._GlowingOverscrollIndicatorState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxisDirection()).new("axisDirection", this.axisDirection));
      let showDescription = null;
      if (dart.test(this.showLeading) && dart.test(this.showTrailing)) {
        showDescription = "both sides";
      } else if (dart.test(this.showLeading)) {
        showDescription = "leading side only";
      } else if (dart.test(this.showTrailing)) {
        showDescription = "trailing side only";
      } else {
        showDescription = "neither side (!)";
      }
      properties.add(new diagnostics$.MessageProperty.new("show", showDescription));
      properties.add(new colors.ColorProperty.new("color", this.color, {showName: false}));
    }
  };
  (overscroll_indicator.GlowingOverscrollIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let showLeading = opts && 'showLeading' in opts ? opts.showLeading : true;
    let showTrailing = opts && 'showTrailing' in opts ? opts.showTrailing : true;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : C894 || CT.C894;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[showLeading$] = showLeading;
    this[showTrailing$] = showTrailing;
    this[axisDirection$3] = axisDirection;
    this[color$8] = color;
    this[notificationPredicate$] = notificationPredicate;
    this[child$34] = child;
    if (!(showLeading != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 52, 15, "showLeading != null");
    if (!(showTrailing != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 53, 15, "showTrailing != null");
    if (!(axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 54, 15, "axisDirection != null");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 55, 15, "color != null");
    if (!(notificationPredicate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 56, 15, "notificationPredicate != null");
    overscroll_indicator.GlowingOverscrollIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = overscroll_indicator.GlowingOverscrollIndicator.prototype;
  dart.addTypeTests(overscroll_indicator.GlowingOverscrollIndicator);
  dart.setMethodSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getMethods(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    createState: dart.fnType(overscroll_indicator._GlowingOverscrollIndicatorState, [])
  }));
  dart.setGetterSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getGetters(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    axis: basic_types$.Axis
  }));
  dart.setLibraryUri(overscroll_indicator.GlowingOverscrollIndicator, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator.GlowingOverscrollIndicator, () => ({
    __proto__: dart.getFields(overscroll_indicator.GlowingOverscrollIndicator.__proto__),
    showLeading: dart.finalFieldType(core.bool),
    showTrailing: dart.finalFieldType(core.bool),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    color: dart.finalFieldType(ui.Color),
    notificationPredicate: dart.finalFieldType(dart.fnType(core.bool, [scroll_notification.ScrollNotification])),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _leadingController = dart.privateName(overscroll_indicator, "_leadingController");
  var _trailingController = dart.privateName(overscroll_indicator, "_trailingController");
  var _leadingAndTrailingListener = dart.privateName(overscroll_indicator, "_leadingAndTrailingListener");
  var _lastNotificationType = dart.privateName(overscroll_indicator, "_lastNotificationType");
  var _accepted = dart.privateName(overscroll_indicator, "_accepted");
  var _handleScrollNotification = dart.privateName(overscroll_indicator, "_handleScrollNotification");
  var C897;
  var C896;
  var C895;
  var C900;
  var C901;
  var C899;
  var C898;
  var C904;
  var C903;
  var C902;
  var C907;
  var C908;
  var C906;
  var C905;
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(overscroll_indicator.GlowingOverscrollIndicator) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(overscroll_indicator.GlowingOverscrollIndicator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(overscroll_indicator.GlowingOverscrollIndicator));
  overscroll_indicator._GlowingOverscrollIndicatorState = class _GlowingOverscrollIndicatorState extends State_TickerProviderStateMixin$36$1 {
    initState() {
      super.initState();
      this[_leadingController] = new overscroll_indicator._GlowController.new({vsync: this, color: this.widget.color, axis: this.widget.axis});
      this[_trailingController] = new overscroll_indicator._GlowController.new({vsync: this, color: this.widget.color, axis: this.widget.axis});
      this[_leadingAndTrailingListener] = new change_notifier._MergingListenable.new(JSArrayOfListenable().of([this[_leadingController], this[_trailingController]]));
    }
    didUpdateWidget(oldWidget) {
      overscroll_indicator.GlowingOverscrollIndicator._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(oldWidget.color, this.widget.color) || !dart.equals(oldWidget.axis, this.widget.axis)) {
        this[_leadingController].color = this.widget.color;
        this[_leadingController].axis = this.widget.axis;
        this[_trailingController].color = this.widget.color;
        this[_trailingController].axis = this.widget.axis;
      }
    }
    [_handleScrollNotification](notification) {
      if (!dart.test(this.widget.notificationPredicate(notification))) return false;
      if (scroll_notification.OverscrollNotification.is(notification)) {
        let controller = null;
        if (dart.notNull(notification.overscroll) < 0.0) {
          controller = this[_leadingController];
        } else if (dart.notNull(notification.overscroll) > 0.0) {
          controller = this[_trailingController];
        } else {
          if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 168, 16, "false");
        }
        let isLeading = dart.equals(controller, this[_leadingController]);
        if (!dart.equals(this[_lastNotificationType], dart.wrapType(scroll_notification.OverscrollNotification))) {
          let confirmationNotification = new overscroll_indicator.OverscrollIndicatorNotification.new({leading: isLeading});
          confirmationNotification.dispatch(this.context);
          this[_accepted][$_set](isLeading, confirmationNotification[_accepted]);
        }
        if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 176, 14, "controller != null");
        if (!dart.equals(notification.metrics.axis, this.widget.axis)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 177, 14, "notification.metrics.axis == widget.axis");
        if (dart.test(this[_accepted][$_get](isLeading))) {
          if (notification.velocity !== 0.0) {
            if (!(notification.dragDetails == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 180, 18, "notification.dragDetails == null");
            controller.absorbImpact(notification.velocity[$abs]());
          } else {
            if (!(notification.overscroll !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 183, 18, "notification.overscroll != 0.0");
            if (notification.dragDetails != null) {
              if (!(notification.dragDetails.globalPosition != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 185, 20, "notification.dragDetails.globalPosition != null");
              let renderer = box$.RenderBox.as(notification.context.findRenderObject());
              if (!(renderer != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 187, 20, "renderer != null");
              if (!dart.test(renderer.hasSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 188, 20, "renderer.hasSize");
              let size = renderer.size;
              let position = renderer.globalToLocal(notification.dragDetails.globalPosition);
              switch (notification.metrics.axis) {
                case C78 || CT.C78:
                {
                  controller.pull(notification.overscroll[$abs](), size.width, position.dy[$clamp](0.0, size.height), size.height);
                  break;
                }
                case C77 || CT.C77:
                {
                  controller.pull(notification.overscroll[$abs](), size.height, position.dx[$clamp](0.0, size.width), size.width);
                  break;
                }
              }
            }
          }
        }
      } else if (scroll_notification.ScrollEndNotification.is(notification) || scroll_notification.ScrollUpdateNotification.is(notification)) {
        if (dart.dload(notification, 'dragDetails') != null) {
          this[_leadingController].scrollEnd();
          this[_trailingController].scrollEnd();
        }
      }
      this[_lastNotificationType] = dart.runtimeType(notification);
      return false;
    }
    dispose() {
      this[_leadingController].dispose();
      this[_trailingController].dispose();
      super.dispose();
    }
    build(context) {
      return new (NotificationListenerOfScrollNotification()).new({onNotification: dart.bind(this, _handleScrollNotification), child: new basic.RepaintBoundary.new({child: new basic.CustomPaint.new({foregroundPainter: new overscroll_indicator._GlowingOverscrollIndicatorPainter.new({leadingController: dart.test(this.widget.showLeading) ? this[_leadingController] : null, trailingController: dart.test(this.widget.showTrailing) ? this[_trailingController] : null, axisDirection: this.widget.axisDirection, repaint: this[_leadingAndTrailingListener]}), child: new basic.RepaintBoundary.new({child: this.widget.child, $creationLocationd_0dea112b090073317d4: C895 || CT.C895}), $creationLocationd_0dea112b090073317d4: C898 || CT.C898}), $creationLocationd_0dea112b090073317d4: C902 || CT.C902}), $creationLocationd_0dea112b090073317d4: C905 || CT.C905});
    }
  };
  (overscroll_indicator._GlowingOverscrollIndicatorState.new = function() {
    this[_leadingController] = null;
    this[_trailingController] = null;
    this[_leadingAndTrailingListener] = null;
    this[_lastNotificationType] = null;
    this[_accepted] = new (IdentityMapOfbool$bool()).from([false, true, true, true]);
    overscroll_indicator._GlowingOverscrollIndicatorState.__proto__.new.call(this);
    ;
  }).prototype = overscroll_indicator._GlowingOverscrollIndicatorState.prototype;
  dart.addTypeTests(overscroll_indicator._GlowingOverscrollIndicatorState);
  dart.setMethodSignature(overscroll_indicator._GlowingOverscrollIndicatorState, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowingOverscrollIndicatorState.__proto__),
    [_handleScrollNotification]: dart.fnType(core.bool, [scroll_notification.ScrollNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(overscroll_indicator._GlowingOverscrollIndicatorState, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator._GlowingOverscrollIndicatorState, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowingOverscrollIndicatorState.__proto__),
    [_leadingController]: dart.fieldType(overscroll_indicator._GlowController),
    [_trailingController]: dart.fieldType(overscroll_indicator._GlowController),
    [_leadingAndTrailingListener]: dart.fieldType(change_notifier.Listenable),
    [_lastNotificationType]: dart.fieldType(core.Type),
    [_accepted]: dart.finalFieldType(core.Map$(core.bool, core.bool))
  }));
  var _name$24 = dart.privateName(overscroll_indicator, "_name");
  var C909;
  var C910;
  var C911;
  var C912;
  var C913;
  overscroll_indicator._GlowState = class _GlowState extends core.Object {
    toString() {
      return this[_name$24];
    }
  };
  (overscroll_indicator._GlowState.new = function(index, _name) {
    this.index = index;
    this[_name$24] = _name;
    ;
  }).prototype = overscroll_indicator._GlowState.prototype;
  dart.addTypeTests(overscroll_indicator._GlowState);
  dart.setLibraryUri(overscroll_indicator._GlowState, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator._GlowState, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowState.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$24]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(overscroll_indicator._GlowState, ['toString']);
  overscroll_indicator._GlowState.idle = C909 || CT.C909;
  overscroll_indicator._GlowState.absorb = C910 || CT.C910;
  overscroll_indicator._GlowState.pull = C911 || CT.C911;
  overscroll_indicator._GlowState.recede = C912 || CT.C912;
  overscroll_indicator._GlowState.values = C913 || CT.C913;
  var _state$0 = dart.privateName(overscroll_indicator, "_state");
  var _glowController = dart.privateName(overscroll_indicator, "_glowController");
  var _pullRecedeTimer = dart.privateName(overscroll_indicator, "_pullRecedeTimer");
  var _glowOpacityTween = dart.privateName(overscroll_indicator, "_glowOpacityTween");
  var _glowOpacity = dart.privateName(overscroll_indicator, "_glowOpacity");
  var _glowSizeTween = dart.privateName(overscroll_indicator, "_glowSizeTween");
  var _glowSize = dart.privateName(overscroll_indicator, "_glowSize");
  var _displacementTicker = dart.privateName(overscroll_indicator, "_displacementTicker");
  var _displacementTickerLastElapsed = dart.privateName(overscroll_indicator, "_displacementTickerLastElapsed");
  var _displacementTarget = dart.privateName(overscroll_indicator, "_displacementTarget");
  var _displacement = dart.privateName(overscroll_indicator, "_displacement");
  var _pullDistance = dart.privateName(overscroll_indicator, "_pullDistance");
  var _color = dart.privateName(overscroll_indicator, "_color");
  var _axis = dart.privateName(overscroll_indicator, "_axis");
  var _changePhase = dart.privateName(overscroll_indicator, "_changePhase");
  var _tickDisplacement = dart.privateName(overscroll_indicator, "_tickDisplacement");
  var _recede = dart.privateName(overscroll_indicator, "_recede");
  var C914;
  var C915;
  var C916;
  overscroll_indicator._GlowController = class _GlowController extends change_notifier.ChangeNotifier {
    get color() {
      return this[_color];
    }
    set color(value) {
      if (!(this.color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 290, 12, "color != null");
      if (dart.equals(this.color, value)) return;
      this[_color] = value;
      this.notifyListeners();
    }
    get axis() {
      return this[_axis];
    }
    set axis(value) {
      if (!(this.axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 300, 12, "axis != null");
      if (dart.equals(this.axis, value)) return;
      this[_axis] = value;
      this.notifyListeners();
    }
    dispose() {
      let t29;
      this[_glowController].dispose();
      this[_displacementTicker].dispose();
      t29 = this[_pullRecedeTimer];
      t29 == null ? null : t29.cancel();
      super.dispose();
    }
    absorbImpact(velocity) {
      let t29;
      if (!(dart.notNull(velocity) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 335, 12, "velocity >= 0.0");
      t29 = this[_pullRecedeTimer];
      t29 == null ? null : t29.cancel();
      this[_pullRecedeTimer] = null;
      velocity = velocity[$clamp](100, 10000);
      this[_glowOpacityTween].begin = dart.equals(this[_state$0], overscroll_indicator._GlowState.idle) ? 0.3 : this[_glowOpacity].value;
      this[_glowOpacityTween].end = (dart.notNull(velocity) * 0.00006)[$clamp](this[_glowOpacityTween].begin, 0.5);
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = math.min(core.double, 0.025 + 7.5e-7 * dart.notNull(velocity) * dart.notNull(velocity), 1.0);
      this[_glowController].duration = new core.Duration.new({milliseconds: (0.15 + dart.notNull(velocity) * 0.02)[$round]()});
      this[_glowController].forward({from: 0.0});
      this[_displacement] = 0.5;
      this[_state$0] = overscroll_indicator._GlowState.absorb;
    }
    pull(overscroll, extent, crossAxisOffset, crossExtent) {
      let t29;
      t29 = this[_pullRecedeTimer];
      t29 == null ? null : t29.cancel();
      this[_pullDistance] = dart.notNull(this[_pullDistance]) + dart.notNull(overscroll) / 200.0;
      this[_glowOpacityTween].begin = this[_glowOpacity].value;
      this[_glowOpacityTween].end = math.min(core.double, dart.notNull(this[_glowOpacity].value) + dart.notNull(overscroll) / dart.notNull(extent) * 0.8, 0.5);
      let height = math.min(core.double, extent, dart.notNull(crossExtent) * 0.20096189432249995);
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = math.max(core.double, 1.0 - 1.0 / (0.7 * math.sqrt(dart.notNull(this[_pullDistance]) * height)), this[_glowSize].value);
      this[_displacementTarget] = dart.notNull(crossAxisOffset) / dart.notNull(crossExtent);
      if (this[_displacementTarget] != this[_displacement]) {
        if (!dart.test(this[_displacementTicker].isTicking)) {
          if (!(this[_displacementTickerLastElapsed] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 371, 16, "_displacementTickerLastElapsed == null");
          this[_displacementTicker].start();
        }
      } else {
        this[_displacementTicker].stop();
        this[_displacementTickerLastElapsed] = null;
      }
      this[_glowController].duration = overscroll_indicator._GlowController._pullTime;
      if (!dart.equals(this[_state$0], overscroll_indicator._GlowState.pull)) {
        this[_glowController].forward({from: 0.0});
        this[_state$0] = overscroll_indicator._GlowState.pull;
      } else {
        if (!dart.test(this[_glowController].isAnimating)) {
          if (!(this[_glowController].value === 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 384, 16, "_glowController.value == 1.0");
          this.notifyListeners();
        }
      }
      this[_pullRecedeTimer] = async.Timer.new(overscroll_indicator._GlowController._pullHoldTime, dart.fn(() => this[_recede](overscroll_indicator._GlowController._pullDecayTime), VoidTovoid()));
    }
    scrollEnd() {
      if (dart.equals(this[_state$0], overscroll_indicator._GlowState.pull)) this[_recede](overscroll_indicator._GlowController._recedeTime);
    }
    [_changePhase](status) {
      if (!dart.equals(status, animation$.AnimationStatus.completed)) return;
      switch (this[_state$0]) {
        case C910 || CT.C910:
        {
          this[_recede](overscroll_indicator._GlowController._recedeTime);
          break;
        }
        case C912 || CT.C912:
        {
          this[_state$0] = overscroll_indicator._GlowState.idle;
          this[_pullDistance] = 0.0;
          break;
        }
        case C911 || CT.C911:
        case C909 || CT.C909:
        {
          break;
        }
      }
    }
    [_recede](duration) {
      let t29;
      if (dart.equals(this[_state$0], overscroll_indicator._GlowState.recede) || dart.equals(this[_state$0], overscroll_indicator._GlowState.idle)) return;
      t29 = this[_pullRecedeTimer];
      t29 == null ? null : t29.cancel();
      this[_pullRecedeTimer] = null;
      this[_glowOpacityTween].begin = this[_glowOpacity].value;
      this[_glowOpacityTween].end = 0.0;
      this[_glowSizeTween].begin = this[_glowSize].value;
      this[_glowSizeTween].end = 0.0;
      this[_glowController].duration = duration;
      this[_glowController].forward({from: 0.0});
      this[_state$0] = overscroll_indicator._GlowState.recede;
    }
    [_tickDisplacement](elapsed) {
      if (this[_displacementTickerLastElapsed] != null) {
        let t = (dart.notNull(elapsed.inMicroseconds) - dart.notNull(this[_displacementTickerLastElapsed].inMicroseconds))[$toDouble]();
        this[_displacement] = dart.notNull(this[_displacementTarget]) - (dart.notNull(this[_displacementTarget]) - dart.notNull(this[_displacement])) * math.pow(2.0, -t / dart.notNull(overscroll_indicator._GlowController._crossAxisHalfTime.inMicroseconds));
        this.notifyListeners();
      }
      if (dart.test(utils.nearEqual(this[_displacementTarget], this[_displacement], tolerance.Tolerance.defaultTolerance.distance))) {
        this[_displacementTicker].stop();
        this[_displacementTickerLastElapsed] = null;
      } else {
        this[_displacementTickerLastElapsed] = elapsed;
      }
    }
    paint(canvas, size) {
      let t29;
      if (this[_glowOpacity].value === 0.0) return;
      let baseGlowScale = dart.notNull(size.width) > dart.notNull(size.height) ? dart.notNull(size.height) / dart.notNull(size.width) : 1.0;
      let radius = dart.notNull(size.width) * 3.0 / 2.0;
      let height = math.min(core.double, size.height, dart.notNull(size.width) * 0.20096189432249995);
      let scaleY = dart.notNull(this[_glowSize].value) * baseGlowScale;
      let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, height);
      let center = new ui.Offset.new(dart.notNull(size.width) / 2.0 * (0.5 + dart.notNull(this[_displacement])), height - radius);
      let paint = (t29 = ui.Paint.new(), t29.color = this.color.withOpacity(this[_glowOpacity].value), t29);
      canvas.save();
      canvas.scale(1.0, scaleY);
      canvas.clipRect(rect);
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (overscroll_indicator._GlowController.new = function(opts) {
    let t29, t29$;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let axis = opts && 'axis' in opts ? opts.axis : null;
    this[_state$0] = overscroll_indicator._GlowState.idle;
    this[_glowController] = null;
    this[_pullRecedeTimer] = null;
    this[_glowOpacityTween] = new (TweenOfdouble()).new({begin: 0.0, end: 0.0});
    this[_glowOpacity] = null;
    this[_glowSizeTween] = new (TweenOfdouble()).new({begin: 0.0, end: 0.0});
    this[_glowSize] = null;
    this[_displacementTicker] = null;
    this[_displacementTickerLastElapsed] = null;
    this[_displacementTarget] = 0.5;
    this[_displacement] = 0.5;
    this[_pullDistance] = 0.0;
    if (!(vsync != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 251, 15, "vsync != null");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 252, 15, "color != null");
    if (!(axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/overscroll_indicator.dart", 253, 15, "axis != null");
    this[_color] = color;
    this[_axis] = axis;
    overscroll_indicator._GlowController.__proto__.new.call(this);
    this[_glowController] = (t29 = new animation_controller.AnimationController.new({vsync: vsync}), t29.addStatusListener(dart.bind(this, _changePhase)), t29);
    let decelerator = (t29$ = new animations.CurvedAnimation.new({parent: this[_glowController], curve: curves.Curves.decelerate}), t29$.addListener(dart.bind(this, 'notifyListeners')), t29$);
    this[_glowOpacity] = decelerator.drive(core.double, this[_glowOpacityTween]);
    this[_glowSize] = decelerator.drive(core.double, this[_glowSizeTween]);
    this[_displacementTicker] = vsync.createTicker(dart.bind(this, _tickDisplacement));
  }).prototype = overscroll_indicator._GlowController.prototype;
  dart.addTypeTests(overscroll_indicator._GlowController);
  dart.setMethodSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowController.__proto__),
    absorbImpact: dart.fnType(dart.void, [core.double]),
    pull: dart.fnType(dart.void, [core.double, core.double, core.double, core.double]),
    scrollEnd: dart.fnType(dart.void, []),
    [_changePhase]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    [_recede]: dart.fnType(dart.void, [core.Duration]),
    [_tickDisplacement]: dart.fnType(dart.void, [core.Duration]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setGetterSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getGetters(overscroll_indicator._GlowController.__proto__),
    color: ui.Color,
    axis: basic_types$.Axis
  }));
  dart.setSetterSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getSetters(overscroll_indicator._GlowController.__proto__),
    color: ui.Color,
    axis: basic_types$.Axis
  }));
  dart.setLibraryUri(overscroll_indicator._GlowController, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator._GlowController, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowController.__proto__),
    [_state$0]: dart.fieldType(overscroll_indicator._GlowState),
    [_glowController]: dart.fieldType(animation_controller.AnimationController),
    [_pullRecedeTimer]: dart.fieldType(async.Timer),
    [_glowOpacityTween]: dart.finalFieldType(tween.Tween$(core.double)),
    [_glowOpacity]: dart.fieldType(animation$.Animation$(core.double)),
    [_glowSizeTween]: dart.finalFieldType(tween.Tween$(core.double)),
    [_glowSize]: dart.fieldType(animation$.Animation$(core.double)),
    [_displacementTicker]: dart.fieldType(ticker.Ticker),
    [_displacementTickerLastElapsed]: dart.fieldType(core.Duration),
    [_displacementTarget]: dart.fieldType(core.double),
    [_displacement]: dart.fieldType(core.double),
    [_pullDistance]: dart.fieldType(core.double),
    [_color]: dart.fieldType(ui.Color),
    [_axis]: dart.fieldType(basic_types$.Axis)
  }));
  dart.defineLazy(overscroll_indicator._GlowController, {
    /*overscroll_indicator._GlowController._recedeTime*/get _recedeTime() {
      return C914 || CT.C914;
    },
    /*overscroll_indicator._GlowController._pullTime*/get _pullTime() {
      return C915 || CT.C915;
    },
    /*overscroll_indicator._GlowController._pullHoldTime*/get _pullHoldTime() {
      return C915 || CT.C915;
    },
    /*overscroll_indicator._GlowController._pullDecayTime*/get _pullDecayTime() {
      return C916 || CT.C916;
    },
    /*overscroll_indicator._GlowController._crossAxisHalfTime*/get _crossAxisHalfTime() {
      return new core.Duration.new({microseconds: (1000000 / 60.0)[$round]()});
    },
    /*overscroll_indicator._GlowController._maxOpacity*/get _maxOpacity() {
      return 0.5;
    },
    /*overscroll_indicator._GlowController._pullOpacityGlowFactor*/get _pullOpacityGlowFactor() {
      return 0.8;
    },
    /*overscroll_indicator._GlowController._velocityGlowFactor*/get _velocityGlowFactor() {
      return 0.00006;
    },
    /*overscroll_indicator._GlowController._sqrt3*/get _sqrt3() {
      return 1.73205080757;
    },
    /*overscroll_indicator._GlowController._widthToHeightFactor*/get _widthToHeightFactor() {
      return 0.20096189432249995;
    },
    /*overscroll_indicator._GlowController._minVelocity*/get _minVelocity() {
      return 100;
    },
    /*overscroll_indicator._GlowController._maxVelocity*/get _maxVelocity() {
      return 10000;
    }
  });
  var _paintSide = dart.privateName(overscroll_indicator, "_paintSide");
  overscroll_indicator._GlowingOverscrollIndicatorPainter = class _GlowingOverscrollIndicatorPainter extends custom_paint.CustomPainter {
    [_paintSide](canvas, size, controller, axisDirection, growthDirection) {
      if (controller == null) return;
      switch (sliver.applyGrowthDirectionToAxisDirection(axisDirection, growthDirection)) {
        case C115 || CT.C115:
        {
          controller.paint(canvas, size);
          break;
        }
        case C72 || CT.C72:
        {
          canvas.save();
          canvas.translate(0.0, size.height);
          canvas.scale(1.0, -1.0);
          controller.paint(canvas, size);
          canvas.restore();
          break;
        }
        case C117 || CT.C117:
        {
          canvas.save();
          canvas.rotate(1.5707963267948966);
          canvas.scale(1.0, -1.0);
          controller.paint(canvas, new ui.Size.new(size.height, size.width));
          canvas.restore();
          break;
        }
        case C116 || CT.C116:
        {
          canvas.save();
          canvas.translate(size.width, 0.0);
          canvas.rotate(1.5707963267948966);
          controller.paint(canvas, new ui.Size.new(size.height, size.width));
          canvas.restore();
          break;
        }
      }
    }
    paint(canvas, size) {
      this[_paintSide](canvas, size, this.leadingController, this.axisDirection, sliver.GrowthDirection.reverse);
      this[_paintSide](canvas, size, this.trailingController, this.axisDirection, sliver.GrowthDirection.forward);
    }
    shouldRepaint(oldDelegate) {
      overscroll_indicator._GlowingOverscrollIndicatorPainter._check(oldDelegate);
      return !dart.equals(oldDelegate.leadingController, this.leadingController) || !dart.equals(oldDelegate.trailingController, this.trailingController);
    }
  };
  (overscroll_indicator._GlowingOverscrollIndicatorPainter.new = function(opts) {
    let leadingController = opts && 'leadingController' in opts ? opts.leadingController : null;
    let trailingController = opts && 'trailingController' in opts ? opts.trailingController : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    this.leadingController = leadingController;
    this.trailingController = trailingController;
    this.axisDirection = axisDirection;
    overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = overscroll_indicator._GlowingOverscrollIndicatorPainter.prototype;
  dart.addTypeTests(overscroll_indicator._GlowingOverscrollIndicatorPainter);
  dart.setMethodSignature(overscroll_indicator._GlowingOverscrollIndicatorPainter, () => ({
    __proto__: dart.getMethods(overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__),
    [_paintSide]: dart.fnType(dart.void, [ui.Canvas, ui.Size, overscroll_indicator._GlowController, basic_types$.AxisDirection, sliver.GrowthDirection]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(overscroll_indicator._GlowingOverscrollIndicatorPainter, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator._GlowingOverscrollIndicatorPainter, () => ({
    __proto__: dart.getFields(overscroll_indicator._GlowingOverscrollIndicatorPainter.__proto__),
    leadingController: dart.finalFieldType(overscroll_indicator._GlowController),
    trailingController: dart.finalFieldType(overscroll_indicator._GlowController),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection)
  }));
  dart.defineLazy(overscroll_indicator._GlowingOverscrollIndicatorPainter, {
    /*overscroll_indicator._GlowingOverscrollIndicatorPainter.piOver2*/get piOver2() {
      return 1.5707963267948966;
    }
  });
  var leading$0 = dart.privateName(overscroll_indicator, "OverscrollIndicatorNotification.leading");
  const Notification_ViewportNotificationMixin$36 = class Notification_ViewportNotificationMixin extends notification_listener.Notification {};
  (Notification_ViewportNotificationMixin$36.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    Notification_ViewportNotificationMixin$36.__proto__.new.call(this);
  }).prototype = Notification_ViewportNotificationMixin$36.prototype;
  dart.applyMixin(Notification_ViewportNotificationMixin$36, scroll_notification.ViewportNotificationMixin);
  overscroll_indicator.OverscrollIndicatorNotification = class OverscrollIndicatorNotification extends Notification_ViewportNotificationMixin$36 {
    get leading() {
      return this[leading$0];
    }
    set leading(value) {
      super.leading = value;
    }
    disallowGlow() {
      this[_accepted] = false;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("side: " + (dart.test(this.leading) ? "leading edge" : "trailing edge"));
    }
  };
  (overscroll_indicator.OverscrollIndicatorNotification.new = function(opts) {
    let leading = opts && 'leading' in opts ? opts.leading : null;
    this[_accepted] = true;
    this[leading$0] = leading;
    overscroll_indicator.OverscrollIndicatorNotification.__proto__.new.call(this);
    ;
  }).prototype = overscroll_indicator.OverscrollIndicatorNotification.prototype;
  dart.addTypeTests(overscroll_indicator.OverscrollIndicatorNotification);
  dart.setMethodSignature(overscroll_indicator.OverscrollIndicatorNotification, () => ({
    __proto__: dart.getMethods(overscroll_indicator.OverscrollIndicatorNotification.__proto__),
    disallowGlow: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(overscroll_indicator.OverscrollIndicatorNotification, "package:flutter/src/widgets/overscroll_indicator.dart");
  dart.setFieldSignature(overscroll_indicator.OverscrollIndicatorNotification, () => ({
    __proto__: dart.getFields(overscroll_indicator.OverscrollIndicatorNotification.__proto__),
    leading: dart.finalFieldType(core.bool),
    [_accepted]: dart.fieldType(core.bool)
  }));
  scroll_context.ScrollContext = class ScrollContext extends core.Object {};
  (scroll_context.ScrollContext.new = function() {
    ;
  }).prototype = scroll_context.ScrollContext.prototype;
  dart.addTypeTests(scroll_context.ScrollContext);
  dart.setLibraryUri(scroll_context.ScrollContext, "package:flutter/src/widgets/scroll_context.dart");
  var _positions = dart.privateName(scroll_controller, "_positions");
  var _initialScrollOffset = dart.privateName(scroll_controller, "_initialScrollOffset");
  var keepScrollOffset$0 = dart.privateName(scroll_controller, "ScrollController.keepScrollOffset");
  var debugLabel$2 = dart.privateName(scroll_controller, "ScrollController.debugLabel");
  scroll_controller.ScrollController = class ScrollController extends change_notifier.ChangeNotifier {
    get keepScrollOffset() {
      return this[keepScrollOffset$0];
    }
    set keepScrollOffset(value) {
      super.keepScrollOffset = value;
    }
    get debugLabel() {
      return this[debugLabel$2];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    get initialScrollOffset() {
      return this[_initialScrollOffset];
    }
    get positions() {
      return this[_positions];
    }
    get hasClients() {
      return this[_positions][$isNotEmpty];
    }
    get position() {
      if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 110, 12, "_positions.isNotEmpty");
      if (!(this[_positions][$length] === 1)) dart.assertFailed("ScrollController attached to multiple scroll views.", "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 111, 12, "_positions.length == 1");
      return this[_positions][$single];
    }
    get offset() {
      return this.position.pixels;
    }
    animateTo(offset, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 154, 12, "_positions.isNotEmpty");
      let animations = ListOfFutureOfvoid().new(this[_positions][$length]);
      for (let i = 0; i < dart.notNull(this[_positions][$length]); i = i + 1)
        animations[$_set](i, this[_positions][$_get](i).animateTo(offset, {duration: duration, curve: curve}));
      return async.Future.wait(dart.void, animations).then(dart.void, dart.fn(_ => null, ListOfvoidToNull()));
    }
    jumpTo(value) {
      if (!dart.test(this[_positions][$isNotEmpty])) dart.assertFailed("ScrollController not attached to any scroll views.", "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 174, 12, "_positions.isNotEmpty");
      for (let position of ListOfScrollPosition().from(this[_positions]))
        position.jumpTo(value);
    }
    attach(position) {
      if (!!dart.test(this[_positions][$contains](position))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 184, 12, "!_positions.contains(position)");
      this[_positions][$add](position);
      position.addListener(dart.bind(this, 'notifyListeners'));
    }
    detach(position) {
      if (!dart.test(this[_positions][$contains](position))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 194, 12, "_positions.contains(position)");
      position.removeListener(dart.bind(this, 'notifyListeners'));
      this[_positions][$remove](position);
    }
    dispose() {
      for (let position of this[_positions])
        position.removeListener(dart.bind(this, 'notifyListeners'));
      super.dispose();
    }
    createScrollPosition(physics, context, oldPosition) {
      return new scroll_position_with_single_context.ScrollPositionWithSingleContext.new({physics: physics, context: context, initialPixels: this.initialScrollOffset, keepScrollOffset: this.keepScrollOffset, oldPosition: oldPosition, debugLabel: this.debugLabel});
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
      let t29;
      if (this.debugLabel != null) description[$add](this.debugLabel);
      if (this.initialScrollOffset !== 0.0) description[$add]("initialScrollOffset: " + this.initialScrollOffset[$toStringAsFixed](1) + ", ");
      if (dart.test(this[_positions][$isEmpty])) {
        description[$add]("no clients");
      } else if (this[_positions][$length] === 1) {
        description[$add]("one client, offset " + dart.str((t29 = this.offset, t29 == null ? null : t29[$toStringAsFixed](1))));
      } else {
        description[$add](dart.str(this[_positions][$length]) + " clients");
      }
    }
  };
  (scroll_controller.ScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_positions] = JSArrayOfScrollPosition().of([]);
    this[keepScrollOffset$0] = keepScrollOffset;
    this[debugLabel$2] = debugLabel;
    if (!(initialScrollOffset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 54, 15, "initialScrollOffset != null");
    if (!(keepScrollOffset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 55, 15, "keepScrollOffset != null");
    this[_initialScrollOffset] = initialScrollOffset;
    scroll_controller.ScrollController.__proto__.new.call(this);
    ;
  }).prototype = scroll_controller.ScrollController.prototype;
  dart.addTypeTests(scroll_controller.ScrollController);
  dart.setMethodSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getMethods(scroll_controller.ScrollController.__proto__),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    attach: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    detach: dart.fnType(dart.void, [scroll_position.ScrollPosition]),
    createScrollPosition: dart.fnType(scroll_position.ScrollPosition, [scroll_physics.ScrollPhysics, scroll_context.ScrollContext, scroll_position.ScrollPosition]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setGetterSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getGetters(scroll_controller.ScrollController.__proto__),
    initialScrollOffset: core.double,
    positions: core.Iterable$(scroll_position.ScrollPosition),
    hasClients: core.bool,
    position: scroll_position.ScrollPosition,
    offset: core.double
  }));
  dart.setLibraryUri(scroll_controller.ScrollController, "package:flutter/src/widgets/scroll_controller.dart");
  dart.setFieldSignature(scroll_controller.ScrollController, () => ({
    __proto__: dart.getFields(scroll_controller.ScrollController.__proto__),
    [_initialScrollOffset]: dart.finalFieldType(core.double),
    keepScrollOffset: dart.finalFieldType(core.bool),
    debugLabel: dart.finalFieldType(core.String),
    [_positions]: dart.finalFieldType(core.List$(scroll_position.ScrollPosition))
  }));
  dart.defineExtensionMethods(scroll_controller.ScrollController, ['toString']);
  var _positionToListener = dart.privateName(scroll_controller, "_positionToListener");
  var _lastUpdated = dart.privateName(scroll_controller, "_lastUpdated");
  var _lastUpdatedOffset = dart.privateName(scroll_controller, "_lastUpdatedOffset");
  scroll_controller.TrackingScrollController = class TrackingScrollController extends scroll_controller.ScrollController {
    get mostRecentlyUpdatedPosition() {
      return this[_lastUpdated];
    }
    get initialScrollOffset() {
      let t29;
      t29 = this[_lastUpdatedOffset];
      return t29 == null ? super.initialScrollOffset : t29;
    }
    attach(position) {
      super.attach(position);
      if (!!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 352, 12, "!_positionToListener.containsKey(position)");
      this[_positionToListener][$_set](position, dart.fn(() => {
        this[_lastUpdated] = position;
        this[_lastUpdatedOffset] = position.pixels;
      }, VoidToNull()));
      position.addListener(this[_positionToListener][$_get](position));
    }
    detach(position) {
      super.detach(position);
      if (!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 363, 12, "_positionToListener.containsKey(position)");
      position.removeListener(this[_positionToListener][$_get](position));
      this[_positionToListener][$remove](position);
      if (dart.equals(this[_lastUpdated], position)) this[_lastUpdated] = null;
      if (dart.test(this[_positionToListener][$isEmpty])) this[_lastUpdatedOffset] = null;
    }
    dispose() {
      for (let position of this.positions) {
        if (!dart.test(this[_positionToListener][$containsKey](position))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_controller.dart", 375, 14, "_positionToListener.containsKey(position)");
        position.removeListener(this[_positionToListener][$_get](position));
      }
      super.dispose();
    }
  };
  (scroll_controller.TrackingScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_positionToListener] = new (LinkedMapOfScrollPosition$VoidTovoid()).new();
    this[_lastUpdated] = null;
    this[_lastUpdatedOffset] = null;
    scroll_controller.TrackingScrollController.__proto__.new.call(this, {initialScrollOffset: initialScrollOffset, keepScrollOffset: keepScrollOffset, debugLabel: debugLabel});
    ;
  }).prototype = scroll_controller.TrackingScrollController.prototype;
  dart.addTypeTests(scroll_controller.TrackingScrollController);
  dart.setGetterSignature(scroll_controller.TrackingScrollController, () => ({
    __proto__: dart.getGetters(scroll_controller.TrackingScrollController.__proto__),
    mostRecentlyUpdatedPosition: scroll_position.ScrollPosition
  }));
  dart.setLibraryUri(scroll_controller.TrackingScrollController, "package:flutter/src/widgets/scroll_controller.dart");
  dart.setFieldSignature(scroll_controller.TrackingScrollController, () => ({
    __proto__: dart.getFields(scroll_controller.TrackingScrollController.__proto__),
    [_positionToListener]: dart.finalFieldType(core.Map$(scroll_position.ScrollPosition, dart.fnType(dart.void, []))),
    [_lastUpdated]: dart.fieldType(scroll_position.ScrollPosition),
    [_lastUpdatedOffset]: dart.fieldType(core.double)
  }));
  var C919;
  var C920;
  var C921;
  var C918;
  var C917;
  var C922;
  var C923;
  scroll_configuration.ScrollBehavior = class ScrollBehavior extends core.Object {
    getPlatform(context) {
      return platform.defaultTargetPlatform;
    }
    buildViewportChrome(context, child, axisDirection) {
      switch (this.getPlatform(context)) {
        case C409 || CT.C409:
        case C408 || CT.C408:
        {
          return child;
        }
        case C406 || CT.C406:
        case C407 || CT.C407:
        {
          return new overscroll_indicator.GlowingOverscrollIndicator.new({child: child, axisDirection: axisDirection, color: scroll_configuration._kDefaultGlowColor, $creationLocationd_0dea112b090073317d4: C917 || CT.C917});
        }
      }
      return null;
    }
    getScrollPhysics(context) {
      switch (this.getPlatform(context)) {
        case C409 || CT.C409:
        case C408 || CT.C408:
        {
          return C922 || CT.C922;
        }
        case C406 || CT.C406:
        case C407 || CT.C407:
        {
          return C923 || CT.C923;
        }
      }
      return null;
    }
    shouldNotify(oldDelegate) {
      scroll_configuration.ScrollBehavior._check(oldDelegate);
      return false;
    }
    toString() {
      return object.objectRuntimeType(this, "ScrollBehavior");
    }
  };
  (scroll_configuration.ScrollBehavior.new = function() {
    ;
  }).prototype = scroll_configuration.ScrollBehavior.prototype;
  dart.addTypeTests(scroll_configuration.ScrollBehavior);
  dart.setMethodSignature(scroll_configuration.ScrollBehavior, () => ({
    __proto__: dart.getMethods(scroll_configuration.ScrollBehavior.__proto__),
    getPlatform: dart.fnType(platform.TargetPlatform, [framework.BuildContext]),
    buildViewportChrome: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, basic_types$.AxisDirection]),
    getScrollPhysics: dart.fnType(scroll_physics.ScrollPhysics, [framework.BuildContext]),
    shouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(scroll_configuration.ScrollBehavior, "package:flutter/src/widgets/scroll_configuration.dart");
  dart.defineExtensionMethods(scroll_configuration.ScrollBehavior, ['toString']);
  var C924;
  var behavior$4 = dart.privateName(scroll_configuration, "ScrollConfiguration.behavior");
  scroll_configuration.ScrollConfiguration = class ScrollConfiguration extends framework.InheritedWidget {
    get behavior() {
      return this[behavior$4];
    }
    set behavior(value) {
      super.behavior = value;
    }
    static of(context) {
      let t29, t29$;
      let configuration = context.dependOnInheritedWidgetOfExactType(scroll_configuration.ScrollConfiguration);
      t29$ = (t29 = configuration, t29 == null ? null : t29.behavior);
      return t29$ == null ? C924 || CT.C924 : t29$;
    }
    updateShouldNotify(oldWidget) {
      scroll_configuration.ScrollConfiguration._check(oldWidget);
      if (!(this.behavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_configuration.dart", 111, 12, "behavior != null");
      return !dart.equals(dart.runtimeType(this.behavior), dart.runtimeType(oldWidget.behavior)) || !dart.equals(this.behavior, oldWidget.behavior) && dart.test(this.behavior.shouldNotify(oldWidget.behavior));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollBehavior()).new("behavior", this.behavior));
    }
  };
  (scroll_configuration.ScrollConfiguration.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[behavior$4] = behavior;
    scroll_configuration.ScrollConfiguration.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_configuration.ScrollConfiguration.prototype;
  dart.addTypeTests(scroll_configuration.ScrollConfiguration);
  dart.setMethodSignature(scroll_configuration.ScrollConfiguration, () => ({
    __proto__: dart.getMethods(scroll_configuration.ScrollConfiguration.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(scroll_configuration.ScrollConfiguration, "package:flutter/src/widgets/scroll_configuration.dart");
  dart.setFieldSignature(scroll_configuration.ScrollConfiguration, () => ({
    __proto__: dart.getFields(scroll_configuration.ScrollConfiguration.__proto__),
    behavior: dart.finalFieldType(scroll_configuration.ScrollBehavior)
  }));
  dart.defineLazy(scroll_configuration, {
    /*scroll_configuration._kDefaultGlowColor*/get _kDefaultGlowColor() {
      return C377 || CT.C377;
    }
  });
  var TextRange_end = dart.privateName(ui, "TextRange.end");
  var TextRange_start = dart.privateName(ui, "TextRange.start");
  var TextSelection_isDirectional = dart.privateName(text_editing, "TextSelection.isDirectional");
  var C926;
  var TextSelection_affinity = dart.privateName(text_editing, "TextSelection.affinity");
  var TextSelection_extentOffset = dart.privateName(text_editing, "TextSelection.extentOffset");
  var TextSelection_baseOffset = dart.privateName(text_editing, "TextSelection.baseOffset");
  var C925;
  var TextDecoration__mask = dart.privateName(ui, "TextDecoration._mask");
  var C928;
  var C927;
  editable_text.TextEditingController = class TextEditingController extends change_notifier.ValueNotifier$(text_input.TextEditingValue) {
    get text() {
      return this.value.text;
    }
    set text(newText) {
      this.value = this.value.copyWith({text: newText, selection: C925 || CT.C925, composing: ui.TextRange.empty});
    }
    buildTextSpan(opts) {
      let style = opts && 'style' in opts ? opts.style : null;
      let withComposing = opts && 'withComposing' in opts ? opts.withComposing : null;
      if (!dart.test(this.value.composing.isValid) || !dart.test(withComposing)) {
        return new text_span.TextSpan.new({style: style, text: this.text});
      }
      let composingStyle = style.merge(C927 || CT.C927);
      return new text_span.TextSpan.new({style: style, children: JSArrayOfTextSpan().of([new text_span.TextSpan.new({text: this.value.composing.textBefore(this.value.text)}), new text_span.TextSpan.new({style: composingStyle, text: this.value.composing.textInside(this.value.text)}), new text_span.TextSpan.new({text: this.value.composing.textAfter(this.value.text)})])});
    }
    get selection() {
      return this.value.selection;
    }
    set selection(newSelection) {
      if (dart.notNull(newSelection.start) > this.text.length || dart.notNull(newSelection.end) > this.text.length) dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("invalid text selection: " + dart.str(newSelection))])));
      this.value = this.value.copyWith({selection: newSelection, composing: ui.TextRange.empty});
    }
    clear() {
      this.value = text_input.TextEditingValue.empty;
    }
    clearComposing() {
      this.value = this.value.copyWith({composing: ui.TextRange.empty});
    }
  };
  (editable_text.TextEditingController.new = function(opts) {
    let text = opts && 'text' in opts ? opts.text : null;
    editable_text.TextEditingController.__proto__.new.call(this, text == null ? text_input.TextEditingValue.empty : new text_input.TextEditingValue.new({text: text}));
    ;
  }).prototype = editable_text.TextEditingController.prototype;
  (editable_text.TextEditingController.fromValue = function(value) {
    let t29;
    editable_text.TextEditingController.__proto__.new.call(this, (t29 = value, t29 == null ? text_input.TextEditingValue.empty : t29));
    ;
  }).prototype = editable_text.TextEditingController.prototype;
  dart.addTypeTests(editable_text.TextEditingController);
  dart.setMethodSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getMethods(editable_text.TextEditingController.__proto__),
    buildTextSpan: dart.fnType(text_span.TextSpan, [], {style: text_style.TextStyle, withComposing: core.bool}, {}),
    clear: dart.fnType(dart.void, []),
    clearComposing: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getGetters(editable_text.TextEditingController.__proto__),
    text: core.String,
    selection: text_editing.TextSelection
  }));
  dart.setSetterSignature(editable_text.TextEditingController, () => ({
    __proto__: dart.getSetters(editable_text.TextEditingController.__proto__),
    text: core.String,
    selection: text_editing.TextSelection
  }));
  dart.setLibraryUri(editable_text.TextEditingController, "package:flutter/src/widgets/editable_text.dart");
  var copy$ = dart.privateName(editable_text, "ToolbarOptions.copy");
  var cut$ = dart.privateName(editable_text, "ToolbarOptions.cut");
  var paste$ = dart.privateName(editable_text, "ToolbarOptions.paste");
  var selectAll$ = dart.privateName(editable_text, "ToolbarOptions.selectAll");
  editable_text.ToolbarOptions = class ToolbarOptions extends core.Object {
    get copy() {
      return this[copy$];
    }
    set copy(value) {
      super.copy = value;
    }
    get cut() {
      return this[cut$];
    }
    set cut(value) {
      super.cut = value;
    }
    get paste() {
      return this[paste$];
    }
    set paste(value) {
      super.paste = value;
    }
    get selectAll() {
      return this[selectAll$];
    }
    set selectAll(value) {
      super.selectAll = value;
    }
  };
  (editable_text.ToolbarOptions.new = function(opts) {
    let copy = opts && 'copy' in opts ? opts.copy : false;
    let cut = opts && 'cut' in opts ? opts.cut : false;
    let paste = opts && 'paste' in opts ? opts.paste : false;
    let selectAll = opts && 'selectAll' in opts ? opts.selectAll : false;
    this[copy$] = copy;
    this[cut$] = cut;
    this[paste$] = paste;
    this[selectAll$] = selectAll;
    if (!(copy != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 243, 15, "copy != null");
    if (!(cut != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 244, 15, "cut != null");
    if (!(paste != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 245, 15, "paste != null");
    if (!(selectAll != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 246, 15, "selectAll != null");
    ;
  }).prototype = editable_text.ToolbarOptions.prototype;
  dart.addTypeTests(editable_text.ToolbarOptions);
  dart.setLibraryUri(editable_text.ToolbarOptions, "package:flutter/src/widgets/editable_text.dart");
  dart.setFieldSignature(editable_text.ToolbarOptions, () => ({
    __proto__: dart.getFields(editable_text.ToolbarOptions.__proto__),
    copy: dart.finalFieldType(core.bool),
    cut: dart.finalFieldType(core.bool),
    paste: dart.finalFieldType(core.bool),
    selectAll: dart.finalFieldType(core.bool)
  }));
  var _name$25 = dart.privateName(text_input, "_name");
  var C929;
  var C930;
  var C931;
  var C932;
  var C933;
  var _strutStyle = dart.privateName(editable_text, "_strutStyle");
  var C934;
  var controller$0 = dart.privateName(editable_text, "EditableText.controller");
  var focusNode$1 = dart.privateName(editable_text, "EditableText.focusNode");
  var obscureText$ = dart.privateName(editable_text, "EditableText.obscureText");
  var textWidthBasis$2 = dart.privateName(editable_text, "EditableText.textWidthBasis");
  var readOnly$ = dart.privateName(editable_text, "EditableText.readOnly");
  var forceLine$ = dart.privateName(editable_text, "EditableText.forceLine");
  var toolbarOptions$ = dart.privateName(editable_text, "EditableText.toolbarOptions");
  var showSelectionHandles$ = dart.privateName(editable_text, "EditableText.showSelectionHandles");
  var showCursor$ = dart.privateName(editable_text, "EditableText.showCursor");
  var autocorrect$ = dart.privateName(editable_text, "EditableText.autocorrect");
  var smartDashesType$ = dart.privateName(editable_text, "EditableText.smartDashesType");
  var smartQuotesType$ = dart.privateName(editable_text, "EditableText.smartQuotesType");
  var enableSuggestions$ = dart.privateName(editable_text, "EditableText.enableSuggestions");
  var style$1 = dart.privateName(editable_text, "EditableText.style");
  var textAlign$3 = dart.privateName(editable_text, "EditableText.textAlign");
  var textDirection$10 = dart.privateName(editable_text, "EditableText.textDirection");
  var textCapitalization$ = dart.privateName(editable_text, "EditableText.textCapitalization");
  var locale$4 = dart.privateName(editable_text, "EditableText.locale");
  var textScaleFactor$2 = dart.privateName(editable_text, "EditableText.textScaleFactor");
  var cursorColor$ = dart.privateName(editable_text, "EditableText.cursorColor");
  var backgroundCursorColor$ = dart.privateName(editable_text, "EditableText.backgroundCursorColor");
  var maxLines$3 = dart.privateName(editable_text, "EditableText.maxLines");
  var minLines$ = dart.privateName(editable_text, "EditableText.minLines");
  var expands$ = dart.privateName(editable_text, "EditableText.expands");
  var autofocus$1 = dart.privateName(editable_text, "EditableText.autofocus");
  var selectionColor$ = dart.privateName(editable_text, "EditableText.selectionColor");
  var selectionControls$ = dart.privateName(editable_text, "EditableText.selectionControls");
  var keyboardType$ = dart.privateName(editable_text, "EditableText.keyboardType");
  var textInputAction$ = dart.privateName(editable_text, "EditableText.textInputAction");
  var onChanged$ = dart.privateName(editable_text, "EditableText.onChanged");
  var onEditingComplete$ = dart.privateName(editable_text, "EditableText.onEditingComplete");
  var onSubmitted$ = dart.privateName(editable_text, "EditableText.onSubmitted");
  var onSelectionChanged$ = dart.privateName(editable_text, "EditableText.onSelectionChanged");
  var onSelectionHandleTapped$ = dart.privateName(editable_text, "EditableText.onSelectionHandleTapped");
  var inputFormatters$ = dart.privateName(editable_text, "EditableText.inputFormatters");
  var rendererIgnoresPointer$ = dart.privateName(editable_text, "EditableText.rendererIgnoresPointer");
  var cursorWidth$ = dart.privateName(editable_text, "EditableText.cursorWidth");
  var cursorRadius$ = dart.privateName(editable_text, "EditableText.cursorRadius");
  var cursorOpacityAnimates$ = dart.privateName(editable_text, "EditableText.cursorOpacityAnimates");
  var cursorOffset$ = dart.privateName(editable_text, "EditableText.cursorOffset");
  var paintCursorAboveText$ = dart.privateName(editable_text, "EditableText.paintCursorAboveText");
  var selectionHeightStyle$ = dart.privateName(editable_text, "EditableText.selectionHeightStyle");
  var selectionWidthStyle$ = dart.privateName(editable_text, "EditableText.selectionWidthStyle");
  var keyboardAppearance$ = dart.privateName(editable_text, "EditableText.keyboardAppearance");
  var scrollPadding$ = dart.privateName(editable_text, "EditableText.scrollPadding");
  var enableInteractiveSelection$ = dart.privateName(editable_text, "EditableText.enableInteractiveSelection");
  var dragStartBehavior$1 = dart.privateName(editable_text, "EditableText.dragStartBehavior");
  var scrollController$ = dart.privateName(editable_text, "EditableText.scrollController");
  var scrollPhysics$ = dart.privateName(editable_text, "EditableText.scrollPhysics");
  editable_text.EditableText = class EditableText extends framework.StatefulWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get focusNode() {
      return this[focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$2];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get readOnly() {
      return this[readOnly$];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    get forceLine() {
      return this[forceLine$];
    }
    set forceLine(value) {
      super.forceLine = value;
    }
    get toolbarOptions() {
      return this[toolbarOptions$];
    }
    set toolbarOptions(value) {
      super.toolbarOptions = value;
    }
    get showSelectionHandles() {
      return this[showSelectionHandles$];
    }
    set showSelectionHandles(value) {
      super.showSelectionHandles = value;
    }
    get showCursor() {
      return this[showCursor$];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get autocorrect() {
      return this[autocorrect$];
    }
    set autocorrect(value) {
      super.autocorrect = value;
    }
    get smartDashesType() {
      return this[smartDashesType$];
    }
    set smartDashesType(value) {
      super.smartDashesType = value;
    }
    get smartQuotesType() {
      return this[smartQuotesType$];
    }
    set smartQuotesType(value) {
      super.smartQuotesType = value;
    }
    get enableSuggestions() {
      return this[enableSuggestions$];
    }
    set enableSuggestions(value) {
      super.enableSuggestions = value;
    }
    get style() {
      return this[style$1];
    }
    set style(value) {
      super.style = value;
    }
    get textAlign() {
      return this[textAlign$3];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$10];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textCapitalization() {
      return this[textCapitalization$];
    }
    set textCapitalization(value) {
      super.textCapitalization = value;
    }
    get locale() {
      return this[locale$4];
    }
    set locale(value) {
      super.locale = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$2];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get cursorColor() {
      return this[cursorColor$];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get backgroundCursorColor() {
      return this[backgroundCursorColor$];
    }
    set backgroundCursorColor(value) {
      super.backgroundCursorColor = value;
    }
    get maxLines() {
      return this[maxLines$3];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get minLines() {
      return this[minLines$];
    }
    set minLines(value) {
      super.minLines = value;
    }
    get expands() {
      return this[expands$];
    }
    set expands(value) {
      super.expands = value;
    }
    get autofocus() {
      return this[autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get selectionColor() {
      return this[selectionColor$];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get selectionControls() {
      return this[selectionControls$];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get keyboardType() {
      return this[keyboardType$];
    }
    set keyboardType(value) {
      super.keyboardType = value;
    }
    get textInputAction() {
      return this[textInputAction$];
    }
    set textInputAction(value) {
      super.textInputAction = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onEditingComplete() {
      return this[onEditingComplete$];
    }
    set onEditingComplete(value) {
      super.onEditingComplete = value;
    }
    get onSubmitted() {
      return this[onSubmitted$];
    }
    set onSubmitted(value) {
      super.onSubmitted = value;
    }
    get onSelectionChanged() {
      return this[onSelectionChanged$];
    }
    set onSelectionChanged(value) {
      super.onSelectionChanged = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get inputFormatters() {
      return this[inputFormatters$];
    }
    set inputFormatters(value) {
      super.inputFormatters = value;
    }
    get rendererIgnoresPointer() {
      return this[rendererIgnoresPointer$];
    }
    set rendererIgnoresPointer(value) {
      super.rendererIgnoresPointer = value;
    }
    get cursorWidth() {
      return this[cursorWidth$];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorRadius() {
      return this[cursorRadius$];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorOpacityAnimates() {
      return this[cursorOpacityAnimates$];
    }
    set cursorOpacityAnimates(value) {
      super.cursorOpacityAnimates = value;
    }
    get cursorOffset() {
      return this[cursorOffset$];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get paintCursorAboveText() {
      return this[paintCursorAboveText$];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionHeightStyle() {
      return this[selectionHeightStyle$];
    }
    set selectionHeightStyle(value) {
      super.selectionHeightStyle = value;
    }
    get selectionWidthStyle() {
      return this[selectionWidthStyle$];
    }
    set selectionWidthStyle(value) {
      super.selectionWidthStyle = value;
    }
    get keyboardAppearance() {
      return this[keyboardAppearance$];
    }
    set keyboardAppearance(value) {
      super.keyboardAppearance = value;
    }
    get scrollPadding() {
      return this[scrollPadding$];
    }
    set scrollPadding(value) {
      super.scrollPadding = value;
    }
    get enableInteractiveSelection() {
      return this[enableInteractiveSelection$];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrollController() {
      return this[scrollController$];
    }
    set scrollController(value) {
      super.scrollController = value;
    }
    get scrollPhysics() {
      return this[scrollPhysics$];
    }
    set scrollPhysics(value) {
      super.scrollPhysics = value;
    }
    get strutStyle() {
      if (this[_strutStyle] == null) {
        return this.style != null ? new strut_style.StrutStyle.fromTextStyle(this.style, {forceStrutHeight: true}) : strut_style.StrutStyle.disabled;
      }
      return this[_strutStyle].inheritFromTextStyle(this.style);
    }
    get selectionEnabled() {
      return this.enableInteractiveSelection;
    }
    createState() {
      return new editable_text.EditableTextState.new();
    }
    debugFillProperties(properties) {
      let t31;
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfTextEditingController()).new("controller", this.controller));
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode));
      properties.add(new (DiagnosticsPropertyOfbool()).new("obscureText", this.obscureText, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("autocorrect", this.autocorrect, {defaultValue: true}));
      properties.add(new (EnumPropertyOfSmartDashesType()).new("smartDashesType", this.smartDashesType, {defaultValue: dart.test(this.obscureText) ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled}));
      properties.add(new (EnumPropertyOfSmartQuotesType()).new("smartQuotesType", this.smartQuotesType, {defaultValue: dart.test(this.obscureText) ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("enableSuggestions", this.enableSuggestions, {defaultValue: true}));
      t31 = this.style;
      t31 == null ? null : t31.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new (EnumPropertyOfTextDirection()).new("textDirection", this.textDirection, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfLocale()).new("locale", this.locale, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("textScaleFactor", this.textScaleFactor, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: 1}));
      properties.add(new diagnostics$.IntProperty.new("minLines", this.minLines, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfbool()).new("autofocus", this.autofocus, {defaultValue: false}));
      properties.add(new (DiagnosticsPropertyOfTextInputType()).new("keyboardType", this.keyboardType, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfScrollController()).new("scrollController", this.scrollController, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("scrollPhysics", this.scrollPhysics, {defaultValue: null}));
    }
  };
  (editable_text.EditableText.new = function(opts) {
    let t29, t29$, t29$0, t30, t31;
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : false;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : false;
    let autocorrect = opts && 'autocorrect' in opts ? opts.autocorrect : true;
    let smartDashesType = opts && 'smartDashesType' in opts ? opts.smartDashesType : null;
    let smartQuotesType = opts && 'smartQuotesType' in opts ? opts.smartQuotesType : null;
    let enableSuggestions = opts && 'enableSuggestions' in opts ? opts.enableSuggestions : true;
    let style = opts && 'style' in opts ? opts.style : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let backgroundCursorColor = opts && 'backgroundCursorColor' in opts ? opts.backgroundCursorColor : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : C163 || CT.C163;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : 1;
    let minLines = opts && 'minLines' in opts ? opts.minLines : null;
    let expands = opts && 'expands' in opts ? opts.expands : false;
    let forceLine = opts && 'forceLine' in opts ? opts.forceLine : true;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : C165 || CT.C165;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : null;
    let showSelectionHandles = opts && 'showSelectionHandles' in opts ? opts.showSelectionHandles : false;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
    let textInputAction = opts && 'textInputAction' in opts ? opts.textInputAction : null;
    let textCapitalization = opts && 'textCapitalization' in opts ? opts.textCapitalization : C929 || CT.C929;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onEditingComplete = opts && 'onEditingComplete' in opts ? opts.onEditingComplete : null;
    let onSubmitted = opts && 'onSubmitted' in opts ? opts.onSubmitted : null;
    let onSelectionChanged = opts && 'onSelectionChanged' in opts ? opts.onSelectionChanged : null;
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let inputFormatters = opts && 'inputFormatters' in opts ? opts.inputFormatters : null;
    let rendererIgnoresPointer = opts && 'rendererIgnoresPointer' in opts ? opts.rendererIgnoresPointer : false;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : 2;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorOpacityAnimates = opts && 'cursorOpacityAnimates' in opts ? opts.cursorOpacityAnimates : false;
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : false;
    let selectionHeightStyle = opts && 'selectionHeightStyle' in opts ? opts.selectionHeightStyle : C930 || CT.C930;
    let selectionWidthStyle = opts && 'selectionWidthStyle' in opts ? opts.selectionWidthStyle : C931 || CT.C931;
    let scrollPadding = opts && 'scrollPadding' in opts ? opts.scrollPadding : C932 || CT.C932;
    let keyboardAppearance = opts && 'keyboardAppearance' in opts ? opts.keyboardAppearance : C289 || CT.C289;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    let scrollController = opts && 'scrollController' in opts ? opts.scrollController : null;
    let scrollPhysics = opts && 'scrollPhysics' in opts ? opts.scrollPhysics : null;
    let toolbarOptions = opts && 'toolbarOptions' in opts ? opts.toolbarOptions : C933 || CT.C933;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = controller;
    this[focusNode$1] = focusNode;
    this[readOnly$] = readOnly;
    this[obscureText$] = obscureText;
    this[autocorrect$] = autocorrect;
    this[enableSuggestions$] = enableSuggestions;
    this[style$1] = style;
    this[cursorColor$] = cursorColor;
    this[backgroundCursorColor$] = backgroundCursorColor;
    this[textAlign$3] = textAlign;
    this[textDirection$10] = textDirection;
    this[locale$4] = locale;
    this[textScaleFactor$2] = textScaleFactor;
    this[maxLines$3] = maxLines;
    this[minLines$] = minLines;
    this[expands$] = expands;
    this[forceLine$] = forceLine;
    this[textWidthBasis$2] = textWidthBasis;
    this[autofocus$1] = autofocus;
    this[showSelectionHandles$] = showSelectionHandles;
    this[selectionColor$] = selectionColor;
    this[selectionControls$] = selectionControls;
    this[textInputAction$] = textInputAction;
    this[textCapitalization$] = textCapitalization;
    this[onChanged$] = onChanged;
    this[onEditingComplete$] = onEditingComplete;
    this[onSubmitted$] = onSubmitted;
    this[onSelectionChanged$] = onSelectionChanged;
    this[onSelectionHandleTapped$] = onSelectionHandleTapped;
    this[rendererIgnoresPointer$] = rendererIgnoresPointer;
    this[cursorWidth$] = cursorWidth;
    this[cursorRadius$] = cursorRadius;
    this[cursorOpacityAnimates$] = cursorOpacityAnimates;
    this[cursorOffset$] = cursorOffset;
    this[paintCursorAboveText$] = paintCursorAboveText;
    this[selectionHeightStyle$] = selectionHeightStyle;
    this[selectionWidthStyle$] = selectionWidthStyle;
    this[scrollPadding$] = scrollPadding;
    this[keyboardAppearance$] = keyboardAppearance;
    this[dragStartBehavior$1] = dragStartBehavior;
    this[enableInteractiveSelection$] = enableInteractiveSelection;
    this[scrollController$] = scrollController;
    this[scrollPhysics$] = scrollPhysics;
    this[toolbarOptions$] = toolbarOptions;
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 406, 15, "controller != null");
    if (!(focusNode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 407, 15, "focusNode != null");
    if (!(obscureText != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 408, 15, "obscureText != null");
    if (!(autocorrect != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 409, 15, "autocorrect != null");
    this[smartDashesType$] = (t29 = smartDashesType, t29 == null ? dart.test(obscureText) ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled : t29);
    this[smartQuotesType$] = (t29$ = smartQuotesType, t29$ == null ? dart.test(obscureText) ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled : t29$);
    if (!(enableSuggestions != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 412, 15, "enableSuggestions != null");
    if (!(showSelectionHandles != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 413, 15, "showSelectionHandles != null");
    if (!(enableInteractiveSelection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 414, 15, "enableInteractiveSelection != null");
    if (!(readOnly != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 415, 15, "readOnly != null");
    if (!(forceLine != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 416, 15, "forceLine != null");
    if (!(style != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 417, 15, "style != null");
    if (!(cursorColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 418, 15, "cursorColor != null");
    if (!(cursorOpacityAnimates != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 419, 15, "cursorOpacityAnimates != null");
    if (!(paintCursorAboveText != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 420, 15, "paintCursorAboveText != null");
    if (!(backgroundCursorColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 421, 15, "backgroundCursorColor != null");
    if (!(selectionHeightStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 422, 15, "selectionHeightStyle != null");
    if (!(selectionWidthStyle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 423, 15, "selectionWidthStyle != null");
    if (!(textAlign != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 424, 15, "textAlign != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 425, 15, "maxLines == null || maxLines > 0");
    if (!(minLines == null || dart.notNull(minLines) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 426, 15, "minLines == null || minLines > 0");
    if (!(maxLines == null || minLines == null || dart.notNull(maxLines) >= dart.notNull(minLines))) dart.assertFailed("minLines can't be greater than maxLines", "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 428, 10, "(maxLines == null) || (minLines == null) || (maxLines >= minLines)");
    if (!(expands != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 431, 15, "expands != null");
    if (!(!dart.test(expands) || maxLines == null && minLines == null)) dart.assertFailed("minLines and maxLines must be null when expands is true.", "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 433, 10, "!expands || (maxLines == null && minLines == null)");
    if (!(!dart.test(obscureText) || maxLines === 1)) dart.assertFailed("Obscured fields cannot be multiline.", "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 436, 15, "!obscureText || maxLines == 1");
    if (!(autofocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 437, 15, "autofocus != null");
    if (!(rendererIgnoresPointer != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 438, 15, "rendererIgnoresPointer != null");
    if (!(scrollPadding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 439, 15, "scrollPadding != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 440, 15, "dragStartBehavior != null");
    if (!(toolbarOptions != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 441, 15, "toolbarOptions != null");
    this[_strutStyle] = strutStyle;
    this[keyboardType$] = (t29$0 = keyboardType, t29$0 == null ? maxLines === 1 ? text_input.TextInputType.text : text_input.TextInputType.multiline : t29$0);
    this[inputFormatters$] = maxLines === 1 ? (() => {
      let t29 = JSArrayOfTextInputFormatter().of([]);
      t29[$add](text_formatter.BlacklistingTextInputFormatter.singleLineFormatter);
      for (let t30$ of (t30 = inputFormatters, t30 == null ? C934 || CT.C934 : t30))
        t29[$add](t30$);
      return t29;
    })() : inputFormatters;
    this[showCursor$] = (t31 = showCursor, t31 == null ? !dart.test(readOnly) : t31);
    editable_text.EditableText.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = editable_text.EditableText.prototype;
  dart.addTypeTests(editable_text.EditableText);
  dart.setMethodSignature(editable_text.EditableText, () => ({
    __proto__: dart.getMethods(editable_text.EditableText.__proto__),
    createState: dart.fnType(editable_text.EditableTextState, [])
  }));
  dart.setGetterSignature(editable_text.EditableText, () => ({
    __proto__: dart.getGetters(editable_text.EditableText.__proto__),
    strutStyle: strut_style.StrutStyle,
    selectionEnabled: core.bool
  }));
  dart.setLibraryUri(editable_text.EditableText, "package:flutter/src/widgets/editable_text.dart");
  dart.setFieldSignature(editable_text.EditableText, () => ({
    __proto__: dart.getFields(editable_text.EditableText.__proto__),
    controller: dart.finalFieldType(editable_text.TextEditingController),
    focusNode: dart.finalFieldType(focus_manager.FocusNode),
    obscureText: dart.finalFieldType(core.bool),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    readOnly: dart.finalFieldType(core.bool),
    forceLine: dart.finalFieldType(core.bool),
    toolbarOptions: dart.finalFieldType(editable_text.ToolbarOptions),
    showSelectionHandles: dart.finalFieldType(core.bool),
    showCursor: dart.finalFieldType(core.bool),
    autocorrect: dart.finalFieldType(core.bool),
    smartDashesType: dart.finalFieldType(text_input.SmartDashesType),
    smartQuotesType: dart.finalFieldType(text_input.SmartQuotesType),
    enableSuggestions: dart.finalFieldType(core.bool),
    style: dart.finalFieldType(text_style.TextStyle),
    [_strutStyle]: dart.finalFieldType(strut_style.StrutStyle),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(ui.TextDirection),
    textCapitalization: dart.finalFieldType(text_input.TextCapitalization),
    locale: dart.finalFieldType(ui.Locale),
    textScaleFactor: dart.finalFieldType(core.double),
    cursorColor: dart.finalFieldType(ui.Color),
    backgroundCursorColor: dart.finalFieldType(ui.Color),
    maxLines: dart.finalFieldType(core.int),
    minLines: dart.finalFieldType(core.int),
    expands: dart.finalFieldType(core.bool),
    autofocus: dart.finalFieldType(core.bool),
    selectionColor: dart.finalFieldType(ui.Color),
    selectionControls: dart.finalFieldType(text_selection.TextSelectionControls),
    keyboardType: dart.finalFieldType(text_input.TextInputType),
    textInputAction: dart.finalFieldType(text_input.TextInputAction),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, [core.String])),
    onEditingComplete: dart.finalFieldType(dart.fnType(dart.void, [])),
    onSubmitted: dart.finalFieldType(dart.fnType(dart.void, [core.String])),
    onSelectionChanged: dart.finalFieldType(dart.fnType(dart.void, [text_editing.TextSelection, editable.SelectionChangedCause])),
    onSelectionHandleTapped: dart.finalFieldType(dart.fnType(dart.void, [])),
    inputFormatters: dart.finalFieldType(core.List$(text_formatter.TextInputFormatter)),
    rendererIgnoresPointer: dart.finalFieldType(core.bool),
    cursorWidth: dart.finalFieldType(core.double),
    cursorRadius: dart.finalFieldType(ui.Radius),
    cursorOpacityAnimates: dart.finalFieldType(core.bool),
    cursorOffset: dart.finalFieldType(ui.Offset),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionHeightStyle: dart.finalFieldType(ui.BoxHeightStyle),
    selectionWidthStyle: dart.finalFieldType(ui.BoxWidthStyle),
    keyboardAppearance: dart.finalFieldType(ui.Brightness),
    scrollPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    scrollController: dart.finalFieldType(scroll_controller.ScrollController),
    scrollPhysics: dart.finalFieldType(scroll_physics.ScrollPhysics)
  }));
  dart.defineLazy(editable_text.EditableText, {
    /*editable_text.EditableText.debugDeterministicCursor*/get debugDeterministicCursor() {
      return false;
    },
    set debugDeterministicCursor(_) {}
  });
  var _cursorTimer = dart.privateName(editable_text, "_cursorTimer");
  var _targetCursorVisibility = dart.privateName(editable_text, "_targetCursorVisibility");
  var _cursorVisibilityNotifier = dart.privateName(editable_text, "_cursorVisibilityNotifier");
  var _editableKey = dart.privateName(editable_text, "_editableKey");
  var _textInputConnection = dart.privateName(editable_text, "_textInputConnection");
  var _selectionOverlay = dart.privateName(editable_text, "_selectionOverlay");
  var _scrollController = dart.privateName(editable_text, "_scrollController");
  var _cursorBlinkOpacityController = dart.privateName(editable_text, "_cursorBlinkOpacityController");
  var _toolbarLayerLink = dart.privateName(editable_text, "_toolbarLayerLink");
  var _startHandleLayerLink = dart.privateName(editable_text, "_startHandleLayerLink");
  var _endHandleLayerLink = dart.privateName(editable_text, "_endHandleLayerLink");
  var _didAutoFocus = dart.privateName(editable_text, "_didAutoFocus");
  var _focusAttachment$ = dart.privateName(editable_text, "_focusAttachment");
  var _floatingCursorResetController = dart.privateName(editable_text, "_floatingCursorResetController");
  var _lastKnownRemoteTextEditingValue = dart.privateName(editable_text, "_lastKnownRemoteTextEditingValue");
  var _startCaretRect = dart.privateName(editable_text, "_startCaretRect");
  var _lastTextPosition = dart.privateName(editable_text, "_lastTextPosition");
  var _pointOffsetOrigin = dart.privateName(editable_text, "_pointOffsetOrigin");
  var _lastBoundedOffset = dart.privateName(editable_text, "_lastBoundedOffset");
  var _textChangedSinceLastCaretUpdate = dart.privateName(editable_text, "_textChangedSinceLastCaretUpdate");
  var _currentCaretRect = dart.privateName(editable_text, "_currentCaretRect");
  var _showCaretOnScreenScheduled = dart.privateName(editable_text, "_showCaretOnScreenScheduled");
  var _lastBottomViewInset = dart.privateName(editable_text, "_lastBottomViewInset");
  var _obscureShowCharTicksPending = dart.privateName(editable_text, "_obscureShowCharTicksPending");
  var _obscureLatestCharIndex = dart.privateName(editable_text, "_obscureLatestCharIndex");
  var _cursorColor = dart.privateName(editable_text, "_cursorColor");
  var _didChangeTextEditingValue = dart.privateName(editable_text, "_didChangeTextEditingValue");
  var _handleFocusChanged$ = dart.privateName(editable_text, "_handleFocusChanged");
  var _onCursorColorTick = dart.privateName(editable_text, "_onCursorColorTick");
  var _onFloatingCursorResetTick = dart.privateName(editable_text, "_onFloatingCursorResetTick");
  var _updateRemoteEditingValueIfNeeded = dart.privateName(editable_text, "_updateRemoteEditingValueIfNeeded");
  var _value = dart.privateName(editable_text, "_value");
  var _closeInputConnectionIfNeeded = dart.privateName(editable_text, "_closeInputConnectionIfNeeded");
  var _hasFocus = dart.privateName(editable_text, "_hasFocus");
  var _openInputConnection = dart.privateName(editable_text, "_openInputConnection");
  var _textDirection$0 = dart.privateName(editable_text, "_textDirection");
  var _hasInputConnection = dart.privateName(editable_text, "_hasInputConnection");
  var _stopCursorTimer = dart.privateName(editable_text, "_stopCursorTimer");
  var _showCaretOnScreen = dart.privateName(editable_text, "_showCaretOnScreen");
  var _formatAndSetValue = dart.privateName(editable_text, "_formatAndSetValue");
  var _startCursorTimer = dart.privateName(editable_text, "_startCursorTimer");
  var _isMultiline = dart.privateName(editable_text, "_isMultiline");
  var _finalizeEditing = dart.privateName(editable_text, "_finalizeEditing");
  var C935;
  var C936;
  var C937;
  var C938;
  var C939;
  var _floatingCursorOffset = dart.privateName(editable_text, "_floatingCursorOffset");
  var C940;
  var C941;
  var C942;
  var _handleSelectionChanged = dart.privateName(editable_text, "_handleSelectionChanged");
  var _getScrollOffsetForCaret = dart.privateName(editable_text, "_getScrollOffsetForCaret");
  var _getCaretRectAtScrollOffset = dart.privateName(editable_text, "_getCaretRectAtScrollOffset");
  var _updateSizeAndTransform = dart.privateName(editable_text, "_updateSizeAndTransform");
  var _openOrCloseInputConnectionIfNeeded = dart.privateName(editable_text, "_openOrCloseInputConnectionIfNeeded");
  var _updateOrDisposeSelectionOverlayIfNeeded = dart.privateName(editable_text, "_updateOrDisposeSelectionOverlayIfNeeded");
  var _handleCaretChanged = dart.privateName(editable_text, "_handleCaretChanged");
  var _cursorTick = dart.privateName(editable_text, "_cursorTick");
  var _cursorWaitForStart = dart.privateName(editable_text, "_cursorWaitForStart");
  var _startOrStopCursorTimerIfNeeded = dart.privateName(editable_text, "_startOrStopCursorTimerIfNeeded");
  var _devicePixelRatio = dart.privateName(editable_text, "_devicePixelRatio");
  var _semanticsOnCopy = dart.privateName(editable_text, "_semanticsOnCopy");
  var _semanticsOnCut = dart.privateName(editable_text, "_semanticsOnCut");
  var _semanticsOnPaste = dart.privateName(editable_text, "_semanticsOnPaste");
  var C945;
  var C946;
  var C947;
  var C948;
  var C949;
  var C950;
  var C951;
  var C952;
  var C953;
  var C954;
  var C955;
  var C956;
  var C957;
  var C958;
  var C959;
  var C960;
  var C961;
  var C962;
  var C963;
  var C964;
  var C965;
  var C966;
  var C967;
  var C968;
  var C969;
  var C970;
  var C971;
  var C972;
  var C973;
  var C974;
  var C975;
  var C976;
  var C977;
  var C978;
  var C979;
  var C980;
  var C981;
  var C982;
  var C983;
  var C944;
  var C943;
  var C986;
  var C987;
  var C988;
  var C989;
  var C985;
  var C984;
  var C992;
  var C993;
  var C991;
  var C990;
  var C996;
  var C997;
  var C998;
  var C999;
  var C1000;
  var C1001;
  var C995;
  var C994;
  var _keepAliveHandle = dart.privateName(automatic_keep_alive, "_keepAliveHandle");
  var _ensureKeepAlive = dart.privateName(automatic_keep_alive, "_ensureKeepAlive");
  var _releaseKeepAlive = dart.privateName(automatic_keep_alive, "_releaseKeepAlive");
  const _is_AutomaticKeepAliveClientMixin_default = Symbol('_is_AutomaticKeepAliveClientMixin_default');
  automatic_keep_alive.AutomaticKeepAliveClientMixin$ = dart.generic(T => {
    class AutomaticKeepAliveClientMixin extends framework.State$(T) {}
    AutomaticKeepAliveClientMixin[dart.mixinOn] = State => class AutomaticKeepAliveClientMixin extends State {
      [_ensureKeepAlive]() {
        if (!(this[_keepAliveHandle] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 349, 12, "_keepAliveHandle == null");
        this[_keepAliveHandle] = new automatic_keep_alive.KeepAliveHandle.new();
        new automatic_keep_alive.KeepAliveNotification.new(this[_keepAliveHandle]).dispatch(this.context);
      }
      [_releaseKeepAlive]() {
        this[_keepAliveHandle].release();
        this[_keepAliveHandle] = null;
      }
      updateKeepAlive() {
        if (dart.test(this.wantKeepAlive)) {
          if (this[_keepAliveHandle] == null) this[_ensureKeepAlive]();
        } else {
          if (this[_keepAliveHandle] != null) this[_releaseKeepAlive]();
        }
      }
      initState() {
        super.initState();
        if (dart.test(this.wantKeepAlive)) this[_ensureKeepAlive]();
      }
      deactivate() {
        if (this[_keepAliveHandle] != null) this[_releaseKeepAlive]();
        super.deactivate();
      }
      build(context) {
        if (dart.test(this.wantKeepAlive) && this[_keepAliveHandle] == null) this[_ensureKeepAlive]();
        return null;
      }
    };
    (AutomaticKeepAliveClientMixin[dart.mixinNew] = function() {
      this[_keepAliveHandle] = null;
    }).prototype = AutomaticKeepAliveClientMixin.prototype;
    dart.addTypeTests(AutomaticKeepAliveClientMixin);
    AutomaticKeepAliveClientMixin.prototype[_is_AutomaticKeepAliveClientMixin_default] = true;
    AutomaticKeepAliveClientMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(AutomaticKeepAliveClientMixin, () => ({
      __proto__: dart.getMethods(AutomaticKeepAliveClientMixin.__proto__),
      [_ensureKeepAlive]: dart.fnType(dart.void, []),
      [_releaseKeepAlive]: dart.fnType(dart.void, []),
      updateKeepAlive: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(AutomaticKeepAliveClientMixin, "package:flutter/src/widgets/automatic_keep_alive.dart");
    dart.setFieldSignature(AutomaticKeepAliveClientMixin, () => ({
      __proto__: dart.getFields(AutomaticKeepAliveClientMixin.__proto__),
      [_keepAliveHandle]: dart.fieldType(automatic_keep_alive.KeepAliveHandle)
    }));
    return AutomaticKeepAliveClientMixin;
  });
  automatic_keep_alive.AutomaticKeepAliveClientMixin = automatic_keep_alive.AutomaticKeepAliveClientMixin$();
  dart.addTypeTests(automatic_keep_alive.AutomaticKeepAliveClientMixin, _is_AutomaticKeepAliveClientMixin_default);
  var C1002;
  var C1003;
  var C1004;
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(editable_text.EditableText) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(editable_text.EditableText)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(editable_text.EditableText));
  const State_WidgetsBindingObserver$36$3 = class State_WidgetsBindingObserver extends State_AutomaticKeepAliveClientMixin$36 {};
  (State_WidgetsBindingObserver$36$3.new = function() {
    State_WidgetsBindingObserver$36$3.__proto__.new.call(this);
  }).prototype = State_WidgetsBindingObserver$36$3.prototype;
  dart.applyMixin(State_WidgetsBindingObserver$36$3, binding$5.WidgetsBindingObserver);
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends State_WidgetsBindingObserver$36$3 {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(editable_text.EditableText)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(editable_text.EditableText));
  editable_text.EditableTextState = class EditableTextState extends State_TickerProviderStateMixin$36$2 {
    get wantKeepAlive() {
      return this.widget.focusNode.hasFocus;
    }
    get [_cursorColor]() {
      return this.widget.cursorColor.withOpacity(this[_cursorBlinkOpacityController].value);
    }
    get cutEnabled() {
      return dart.test(this.widget.toolbarOptions.cut) && !dart.test(this.widget.readOnly);
    }
    get copyEnabled() {
      return this.widget.toolbarOptions.copy;
    }
    get pasteEnabled() {
      return dart.test(this.widget.toolbarOptions.paste) && !dart.test(this.widget.readOnly);
    }
    get selectAllEnabled() {
      return this.widget.toolbarOptions.selectAll;
    }
    initState() {
      let t31;
      super.initState();
      this.widget.controller.addListener(dart.bind(this, _didChangeTextEditingValue));
      this[_focusAttachment$] = this.widget.focusNode.attach(this.context);
      this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged$));
      this[_scrollController] = (t31 = this.widget.scrollController, t31 == null ? new scroll_controller.ScrollController.new() : t31);
      this[_scrollController].addListener(dart.fn(() => {
        let t31;
        t31 = this[_selectionOverlay];
        t31 == null ? null : t31.updateForScroll();
      }, VoidToNull()));
      this[_cursorBlinkOpacityController] = new animation_controller.AnimationController.new({vsync: this, duration: editable_text.EditableTextState._fadeDuration});
      this[_cursorBlinkOpacityController].addListener(dart.bind(this, _onCursorColorTick));
      this[_floatingCursorResetController] = new animation_controller.AnimationController.new({vsync: this});
      this[_floatingCursorResetController].addListener(dart.bind(this, _onFloatingCursorResetTick));
      this[_cursorVisibilityNotifier].value = this.widget.showCursor;
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!dart.test(this[_didAutoFocus]) && dart.test(this.widget.autofocus)) {
        focus_scope.FocusScope.of(this.context).autofocus(this.widget.focusNode);
        this[_didAutoFocus] = true;
      }
    }
    didUpdateWidget(oldWidget) {
      let t31, t31$, t31$0;
      editable_text.EditableText._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        oldWidget.controller.removeListener(dart.bind(this, _didChangeTextEditingValue));
        this.widget.controller.addListener(dart.bind(this, _didChangeTextEditingValue));
        this[_updateRemoteEditingValueIfNeeded]();
      }
      if (!dart.equals(this.widget.controller.selection, oldWidget.controller.selection)) {
        t31 = this[_selectionOverlay];
        t31 == null ? null : t31.update(this[_value]);
      }
      t31$ = this[_selectionOverlay];
      t31$ == null ? null : t31$.handlesVisible = this.widget.showSelectionHandles;
      if (!dart.equals(this.widget.focusNode, oldWidget.focusNode)) {
        oldWidget.focusNode.removeListener(dart.bind(this, _handleFocusChanged$));
        t31$0 = this[_focusAttachment$];
        t31$0 == null ? null : t31$0.detach();
        this[_focusAttachment$] = this.widget.focusNode.attach(this.context);
        this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged$));
        this.updateKeepAlive();
      }
      if (dart.test(this.widget.readOnly)) {
        this[_closeInputConnectionIfNeeded]();
      } else {
        if (dart.test(oldWidget.readOnly) && dart.test(this[_hasFocus])) this[_openInputConnection]();
      }
      if (!dart.equals(this.widget.style, oldWidget.style)) {
        let style = this.widget.style;
        if (this[_textInputConnection] != null && dart.test(this[_textInputConnection].attached)) {
          this[_textInputConnection].setStyle({fontFamily: style.fontFamily, fontSize: style.fontSize, fontWeight: style.fontWeight, textDirection: this[_textDirection$0], textAlign: this.widget.textAlign});
        }
      }
    }
    dispose() {
      let t31;
      this.widget.controller.removeListener(dart.bind(this, _didChangeTextEditingValue));
      this[_cursorBlinkOpacityController].removeListener(dart.bind(this, _onCursorColorTick));
      this[_floatingCursorResetController].removeListener(dart.bind(this, _onFloatingCursorResetTick));
      this[_closeInputConnectionIfNeeded]();
      if (!!dart.test(this[_hasInputConnection])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1209, 12, "!_hasInputConnection");
      this[_stopCursorTimer]();
      if (!(this[_cursorTimer] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1211, 12, "_cursorTimer == null");
      t31 = this[_selectionOverlay];
      t31 == null ? null : t31.dispose();
      this[_selectionOverlay] = null;
      this[_focusAttachment$].detach();
      this.widget.focusNode.removeListener(dart.bind(this, _handleFocusChanged$));
      super.dispose();
    }
    get currentTextEditingValue() {
      return this[_value];
    }
    updateEditingValue(value) {
      if (dart.test(this.widget.readOnly)) {
        return;
      }
      if (value.text != this[_value].text) {
        this.hideToolbar();
        this[_showCaretOnScreen]();
        if (dart.test(this.widget.obscureText) && value.text.length === this[_value].text.length + 1) {
          this[_obscureShowCharTicksPending] = 3;
          this[_obscureLatestCharIndex] = this[_value].selection.baseOffset;
        }
      }
      this[_lastKnownRemoteTextEditingValue] = value;
      this[_formatAndSetValue](value);
      this[_stopCursorTimer]({resetCharTicks: false});
      this[_startCursorTimer]();
    }
    performAction(action) {
      switch (action) {
        case C935 || CT.C935:
        {
          if (!dart.test(this[_isMultiline])) this[_finalizeEditing](true);
          break;
        }
        case C936 || CT.C936:
        case C937 || CT.C937:
        case C938 || CT.C938:
        case C939 || CT.C939:
        {
          this[_finalizeEditing](true);
          break;
        }
        default:
        {
          this[_finalizeEditing](false);
          break;
        }
      }
    }
    get [_floatingCursorOffset]() {
      return new ui.Offset.new(0.0, dart.notNull(this.renderEditable.preferredLineHeight) / 2);
    }
    updateFloatingCursor(point) {
      switch (point.state) {
        case C940 || CT.C940:
        {
          if (dart.test(this[_floatingCursorResetController].isAnimating)) {
            this[_floatingCursorResetController].stop();
            this[_onFloatingCursorResetTick]();
          }
          let currentTextPosition = new ui.TextPosition.new({offset: this.renderEditable.selection.baseOffset});
          this[_startCaretRect] = this.renderEditable.getLocalRectForCaret(currentTextPosition);
          this.renderEditable.setFloatingCursor(point.state, this[_startCaretRect].center['-'](this[_floatingCursorOffset]), currentTextPosition);
          break;
        }
        case C941 || CT.C941:
        {
          if (this[_pointOffsetOrigin] != null) {
            let centeredPoint = point.offset['-'](this[_pointOffsetOrigin]);
            let rawCursorOffset = this[_startCaretRect].center['+'](centeredPoint)['-'](this[_floatingCursorOffset]);
            this[_lastBoundedOffset] = this.renderEditable.calculateBoundedFloatingCursorOffset(rawCursorOffset);
            this[_lastTextPosition] = this.renderEditable.getPositionForPoint(this.renderEditable.localToGlobal(this[_lastBoundedOffset]['+'](this[_floatingCursorOffset])));
            this.renderEditable.setFloatingCursor(point.state, this[_lastBoundedOffset], this[_lastTextPosition]);
          } else {
            this[_pointOffsetOrigin] = point.offset;
          }
          break;
        }
        case C942 || CT.C942:
        {
          if (this[_lastTextPosition] != null && this[_lastBoundedOffset] != null) {
            this[_floatingCursorResetController].value = 0.0;
            this[_floatingCursorResetController].animateTo(1.0, {duration: editable_text.EditableTextState._floatingCursorResetTime, curve: curves.Curves.decelerate});
          }
          break;
        }
      }
    }
    [_onFloatingCursorResetTick]() {
      let finalPosition = this.renderEditable.getLocalRectForCaret(this[_lastTextPosition]).centerLeft['-'](this[_floatingCursorOffset]);
      if (dart.test(this[_floatingCursorResetController].isCompleted)) {
        this.renderEditable.setFloatingCursor(text_input.FloatingCursorDragState.End, finalPosition, this[_lastTextPosition]);
        if (this[_lastTextPosition].offset != this.renderEditable.selection.baseOffset) this[_handleSelectionChanged](new text_editing.TextSelection.collapsed({offset: this[_lastTextPosition].offset}), this.renderEditable, editable.SelectionChangedCause.forcePress);
        this[_startCaretRect] = null;
        this[_lastTextPosition] = null;
        this[_pointOffsetOrigin] = null;
        this[_lastBoundedOffset] = null;
      } else {
        let lerpValue = this[_floatingCursorResetController].value;
        let lerpX = ui.lerpDouble(this[_lastBoundedOffset].dx, finalPosition.dx, lerpValue);
        let lerpY = ui.lerpDouble(this[_lastBoundedOffset].dy, finalPosition.dy, lerpValue);
        this.renderEditable.setFloatingCursor(text_input.FloatingCursorDragState.Update, new ui.Offset.new(lerpX, lerpY), this[_lastTextPosition], {resetLerpValue: lerpValue});
      }
    }
    [_finalizeEditing](shouldUnfocus) {
      if (this.widget.onEditingComplete != null) {
        this.widget.onEditingComplete();
      } else {
        this.widget.controller.clearComposing();
        if (dart.test(shouldUnfocus)) this.widget.focusNode.unfocus();
      }
      if (this.widget.onSubmitted != null) this.widget.onSubmitted(this[_value].text);
    }
    [_updateRemoteEditingValueIfNeeded]() {
      if (!dart.test(this[_hasInputConnection])) return;
      let localValue = this[_value];
      if (dart.equals(localValue, this[_lastKnownRemoteTextEditingValue])) return;
      this[_lastKnownRemoteTextEditingValue] = localValue;
      this[_textInputConnection].setEditingState(localValue);
    }
    get [_value]() {
      return this.widget.controller.value;
    }
    set [_value](value) {
      this.widget.controller.value = value;
    }
    get [_hasFocus]() {
      return this.widget.focusNode.hasFocus;
    }
    get [_isMultiline]() {
      return this.widget.maxLines !== 1;
    }
    [_getScrollOffsetForCaret](caretRect) {
      let caretStart = null;
      let caretEnd = null;
      if (dart.test(this[_isMultiline])) {
        let lineHeight = this.renderEditable.preferredLineHeight;
        let caretOffset = (dart.notNull(lineHeight) - dart.notNull(caretRect.height)) / 2;
        caretStart = dart.notNull(caretRect.top) - caretOffset;
        caretEnd = dart.notNull(caretRect.bottom) + caretOffset;
      } else {
        caretStart = caretRect.left;
        caretEnd = caretRect.right;
      }
      let scrollOffset = this[_scrollController].offset;
      let viewportExtent = this[_scrollController].position.viewportDimension;
      if (dart.notNull(caretStart) < 0.0) {
        scrollOffset = dart.notNull(scrollOffset) + dart.notNull(caretStart);
      } else if (dart.notNull(caretEnd) >= dart.notNull(viewportExtent)) {
        scrollOffset = dart.notNull(scrollOffset) + (dart.notNull(caretEnd) - dart.notNull(viewportExtent));
      }
      if (dart.test(this[_isMultiline])) {
        scrollOffset = scrollOffset[$clamp](0.0, this.renderEditable.maxScrollExtent);
      }
      return scrollOffset;
    }
    [_getCaretRectAtScrollOffset](caretRect, scrollOffset) {
      let offsetDiff = dart.notNull(this[_scrollController].offset) - dart.notNull(scrollOffset);
      return dart.test(this[_isMultiline]) ? caretRect.translate(0.0, offsetDiff) : caretRect.translate(offsetDiff, 0.0);
    }
    get [_hasInputConnection]() {
      return this[_textInputConnection] != null && dart.test(this[_textInputConnection].attached);
    }
    [_openInputConnection]() {
      let t31, t31$, t31$0, t31$1;
      if (dart.test(this.widget.readOnly)) {
        return;
      }
      if (!dart.test(this[_hasInputConnection])) {
        let localValue = this[_value];
        this[_lastKnownRemoteTextEditingValue] = localValue;
        this[_textInputConnection] = text_input.TextInput.attach(this, new text_input.TextInputConfiguration.new({inputType: this.widget.keyboardType, obscureText: this.widget.obscureText, autocorrect: this.widget.autocorrect, smartDashesType: (t31 = this.widget.smartDashesType, t31 == null ? dart.test(this.widget.obscureText) ? text_input.SmartDashesType.disabled : text_input.SmartDashesType.enabled : t31), smartQuotesType: (t31$ = this.widget.smartQuotesType, t31$ == null ? dart.test(this.widget.obscureText) ? text_input.SmartQuotesType.disabled : text_input.SmartQuotesType.enabled : t31$), enableSuggestions: this.widget.enableSuggestions, inputAction: (t31$0 = this.widget.textInputAction, t31$0 == null ? dart.equals(this.widget.keyboardType, text_input.TextInputType.multiline) ? text_input.TextInputAction.newline : text_input.TextInputAction.done : t31$0), textCapitalization: this.widget.textCapitalization, keyboardAppearance: this.widget.keyboardAppearance}));
        this[_textInputConnection].show();
        this[_updateSizeAndTransform]();
        let style = this.widget.style;
        t31$1 = this[_textInputConnection];
        t31$1.setStyle({fontFamily: style.fontFamily, fontSize: style.fontSize, fontWeight: style.fontWeight, textDirection: this[_textDirection$0], textAlign: this.widget.textAlign});
        t31$1.setEditingState(localValue);
        t31$1;
      } else {
        this[_textInputConnection].show();
      }
    }
    [_closeInputConnectionIfNeeded]() {
      if (dart.test(this[_hasInputConnection])) {
        this[_textInputConnection].close();
        this[_textInputConnection] = null;
        this[_lastKnownRemoteTextEditingValue] = null;
      }
    }
    [_openOrCloseInputConnectionIfNeeded]() {
      if (dart.test(this[_hasFocus]) && dart.test(this.widget.focusNode.consumeKeyboardToken())) {
        this[_openInputConnection]();
      } else if (!dart.test(this[_hasFocus])) {
        this[_closeInputConnectionIfNeeded]();
        this.widget.controller.clearComposing();
      }
    }
    connectionClosed() {
      if (dart.test(this[_hasInputConnection])) {
        this[_textInputConnection].connectionClosedReceived();
        this[_textInputConnection] = null;
        this[_lastKnownRemoteTextEditingValue] = null;
        this[_finalizeEditing](true);
      }
    }
    requestKeyboard() {
      if (dart.test(this[_hasFocus])) {
        this[_openInputConnection]();
      } else {
        this.widget.focusNode.requestFocus();
      }
    }
    [_updateOrDisposeSelectionOverlayIfNeeded]() {
      if (this[_selectionOverlay] != null) {
        if (dart.test(this[_hasFocus])) {
          this[_selectionOverlay].update(this[_value]);
        } else {
          this[_selectionOverlay].dispose();
          this[_selectionOverlay] = null;
        }
      }
    }
    [_handleSelectionChanged](selection, renderObject, cause) {
      let t31;
      this.widget.controller.selection = selection;
      this.requestKeyboard();
      t31 = this[_selectionOverlay];
      t31 == null ? null : t31.hide();
      this[_selectionOverlay] = null;
      if (this.widget.selectionControls != null) {
        this[_selectionOverlay] = new text_selection.TextSelectionOverlay.new({context: this.context, value: this[_value], debugRequiredFor: this.widget, toolbarLayerLink: this[_toolbarLayerLink], startHandleLayerLink: this[_startHandleLayerLink], endHandleLayerLink: this[_endHandleLayerLink], renderObject: renderObject, selectionControls: this.widget.selectionControls, selectionDelegate: this, dragStartBehavior: this.widget.dragStartBehavior, onSelectionHandleTapped: this.widget.onSelectionHandleTapped});
        this[_selectionOverlay].handlesVisible = this.widget.showSelectionHandles;
        this[_selectionOverlay].showHandles();
        if (this.widget.onSelectionChanged != null) this.widget.onSelectionChanged(selection, cause);
      }
    }
    [_handleCaretChanged](caretRect) {
      this[_currentCaretRect] = caretRect;
      if (dart.test(this[_textChangedSinceLastCaretUpdate])) {
        this[_textChangedSinceLastCaretUpdate] = false;
        this[_showCaretOnScreen]();
      }
    }
    [_showCaretOnScreen]() {
      if (dart.test(this[_showCaretOnScreenScheduled])) {
        return;
      }
      this[_showCaretOnScreenScheduled] = true;
      binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(_ => {
        let t31;
        this[_showCaretOnScreenScheduled] = false;
        if (this[_currentCaretRect] == null || !dart.test(this[_scrollController].hasClients)) {
          return;
        }
        let scrollOffsetForCaret = this[_getScrollOffsetForCaret](this[_currentCaretRect]);
        this[_scrollController].animateTo(scrollOffsetForCaret, {duration: editable_text.EditableTextState._caretAnimationDuration, curve: editable_text.EditableTextState._caretAnimationCurve});
        let newCaretRect = this[_getCaretRectAtScrollOffset](this[_currentCaretRect], scrollOffsetForCaret);
        let bottomSpacing = this.widget.scrollPadding.bottom;
        if ((t31 = this[_selectionOverlay], t31 == null ? null : t31.selectionControls) != null) {
          let handleHeight = this[_selectionOverlay].selectionControls.getHandleSize(this.renderEditable.preferredLineHeight).height;
          let interactiveHandleHeight = math.max(core.double, handleHeight, 48);
          let anchor = this[_selectionOverlay].selectionControls.getHandleAnchor(text_selection.TextSelectionHandleType.collapsed, this.renderEditable.preferredLineHeight);
          let handleCenter = dart.notNull(handleHeight) / 2 - dart.notNull(anchor.dy);
          bottomSpacing = math.max(core.double, handleCenter + interactiveHandleHeight / 2, bottomSpacing);
        }
        let inflatedRect = new ui.Rect.fromLTRB(dart.notNull(newCaretRect.left) - dart.notNull(this.widget.scrollPadding.left), dart.notNull(newCaretRect.top) - dart.notNull(this.widget.scrollPadding.top), dart.notNull(newCaretRect.right) + dart.notNull(this.widget.scrollPadding.right), dart.notNull(newCaretRect.bottom) + dart.notNull(bottomSpacing));
        this[_editableKey].currentContext.findRenderObject().showOnScreen({rect: inflatedRect, duration: editable_text.EditableTextState._caretAnimationDuration, curve: editable_text.EditableTextState._caretAnimationCurve});
      }, DurationToNull()));
    }
    didChangeMetrics() {
      if (dart.notNull(this[_lastBottomViewInset]) < dart.notNull(binding$5.WidgetsBinding.instance.window.viewInsets.bottom)) {
        this[_showCaretOnScreen]();
      }
      this[_lastBottomViewInset] = binding$5.WidgetsBinding.instance.window.viewInsets.bottom;
    }
    [_formatAndSetValue](value) {
      let t31, t31$;
      let textChanged = (t31 = this[_value], t31 == null ? null : t31.text) != (t31$ = value, t31$ == null ? null : t31$.text);
      if (textChanged && this.widget.inputFormatters != null && dart.test(this.widget.inputFormatters[$isNotEmpty])) {
        for (let formatter of this.widget.inputFormatters)
          value = formatter.formatEditUpdate(this[_value], value);
        this[_value] = value;
        this[_updateRemoteEditingValueIfNeeded]();
      } else {
        this[_value] = value;
      }
      if (textChanged && this.widget.onChanged != null) this.widget.onChanged(value.text);
    }
    [_onCursorColorTick]() {
      this.renderEditable.cursorColor = this.widget.cursorColor.withOpacity(this[_cursorBlinkOpacityController].value);
      this[_cursorVisibilityNotifier].value = dart.test(this.widget.showCursor) && dart.notNull(this[_cursorBlinkOpacityController].value) > 0;
    }
    get cursorCurrentlyVisible() {
      return dart.notNull(this[_cursorBlinkOpacityController].value) > 0;
    }
    get cursorBlinkInterval() {
      return editable_text._kCursorBlinkHalfPeriod;
    }
    get selectionOverlay() {
      return this[_selectionOverlay];
    }
    [_cursorTick](timer) {
      this[_targetCursorVisibility] = !dart.test(this[_targetCursorVisibility]);
      let targetOpacity = dart.test(this[_targetCursorVisibility]) ? 1.0 : 0.0;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorBlinkOpacityController].animateTo(targetOpacity, {curve: curves.Curves.easeOut});
      } else {
        this[_cursorBlinkOpacityController].value = targetOpacity;
      }
      if (dart.notNull(this[_obscureShowCharTicksPending]) > 0) {
        this.setState(dart.fn(() => {
          this[_obscureShowCharTicksPending] = dart.notNull(this[_obscureShowCharTicksPending]) - 1;
        }, VoidToNull()));
      }
    }
    [_cursorWaitForStart](timer) {
      let t31;
      if (!dart.test(editable_text._kCursorBlinkHalfPeriod['>'](editable_text.EditableTextState._fadeDuration))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1693, 12, "_kCursorBlinkHalfPeriod > _fadeDuration");
      t31 = this[_cursorTimer];
      t31 == null ? null : t31.cancel();
      this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkHalfPeriod, dart.bind(this, _cursorTick));
    }
    [_startCursorTimer]() {
      this[_targetCursorVisibility] = true;
      this[_cursorBlinkOpacityController].value = 1.0;
      if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkWaitForStart, dart.bind(this, _cursorWaitForStart));
      } else {
        this[_cursorTimer] = async.Timer.periodic(editable_text._kCursorBlinkHalfPeriod, dart.bind(this, _cursorTick));
      }
    }
    [_stopCursorTimer](opts) {
      let t31;
      let resetCharTicks = opts && 'resetCharTicks' in opts ? opts.resetCharTicks : true;
      t31 = this[_cursorTimer];
      t31 == null ? null : t31.cancel();
      this[_cursorTimer] = null;
      this[_targetCursorVisibility] = false;
      this[_cursorBlinkOpacityController].value = 0.0;
      if (dart.test(editable_text.EditableText.debugDeterministicCursor)) return;
      if (dart.test(resetCharTicks)) this[_obscureShowCharTicksPending] = 0;
      if (dart.test(this.widget.cursorOpacityAnimates)) {
        this[_cursorBlinkOpacityController].stop();
        this[_cursorBlinkOpacityController].value = 0.0;
      }
    }
    [_startOrStopCursorTimerIfNeeded]() {
      if (this[_cursorTimer] == null && dart.test(this[_hasFocus]) && dart.test(this[_value].selection.isCollapsed))
        this[_startCursorTimer]();
      else if (this[_cursorTimer] != null && (!dart.test(this[_hasFocus]) || !dart.test(this[_value].selection.isCollapsed))) this[_stopCursorTimer]();
    }
    [_didChangeTextEditingValue]() {
      this[_updateRemoteEditingValueIfNeeded]();
      this[_startOrStopCursorTimerIfNeeded]();
      this[_updateOrDisposeSelectionOverlayIfNeeded]();
      this[_textChangedSinceLastCaretUpdate] = true;
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    [_handleFocusChanged$]() {
      this[_openOrCloseInputConnectionIfNeeded]();
      this[_startOrStopCursorTimerIfNeeded]();
      this[_updateOrDisposeSelectionOverlayIfNeeded]();
      if (dart.test(this[_hasFocus])) {
        binding$5.WidgetsBinding.instance.addObserver(this);
        this[_lastBottomViewInset] = binding$5.WidgetsBinding.instance.window.viewInsets.bottom;
        this[_showCaretOnScreen]();
        if (!dart.test(this[_value].selection.isValid)) {
          this[_handleSelectionChanged](new text_editing.TextSelection.collapsed({offset: this[_value].text.length}), this.renderEditable, null);
        }
      } else {
        binding$5.WidgetsBinding.instance.removeObserver(this);
        this[_value] = new text_input.TextEditingValue.new({text: this[_value].text});
      }
      this.updateKeepAlive();
    }
    [_updateSizeAndTransform]() {
      if (dart.test(this[_hasInputConnection])) {
        let size = this.renderEditable.size;
        let transform = this.renderEditable.getTransformTo(null);
        this[_textInputConnection].setEditableSizeAndTransform(size, transform);
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(_ => this[_updateSizeAndTransform](), DurationTovoid()));
      }
    }
    get [_textDirection$0]() {
      let t31;
      let result = (t31 = this.widget.textDirection, t31 == null ? basic.Directionality.of(this.context) : t31);
      if (!(result != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " created without a textDirection and with no ambient Directionality.", "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1775, 12, "result != null");
      return result;
    }
    get renderEditable() {
      return editable.RenderEditable.as(this[_editableKey].currentContext.findRenderObject());
    }
    get textEditingValue() {
      return this[_value];
    }
    get [_devicePixelRatio]() {
      let t31;
      t31 = media_query.MediaQuery.of(this.context).devicePixelRatio;
      return t31 == null ? 1.0 : t31;
    }
    set textEditingValue(value) {
      let t31;
      t31 = this[_selectionOverlay];
      t31 == null ? null : t31.update(value);
      this[_formatAndSetValue](value);
    }
    bringIntoView(position) {
      this[_scrollController].jumpTo(this[_getScrollOffsetForCaret](this.renderEditable.getLocalRectForCaret(position)));
    }
    showToolbar() {
      if (true) {
        return false;
      }
      if (this[_selectionOverlay] == null || dart.test(this[_selectionOverlay].toolbarIsVisible)) {
        return false;
      }
      this[_selectionOverlay].showToolbar();
      return true;
    }
    hideToolbar() {
      let t31;
      t31 = this[_selectionOverlay];
      t31 == null ? null : t31.hide();
    }
    toggleToolbar() {
      if (!(this[_selectionOverlay] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1829, 12, "_selectionOverlay != null");
      if (dart.test(this[_selectionOverlay].toolbarIsVisible)) {
        this.hideToolbar();
      } else {
        this.showToolbar();
      }
    }
    [_semanticsOnCopy](controls) {
      let t31;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.copyEnabled) && dart.test(this[_hasFocus]) && dart.equals((t31 = controls, t31 == null ? null : t31.canCopy(this)), true) ? dart.fn(() => controls.handleCopy(this), VoidTovoid()) : null;
    }
    [_semanticsOnCut](controls) {
      let t31;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.cutEnabled) && dart.test(this[_hasFocus]) && dart.equals((t31 = controls, t31 == null ? null : t31.canCut(this)), true) ? dart.fn(() => controls.handleCut(this), VoidTovoid()) : null;
    }
    [_semanticsOnPaste](controls) {
      let t31;
      return dart.test(this.widget.selectionEnabled) && dart.test(this.pasteEnabled) && dart.test(this[_hasFocus]) && dart.equals((t31 = controls, t31 == null ? null : t31.canPaste(this)), true) ? dart.fn(() => controls.handlePaste(this), VoidToFutureOfvoid()) : null;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMediaQuery(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1857, 12, "debugCheckHasMediaQuery(context)");
      this[_focusAttachment$].reparent();
      super.build(context);
      let controls = this.widget.selectionControls;
      return new scrollable$.Scrollable.new({excludeFromSemantics: true, axisDirection: dart.test(this[_isMultiline]) ? basic_types$.AxisDirection.down : basic_types$.AxisDirection.right, controller: this[_scrollController], physics: this.widget.scrollPhysics, dragStartBehavior: this.widget.dragStartBehavior, viewportBuilder: dart.fn((context, offset) => {
          let t31;
          return new basic.CompositedTransformTarget.new({link: this[_toolbarLayerLink], child: new basic.Semantics.new({onCopy: this[_semanticsOnCopy](controls), onCut: this[_semanticsOnCut](controls), onPaste: this[_semanticsOnPaste](controls), child: new editable_text._Editable.new({key: this[_editableKey], startHandleLayerLink: this[_startHandleLayerLink], endHandleLayerLink: this[_endHandleLayerLink], textSpan: this.buildTextSpan(), value: this[_value], cursorColor: this[_cursorColor], backgroundCursorColor: this.widget.backgroundCursorColor, showCursor: dart.test(editable_text.EditableText.debugDeterministicCursor) ? new (ValueNotifierOfbool()).new(this.widget.showCursor) : this[_cursorVisibilityNotifier], forceLine: this.widget.forceLine, readOnly: this.widget.readOnly, hasFocus: this[_hasFocus], maxLines: this.widget.maxLines, minLines: this.widget.minLines, expands: this.widget.expands, strutStyle: this.widget.strutStyle, selectionColor: this.widget.selectionColor, textScaleFactor: (t31 = this.widget.textScaleFactor, t31 == null ? media_query.MediaQuery.textScaleFactorOf(context) : t31), textAlign: this.widget.textAlign, textDirection: this[_textDirection$0], locale: this.widget.locale, textWidthBasis: this.widget.textWidthBasis, obscureText: this.widget.obscureText, autocorrect: this.widget.autocorrect, smartDashesType: this.widget.smartDashesType, smartQuotesType: this.widget.smartQuotesType, enableSuggestions: this.widget.enableSuggestions, offset: offset, onSelectionChanged: dart.bind(this, _handleSelectionChanged), onCaretChanged: dart.bind(this, _handleCaretChanged), rendererIgnoresPointer: this.widget.rendererIgnoresPointer, cursorWidth: this.widget.cursorWidth, cursorRadius: this.widget.cursorRadius, cursorOffset: this.widget.cursorOffset, selectionHeightStyle: this.widget.selectionHeightStyle, selectionWidthStyle: this.widget.selectionWidthStyle, paintCursorAboveText: this.widget.paintCursorAboveText, enableInteractiveSelection: this.widget.enableInteractiveSelection, textSelectionDelegate: this, devicePixelRatio: this[_devicePixelRatio], $creationLocationd_0dea112b090073317d4: C943 || CT.C943}), $creationLocationd_0dea112b090073317d4: C984 || CT.C984}), $creationLocationd_0dea112b090073317d4: C990 || CT.C990});
        }, BuildContextAndViewportOffsetToCompositedTransformTarget()), $creationLocationd_0dea112b090073317d4: C994 || CT.C994});
    }
    buildTextSpan() {
      if (dart.test(this.widget.obscureText)) {
        let text = this[_value].text;
        text = "•"[$times](text.length);
        let o = dart.notNull(this[_obscureShowCharTicksPending]) > 0 ? this[_obscureLatestCharIndex] : null;
        if (o != null && dart.notNull(o) >= 0 && dart.notNull(o) < text.length) text = text[$replaceRange](o, dart.notNull(o) + 1, this[_value].text[$substring](o, dart.notNull(o) + 1));
        return new text_span.TextSpan.new({style: this.widget.style, text: text});
      }
      return this.widget.controller.buildTextSpan({style: this.widget.style, withComposing: !dart.test(this.widget.readOnly)});
    }
  };
  (editable_text.EditableTextState.new = function() {
    this[_cursorTimer] = null;
    this[_targetCursorVisibility] = false;
    this[_cursorVisibilityNotifier] = new (ValueNotifierOfbool()).new(true);
    this[_editableKey] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_textInputConnection] = null;
    this[_selectionOverlay] = null;
    this[_scrollController] = null;
    this[_cursorBlinkOpacityController] = null;
    this[_toolbarLayerLink] = new layer.LayerLink.new();
    this[_startHandleLayerLink] = new layer.LayerLink.new();
    this[_endHandleLayerLink] = new layer.LayerLink.new();
    this[_didAutoFocus] = false;
    this[_focusAttachment$] = null;
    this[_floatingCursorResetController] = null;
    this[_lastKnownRemoteTextEditingValue] = null;
    this[_startCaretRect] = null;
    this[_lastTextPosition] = null;
    this[_pointOffsetOrigin] = null;
    this[_lastBoundedOffset] = null;
    this[_textChangedSinceLastCaretUpdate] = false;
    this[_currentCaretRect] = null;
    this[_showCaretOnScreenScheduled] = false;
    this[_lastBottomViewInset] = null;
    this[_obscureShowCharTicksPending] = 0;
    this[_obscureLatestCharIndex] = null;
    editable_text.EditableTextState.__proto__.new.call(this);
    ;
  }).prototype = editable_text.EditableTextState.prototype;
  dart.addTypeTests(editable_text.EditableTextState);
  editable_text.EditableTextState[dart.implements] = () => [text_input.TextInputClient, text_input.TextSelectionDelegate];
  dart.setMethodSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getMethods(editable_text.EditableTextState.__proto__),
    updateEditingValue: dart.fnType(dart.void, [text_input.TextEditingValue]),
    performAction: dart.fnType(dart.void, [text_input.TextInputAction]),
    updateFloatingCursor: dart.fnType(dart.void, [text_input.RawFloatingCursorPoint]),
    [_onFloatingCursorResetTick]: dart.fnType(dart.void, []),
    [_finalizeEditing]: dart.fnType(dart.void, [core.bool]),
    [_updateRemoteEditingValueIfNeeded]: dart.fnType(dart.void, []),
    [_getScrollOffsetForCaret]: dart.fnType(core.double, [ui.Rect]),
    [_getCaretRectAtScrollOffset]: dart.fnType(ui.Rect, [ui.Rect, core.double]),
    [_openInputConnection]: dart.fnType(dart.void, []),
    [_closeInputConnectionIfNeeded]: dart.fnType(dart.void, []),
    [_openOrCloseInputConnectionIfNeeded]: dart.fnType(dart.void, []),
    connectionClosed: dart.fnType(dart.void, []),
    requestKeyboard: dart.fnType(dart.void, []),
    [_updateOrDisposeSelectionOverlayIfNeeded]: dart.fnType(dart.void, []),
    [_handleSelectionChanged]: dart.fnType(dart.void, [text_editing.TextSelection, editable.RenderEditable, editable.SelectionChangedCause]),
    [_handleCaretChanged]: dart.fnType(dart.void, [ui.Rect]),
    [_showCaretOnScreen]: dart.fnType(dart.void, []),
    [_formatAndSetValue]: dart.fnType(dart.void, [text_input.TextEditingValue]),
    [_onCursorColorTick]: dart.fnType(dart.void, []),
    [_cursorTick]: dart.fnType(dart.void, [async.Timer]),
    [_cursorWaitForStart]: dart.fnType(dart.void, [async.Timer]),
    [_startCursorTimer]: dart.fnType(dart.void, []),
    [_stopCursorTimer]: dart.fnType(dart.void, [], {resetCharTicks: core.bool}, {}),
    [_startOrStopCursorTimerIfNeeded]: dart.fnType(dart.void, []),
    [_didChangeTextEditingValue]: dart.fnType(dart.void, []),
    [_handleFocusChanged$]: dart.fnType(dart.void, []),
    [_updateSizeAndTransform]: dart.fnType(dart.void, []),
    bringIntoView: dart.fnType(dart.void, [ui.TextPosition]),
    showToolbar: dart.fnType(core.bool, []),
    hideToolbar: dart.fnType(dart.void, []),
    toggleToolbar: dart.fnType(dart.void, []),
    [_semanticsOnCopy]: dart.fnType(dart.fnType(dart.void, []), [text_selection.TextSelectionControls]),
    [_semanticsOnCut]: dart.fnType(dart.fnType(dart.void, []), [text_selection.TextSelectionControls]),
    [_semanticsOnPaste]: dart.fnType(dart.fnType(dart.void, []), [text_selection.TextSelectionControls]),
    buildTextSpan: dart.fnType(text_span.TextSpan, [])
  }));
  dart.setGetterSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getGetters(editable_text.EditableTextState.__proto__),
    wantKeepAlive: core.bool,
    [_cursorColor]: ui.Color,
    cutEnabled: core.bool,
    copyEnabled: core.bool,
    pasteEnabled: core.bool,
    selectAllEnabled: core.bool,
    currentTextEditingValue: text_input.TextEditingValue,
    [_floatingCursorOffset]: ui.Offset,
    [_value]: text_input.TextEditingValue,
    [_hasFocus]: core.bool,
    [_isMultiline]: core.bool,
    [_hasInputConnection]: core.bool,
    cursorCurrentlyVisible: core.bool,
    cursorBlinkInterval: core.Duration,
    selectionOverlay: text_selection.TextSelectionOverlay,
    [_textDirection$0]: ui.TextDirection,
    renderEditable: editable.RenderEditable,
    textEditingValue: text_input.TextEditingValue,
    [_devicePixelRatio]: core.double
  }));
  dart.setSetterSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getSetters(editable_text.EditableTextState.__proto__),
    [_value]: text_input.TextEditingValue,
    textEditingValue: text_input.TextEditingValue
  }));
  dart.setLibraryUri(editable_text.EditableTextState, "package:flutter/src/widgets/editable_text.dart");
  dart.setFieldSignature(editable_text.EditableTextState, () => ({
    __proto__: dart.getFields(editable_text.EditableTextState.__proto__),
    [_cursorTimer]: dart.fieldType(async.Timer),
    [_targetCursorVisibility]: dart.fieldType(core.bool),
    [_cursorVisibilityNotifier]: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    [_editableKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_textInputConnection]: dart.fieldType(text_input.TextInputConnection),
    [_selectionOverlay]: dart.fieldType(text_selection.TextSelectionOverlay),
    [_scrollController]: dart.fieldType(scroll_controller.ScrollController),
    [_cursorBlinkOpacityController]: dart.fieldType(animation_controller.AnimationController),
    [_toolbarLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_startHandleLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_endHandleLayerLink]: dart.finalFieldType(layer.LayerLink),
    [_didAutoFocus]: dart.fieldType(core.bool),
    [_focusAttachment$]: dart.fieldType(focus_manager.FocusAttachment),
    [_floatingCursorResetController]: dart.fieldType(animation_controller.AnimationController),
    [_lastKnownRemoteTextEditingValue]: dart.fieldType(text_input.TextEditingValue),
    [_startCaretRect]: dart.fieldType(ui.Rect),
    [_lastTextPosition]: dart.fieldType(ui.TextPosition),
    [_pointOffsetOrigin]: dart.fieldType(ui.Offset),
    [_lastBoundedOffset]: dart.fieldType(ui.Offset),
    [_textChangedSinceLastCaretUpdate]: dart.fieldType(core.bool),
    [_currentCaretRect]: dart.fieldType(ui.Rect),
    [_showCaretOnScreenScheduled]: dart.fieldType(core.bool),
    [_lastBottomViewInset]: dart.fieldType(core.double),
    [_obscureShowCharTicksPending]: dart.fieldType(core.int),
    [_obscureLatestCharIndex]: dart.fieldType(core.int)
  }));
  dart.defineLazy(editable_text.EditableTextState, {
    /*editable_text.EditableTextState._fadeDuration*/get _fadeDuration() {
      return C1002 || CT.C1002;
    },
    /*editable_text.EditableTextState._floatingCursorResetTime*/get _floatingCursorResetTime() {
      return C1003 || CT.C1003;
    },
    /*editable_text.EditableTextState._caretAnimationDuration*/get _caretAnimationDuration() {
      return C118 || CT.C118;
    },
    /*editable_text.EditableTextState._caretAnimationCurve*/get _caretAnimationCurve() {
      return C1004 || CT.C1004;
    }
  });
  var textSpan$0 = dart.privateName(editable_text, "_Editable.textSpan");
  var value$1 = dart.privateName(editable_text, "_Editable.value");
  var cursorColor$0 = dart.privateName(editable_text, "_Editable.cursorColor");
  var startHandleLayerLink$ = dart.privateName(editable_text, "_Editable.startHandleLayerLink");
  var endHandleLayerLink$ = dart.privateName(editable_text, "_Editable.endHandleLayerLink");
  var backgroundCursorColor$0 = dart.privateName(editable_text, "_Editable.backgroundCursorColor");
  var showCursor$0 = dart.privateName(editable_text, "_Editable.showCursor");
  var forceLine$0 = dart.privateName(editable_text, "_Editable.forceLine");
  var readOnly$0 = dart.privateName(editable_text, "_Editable.readOnly");
  var hasFocus$ = dart.privateName(editable_text, "_Editable.hasFocus");
  var maxLines$4 = dart.privateName(editable_text, "_Editable.maxLines");
  var minLines$0 = dart.privateName(editable_text, "_Editable.minLines");
  var expands$0 = dart.privateName(editable_text, "_Editable.expands");
  var strutStyle$1 = dart.privateName(editable_text, "_Editable.strutStyle");
  var selectionColor$0 = dart.privateName(editable_text, "_Editable.selectionColor");
  var textScaleFactor$3 = dart.privateName(editable_text, "_Editable.textScaleFactor");
  var textAlign$4 = dart.privateName(editable_text, "_Editable.textAlign");
  var textDirection$11 = dart.privateName(editable_text, "_Editable.textDirection");
  var locale$5 = dart.privateName(editable_text, "_Editable.locale");
  var obscureText$0 = dart.privateName(editable_text, "_Editable.obscureText");
  var textWidthBasis$3 = dart.privateName(editable_text, "_Editable.textWidthBasis");
  var autocorrect$0 = dart.privateName(editable_text, "_Editable.autocorrect");
  var smartDashesType$0 = dart.privateName(editable_text, "_Editable.smartDashesType");
  var smartQuotesType$0 = dart.privateName(editable_text, "_Editable.smartQuotesType");
  var enableSuggestions$0 = dart.privateName(editable_text, "_Editable.enableSuggestions");
  var offset$2 = dart.privateName(editable_text, "_Editable.offset");
  var onSelectionChanged$0 = dart.privateName(editable_text, "_Editable.onSelectionChanged");
  var onCaretChanged$ = dart.privateName(editable_text, "_Editable.onCaretChanged");
  var rendererIgnoresPointer$0 = dart.privateName(editable_text, "_Editable.rendererIgnoresPointer");
  var cursorWidth$0 = dart.privateName(editable_text, "_Editable.cursorWidth");
  var cursorRadius$0 = dart.privateName(editable_text, "_Editable.cursorRadius");
  var cursorOffset$0 = dart.privateName(editable_text, "_Editable.cursorOffset");
  var paintCursorAboveText$0 = dart.privateName(editable_text, "_Editable.paintCursorAboveText");
  var selectionHeightStyle$0 = dart.privateName(editable_text, "_Editable.selectionHeightStyle");
  var selectionWidthStyle$0 = dart.privateName(editable_text, "_Editable.selectionWidthStyle");
  var enableInteractiveSelection$0 = dart.privateName(editable_text, "_Editable.enableInteractiveSelection");
  var textSelectionDelegate$ = dart.privateName(editable_text, "_Editable.textSelectionDelegate");
  var devicePixelRatio$1 = dart.privateName(editable_text, "_Editable.devicePixelRatio");
  editable_text._Editable = class _Editable extends framework.LeafRenderObjectWidget {
    get textSpan() {
      return this[textSpan$0];
    }
    set textSpan(value) {
      super.textSpan = value;
    }
    get value() {
      return this[value$1];
    }
    set value(value) {
      super.value = value;
    }
    get cursorColor() {
      return this[cursorColor$0];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get backgroundCursorColor() {
      return this[backgroundCursorColor$0];
    }
    set backgroundCursorColor(value) {
      super.backgroundCursorColor = value;
    }
    get showCursor() {
      return this[showCursor$0];
    }
    set showCursor(value) {
      super.showCursor = value;
    }
    get forceLine() {
      return this[forceLine$0];
    }
    set forceLine(value) {
      super.forceLine = value;
    }
    get readOnly() {
      return this[readOnly$0];
    }
    set readOnly(value) {
      super.readOnly = value;
    }
    get hasFocus() {
      return this[hasFocus$];
    }
    set hasFocus(value) {
      super.hasFocus = value;
    }
    get maxLines() {
      return this[maxLines$4];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    get minLines() {
      return this[minLines$0];
    }
    set minLines(value) {
      super.minLines = value;
    }
    get expands() {
      return this[expands$0];
    }
    set expands(value) {
      super.expands = value;
    }
    get strutStyle() {
      return this[strutStyle$1];
    }
    set strutStyle(value) {
      super.strutStyle = value;
    }
    get selectionColor() {
      return this[selectionColor$0];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get textScaleFactor() {
      return this[textScaleFactor$3];
    }
    set textScaleFactor(value) {
      super.textScaleFactor = value;
    }
    get textAlign() {
      return this[textAlign$4];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textDirection() {
      return this[textDirection$11];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$5];
    }
    set locale(value) {
      super.locale = value;
    }
    get obscureText() {
      return this[obscureText$0];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get textWidthBasis() {
      return this[textWidthBasis$3];
    }
    set textWidthBasis(value) {
      super.textWidthBasis = value;
    }
    get autocorrect() {
      return this[autocorrect$0];
    }
    set autocorrect(value) {
      super.autocorrect = value;
    }
    get smartDashesType() {
      return this[smartDashesType$0];
    }
    set smartDashesType(value) {
      super.smartDashesType = value;
    }
    get smartQuotesType() {
      return this[smartQuotesType$0];
    }
    set smartQuotesType(value) {
      super.smartQuotesType = value;
    }
    get enableSuggestions() {
      return this[enableSuggestions$0];
    }
    set enableSuggestions(value) {
      super.enableSuggestions = value;
    }
    get offset() {
      return this[offset$2];
    }
    set offset(value) {
      super.offset = value;
    }
    get onSelectionChanged() {
      return this[onSelectionChanged$0];
    }
    set onSelectionChanged(value) {
      super.onSelectionChanged = value;
    }
    get onCaretChanged() {
      return this[onCaretChanged$];
    }
    set onCaretChanged(value) {
      super.onCaretChanged = value;
    }
    get rendererIgnoresPointer() {
      return this[rendererIgnoresPointer$0];
    }
    set rendererIgnoresPointer(value) {
      super.rendererIgnoresPointer = value;
    }
    get cursorWidth() {
      return this[cursorWidth$0];
    }
    set cursorWidth(value) {
      super.cursorWidth = value;
    }
    get cursorRadius() {
      return this[cursorRadius$0];
    }
    set cursorRadius(value) {
      super.cursorRadius = value;
    }
    get cursorOffset() {
      return this[cursorOffset$0];
    }
    set cursorOffset(value) {
      super.cursorOffset = value;
    }
    get paintCursorAboveText() {
      return this[paintCursorAboveText$0];
    }
    set paintCursorAboveText(value) {
      super.paintCursorAboveText = value;
    }
    get selectionHeightStyle() {
      return this[selectionHeightStyle$0];
    }
    set selectionHeightStyle(value) {
      super.selectionHeightStyle = value;
    }
    get selectionWidthStyle() {
      return this[selectionWidthStyle$0];
    }
    set selectionWidthStyle(value) {
      super.selectionWidthStyle = value;
    }
    get enableInteractiveSelection() {
      return this[enableInteractiveSelection$0];
    }
    set enableInteractiveSelection(value) {
      super.enableInteractiveSelection = value;
    }
    get textSelectionDelegate() {
      return this[textSelectionDelegate$];
    }
    set textSelectionDelegate(value) {
      super.textSelectionDelegate = value;
    }
    get devicePixelRatio() {
      return this[devicePixelRatio$1];
    }
    set devicePixelRatio(value) {
      super.devicePixelRatio = value;
    }
    createRenderObject(context) {
      let t31;
      return new editable.RenderEditable.new({text: this.textSpan, cursorColor: this.cursorColor, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, backgroundCursorColor: this.backgroundCursorColor, showCursor: this.showCursor, forceLine: this.forceLine, readOnly: this.readOnly, hasFocus: this.hasFocus, maxLines: this.maxLines, minLines: this.minLines, expands: this.expands, strutStyle: this.strutStyle, selectionColor: this.selectionColor, textScaleFactor: this.textScaleFactor, textAlign: this.textAlign, textDirection: this.textDirection, locale: (t31 = this.locale, t31 == null ? localizations.Localizations.localeOf(context, {nullOk: true}) : t31), selection: this.value.selection, offset: this.offset, onSelectionChanged: this.onSelectionChanged, onCaretChanged: this.onCaretChanged, ignorePointer: this.rendererIgnoresPointer, obscureText: this.obscureText, textWidthBasis: this.textWidthBasis, cursorWidth: this.cursorWidth, cursorRadius: this.cursorRadius, cursorOffset: this.cursorOffset, paintCursorAboveText: this.paintCursorAboveText, selectionHeightStyle: this.selectionHeightStyle, selectionWidthStyle: this.selectionWidthStyle, enableInteractiveSelection: this.enableInteractiveSelection, textSelectionDelegate: this.textSelectionDelegate, devicePixelRatio: this.devicePixelRatio});
    }
    updateRenderObject(context, renderObject) {
      let t32, t31;
      editable.RenderEditable._check(renderObject);
      t31 = renderObject;
      t31.text = this.textSpan;
      t31.cursorColor = this.cursorColor;
      t31.startHandleLayerLink = this.startHandleLayerLink;
      t31.endHandleLayerLink = this.endHandleLayerLink;
      t31.showCursor = this.showCursor;
      t31.forceLine = this.forceLine;
      t31.readOnly = this.readOnly;
      t31.hasFocus = this.hasFocus;
      t31.maxLines = this.maxLines;
      t31.minLines = this.minLines;
      t31.expands = this.expands;
      t31.strutStyle = this.strutStyle;
      t31.selectionColor = this.selectionColor;
      t31.textScaleFactor = this.textScaleFactor;
      t31.textAlign = this.textAlign;
      t31.textDirection = this.textDirection;
      t31.locale = (t32 = this.locale, t32 == null ? localizations.Localizations.localeOf(context, {nullOk: true}) : t32);
      t31.selection = this.value.selection;
      t31.offset = this.offset;
      t31.onSelectionChanged = this.onSelectionChanged;
      t31.onCaretChanged = this.onCaretChanged;
      t31.ignorePointer = this.rendererIgnoresPointer;
      t31.textWidthBasis = this.textWidthBasis;
      t31.obscureText = this.obscureText;
      t31.cursorWidth = this.cursorWidth;
      t31.cursorRadius = this.cursorRadius;
      t31.cursorOffset = this.cursorOffset;
      t31.selectionHeightStyle = this.selectionHeightStyle;
      t31.selectionWidthStyle = this.selectionWidthStyle;
      t31.textSelectionDelegate = this.textSelectionDelegate;
      t31.devicePixelRatio = this.devicePixelRatio;
      t31.paintCursorAboveText = this.paintCursorAboveText;
      t31;
    }
  };
  (editable_text._Editable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textSpan = opts && 'textSpan' in opts ? opts.textSpan : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let backgroundCursorColor = opts && 'backgroundCursorColor' in opts ? opts.backgroundCursorColor : null;
    let showCursor = opts && 'showCursor' in opts ? opts.showCursor : null;
    let forceLine = opts && 'forceLine' in opts ? opts.forceLine : null;
    let readOnly = opts && 'readOnly' in opts ? opts.readOnly : null;
    let textWidthBasis = opts && 'textWidthBasis' in opts ? opts.textWidthBasis : null;
    let hasFocus = opts && 'hasFocus' in opts ? opts.hasFocus : null;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let minLines = opts && 'minLines' in opts ? opts.minLines : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    let strutStyle = opts && 'strutStyle' in opts ? opts.strutStyle : null;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : null;
    let autocorrect = opts && 'autocorrect' in opts ? opts.autocorrect : null;
    let smartDashesType = opts && 'smartDashesType' in opts ? opts.smartDashesType : null;
    let smartQuotesType = opts && 'smartQuotesType' in opts ? opts.smartQuotesType : null;
    let enableSuggestions = opts && 'enableSuggestions' in opts ? opts.enableSuggestions : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let onSelectionChanged = opts && 'onSelectionChanged' in opts ? opts.onSelectionChanged : null;
    let onCaretChanged = opts && 'onCaretChanged' in opts ? opts.onCaretChanged : null;
    let rendererIgnoresPointer = opts && 'rendererIgnoresPointer' in opts ? opts.rendererIgnoresPointer : false;
    let cursorWidth = opts && 'cursorWidth' in opts ? opts.cursorWidth : null;
    let cursorRadius = opts && 'cursorRadius' in opts ? opts.cursorRadius : null;
    let cursorOffset = opts && 'cursorOffset' in opts ? opts.cursorOffset : null;
    let paintCursorAboveText = opts && 'paintCursorAboveText' in opts ? opts.paintCursorAboveText : null;
    let selectionHeightStyle = opts && 'selectionHeightStyle' in opts ? opts.selectionHeightStyle : C930 || CT.C930;
    let selectionWidthStyle = opts && 'selectionWidthStyle' in opts ? opts.selectionWidthStyle : C931 || CT.C931;
    let enableInteractiveSelection = opts && 'enableInteractiveSelection' in opts ? opts.enableInteractiveSelection : true;
    let textSelectionDelegate = opts && 'textSelectionDelegate' in opts ? opts.textSelectionDelegate : null;
    let devicePixelRatio = opts && 'devicePixelRatio' in opts ? opts.devicePixelRatio : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textSpan$0] = textSpan;
    this[value$1] = value;
    this[startHandleLayerLink$] = startHandleLayerLink;
    this[endHandleLayerLink$] = endHandleLayerLink;
    this[cursorColor$0] = cursorColor;
    this[backgroundCursorColor$0] = backgroundCursorColor;
    this[showCursor$0] = showCursor;
    this[forceLine$0] = forceLine;
    this[readOnly$0] = readOnly;
    this[textWidthBasis$3] = textWidthBasis;
    this[hasFocus$] = hasFocus;
    this[maxLines$4] = maxLines;
    this[minLines$0] = minLines;
    this[expands$0] = expands;
    this[strutStyle$1] = strutStyle;
    this[selectionColor$0] = selectionColor;
    this[textScaleFactor$3] = textScaleFactor;
    this[textAlign$4] = textAlign;
    this[textDirection$11] = textDirection;
    this[locale$5] = locale;
    this[obscureText$0] = obscureText;
    this[autocorrect$0] = autocorrect;
    this[smartDashesType$0] = smartDashesType;
    this[smartQuotesType$0] = smartQuotesType;
    this[enableSuggestions$0] = enableSuggestions;
    this[offset$2] = offset;
    this[onSelectionChanged$0] = onSelectionChanged;
    this[onCaretChanged$] = onCaretChanged;
    this[rendererIgnoresPointer$0] = rendererIgnoresPointer;
    this[cursorWidth$0] = cursorWidth;
    this[cursorRadius$0] = cursorRadius;
    this[cursorOffset$0] = cursorOffset;
    this[paintCursorAboveText$0] = paintCursorAboveText;
    this[selectionHeightStyle$0] = selectionHeightStyle;
    this[selectionWidthStyle$0] = selectionWidthStyle;
    this[enableInteractiveSelection$0] = enableInteractiveSelection;
    this[textSelectionDelegate$] = textSelectionDelegate;
    this[devicePixelRatio$1] = devicePixelRatio;
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1987, 15, "textDirection != null");
    if (!(rendererIgnoresPointer != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/editable_text.dart", 1988, 15, "rendererIgnoresPointer != null");
    editable_text._Editable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = editable_text._Editable.prototype;
  dart.addTypeTests(editable_text._Editable);
  dart.setMethodSignature(editable_text._Editable, () => ({
    __proto__: dart.getMethods(editable_text._Editable.__proto__),
    createRenderObject: dart.fnType(editable.RenderEditable, [framework.BuildContext])
  }));
  dart.setLibraryUri(editable_text._Editable, "package:flutter/src/widgets/editable_text.dart");
  dart.setFieldSignature(editable_text._Editable, () => ({
    __proto__: dart.getFields(editable_text._Editable.__proto__),
    textSpan: dart.finalFieldType(text_span.TextSpan),
    value: dart.finalFieldType(text_input.TextEditingValue),
    cursorColor: dart.finalFieldType(ui.Color),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    backgroundCursorColor: dart.finalFieldType(ui.Color),
    showCursor: dart.finalFieldType(change_notifier.ValueNotifier$(core.bool)),
    forceLine: dart.finalFieldType(core.bool),
    readOnly: dart.finalFieldType(core.bool),
    hasFocus: dart.finalFieldType(core.bool),
    maxLines: dart.finalFieldType(core.int),
    minLines: dart.finalFieldType(core.int),
    expands: dart.finalFieldType(core.bool),
    strutStyle: dart.finalFieldType(strut_style.StrutStyle),
    selectionColor: dart.finalFieldType(ui.Color),
    textScaleFactor: dart.finalFieldType(core.double),
    textAlign: dart.finalFieldType(ui.TextAlign),
    textDirection: dart.finalFieldType(ui.TextDirection),
    locale: dart.finalFieldType(ui.Locale),
    obscureText: dart.finalFieldType(core.bool),
    textWidthBasis: dart.finalFieldType(text_painter.TextWidthBasis),
    autocorrect: dart.finalFieldType(core.bool),
    smartDashesType: dart.finalFieldType(text_input.SmartDashesType),
    smartQuotesType: dart.finalFieldType(text_input.SmartQuotesType),
    enableSuggestions: dart.finalFieldType(core.bool),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    onSelectionChanged: dart.finalFieldType(dart.fnType(dart.void, [text_editing.TextSelection, editable.RenderEditable, editable.SelectionChangedCause])),
    onCaretChanged: dart.finalFieldType(dart.fnType(dart.void, [ui.Rect])),
    rendererIgnoresPointer: dart.finalFieldType(core.bool),
    cursorWidth: dart.finalFieldType(core.double),
    cursorRadius: dart.finalFieldType(ui.Radius),
    cursorOffset: dart.finalFieldType(ui.Offset),
    paintCursorAboveText: dart.finalFieldType(core.bool),
    selectionHeightStyle: dart.finalFieldType(ui.BoxHeightStyle),
    selectionWidthStyle: dart.finalFieldType(ui.BoxWidthStyle),
    enableInteractiveSelection: dart.finalFieldType(core.bool),
    textSelectionDelegate: dart.finalFieldType(text_input.TextSelectionDelegate),
    devicePixelRatio: dart.finalFieldType(core.double)
  }));
  var C1005;
  var C1006;
  dart.defineLazy(editable_text, {
    /*editable_text._kCursorBlinkHalfPeriod*/get _kCursorBlinkHalfPeriod() {
      return C1005 || CT.C1005;
    },
    /*editable_text._kCursorBlinkWaitForStart*/get _kCursorBlinkWaitForStart() {
      return C1006 || CT.C1006;
    },
    /*editable_text._kObscureShowLatestCharCursorTicks*/get _kObscureShowLatestCharCursorTicks() {
      return 3;
    }
  });
  var _name$26 = dart.privateName(text_selection, "_name");
  var C1007;
  var C1008;
  var C1009;
  var C1010;
  text_selection.TextSelectionHandleType = class TextSelectionHandleType extends core.Object {
    toString() {
      return this[_name$26];
    }
  };
  (text_selection.TextSelectionHandleType.new = function(index, _name) {
    this.index = index;
    this[_name$26] = _name;
    ;
  }).prototype = text_selection.TextSelectionHandleType.prototype;
  dart.addTypeTests(text_selection.TextSelectionHandleType);
  dart.setLibraryUri(text_selection.TextSelectionHandleType, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection.TextSelectionHandleType, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionHandleType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$26]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(text_selection.TextSelectionHandleType, ['toString']);
  text_selection.TextSelectionHandleType.left = C1007 || CT.C1007;
  text_selection.TextSelectionHandleType.right = C1008 || CT.C1008;
  text_selection.TextSelectionHandleType.collapsed = C1009 || CT.C1009;
  text_selection.TextSelectionHandleType.values = C1010 || CT.C1010;
  var C1011;
  var C1012;
  var C1013;
  text_selection._TextSelectionHandlePosition = class _TextSelectionHandlePosition extends core.Object {
    toString() {
      return this[_name$26];
    }
  };
  (text_selection._TextSelectionHandlePosition.new = function(index, _name) {
    this.index = index;
    this[_name$26] = _name;
    ;
  }).prototype = text_selection._TextSelectionHandlePosition.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandlePosition);
  dart.setLibraryUri(text_selection._TextSelectionHandlePosition, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection._TextSelectionHandlePosition, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandlePosition.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$26]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(text_selection._TextSelectionHandlePosition, ['toString']);
  text_selection._TextSelectionHandlePosition.start = C1011 || CT.C1011;
  text_selection._TextSelectionHandlePosition.end = C1012 || CT.C1012;
  text_selection._TextSelectionHandlePosition.values = C1013 || CT.C1013;
  text_selection.TextSelectionControls = class TextSelectionControls extends core.Object {
    canCut(delegate) {
      return dart.test(delegate.cutEnabled) && !dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    canCopy(delegate) {
      return dart.test(delegate.copyEnabled) && !dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    canPaste(delegate) {
      return delegate.pasteEnabled;
    }
    canSelectAll(delegate) {
      return dart.test(delegate.selectAllEnabled) && delegate.textEditingValue.text[$isNotEmpty] && dart.test(delegate.textEditingValue.selection.isCollapsed);
    }
    handleCut(delegate) {
      let value = delegate.textEditingValue;
      clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: value.selection.textInside(value.text)}));
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: dart.notNull(value.selection.textBefore(value.text)) + dart.notNull(value.selection.textAfter(value.text)), selection: new text_editing.TextSelection.collapsed({offset: value.selection.start})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
      delegate.hideToolbar();
    }
    handleCopy(delegate) {
      let value = delegate.textEditingValue;
      clipboard.Clipboard.setData(new clipboard.ClipboardData.new({text: value.selection.textInside(value.text)}));
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: value.text, selection: new text_editing.TextSelection.collapsed({offset: value.selection.end})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
      delegate.hideToolbar();
    }
    handlePaste(delegate) {
      return async.async(dart.void, function* handlePaste() {
        let value = delegate.textEditingValue;
        let data = (yield clipboard.Clipboard.getData("text/plain"));
        if (data != null) {
          delegate.textEditingValue = new text_input.TextEditingValue.new({text: dart.notNull(value.selection.textBefore(value.text)) + dart.notNull(data.text) + dart.notNull(value.selection.textAfter(value.text)), selection: new text_editing.TextSelection.collapsed({offset: dart.notNull(value.selection.start) + data.text.length})});
        }
        delegate.bringIntoView(delegate.textEditingValue.selection.extent);
        delegate.hideToolbar();
      });
    }
    handleSelectAll(delegate) {
      delegate.textEditingValue = new text_input.TextEditingValue.new({text: delegate.textEditingValue.text, selection: new text_editing.TextSelection.new({baseOffset: 0, extentOffset: delegate.textEditingValue.text.length})});
      delegate.bringIntoView(delegate.textEditingValue.selection.extent);
    }
  };
  (text_selection.TextSelectionControls.new = function() {
    ;
  }).prototype = text_selection.TextSelectionControls.prototype;
  dart.addTypeTests(text_selection.TextSelectionControls);
  dart.setMethodSignature(text_selection.TextSelectionControls, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionControls.__proto__),
    canCut: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canCopy: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canPaste: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    canSelectAll: dart.fnType(core.bool, [text_input.TextSelectionDelegate]),
    handleCut: dart.fnType(dart.void, [text_input.TextSelectionDelegate]),
    handleCopy: dart.fnType(dart.void, [text_input.TextSelectionDelegate]),
    handlePaste: dart.fnType(async.Future$(dart.void), [text_input.TextSelectionDelegate]),
    handleSelectAll: dart.fnType(dart.void, [text_input.TextSelectionDelegate])
  }));
  dart.setLibraryUri(text_selection.TextSelectionControls, "package:flutter/src/widgets/text_selection.dart");
  var _toolbarController = dart.privateName(text_selection, "_toolbarController");
  var _handles = dart.privateName(text_selection, "_handles");
  var _toolbar = dart.privateName(text_selection, "_toolbar");
  var _handlesVisible = dart.privateName(text_selection, "_handlesVisible");
  var _value$ = dart.privateName(text_selection, "_value");
  var _toolbarOpacity = dart.privateName(text_selection, "_toolbarOpacity");
  var _selection$ = dart.privateName(text_selection, "_selection");
  var _markNeedsBuild$ = dart.privateName(text_selection, "_markNeedsBuild");
  var _buildHandle = dart.privateName(text_selection, "_buildHandle");
  var _buildToolbar = dart.privateName(text_selection, "_buildToolbar");
  var C1014;
  var _handleSelectionHandleChanged = dart.privateName(text_selection, "_handleSelectionHandleChanged");
  var C1017;
  var C1018;
  var C1019;
  var C1020;
  var C1021;
  var C1022;
  var C1023;
  var C1024;
  var C1025;
  var C1016;
  var C1015;
  var C1028;
  var C1029;
  var C1027;
  var C1026;
  var C1030;
  var C1033;
  var C1034;
  var C1035;
  var C1036;
  var C1032;
  var C1031;
  var C1039;
  var C1040;
  var C1038;
  var C1037;
  var context$2 = dart.privateName(text_selection, "TextSelectionOverlay.context");
  var debugRequiredFor$ = dart.privateName(text_selection, "TextSelectionOverlay.debugRequiredFor");
  var toolbarLayerLink$ = dart.privateName(text_selection, "TextSelectionOverlay.toolbarLayerLink");
  var startHandleLayerLink$0 = dart.privateName(text_selection, "TextSelectionOverlay.startHandleLayerLink");
  var endHandleLayerLink$0 = dart.privateName(text_selection, "TextSelectionOverlay.endHandleLayerLink");
  var renderObject$ = dart.privateName(text_selection, "TextSelectionOverlay.renderObject");
  var selectionControls$0 = dart.privateName(text_selection, "TextSelectionOverlay.selectionControls");
  var selectionDelegate$ = dart.privateName(text_selection, "TextSelectionOverlay.selectionDelegate");
  var dragStartBehavior$2 = dart.privateName(text_selection, "TextSelectionOverlay.dragStartBehavior");
  var onSelectionHandleTapped$0 = dart.privateName(text_selection, "TextSelectionOverlay.onSelectionHandleTapped");
  text_selection.TextSelectionOverlay = class TextSelectionOverlay extends core.Object {
    get context() {
      return this[context$2];
    }
    set context(value) {
      super.context = value;
    }
    get debugRequiredFor() {
      return this[debugRequiredFor$];
    }
    set debugRequiredFor(value) {
      super.debugRequiredFor = value;
    }
    get toolbarLayerLink() {
      return this[toolbarLayerLink$];
    }
    set toolbarLayerLink(value) {
      super.toolbarLayerLink = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$0];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$0];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get renderObject() {
      return this[renderObject$];
    }
    set renderObject(value) {
      super.renderObject = value;
    }
    get selectionControls() {
      return this[selectionControls$0];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get selectionDelegate() {
      return this[selectionDelegate$];
    }
    set selectionDelegate(value) {
      super.selectionDelegate = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$0];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get [_toolbarOpacity]() {
      return this[_toolbarController].view;
    }
    get value() {
      return this[_value$];
    }
    get [_selection$]() {
      return this[_value$].selection;
    }
    get handlesVisible() {
      return this[_handlesVisible];
    }
    set handlesVisible(visible) {
      if (!(visible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 390, 12, "visible != null");
      if (dart.equals(this[_handlesVisible], visible)) return;
      this[_handlesVisible] = visible;
      if (dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.persistentCallbacks)) {
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.bind(this, _markNeedsBuild$));
      } else {
        this[_markNeedsBuild$]();
      }
    }
    showHandles() {
      if (!(this[_handles] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 405, 12, "_handles == null");
      this[_handles] = JSArrayOfOverlayEntry().of([new overlay$.OverlayEntry.new({builder: dart.fn(context => this[_buildHandle](context, text_selection._TextSelectionHandlePosition.start), BuildContextToWidget())}), new overlay$.OverlayEntry.new({builder: dart.fn(context => this[_buildHandle](context, text_selection._TextSelectionHandlePosition.end), BuildContextToWidget())})]);
      overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor}).insertAll(this[_handles]);
    }
    hideHandles() {
      if (this[_handles] != null) {
        this[_handles][$_get](0).remove();
        this[_handles][$_get](1).remove();
        this[_handles] = null;
      }
    }
    showToolbar() {
      if (!(this[_toolbar] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 427, 12, "_toolbar == null");
      this[_toolbar] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildToolbar)});
      overlay$.Overlay.of(this.context, {rootOverlay: true, debugRequiredFor: this.debugRequiredFor}).insert(this[_toolbar]);
      this[_toolbarController].forward({from: 0.0});
    }
    update(newValue) {
      if (dart.equals(this[_value$], newValue)) return;
      this[_value$] = newValue;
      if (dart.equals(binding$3.SchedulerBinding.instance.schedulerPhase, binding$3.SchedulerPhase.persistentCallbacks)) {
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.bind(this, _markNeedsBuild$));
      } else {
        this[_markNeedsBuild$]();
      }
    }
    updateForScroll() {
      this[_markNeedsBuild$]();
    }
    [_markNeedsBuild$](duration = null) {
      let t31;
      if (this[_handles] != null) {
        this[_handles][$_get](0).markNeedsBuild();
        this[_handles][$_get](1).markNeedsBuild();
      }
      t31 = this[_toolbar];
      t31 == null ? null : t31.markNeedsBuild();
    }
    get handlesAreVisible() {
      return this[_handles] != null && dart.test(this.handlesVisible);
    }
    get toolbarIsVisible() {
      return this[_toolbar] != null;
    }
    hide() {
      if (this[_handles] != null) {
        this[_handles][$_get](0).remove();
        this[_handles][$_get](1).remove();
        this[_handles] = null;
      }
      if (this[_toolbar] != null) {
        this.hideToolbar();
      }
    }
    hideToolbar() {
      if (!(this[_toolbar] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 491, 12, "_toolbar != null");
      this[_toolbarController].stop();
      this[_toolbar].remove();
      this[_toolbar] = null;
    }
    dispose() {
      this.hide();
      this[_toolbarController].dispose();
    }
    [_buildHandle](context, position) {
      if (dart.test(this[_selection$].isCollapsed) && dart.equals(position, text_selection._TextSelectionHandlePosition.end) || this.selectionControls == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C1014 || CT.C1014});
      return new visibility.Visibility.new({visible: this.handlesVisible, child: new text_selection._TextSelectionHandleOverlay.new({onSelectionHandleChanged: dart.fn(newSelection => {
            this[_handleSelectionHandleChanged](newSelection, position);
          }, TextSelectionToNull()), onSelectionHandleTapped: this.onSelectionHandleTapped, startHandleLayerLink: this.startHandleLayerLink, endHandleLayerLink: this.endHandleLayerLink, renderObject: this.renderObject, selection: this[_selection$], selectionControls: this.selectionControls, position: position, dragStartBehavior: this.dragStartBehavior, $creationLocationd_0dea112b090073317d4: C1015 || CT.C1015}), $creationLocationd_0dea112b090073317d4: C1026 || CT.C1026});
    }
    [_buildToolbar](context) {
      if (this.selectionControls == null) return new container.Container.new({$creationLocationd_0dea112b090073317d4: C1030 || CT.C1030});
      let endpoints = this.renderObject.getEndpointsForSelection(this[_selection$]);
      let editingRegion = new ui.Rect.fromPoints(this.renderObject.localToGlobal(ui.Offset.zero), this.renderObject.localToGlobal(this.renderObject.size.bottomRight(ui.Offset.zero)));
      let isMultiline = dart.notNull(endpoints[$last].point.dy) - dart.notNull(endpoints[$first].point.dy) > dart.notNull(this.renderObject.preferredLineHeight) / 2;
      let midX = isMultiline ? dart.notNull(editingRegion.width) / 2 : (dart.notNull(endpoints[$first].point.dx) + dart.notNull(endpoints[$last].point.dx)) / 2;
      let midpoint = new ui.Offset.new(midX, dart.notNull(endpoints[$_get](0).point.dy) - dart.notNull(this.renderObject.preferredLineHeight));
      return new transitions.FadeTransition.new({opacity: this[_toolbarOpacity], child: new basic.CompositedTransformFollower.new({link: this.toolbarLayerLink, showWhenUnlinked: false, offset: editingRegion.topLeft._negate(), child: this.selectionControls.buildToolbar(context, editingRegion, this.renderObject.preferredLineHeight, midpoint, endpoints, this.selectionDelegate), $creationLocationd_0dea112b090073317d4: C1031 || CT.C1031}), $creationLocationd_0dea112b090073317d4: C1037 || CT.C1037});
    }
    [_handleSelectionHandleChanged](newSelection, position) {
      let textPosition = null;
      switch (position) {
        case C1011 || CT.C1011:
        {
          textPosition = newSelection.base;
          break;
        }
        case C1012 || CT.C1012:
        {
          textPosition = newSelection.extent;
          break;
        }
      }
      this.selectionDelegate.textEditingValue = this[_value$].copyWith({selection: newSelection, composing: ui.TextRange.empty});
      this.selectionDelegate.bringIntoView(textPosition);
    }
  };
  (text_selection.TextSelectionOverlay.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let debugRequiredFor = opts && 'debugRequiredFor' in opts ? opts.debugRequiredFor : null;
    let toolbarLayerLink = opts && 'toolbarLayerLink' in opts ? opts.toolbarLayerLink : null;
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    let renderObject = opts && 'renderObject' in opts ? opts.renderObject : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let handlesVisible = opts && 'handlesVisible' in opts ? opts.handlesVisible : false;
    let selectionDelegate = opts && 'selectionDelegate' in opts ? opts.selectionDelegate : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    this[_toolbarController] = null;
    this[_handles] = null;
    this[_toolbar] = null;
    this[_handlesVisible] = false;
    this[context$2] = context;
    this[debugRequiredFor$] = debugRequiredFor;
    this[toolbarLayerLink$] = toolbarLayerLink;
    this[startHandleLayerLink$0] = startHandleLayerLink;
    this[endHandleLayerLink$0] = endHandleLayerLink;
    this[renderObject$] = renderObject;
    this[selectionControls$0] = selectionControls;
    this[selectionDelegate$] = selectionDelegate;
    this[dragStartBehavior$2] = dragStartBehavior;
    this[onSelectionHandleTapped$0] = onSelectionHandleTapped;
    if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 281, 15, "value != null");
    if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 282, 15, "context != null");
    if (!(handlesVisible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 283, 15, "handlesVisible != null");
    this[_handlesVisible] = handlesVisible;
    this[_value$] = value;
    let overlay = overlay$.Overlay.of(this.context, {rootOverlay: true});
    if (!(overlay != null)) dart.assertFailed("No Overlay widget exists above " + dart.str(this.context) + ".\n" + "Usually the Navigator created by WidgetsApp provides the overlay. Perhaps your " + "app content was created above the Navigator with the WidgetsApp builder parameter.", "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 287, 12, "overlay != null");
    this[_toolbarController] = new animation_controller.AnimationController.new({duration: text_selection.TextSelectionOverlay.fadeDuration, vsync: overlay});
  }).prototype = text_selection.TextSelectionOverlay.prototype;
  dart.addTypeTests(text_selection.TextSelectionOverlay);
  dart.setMethodSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionOverlay.__proto__),
    showHandles: dart.fnType(dart.void, []),
    hideHandles: dart.fnType(dart.void, []),
    showToolbar: dart.fnType(dart.void, []),
    update: dart.fnType(dart.void, [text_input.TextEditingValue]),
    updateForScroll: dart.fnType(dart.void, []),
    [_markNeedsBuild$]: dart.fnType(dart.void, [], [core.Duration]),
    hide: dart.fnType(dart.void, []),
    hideToolbar: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    [_buildHandle]: dart.fnType(framework.Widget, [framework.BuildContext, text_selection._TextSelectionHandlePosition]),
    [_buildToolbar]: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleSelectionHandleChanged]: dart.fnType(dart.void, [text_editing.TextSelection, text_selection._TextSelectionHandlePosition])
  }));
  dart.setGetterSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getGetters(text_selection.TextSelectionOverlay.__proto__),
    [_toolbarOpacity]: animation$.Animation$(core.double),
    value: text_input.TextEditingValue,
    [_selection$]: text_editing.TextSelection,
    handlesVisible: core.bool,
    handlesAreVisible: core.bool,
    toolbarIsVisible: core.bool
  }));
  dart.setSetterSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getSetters(text_selection.TextSelectionOverlay.__proto__),
    handlesVisible: core.bool
  }));
  dart.setLibraryUri(text_selection.TextSelectionOverlay, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection.TextSelectionOverlay, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionOverlay.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    debugRequiredFor: dart.finalFieldType(framework.Widget),
    toolbarLayerLink: dart.finalFieldType(layer.LayerLink),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    renderObject: dart.finalFieldType(editable.RenderEditable),
    selectionControls: dart.finalFieldType(text_selection.TextSelectionControls),
    selectionDelegate: dart.finalFieldType(text_input.TextSelectionDelegate),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    onSelectionHandleTapped: dart.finalFieldType(dart.fnType(dart.void, [])),
    [_toolbarController]: dart.fieldType(animation_controller.AnimationController),
    [_value$]: dart.fieldType(text_input.TextEditingValue),
    [_handles]: dart.fieldType(core.List$(overlay$.OverlayEntry)),
    [_toolbar]: dart.fieldType(overlay$.OverlayEntry),
    [_handlesVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(text_selection.TextSelectionOverlay, {
    /*text_selection.TextSelectionOverlay.fadeDuration*/get fadeDuration() {
      return C1006 || CT.C1006;
    }
  });
  var _visibility = dart.privateName(text_selection, "_visibility");
  var selection$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.selection");
  var position$4 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.position");
  var startHandleLayerLink$1 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.startHandleLayerLink");
  var endHandleLayerLink$1 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.endHandleLayerLink");
  var renderObject$0 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.renderObject");
  var onSelectionHandleChanged$ = dart.privateName(text_selection, "_TextSelectionHandleOverlay.onSelectionHandleChanged");
  var onSelectionHandleTapped$1 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.onSelectionHandleTapped");
  var selectionControls$1 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.selectionControls");
  var dragStartBehavior$3 = dart.privateName(text_selection, "_TextSelectionHandleOverlay.dragStartBehavior");
  text_selection._TextSelectionHandleOverlay = class _TextSelectionHandleOverlay extends framework.StatefulWidget {
    get selection() {
      return this[selection$0];
    }
    set selection(value) {
      super.selection = value;
    }
    get position() {
      return this[position$4];
    }
    set position(value) {
      super.position = value;
    }
    get startHandleLayerLink() {
      return this[startHandleLayerLink$1];
    }
    set startHandleLayerLink(value) {
      super.startHandleLayerLink = value;
    }
    get endHandleLayerLink() {
      return this[endHandleLayerLink$1];
    }
    set endHandleLayerLink(value) {
      super.endHandleLayerLink = value;
    }
    get renderObject() {
      return this[renderObject$0];
    }
    set renderObject(value) {
      super.renderObject = value;
    }
    get onSelectionHandleChanged() {
      return this[onSelectionHandleChanged$];
    }
    set onSelectionHandleChanged(value) {
      super.onSelectionHandleChanged = value;
    }
    get onSelectionHandleTapped() {
      return this[onSelectionHandleTapped$1];
    }
    set onSelectionHandleTapped(value) {
      super.onSelectionHandleTapped = value;
    }
    get selectionControls() {
      return this[selectionControls$1];
    }
    set selectionControls(value) {
      super.selectionControls = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$3];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new text_selection._TextSelectionHandleOverlayState.new();
    }
    get [_visibility]() {
      switch (this.position) {
        case C1011 || CT.C1011:
        {
          return this.renderObject.selectionStartInViewport;
        }
        case C1012 || CT.C1012:
        {
          return this.renderObject.selectionEndInViewport;
        }
      }
      return null;
    }
  };
  (text_selection._TextSelectionHandleOverlay.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let selection = opts && 'selection' in opts ? opts.selection : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let startHandleLayerLink = opts && 'startHandleLayerLink' in opts ? opts.startHandleLayerLink : null;
    let endHandleLayerLink = opts && 'endHandleLayerLink' in opts ? opts.endHandleLayerLink : null;
    let renderObject = opts && 'renderObject' in opts ? opts.renderObject : null;
    let onSelectionHandleChanged = opts && 'onSelectionHandleChanged' in opts ? opts.onSelectionHandleChanged : null;
    let onSelectionHandleTapped = opts && 'onSelectionHandleTapped' in opts ? opts.onSelectionHandleTapped : null;
    let selectionControls = opts && 'selectionControls' in opts ? opts.selectionControls : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[selection$0] = selection;
    this[position$4] = position;
    this[startHandleLayerLink$1] = startHandleLayerLink;
    this[endHandleLayerLink$1] = endHandleLayerLink;
    this[renderObject$0] = renderObject;
    this[onSelectionHandleChanged$] = onSelectionHandleChanged;
    this[onSelectionHandleTapped$1] = onSelectionHandleTapped;
    this[selectionControls$1] = selectionControls;
    this[dragStartBehavior$3] = dragStartBehavior;
    text_selection._TextSelectionHandleOverlay.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection._TextSelectionHandleOverlay.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandleOverlay);
  dart.setMethodSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionHandleOverlay.__proto__),
    createState: dart.fnType(text_selection._TextSelectionHandleOverlayState, [])
  }));
  dart.setGetterSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getGetters(text_selection._TextSelectionHandleOverlay.__proto__),
    [_visibility]: change_notifier.ValueListenable$(core.bool)
  }));
  dart.setLibraryUri(text_selection._TextSelectionHandleOverlay, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection._TextSelectionHandleOverlay, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandleOverlay.__proto__),
    selection: dart.finalFieldType(text_editing.TextSelection),
    position: dart.finalFieldType(text_selection._TextSelectionHandlePosition),
    startHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    endHandleLayerLink: dart.finalFieldType(layer.LayerLink),
    renderObject: dart.finalFieldType(editable.RenderEditable),
    onSelectionHandleChanged: dart.finalFieldType(dart.fnType(dart.void, [text_editing.TextSelection])),
    onSelectionHandleTapped: dart.finalFieldType(dart.fnType(dart.void, [])),
    selectionControls: dart.finalFieldType(text_selection.TextSelectionControls),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var _dragPosition = dart.privateName(text_selection, "_dragPosition");
  var _controller$0 = dart.privateName(text_selection, "_controller");
  var _opacity = dart.privateName(text_selection, "_opacity");
  var _handleVisibilityChanged = dart.privateName(text_selection, "_handleVisibilityChanged");
  var _handleDragStart$ = dart.privateName(text_selection, "_handleDragStart");
  var _handleDragUpdate$ = dart.privateName(text_selection, "_handleDragUpdate");
  var _handleTap$0 = dart.privateName(text_selection, "_handleTap");
  var _chooseType = dart.privateName(text_selection, "_chooseType");
  var C1043;
  var C1044;
  var C1042;
  var C1041;
  var C1047;
  var C1048;
  var C1049;
  var C1050;
  var C1051;
  var C1052;
  var C1046;
  var C1045;
  var C1055;
  var C1056;
  var C1057;
  var C1058;
  var C1054;
  var C1053;
  var C1061;
  var C1062;
  var C1060;
  var C1059;
  var C1065;
  var C1066;
  var C1067;
  var C1068;
  var C1064;
  var C1063;
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(text_selection._TextSelectionHandleOverlay) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(text_selection._TextSelectionHandleOverlay)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(text_selection._TextSelectionHandleOverlay));
  text_selection._TextSelectionHandleOverlayState = class _TextSelectionHandleOverlayState extends State_SingleTickerProviderStateMixin$36 {
    get [_opacity]() {
      return this[_controller$0].view;
    }
    initState() {
      super.initState();
      this[_controller$0] = new animation_controller.AnimationController.new({duration: text_selection.TextSelectionOverlay.fadeDuration, vsync: this});
      this[_handleVisibilityChanged]();
      this.widget[_visibility].addListener(dart.bind(this, _handleVisibilityChanged));
    }
    [_handleVisibilityChanged]() {
      if (dart.test(this.widget[_visibility].value)) {
        this[_controller$0].forward();
      } else {
        this[_controller$0].reverse();
      }
    }
    didUpdateWidget(oldWidget) {
      text_selection._TextSelectionHandleOverlay._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      oldWidget[_visibility].removeListener(dart.bind(this, _handleVisibilityChanged));
      this[_handleVisibilityChanged]();
      this.widget[_visibility].addListener(dart.bind(this, _handleVisibilityChanged));
    }
    dispose() {
      this.widget[_visibility].removeListener(dart.bind(this, _handleVisibilityChanged));
      this[_controller$0].dispose();
      super.dispose();
    }
    [_handleDragStart$](details) {
      let handleSize = this.widget.selectionControls.getHandleSize(this.widget.renderObject.preferredLineHeight);
      this[_dragPosition] = details.globalPosition['+'](new ui.Offset.new(0.0, -dart.notNull(handleSize.height)));
    }
    [_handleDragUpdate$](details) {
      this[_dragPosition] = this[_dragPosition]['+'](details.delta);
      let position = this.widget.renderObject.getPositionForPoint(this[_dragPosition]);
      if (dart.test(this.widget.selection.isCollapsed)) {
        this.widget.onSelectionHandleChanged(new text_editing.TextSelection.fromPosition(position));
        return;
      }
      let newSelection = null;
      switch (this.widget.position) {
        case C1011 || CT.C1011:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: position.offset, extentOffset: this.widget.selection.extentOffset});
          break;
        }
        case C1012 || CT.C1012:
        {
          newSelection = new text_editing.TextSelection.new({baseOffset: this.widget.selection.baseOffset, extentOffset: position.offset});
          break;
        }
      }
      if (dart.notNull(newSelection.baseOffset) >= dart.notNull(newSelection.extentOffset)) return;
      this.widget.onSelectionHandleChanged(newSelection);
    }
    [_handleTap$0]() {
      if (this.widget.onSelectionHandleTapped != null) this.widget.onSelectionHandleTapped();
    }
    build(context) {
      let layerLink = null;
      let type = null;
      switch (this.widget.position) {
        case C1011 || CT.C1011:
        {
          layerLink = this.widget.startHandleLayerLink;
          type = this[_chooseType](this.widget.renderObject.textDirection, text_selection.TextSelectionHandleType.left, text_selection.TextSelectionHandleType.right);
          break;
        }
        case C1012 || CT.C1012:
        {
          if (!!dart.test(this.widget.selection.isCollapsed)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 721, 16, "!widget.selection.isCollapsed");
          layerLink = this.widget.endHandleLayerLink;
          type = this[_chooseType](this.widget.renderObject.textDirection, text_selection.TextSelectionHandleType.right, text_selection.TextSelectionHandleType.left);
          break;
        }
      }
      let handleAnchor = this.widget.selectionControls.getHandleAnchor(type, this.widget.renderObject.preferredLineHeight);
      let handleSize = this.widget.selectionControls.getHandleSize(this.widget.renderObject.preferredLineHeight);
      let handleRect = new ui.Rect.fromLTWH(-dart.notNull(handleAnchor.dx), -dart.notNull(handleAnchor.dy), handleSize.width, handleSize.height);
      let interactiveRect = handleRect.expandToInclude(new ui.Rect.fromCircle({center: handleRect.center, radius: 48 / 2}));
      let padding = new stack.RelativeRect.fromLTRB(math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.width) - dart.notNull(handleRect.width)) / 2, 0.0), math.max(core.double, (dart.notNull(interactiveRect.height) - dart.notNull(handleRect.height)) / 2, 0.0));
      return new basic.CompositedTransformFollower.new({link: layerLink, offset: interactiveRect.topLeft, showWhenUnlinked: false, child: new transitions.FadeTransition.new({opacity: this[_opacity], child: new container.Container.new({alignment: alignment$.Alignment.topLeft, width: interactiveRect.width, height: interactiveRect.height, child: new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.translucent, dragStartBehavior: this.widget.dragStartBehavior, onPanStart: dart.bind(this, _handleDragStart$), onPanUpdate: dart.bind(this, _handleDragUpdate$), onTap: dart.bind(this, _handleTap$0), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: padding.left, top: padding.top, right: padding.right, bottom: padding.bottom}), child: this.widget.selectionControls.buildHandle(context, type, this.widget.renderObject.preferredLineHeight), $creationLocationd_0dea112b090073317d4: C1041 || CT.C1041}), $creationLocationd_0dea112b090073317d4: C1045 || CT.C1045}), $creationLocationd_0dea112b090073317d4: C1053 || CT.C1053}), $creationLocationd_0dea112b090073317d4: C1059 || CT.C1059}), $creationLocationd_0dea112b090073317d4: C1063 || CT.C1063});
    }
    [_chooseType](textDirection, ltrType, rtlType) {
      if (dart.test(this.widget.selection.isCollapsed)) return text_selection.TextSelectionHandleType.collapsed;
      if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 800, 12, "textDirection != null");
      switch (textDirection) {
        case C21 || CT.C21:
        {
          return ltrType;
        }
        case C20 || CT.C20:
        {
          return rtlType;
        }
      }
      return null;
    }
  };
  (text_selection._TextSelectionHandleOverlayState.new = function() {
    this[_dragPosition] = null;
    this[_controller$0] = null;
    text_selection._TextSelectionHandleOverlayState.__proto__.new.call(this);
    ;
  }).prototype = text_selection._TextSelectionHandleOverlayState.prototype;
  dart.addTypeTests(text_selection._TextSelectionHandleOverlayState);
  dart.setMethodSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_handleVisibilityChanged]: dart.fnType(dart.void, []),
    [_handleDragStart$]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate$]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleTap$0]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_chooseType]: dart.fnType(text_selection.TextSelectionHandleType, [ui.TextDirection, text_selection.TextSelectionHandleType, text_selection.TextSelectionHandleType])
  }));
  dart.setGetterSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getGetters(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_opacity]: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(text_selection._TextSelectionHandleOverlayState, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection._TextSelectionHandleOverlayState, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionHandleOverlayState.__proto__),
    [_dragPosition]: dart.fieldType(ui.Offset),
    [_controller$0]: dart.fieldType(animation_controller.AnimationController)
  }));
  text_selection.TextSelectionGestureDetectorBuilderDelegate = class TextSelectionGestureDetectorBuilderDelegate extends core.Object {};
  (text_selection.TextSelectionGestureDetectorBuilderDelegate.new = function() {
    ;
  }).prototype = text_selection.TextSelectionGestureDetectorBuilderDelegate.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetectorBuilderDelegate);
  dart.setLibraryUri(text_selection.TextSelectionGestureDetectorBuilderDelegate, "package:flutter/src/widgets/text_selection.dart");
  var _shouldShowSelectionToolbar = dart.privateName(text_selection, "_shouldShowSelectionToolbar");
  var C1071;
  var C1072;
  var C1073;
  var C1074;
  var C1075;
  var C1076;
  var C1077;
  var C1078;
  var C1079;
  var C1080;
  var C1081;
  var C1082;
  var C1083;
  var C1084;
  var C1085;
  var C1070;
  var C1069;
  var delegate$2 = dart.privateName(text_selection, "TextSelectionGestureDetectorBuilder.delegate");
  text_selection.TextSelectionGestureDetectorBuilder = class TextSelectionGestureDetectorBuilder extends core.Object {
    get delegate() {
      return this[delegate$2];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get shouldShowSelectionToolbar() {
      return this[_shouldShowSelectionToolbar];
    }
    get editableText() {
      return this.delegate.editableTextKey.currentState;
    }
    get renderEditable() {
      return this.editableText.renderEditable;
    }
    onTapDown(details) {
      this.renderEditable.handleTapDown(details);
      let kind = details.kind;
      this[_shouldShowSelectionToolbar] = kind == null || dart.equals(kind, ui.PointerDeviceKind.touch) || dart.equals(kind, ui.PointerDeviceKind.stylus);
    }
    onForcePressStart(details) {
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 923, 12, "delegate.forcePressEnabled");
      this[_shouldShowSelectionToolbar] = true;
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWordsInRange({from: details.globalPosition, cause: editable.SelectionChangedCause.forcePress});
      }
    }
    onForcePressEnd(details) {
      if (!dart.test(this.delegate.forcePressEnabled)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 946, 12, "delegate.forcePressEnabled");
      this.renderEditable.selectWordsInRange({from: details.globalPosition, cause: editable.SelectionChangedCause.forcePress});
      if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
    }
    onSingleTapUp(details) {
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWordEdge({cause: editable.SelectionChangedCause.tap});
      }
    }
    onSingleTapCancel() {
    }
    onSingleLongTapStart(details) {
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapMoveUpdate(details) {
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.longPress});
      }
    }
    onSingleLongTapEnd(details) {
      if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
    }
    onDoubleTapDown(details) {
      if (dart.test(this.delegate.selectionEnabled)) {
        this.renderEditable.selectWord({cause: editable.SelectionChangedCause.tap});
        if (dart.test(this.shouldShowSelectionToolbar)) this.editableText.showToolbar();
      }
    }
    onDragSelectionStart(details) {
      this.renderEditable.selectPositionAt({from: details.globalPosition, cause: editable.SelectionChangedCause.drag});
    }
    onDragSelectionUpdate(startDetails, updateDetails) {
      this.renderEditable.selectPositionAt({from: startDetails.globalPosition, to: updateDetails.globalPosition, cause: editable.SelectionChangedCause.drag});
    }
    onDragSelectionEnd(details) {
    }
    buildGestureDetector(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new text_selection.TextSelectionGestureDetector.new({key: key, onTapDown: dart.bind(this, 'onTapDown'), onForcePressStart: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressStart') : null, onForcePressEnd: dart.test(this.delegate.forcePressEnabled) ? dart.bind(this, 'onForcePressEnd') : null, onSingleTapUp: dart.bind(this, 'onSingleTapUp'), onSingleTapCancel: dart.bind(this, 'onSingleTapCancel'), onSingleLongTapStart: dart.bind(this, 'onSingleLongTapStart'), onSingleLongTapMoveUpdate: dart.bind(this, 'onSingleLongTapMoveUpdate'), onSingleLongTapEnd: dart.bind(this, 'onSingleLongTapEnd'), onDoubleTapDown: dart.bind(this, 'onDoubleTapDown'), onDragSelectionStart: dart.bind(this, 'onDragSelectionStart'), onDragSelectionUpdate: dart.bind(this, 'onDragSelectionUpdate'), onDragSelectionEnd: dart.bind(this, 'onDragSelectionEnd'), behavior: behavior, child: child, $creationLocationd_0dea112b090073317d4: C1069 || CT.C1069});
    }
  };
  (text_selection.TextSelectionGestureDetectorBuilder.new = function(opts) {
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    this[_shouldShowSelectionToolbar] = true;
    this[delegate$2] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 861, 15, "delegate != null");
    ;
  }).prototype = text_selection.TextSelectionGestureDetectorBuilder.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetectorBuilder);
  dart.setMethodSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    onTapDown: dart.fnType(dart.void, [tap$.TapDownDetails]),
    onForcePressStart: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onForcePressEnd: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    onSingleTapUp: dart.fnType(dart.void, [tap$.TapUpDetails]),
    onSingleTapCancel: dart.fnType(dart.void, []),
    onSingleLongTapStart: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    onSingleLongTapMoveUpdate: dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]),
    onSingleLongTapEnd: dart.fnType(dart.void, [long_press.LongPressEndDetails]),
    onDoubleTapDown: dart.fnType(dart.void, [tap$.TapDownDetails]),
    onDragSelectionStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    onDragSelectionUpdate: dart.fnType(dart.void, [drag_details.DragStartDetails, drag_details.DragUpdateDetails]),
    onDragSelectionEnd: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    buildGestureDetector: dart.fnType(framework.Widget, [], {behavior: proxy_box.HitTestBehavior, child: framework.Widget, key: key.Key}, {})
  }));
  dart.setGetterSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getGetters(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    shouldShowSelectionToolbar: core.bool,
    editableText: editable_text.EditableTextState,
    renderEditable: editable.RenderEditable
  }));
  dart.setLibraryUri(text_selection.TextSelectionGestureDetectorBuilder, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection.TextSelectionGestureDetectorBuilder, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionGestureDetectorBuilder.__proto__),
    delegate: dart.finalFieldType(text_selection.TextSelectionGestureDetectorBuilderDelegate),
    [_shouldShowSelectionToolbar]: dart.fieldType(core.bool)
  }));
  var onTapDown$0 = dart.privateName(text_selection, "TextSelectionGestureDetector.onTapDown");
  var onForcePressStart$0 = dart.privateName(text_selection, "TextSelectionGestureDetector.onForcePressStart");
  var onForcePressEnd$0 = dart.privateName(text_selection, "TextSelectionGestureDetector.onForcePressEnd");
  var onSingleTapUp$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleTapUp");
  var onSingleTapCancel$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleTapCancel");
  var onSingleLongTapStart$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapStart");
  var onSingleLongTapMoveUpdate$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapMoveUpdate");
  var onSingleLongTapEnd$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onSingleLongTapEnd");
  var onDoubleTapDown$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDoubleTapDown");
  var onDragSelectionStart$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionStart");
  var onDragSelectionUpdate$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionUpdate");
  var onDragSelectionEnd$ = dart.privateName(text_selection, "TextSelectionGestureDetector.onDragSelectionEnd");
  var behavior$5 = dart.privateName(text_selection, "TextSelectionGestureDetector.behavior");
  var child$35 = dart.privateName(text_selection, "TextSelectionGestureDetector.child");
  text_selection.TextSelectionGestureDetector = class TextSelectionGestureDetector extends framework.StatefulWidget {
    get onTapDown() {
      return this[onTapDown$0];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onForcePressStart() {
      return this[onForcePressStart$0];
    }
    set onForcePressStart(value) {
      super.onForcePressStart = value;
    }
    get onForcePressEnd() {
      return this[onForcePressEnd$0];
    }
    set onForcePressEnd(value) {
      super.onForcePressEnd = value;
    }
    get onSingleTapUp() {
      return this[onSingleTapUp$];
    }
    set onSingleTapUp(value) {
      super.onSingleTapUp = value;
    }
    get onSingleTapCancel() {
      return this[onSingleTapCancel$];
    }
    set onSingleTapCancel(value) {
      super.onSingleTapCancel = value;
    }
    get onSingleLongTapStart() {
      return this[onSingleLongTapStart$];
    }
    set onSingleLongTapStart(value) {
      super.onSingleLongTapStart = value;
    }
    get onSingleLongTapMoveUpdate() {
      return this[onSingleLongTapMoveUpdate$];
    }
    set onSingleLongTapMoveUpdate(value) {
      super.onSingleLongTapMoveUpdate = value;
    }
    get onSingleLongTapEnd() {
      return this[onSingleLongTapEnd$];
    }
    set onSingleLongTapEnd(value) {
      super.onSingleLongTapEnd = value;
    }
    get onDoubleTapDown() {
      return this[onDoubleTapDown$];
    }
    set onDoubleTapDown(value) {
      super.onDoubleTapDown = value;
    }
    get onDragSelectionStart() {
      return this[onDragSelectionStart$];
    }
    set onDragSelectionStart(value) {
      super.onDragSelectionStart = value;
    }
    get onDragSelectionUpdate() {
      return this[onDragSelectionUpdate$];
    }
    set onDragSelectionUpdate(value) {
      super.onDragSelectionUpdate = value;
    }
    get onDragSelectionEnd() {
      return this[onDragSelectionEnd$];
    }
    set onDragSelectionEnd(value) {
      super.onDragSelectionEnd = value;
    }
    get behavior() {
      return this[behavior$5];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get child() {
      return this[child$35];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new text_selection._TextSelectionGestureDetectorState.new();
    }
  };
  (text_selection.TextSelectionGestureDetector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onForcePressStart = opts && 'onForcePressStart' in opts ? opts.onForcePressStart : null;
    let onForcePressEnd = opts && 'onForcePressEnd' in opts ? opts.onForcePressEnd : null;
    let onSingleTapUp = opts && 'onSingleTapUp' in opts ? opts.onSingleTapUp : null;
    let onSingleTapCancel = opts && 'onSingleTapCancel' in opts ? opts.onSingleTapCancel : null;
    let onSingleLongTapStart = opts && 'onSingleLongTapStart' in opts ? opts.onSingleLongTapStart : null;
    let onSingleLongTapMoveUpdate = opts && 'onSingleLongTapMoveUpdate' in opts ? opts.onSingleLongTapMoveUpdate : null;
    let onSingleLongTapEnd = opts && 'onSingleLongTapEnd' in opts ? opts.onSingleLongTapEnd : null;
    let onDoubleTapDown = opts && 'onDoubleTapDown' in opts ? opts.onDoubleTapDown : null;
    let onDragSelectionStart = opts && 'onDragSelectionStart' in opts ? opts.onDragSelectionStart : null;
    let onDragSelectionUpdate = opts && 'onDragSelectionUpdate' in opts ? opts.onDragSelectionUpdate : null;
    let onDragSelectionEnd = opts && 'onDragSelectionEnd' in opts ? opts.onDragSelectionEnd : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[onTapDown$0] = onTapDown;
    this[onForcePressStart$0] = onForcePressStart;
    this[onForcePressEnd$0] = onForcePressEnd;
    this[onSingleTapUp$] = onSingleTapUp;
    this[onSingleTapCancel$] = onSingleTapCancel;
    this[onSingleLongTapStart$] = onSingleLongTapStart;
    this[onSingleLongTapMoveUpdate$] = onSingleLongTapMoveUpdate;
    this[onSingleLongTapEnd$] = onSingleLongTapEnd;
    this[onDoubleTapDown$] = onDoubleTapDown;
    this[onDragSelectionStart$] = onDragSelectionStart;
    this[onDragSelectionUpdate$] = onDragSelectionUpdate;
    this[onDragSelectionEnd$] = onDragSelectionEnd;
    this[behavior$5] = behavior;
    this[child$35] = child;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1157, 15, "child != null");
    text_selection.TextSelectionGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection.TextSelectionGestureDetector.prototype;
  dart.addTypeTests(text_selection.TextSelectionGestureDetector);
  dart.setMethodSignature(text_selection.TextSelectionGestureDetector, () => ({
    __proto__: dart.getMethods(text_selection.TextSelectionGestureDetector.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(text_selection.TextSelectionGestureDetector, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection.TextSelectionGestureDetector, () => ({
    __proto__: dart.getFields(text_selection.TextSelectionGestureDetector.__proto__),
    onTapDown: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapDownDetails])),
    onForcePressStart: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    onForcePressEnd: dart.finalFieldType(dart.fnType(dart.void, [force_press.ForcePressDetails])),
    onSingleTapUp: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapUpDetails])),
    onSingleTapCancel: dart.finalFieldType(dart.fnType(dart.void, [])),
    onSingleLongTapStart: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressStartDetails])),
    onSingleLongTapMoveUpdate: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails])),
    onSingleLongTapEnd: dart.finalFieldType(dart.fnType(dart.void, [long_press.LongPressEndDetails])),
    onDoubleTapDown: dart.finalFieldType(dart.fnType(dart.void, [tap$.TapDownDetails])),
    onDragSelectionStart: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragStartDetails])),
    onDragSelectionUpdate: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragStartDetails, drag_details.DragUpdateDetails])),
    onDragSelectionEnd: dart.finalFieldType(dart.fnType(dart.void, [drag_details.DragEndDetails])),
    behavior: dart.finalFieldType(proxy_box.HitTestBehavior),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _doubleTapTimer = dart.privateName(text_selection, "_doubleTapTimer");
  var _lastTapOffset = dart.privateName(text_selection, "_lastTapOffset");
  var _isDoubleTap = dart.privateName(text_selection, "_isDoubleTap");
  var _lastDragStartDetails = dart.privateName(text_selection, "_lastDragStartDetails");
  var _lastDragUpdateDetails = dart.privateName(text_selection, "_lastDragUpdateDetails");
  var _dragUpdateThrottleTimer = dart.privateName(text_selection, "_dragUpdateThrottleTimer");
  var _isWithinDoubleTapTolerance = dart.privateName(text_selection, "_isWithinDoubleTapTolerance");
  var _doubleTapTimeout = dart.privateName(text_selection, "_doubleTapTimeout");
  var _handleTapDown = dart.privateName(text_selection, "_handleTapDown");
  var _handleTapUp = dart.privateName(text_selection, "_handleTapUp");
  var _handleTapCancel = dart.privateName(text_selection, "_handleTapCancel");
  var _handleDragUpdateThrottled = dart.privateName(text_selection, "_handleDragUpdateThrottled");
  var _handleDragEnd$ = dart.privateName(text_selection, "_handleDragEnd");
  var _forcePressStarted = dart.privateName(text_selection, "_forcePressStarted");
  var _forcePressEnded = dart.privateName(text_selection, "_forcePressEnded");
  var _handleLongPressStart = dart.privateName(text_selection, "_handleLongPressStart");
  var _handleLongPressMoveUpdate = dart.privateName(text_selection, "_handleLongPressMoveUpdate");
  var _handleLongPressEnd = dart.privateName(text_selection, "_handleLongPressEnd");
  var C1088;
  var C1089;
  var C1090;
  var C1091;
  var C1087;
  var C1086;
  text_selection._TextSelectionGestureDetectorState = class _TextSelectionGestureDetectorState extends framework.State$(text_selection.TextSelectionGestureDetector) {
    dispose() {
      let t31, t31$;
      t31 = this[_doubleTapTimer];
      t31 == null ? null : t31.cancel();
      t31$ = this[_dragUpdateThrottleTimer];
      t31$ == null ? null : t31$.cancel();
      super.dispose();
    }
    [_handleTapDown](details) {
      if (this.widget.onTapDown != null) {
        this.widget.onTapDown(details);
      }
      if (this[_doubleTapTimer] != null && dart.test(this[_isWithinDoubleTapTolerance](details.globalPosition))) {
        if (this.widget.onDoubleTapDown != null) {
          this.widget.onDoubleTapDown(details);
        }
        this[_doubleTapTimer].cancel();
        this[_doubleTapTimeout]();
        this[_isDoubleTap] = true;
      }
    }
    [_handleTapUp](details) {
      if (!dart.test(this[_isDoubleTap])) {
        if (this.widget.onSingleTapUp != null) {
          this.widget.onSingleTapUp(details);
        }
        this[_lastTapOffset] = details.globalPosition;
        this[_doubleTapTimer] = async.Timer.new(constants.kDoubleTapTimeout, dart.bind(this, _doubleTapTimeout));
      }
      this[_isDoubleTap] = false;
    }
    [_handleTapCancel]() {
      if (this.widget.onSingleTapCancel != null) {
        this.widget.onSingleTapCancel();
      }
    }
    [_handleDragStart$](details) {
      if (!(this[_lastDragStartDetails] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1284, 12, "_lastDragStartDetails == null");
      this[_lastDragStartDetails] = details;
      if (this.widget.onDragSelectionStart != null) {
        this.widget.onDragSelectionStart(details);
      }
    }
    [_handleDragUpdate$](details) {
      this[_lastDragUpdateDetails] = details;
      this[_dragUpdateThrottleTimer] == null ? this[_dragUpdateThrottleTimer] = async.Timer.new(text_selection._kDragSelectionUpdateThrottle, dart.bind(this, _handleDragUpdateThrottled)) : null;
    }
    [_handleDragUpdateThrottled]() {
      if (!(this[_lastDragStartDetails] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1304, 12, "_lastDragStartDetails != null");
      if (!(this[_lastDragUpdateDetails] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1305, 12, "_lastDragUpdateDetails != null");
      if (this.widget.onDragSelectionUpdate != null) {
        this.widget.onDragSelectionUpdate(this[_lastDragStartDetails], this[_lastDragUpdateDetails]);
      }
      this[_dragUpdateThrottleTimer] = null;
      this[_lastDragUpdateDetails] = null;
    }
    [_handleDragEnd$](details) {
      if (!(this[_lastDragStartDetails] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1314, 12, "_lastDragStartDetails != null");
      if (this[_dragUpdateThrottleTimer] != null) {
        this[_dragUpdateThrottleTimer].cancel();
        this[_handleDragUpdateThrottled]();
      }
      if (this.widget.onDragSelectionEnd != null) {
        this.widget.onDragSelectionEnd(details);
      }
      this[_dragUpdateThrottleTimer] = null;
      this[_lastDragStartDetails] = null;
      this[_lastDragUpdateDetails] = null;
    }
    [_forcePressStarted](details) {
      let t31;
      t31 = this[_doubleTapTimer];
      t31 == null ? null : t31.cancel();
      this[_doubleTapTimer] = null;
      if (this.widget.onForcePressStart != null) this.widget.onForcePressStart(details);
    }
    [_forcePressEnded](details) {
      if (this.widget.onForcePressEnd != null) this.widget.onForcePressEnd(details);
    }
    [_handleLongPressStart](details) {
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapStart != null) {
        this.widget.onSingleLongTapStart(details);
      }
    }
    [_handleLongPressMoveUpdate](details) {
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapMoveUpdate != null) {
        this.widget.onSingleLongTapMoveUpdate(details);
      }
    }
    [_handleLongPressEnd](details) {
      if (!dart.test(this[_isDoubleTap]) && this.widget.onSingleLongTapEnd != null) {
        this.widget.onSingleLongTapEnd(details);
      }
      this[_isDoubleTap] = false;
    }
    [_doubleTapTimeout]() {
      this[_doubleTapTimer] = null;
      this[_lastTapOffset] = null;
    }
    [_isWithinDoubleTapTolerance](secondTapOffset) {
      if (!(secondTapOffset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/text_selection.dart", 1366, 12, "secondTapOffset != null");
      if (this[_lastTapOffset] == null) {
        return false;
      }
      let difference = secondTapOffset['-'](this[_lastTapOffset]);
      return dart.notNull(difference.distance) <= 100;
    }
    build(context) {
      let gestures = new (LinkedMapOfType$GestureRecognizerFactoryOfGestureRecognizer()).new();
      gestures[$_set](dart.wrapType(text_selection._TransparentTapGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOf_TransparentTapGestureRecognizer()).new(dart.fn(() => new text_selection._TransparentTapGestureRecognizer.new({debugOwner: this}), VoidTo_TransparentTapGestureRecognizer()), dart.fn(instance => {
        let t31;
        t31 = instance;
        t31.onTapDown = dart.bind(this, _handleTapDown);
        t31.onTapUp = dart.bind(this, _handleTapUp);
        t31.onTapCancel = dart.bind(this, _handleTapCancel);
        t31;
      }, _TransparentTapGestureRecognizerToNull())));
      if (this.widget.onSingleLongTapStart != null || this.widget.onSingleLongTapMoveUpdate != null || this.widget.onSingleLongTapEnd != null) {
        gestures[$_set](dart.wrapType(long_press.LongPressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfLongPressGestureRecognizer()).new(dart.fn(() => new long_press.LongPressGestureRecognizer.new({debugOwner: this, kind: ui.PointerDeviceKind.touch}), VoidToLongPressGestureRecognizer()), dart.fn(instance => {
          let t31;
          t31 = instance;
          t31.onLongPressStart = dart.bind(this, _handleLongPressStart);
          t31.onLongPressMoveUpdate = dart.bind(this, _handleLongPressMoveUpdate);
          t31.onLongPressEnd = dart.bind(this, _handleLongPressEnd);
          t31;
        }, LongPressGestureRecognizerToNull())));
      }
      if (this.widget.onDragSelectionStart != null || this.widget.onDragSelectionUpdate != null || this.widget.onDragSelectionEnd != null) {
        gestures[$_set](dart.wrapType(monodrag.HorizontalDragGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfHorizontalDragGestureRecognizer()).new(dart.fn(() => new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this, kind: ui.PointerDeviceKind.mouse}), VoidToHorizontalDragGestureRecognizer()), dart.fn(instance => {
          let t31;
          t31 = instance;
          t31.dragStartBehavior = recognizer.DragStartBehavior.down;
          t31.onStart = dart.bind(this, _handleDragStart$);
          t31.onUpdate = dart.bind(this, _handleDragUpdate$);
          t31.onEnd = dart.bind(this, _handleDragEnd$);
          t31;
        }, HorizontalDragGestureRecognizerToNull())));
      }
      if (this.widget.onForcePressStart != null || this.widget.onForcePressEnd != null) {
        gestures[$_set](dart.wrapType(force_press.ForcePressGestureRecognizer), new (GestureRecognizerFactoryWithHandlersOfForcePressGestureRecognizer()).new(dart.fn(() => new force_press.ForcePressGestureRecognizer.new({debugOwner: this}), VoidToForcePressGestureRecognizer()), dart.fn(instance => {
          let t31;
          t31 = instance;
          t31.onStart = this.widget.onForcePressStart != null ? dart.bind(this, _forcePressStarted) : null;
          t31.onEnd = this.widget.onForcePressEnd != null ? dart.bind(this, _forcePressEnded) : null;
          t31;
        }, ForcePressGestureRecognizerToNull())));
      }
      return new gesture_detector.RawGestureDetector.new({gestures: gestures, excludeFromSemantics: true, behavior: this.widget.behavior, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1086 || CT.C1086});
    }
  };
  (text_selection._TextSelectionGestureDetectorState.new = function() {
    this[_doubleTapTimer] = null;
    this[_lastTapOffset] = null;
    this[_isDoubleTap] = false;
    this[_lastDragStartDetails] = null;
    this[_lastDragUpdateDetails] = null;
    this[_dragUpdateThrottleTimer] = null;
    text_selection._TextSelectionGestureDetectorState.__proto__.new.call(this);
    ;
  }).prototype = text_selection._TextSelectionGestureDetectorState.prototype;
  dart.addTypeTests(text_selection._TextSelectionGestureDetectorState);
  dart.setMethodSignature(text_selection._TextSelectionGestureDetectorState, () => ({
    __proto__: dart.getMethods(text_selection._TextSelectionGestureDetectorState.__proto__),
    [_handleTapDown]: dart.fnType(dart.void, [tap$.TapDownDetails]),
    [_handleTapUp]: dart.fnType(dart.void, [tap$.TapUpDetails]),
    [_handleTapCancel]: dart.fnType(dart.void, []),
    [_handleDragStart$]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate$]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragUpdateThrottled]: dart.fnType(dart.void, []),
    [_handleDragEnd$]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_forcePressStarted]: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    [_forcePressEnded]: dart.fnType(dart.void, [force_press.ForcePressDetails]),
    [_handleLongPressStart]: dart.fnType(dart.void, [long_press.LongPressStartDetails]),
    [_handleLongPressMoveUpdate]: dart.fnType(dart.void, [long_press.LongPressMoveUpdateDetails]),
    [_handleLongPressEnd]: dart.fnType(dart.void, [long_press.LongPressEndDetails]),
    [_doubleTapTimeout]: dart.fnType(dart.void, []),
    [_isWithinDoubleTapTolerance]: dart.fnType(core.bool, [ui.Offset]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_selection._TextSelectionGestureDetectorState, "package:flutter/src/widgets/text_selection.dart");
  dart.setFieldSignature(text_selection._TextSelectionGestureDetectorState, () => ({
    __proto__: dart.getFields(text_selection._TextSelectionGestureDetectorState.__proto__),
    [_doubleTapTimer]: dart.fieldType(async.Timer),
    [_lastTapOffset]: dart.fieldType(ui.Offset),
    [_isDoubleTap]: dart.fieldType(core.bool),
    [_lastDragStartDetails]: dart.fieldType(drag_details.DragStartDetails),
    [_lastDragUpdateDetails]: dart.fieldType(drag_details.DragUpdateDetails),
    [_dragUpdateThrottleTimer]: dart.fieldType(async.Timer)
  }));
  text_selection._TransparentTapGestureRecognizer = class _TransparentTapGestureRecognizer extends tap$.TapGestureRecognizer {
    rejectGesture(pointer) {
      if (dart.equals(this.state, recognizer.GestureRecognizerState.ready)) {
        this.acceptGesture(pointer);
      } else {
        super.rejectGesture(pointer);
      }
    }
  };
  (text_selection._TransparentTapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    text_selection._TransparentTapGestureRecognizer.__proto__.new.call(this, {debugOwner: debugOwner});
    ;
  }).prototype = text_selection._TransparentTapGestureRecognizer.prototype;
  dart.addTypeTests(text_selection._TransparentTapGestureRecognizer);
  dart.setLibraryUri(text_selection._TransparentTapGestureRecognizer, "package:flutter/src/widgets/text_selection.dart");
  dart.defineLazy(text_selection, {
    /*text_selection._kDragSelectionUpdateThrottle*/get _kDragSelectionUpdateThrottle() {
      return C892 || CT.C892;
    }
  });
  var C1093;
  var C1092;
  var C1096;
  var C1097;
  var C1098;
  var C1095;
  var C1094;
  var C1101;
  var C1102;
  var C1103;
  var C1100;
  var C1099;
  var C1106;
  var C1107;
  var C1105;
  var C1104;
  var C1110;
  var C1111;
  var C1109;
  var C1108;
  var child$36 = dart.privateName(visibility, "Visibility.child");
  var replacement$ = dart.privateName(visibility, "Visibility.replacement");
  var visible$ = dart.privateName(visibility, "Visibility.visible");
  var maintainState$0 = dart.privateName(visibility, "Visibility.maintainState");
  var maintainAnimation$ = dart.privateName(visibility, "Visibility.maintainAnimation");
  var maintainSize$ = dart.privateName(visibility, "Visibility.maintainSize");
  var maintainSemantics$ = dart.privateName(visibility, "Visibility.maintainSemantics");
  var maintainInteractivity$ = dart.privateName(visibility, "Visibility.maintainInteractivity");
  visibility.Visibility = class Visibility extends framework.StatelessWidget {
    get child() {
      return this[child$36];
    }
    set child(value) {
      super.child = value;
    }
    get replacement() {
      return this[replacement$];
    }
    set replacement(value) {
      super.replacement = value;
    }
    get visible() {
      return this[visible$];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$0];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    build(context) {
      if (dart.test(this.maintainSize)) {
        let result = this.child;
        if (!dart.test(this.maintainInteractivity)) {
          result = new basic.IgnorePointer.new({child: this.child, ignoring: !dart.test(this.visible), ignoringSemantics: !dart.test(this.visible) && !dart.test(this.maintainSemantics), $creationLocationd_0dea112b090073317d4: C1094 || CT.C1094});
        }
        return new basic.Opacity.new({opacity: dart.test(this.visible) ? 1.0 : 0.0, alwaysIncludeSemantics: this.maintainSemantics, child: result, $creationLocationd_0dea112b090073317d4: C1099 || CT.C1099});
      }
      if (!!dart.test(this.maintainInteractivity)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 232, 12, "!maintainInteractivity");
      if (!!dart.test(this.maintainSemantics)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 233, 12, "!maintainSemantics");
      if (!!dart.test(this.maintainSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 234, 12, "!maintainSize");
      if (dart.test(this.maintainState)) {
        let result = this.child;
        if (!dart.test(this.maintainAnimation)) result = new ticker_provider.TickerMode.new({child: this.child, enabled: this.visible, $creationLocationd_0dea112b090073317d4: C1104 || CT.C1104});
        return new basic.Offstage.new({child: result, offstage: !dart.test(this.visible), $creationLocationd_0dea112b090073317d4: C1108 || CT.C1108});
      }
      if (!!dart.test(this.maintainAnimation)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 244, 12, "!maintainAnimation");
      if (!!dart.test(this.maintainState)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 245, 12, "!maintainState");
      return dart.test(this.visible) ? this.child : this.replacement;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.Visibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let replacement = opts && 'replacement' in opts ? opts.replacement : C1092 || CT.C1092;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$36] = child;
    this[replacement$] = replacement;
    this[visible$] = visible;
    this[maintainState$0] = maintainState;
    this[maintainAnimation$] = maintainAnimation;
    this[maintainSize$] = maintainSize;
    this[maintainSemantics$] = maintainSemantics;
    this[maintainInteractivity$] = maintainInteractivity;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 65, 15, "child != null");
    if (!(replacement != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 66, 15, "replacement != null");
    if (!(visible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 67, 15, "visible != null");
    if (!(maintainState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 68, 15, "maintainState != null");
    if (!(maintainAnimation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 69, 15, "maintainAnimation != null");
    if (!(maintainSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 70, 15, "maintainSize != null");
    if (!(dart.equals(maintainState, true) || dart.equals(maintainAnimation, false))) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 72, 10, "maintainState == true || maintainAnimation == false");
    if (!(dart.equals(maintainAnimation, true) || dart.equals(maintainSize, false))) dart.assertFailed("Cannot maintain size if animations are not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 76, 10, "maintainAnimation == true || maintainSize == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainSemantics, false))) dart.assertFailed("Cannot maintain semantics if size is not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 80, 10, "maintainSize == true || maintainSemantics == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainInteractivity, false))) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 84, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.Visibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.Visibility.prototype;
  dart.addTypeTests(visibility.Visibility);
  dart.setMethodSignature(visibility.Visibility, () => ({
    __proto__: dart.getMethods(visibility.Visibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.Visibility, "package:flutter/src/widgets/visibility.dart");
  dart.setFieldSignature(visibility.Visibility, () => ({
    __proto__: dart.getFields(visibility.Visibility.__proto__),
    child: dart.finalFieldType(framework.Widget),
    replacement: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  var C1113;
  var C1112;
  var C1116;
  var C1117;
  var C1118;
  var C1115;
  var C1114;
  var C1121;
  var C1122;
  var C1123;
  var C1120;
  var C1119;
  var C1126;
  var C1127;
  var C1125;
  var C1124;
  var C1130;
  var C1131;
  var C1129;
  var C1128;
  var sliver$0 = dart.privateName(visibility, "SliverVisibility.sliver");
  var replacementSliver$ = dart.privateName(visibility, "SliverVisibility.replacementSliver");
  var visible$0 = dart.privateName(visibility, "SliverVisibility.visible");
  var maintainState$1 = dart.privateName(visibility, "SliverVisibility.maintainState");
  var maintainAnimation$0 = dart.privateName(visibility, "SliverVisibility.maintainAnimation");
  var maintainSize$0 = dart.privateName(visibility, "SliverVisibility.maintainSize");
  var maintainSemantics$0 = dart.privateName(visibility, "SliverVisibility.maintainSemantics");
  var maintainInteractivity$0 = dart.privateName(visibility, "SliverVisibility.maintainInteractivity");
  visibility.SliverVisibility = class SliverVisibility extends framework.StatelessWidget {
    get sliver() {
      return this[sliver$0];
    }
    set sliver(value) {
      super.sliver = value;
    }
    get replacementSliver() {
      return this[replacementSliver$];
    }
    set replacementSliver(value) {
      super.replacementSliver = value;
    }
    get visible() {
      return this[visible$0];
    }
    set visible(value) {
      super.visible = value;
    }
    get maintainState() {
      return this[maintainState$1];
    }
    set maintainState(value) {
      super.maintainState = value;
    }
    get maintainAnimation() {
      return this[maintainAnimation$0];
    }
    set maintainAnimation(value) {
      super.maintainAnimation = value;
    }
    get maintainSize() {
      return this[maintainSize$0];
    }
    set maintainSize(value) {
      super.maintainSize = value;
    }
    get maintainSemantics() {
      return this[maintainSemantics$0];
    }
    set maintainSemantics(value) {
      super.maintainSemantics = value;
    }
    get maintainInteractivity() {
      return this[maintainInteractivity$0];
    }
    set maintainInteractivity(value) {
      super.maintainInteractivity = value;
    }
    build(context) {
      if (dart.test(this.maintainSize)) {
        let result = this.sliver;
        if (!dart.test(this.maintainInteractivity)) {
          result = new sliver$.SliverIgnorePointer.new({sliver: this.sliver, ignoring: !dart.test(this.visible), ignoringSemantics: !dart.test(this.visible) && !dart.test(this.maintainSemantics), $creationLocationd_0dea112b090073317d4: C1114 || CT.C1114});
        }
        return new sliver$.SliverOpacity.new({opacity: dart.test(this.visible) ? 1.0 : 0.0, alwaysIncludeSemantics: this.maintainSemantics, sliver: result, $creationLocationd_0dea112b090073317d4: C1119 || CT.C1119});
      }
      if (!!dart.test(this.maintainInteractivity)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 470, 12, "!maintainInteractivity");
      if (!!dart.test(this.maintainSemantics)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 471, 12, "!maintainSemantics");
      if (!!dart.test(this.maintainSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 472, 12, "!maintainSize");
      if (dart.test(this.maintainState)) {
        let result = this.sliver;
        if (!dart.test(this.maintainAnimation)) result = new ticker_provider.TickerMode.new({child: this.sliver, enabled: this.visible, $creationLocationd_0dea112b090073317d4: C1124 || CT.C1124});
        return new sliver$.SliverOffstage.new({sliver: result, offstage: !dart.test(this.visible), $creationLocationd_0dea112b090073317d4: C1128 || CT.C1128});
      }
      if (!!dart.test(this.maintainAnimation)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 482, 12, "!maintainAnimation");
      if (!!dart.test(this.maintainState)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 483, 12, "!maintainState");
      return dart.test(this.visible) ? this.sliver : this.replacementSliver;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("visible", {value: this.visible, ifFalse: "hidden", ifTrue: "visible"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainState", {value: this.maintainState, ifFalse: "maintainState"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainAnimation", {value: this.maintainAnimation, ifFalse: "maintainAnimation"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSize", {value: this.maintainSize, ifFalse: "maintainSize"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainSemantics", {value: this.maintainSemantics, ifFalse: "maintainSemantics"}));
      properties.add(new diagnostics$.FlagProperty.new("maintainInteractivity", {value: this.maintainInteractivity, ifFalse: "maintainInteractivity"}));
    }
  };
  (visibility.SliverVisibility.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let replacementSliver = opts && 'replacementSliver' in opts ? opts.replacementSliver : C1112 || CT.C1112;
    let visible = opts && 'visible' in opts ? opts.visible : true;
    let maintainState = opts && 'maintainState' in opts ? opts.maintainState : false;
    let maintainAnimation = opts && 'maintainAnimation' in opts ? opts.maintainAnimation : false;
    let maintainSize = opts && 'maintainSize' in opts ? opts.maintainSize : false;
    let maintainSemantics = opts && 'maintainSemantics' in opts ? opts.maintainSemantics : false;
    let maintainInteractivity = opts && 'maintainInteractivity' in opts ? opts.maintainInteractivity : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[sliver$0] = sliver;
    this[replacementSliver$] = replacementSliver;
    this[visible$0] = visible;
    this[maintainState$1] = maintainState;
    this[maintainAnimation$0] = maintainAnimation;
    this[maintainSize$0] = maintainSize;
    this[maintainSemantics$0] = maintainSemantics;
    this[maintainInteractivity$0] = maintainInteractivity;
    if (!(sliver != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 310, 15, "sliver != null");
    if (!(replacementSliver != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 311, 15, "replacementSliver != null");
    if (!(visible != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 312, 15, "visible != null");
    if (!(maintainState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 313, 15, "maintainState != null");
    if (!(maintainAnimation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 314, 15, "maintainAnimation != null");
    if (!(maintainSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 315, 15, "maintainSize != null");
    if (!(maintainSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 316, 15, "maintainSemantics != null");
    if (!(maintainInteractivity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 317, 15, "maintainInteractivity != null");
    if (!(dart.equals(maintainState, true) || dart.equals(maintainAnimation, false))) dart.assertFailed("Cannot maintain animations if the state is not also maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 319, 10, "maintainState == true || maintainAnimation == false");
    if (!(dart.equals(maintainAnimation, true) || dart.equals(maintainSize, false))) dart.assertFailed("Cannot maintain size if animations are not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 323, 10, "maintainAnimation == true || maintainSize == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainSemantics, false))) dart.assertFailed("Cannot maintain semantics if size is not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 327, 10, "maintainSize == true || maintainSemantics == false");
    if (!(dart.equals(maintainSize, true) || dart.equals(maintainInteractivity, false))) dart.assertFailed("Cannot maintain interactivity if size is not maintained.", "org-dartlang-app:///packages/flutter/src/widgets/visibility.dart", 331, 10, "maintainSize == true || maintainInteractivity == false");
    visibility.SliverVisibility.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = visibility.SliverVisibility.prototype;
  dart.addTypeTests(visibility.SliverVisibility);
  dart.setMethodSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getMethods(visibility.SliverVisibility.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(visibility.SliverVisibility, "package:flutter/src/widgets/visibility.dart");
  dart.setFieldSignature(visibility.SliverVisibility, () => ({
    __proto__: dart.getFields(visibility.SliverVisibility.__proto__),
    sliver: dart.finalFieldType(framework.Widget),
    replacementSliver: dart.finalFieldType(framework.Widget),
    visible: dart.finalFieldType(core.bool),
    maintainState: dart.finalFieldType(core.bool),
    maintainAnimation: dart.finalFieldType(core.bool),
    maintainSize: dart.finalFieldType(core.bool),
    maintainSemantics: dart.finalFieldType(core.bool),
    maintainInteractivity: dart.finalFieldType(core.bool)
  }));
  sliver$.SliverChildDelegate = class SliverChildDelegate extends core.Object {
    get estimatedChildCount() {
      return null;
    }
    estimateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      return null;
    }
    didFinishLayout(firstIndex, lastIndex) {
    }
    findIndexByKey(key) {
      return null;
    }
    toString() {
      let description = JSArrayOfString().of([]);
      this.debugFillDescription(description);
      return dart.str(diagnostics$.describeIdentity(this)) + "(" + dart.str(description[$join](", ")) + ")";
    }
    debugFillDescription(description) {
      try {
        let children = this.estimatedChildCount;
        if (children != null) description[$add]("estimated child count: " + dart.str(children));
      } catch (e$) {
        let e = dart.getThrown(e$);
        description[$add]("estimated child count: EXCEPTION (" + dart.str(dart.runtimeType(e)) + ")");
      }
    }
  };
  (sliver$.SliverChildDelegate.new = function() {
    ;
  }).prototype = sliver$.SliverChildDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildDelegate);
  dart.setMethodSignature(sliver$.SliverChildDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildDelegate.__proto__),
    estimateMaxScrollOffset: dart.fnType(core.double, [core.int, core.int, core.double, core.double]),
    didFinishLayout: dart.fnType(dart.void, [core.int, core.int]),
    findIndexByKey: dart.fnType(core.int, [key.Key]),
    debugFillDescription: dart.fnType(dart.void, [core.List$(core.String)])
  }));
  dart.setGetterSignature(sliver$.SliverChildDelegate, () => ({
    __proto__: dart.getGetters(sliver$.SliverChildDelegate.__proto__),
    estimatedChildCount: core.int
  }));
  dart.setLibraryUri(sliver$.SliverChildDelegate, "package:flutter/src/widgets/sliver.dart");
  dart.defineExtensionMethods(sliver$.SliverChildDelegate, ['toString']);
  sliver$._SaltedValueKey = class _SaltedValueKey extends key.ValueKey$(key.Key) {};
  (sliver$._SaltedValueKey.new = function(key) {
    if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 210, 42, "key != null");
    sliver$._SaltedValueKey.__proto__.new.call(this, key);
    ;
  }).prototype = sliver$._SaltedValueKey.prototype;
  dart.addTypeTests(sliver$._SaltedValueKey);
  dart.setLibraryUri(sliver$._SaltedValueKey, "package:flutter/src/widgets/sliver.dart");
  var C1132;
  var C1135;
  var C1134;
  var C1133;
  var C1138;
  var C1139;
  var C1137;
  var C1136;
  var C1142;
  var C1141;
  var C1140;
  var C1145;
  var C1146;
  var C1144;
  var C1143;
  var builder$4 = dart.privateName(sliver$, "SliverChildBuilderDelegate.builder");
  var childCount$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.childCount");
  var addAutomaticKeepAlives$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addAutomaticKeepAlives");
  var addRepaintBoundaries$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addRepaintBoundaries");
  var addSemanticIndexes$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.addSemanticIndexes");
  var semanticIndexOffset$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.semanticIndexOffset");
  var semanticIndexCallback$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.semanticIndexCallback");
  var findChildIndexCallback$ = dart.privateName(sliver$, "SliverChildBuilderDelegate.findChildIndexCallback");
  sliver$.SliverChildBuilderDelegate = class SliverChildBuilderDelegate extends sliver$.SliverChildDelegate {
    get builder() {
      return this[builder$4];
    }
    set builder(value) {
      super.builder = value;
    }
    get childCount() {
      return this[childCount$];
    }
    set childCount(value) {
      super.childCount = value;
    }
    get addAutomaticKeepAlives() {
      return this[addAutomaticKeepAlives$];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[addRepaintBoundaries$];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    get addSemanticIndexes() {
      return this[addSemanticIndexes$];
    }
    set addSemanticIndexes(value) {
      super.addSemanticIndexes = value;
    }
    get semanticIndexOffset() {
      return this[semanticIndexOffset$];
    }
    set semanticIndexOffset(value) {
      super.semanticIndexOffset = value;
    }
    get semanticIndexCallback() {
      return this[semanticIndexCallback$];
    }
    set semanticIndexCallback(value) {
      super.semanticIndexCallback = value;
    }
    get findChildIndexCallback() {
      return this[findChildIndexCallback$];
    }
    set findChildIndexCallback(value) {
      super.findChildIndexCallback = value;
    }
    findIndexByKey(key) {
      if (this.findChildIndexCallback == null) return null;
      if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 428, 12, "key != null");
      let childKey = null;
      if (sliver$._SaltedValueKey.is(key)) {
        let saltedValueKey = key;
        childKey = saltedValueKey.value;
      } else {
        childKey = key;
      }
      return this.findChildIndexCallback(childKey);
    }
    build(context, index) {
      if (!(this.builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 441, 12, "builder != null");
      if (dart.notNull(index) < 0 || this.childCount != null && dart.notNull(index) >= dart.notNull(this.childCount)) return null;
      let child = null;
      try {
        child = this.builder(context, index);
      } catch (e) {
        let exception = dart.getThrown(e);
        let stackTrace = dart.stackTrace(e);
        child = sliver$._createErrorWidget(exception, stackTrace);
      }
      if (child == null) return null;
      let key = child.key != null ? new sliver$._SaltedValueKey.new(child.key) : null;
      if (dart.test(this.addRepaintBoundaries)) child = new basic.RepaintBoundary.new({child: child, $creationLocationd_0dea112b090073317d4: C1133 || CT.C1133});
      if (dart.test(this.addSemanticIndexes)) {
        let semanticIndex = this.semanticIndexCallback(child, index);
        if (semanticIndex != null) child = new basic.IndexedSemantics.new({index: dart.notNull(semanticIndex) + dart.notNull(this.semanticIndexOffset), child: child, $creationLocationd_0dea112b090073317d4: C1136 || CT.C1136});
      }
      if (dart.test(this.addAutomaticKeepAlives)) child = new automatic_keep_alive.AutomaticKeepAlive.new({child: child, $creationLocationd_0dea112b090073317d4: C1140 || CT.C1140});
      return new basic.KeyedSubtree.new({child: child, key: key, $creationLocationd_0dea112b090073317d4: C1143 || CT.C1143});
    }
    get estimatedChildCount() {
      return this.childCount;
    }
    shouldRebuild(oldDelegate) {
      sliver$.SliverChildBuilderDelegate._check(oldDelegate);
      return true;
    }
  };
  (sliver$.SliverChildBuilderDelegate.new = function(builder, opts) {
    let findChildIndexCallback = opts && 'findChildIndexCallback' in opts ? opts.findChildIndexCallback : null;
    let childCount = opts && 'childCount' in opts ? opts.childCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C1132 || CT.C1132;
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    this[builder$4] = builder;
    this[findChildIndexCallback$] = findChildIndexCallback;
    this[childCount$] = childCount;
    this[addAutomaticKeepAlives$] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$] = addRepaintBoundaries;
    this[addSemanticIndexes$] = addSemanticIndexes;
    this[semanticIndexCallback$] = semanticIndexCallback;
    this[semanticIndexOffset$] = semanticIndexOffset;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 340, 15, "builder != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 341, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 342, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 343, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 344, 15, "semanticIndexCallback != null");
    sliver$.SliverChildBuilderDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildBuilderDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildBuilderDelegate);
  dart.setMethodSignature(sliver$.SliverChildBuilderDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildBuilderDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(sliver$.SliverChildBuilderDelegate, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverChildBuilderDelegate, () => ({
    __proto__: dart.getFields(sliver$.SliverChildBuilderDelegate.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int])),
    childCount: dart.finalFieldType(core.int),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool),
    addSemanticIndexes: dart.finalFieldType(core.bool),
    semanticIndexOffset: dart.finalFieldType(core.int),
    semanticIndexCallback: dart.finalFieldType(dart.fnType(core.int, [framework.Widget, core.int])),
    findChildIndexCallback: dart.finalFieldType(dart.fnType(core.int, [key.Key]))
  }));
  var _keyToIndex = dart.privateName(sliver$, "_keyToIndex");
  var _isConstantInstance = dart.privateName(sliver$, "_isConstantInstance");
  var _findChildIndex = dart.privateName(sliver$, "_findChildIndex");
  var C1149;
  var C1148;
  var C1147;
  var C1152;
  var C1153;
  var C1151;
  var C1150;
  var C1156;
  var C1155;
  var C1154;
  var C1159;
  var C1160;
  var C1158;
  var C1157;
  var addAutomaticKeepAlives$0 = dart.privateName(sliver$, "SliverChildListDelegate.addAutomaticKeepAlives");
  var addRepaintBoundaries$0 = dart.privateName(sliver$, "SliverChildListDelegate.addRepaintBoundaries");
  var addSemanticIndexes$0 = dart.privateName(sliver$, "SliverChildListDelegate.addSemanticIndexes");
  var semanticIndexOffset$0 = dart.privateName(sliver$, "SliverChildListDelegate.semanticIndexOffset");
  var semanticIndexCallback$0 = dart.privateName(sliver$, "SliverChildListDelegate.semanticIndexCallback");
  var children$3 = dart.privateName(sliver$, "SliverChildListDelegate.children");
  var _keyToIndex$ = dart.privateName(sliver$, "SliverChildListDelegate._keyToIndex");
  sliver$.SliverChildListDelegate = class SliverChildListDelegate extends sliver$.SliverChildDelegate {
    get addAutomaticKeepAlives() {
      return this[addAutomaticKeepAlives$0];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[addRepaintBoundaries$0];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    get addSemanticIndexes() {
      return this[addSemanticIndexes$0];
    }
    set addSemanticIndexes(value) {
      super.addSemanticIndexes = value;
    }
    get semanticIndexOffset() {
      return this[semanticIndexOffset$0];
    }
    set semanticIndexOffset(value) {
      super.semanticIndexOffset = value;
    }
    get semanticIndexCallback() {
      return this[semanticIndexCallback$0];
    }
    set semanticIndexCallback(value) {
      super.semanticIndexCallback = value;
    }
    get children() {
      return this[children$3];
    }
    set children(value) {
      super.children = value;
    }
    get [_keyToIndex]() {
      return this[_keyToIndex$];
    }
    set [_keyToIndex](value) {
      super[_keyToIndex] = value;
    }
    get [_isConstantInstance]() {
      return this[_keyToIndex] == null;
    }
    [_findChildIndex](key) {
      if (dart.test(this[_isConstantInstance])) {
        return null;
      }
      if (!dart.test(this[_keyToIndex][$containsKey](key))) {
        let index = this[_keyToIndex][$_get](null);
        while (dart.notNull(index) < dart.notNull(this.children[$length])) {
          let child = this.children[$_get](index);
          if (child.key != null) {
            this[_keyToIndex][$_set](child.key, index);
          }
          if (dart.equals(child.key, key)) {
            this[_keyToIndex][$_set](null, dart.notNull(index) + 1);
            return index;
          }
          index = dart.notNull(index) + 1;
        }
        this[_keyToIndex][$_set](null, index);
      } else {
        return this[_keyToIndex][$_get](key);
      }
      return null;
    }
    findIndexByKey(key) {
      if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 659, 12, "key != null");
      let childKey = null;
      if (sliver$._SaltedValueKey.is(key)) {
        let saltedValueKey = key;
        childKey = saltedValueKey.value;
      } else {
        childKey = key;
      }
      return this[_findChildIndex](childKey);
    }
    build(context, index) {
      if (!(this.children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 672, 12, "children != null");
      if (dart.notNull(index) < 0 || dart.notNull(index) >= dart.notNull(this.children[$length])) return null;
      let child = this.children[$_get](index);
      let key = child.key != null ? new sliver$._SaltedValueKey.new(child.key) : null;
      if (!(child != null)) dart.assertFailed("The sliver's children must not contain null values, but a null value was found at index " + dart.str(index), "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 678, 7, "child != null");
      if (dart.test(this.addRepaintBoundaries)) child = new basic.RepaintBoundary.new({child: child, $creationLocationd_0dea112b090073317d4: C1147 || CT.C1147});
      if (dart.test(this.addSemanticIndexes)) {
        let semanticIndex = this.semanticIndexCallback(child, index);
        if (semanticIndex != null) child = new basic.IndexedSemantics.new({index: dart.notNull(semanticIndex) + dart.notNull(this.semanticIndexOffset), child: child, $creationLocationd_0dea112b090073317d4: C1150 || CT.C1150});
      }
      if (dart.test(this.addAutomaticKeepAlives)) child = new automatic_keep_alive.AutomaticKeepAlive.new({child: child, $creationLocationd_0dea112b090073317d4: C1154 || CT.C1154});
      return new basic.KeyedSubtree.new({child: child, key: key, $creationLocationd_0dea112b090073317d4: C1157 || CT.C1157});
    }
    get estimatedChildCount() {
      return this.children[$length];
    }
    shouldRebuild(oldDelegate) {
      sliver$.SliverChildListDelegate._check(oldDelegate);
      return !dart.equals(this.children, oldDelegate.children);
    }
  };
  (sliver$.SliverChildListDelegate.new = function(children, opts) {
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C1132 || CT.C1132;
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    this[children$3] = children;
    this[addAutomaticKeepAlives$0] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$0] = addRepaintBoundaries;
    this[addSemanticIndexes$0] = addSemanticIndexes;
    this[semanticIndexCallback$0] = semanticIndexCallback;
    this[semanticIndexOffset$0] = semanticIndexOffset;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 540, 15, "children != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 541, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 542, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 543, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 544, 15, "semanticIndexCallback != null");
    this[_keyToIndex$] = new (LinkedMapOfKey$int()).from([null, 0]);
    sliver$.SliverChildListDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildListDelegate.prototype;
  (sliver$.SliverChildListDelegate.fixed = function(children, opts) {
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let semanticIndexCallback = opts && 'semanticIndexCallback' in opts ? opts.semanticIndexCallback : C1132 || CT.C1132;
    let semanticIndexOffset = opts && 'semanticIndexOffset' in opts ? opts.semanticIndexOffset : 0;
    this[children$3] = children;
    this[addAutomaticKeepAlives$0] = addAutomaticKeepAlives;
    this[addRepaintBoundaries$0] = addRepaintBoundaries;
    this[addSemanticIndexes$0] = addSemanticIndexes;
    this[semanticIndexCallback$0] = semanticIndexCallback;
    this[semanticIndexOffset$0] = semanticIndexOffset;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 563, 15, "children != null");
    if (!(addAutomaticKeepAlives != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 564, 15, "addAutomaticKeepAlives != null");
    if (!(addRepaintBoundaries != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 565, 15, "addRepaintBoundaries != null");
    if (!(addSemanticIndexes != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 566, 15, "addSemanticIndexes != null");
    if (!(semanticIndexCallback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 567, 15, "semanticIndexCallback != null");
    this[_keyToIndex$] = null;
    sliver$.SliverChildListDelegate.__proto__.new.call(this);
    ;
  }).prototype = sliver$.SliverChildListDelegate.prototype;
  dart.addTypeTests(sliver$.SliverChildListDelegate);
  dart.setMethodSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getMethods(sliver$.SliverChildListDelegate.__proto__),
    [_findChildIndex]: dart.fnType(core.int, [key.Key]),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getGetters(sliver$.SliverChildListDelegate.__proto__),
    [_isConstantInstance]: core.bool
  }));
  dart.setLibraryUri(sliver$.SliverChildListDelegate, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverChildListDelegate, () => ({
    __proto__: dart.getFields(sliver$.SliverChildListDelegate.__proto__),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool),
    addSemanticIndexes: dart.finalFieldType(core.bool),
    semanticIndexOffset: dart.finalFieldType(core.int),
    semanticIndexCallback: dart.finalFieldType(dart.fnType(core.int, [framework.Widget, core.int])),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    [_keyToIndex]: dart.finalFieldType(core.Map$(key.Key, core.int))
  }));
  sliver$.SliverWithKeepAliveWidget = class SliverWithKeepAliveWidget extends framework.RenderObjectWidget {};
  (sliver$.SliverWithKeepAliveWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver$.SliverWithKeepAliveWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverWithKeepAliveWidget.prototype;
  dart.addTypeTests(sliver$.SliverWithKeepAliveWidget);
  dart.setLibraryUri(sliver$.SliverWithKeepAliveWidget, "package:flutter/src/widgets/sliver.dart");
  var delegate$3 = dart.privateName(sliver$, "SliverMultiBoxAdaptorWidget.delegate");
  sliver$.SliverMultiBoxAdaptorWidget = class SliverMultiBoxAdaptorWidget extends sliver$.SliverWithKeepAliveWidget {
    get delegate() {
      return this[delegate$3];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createElement() {
      return new sliver$.SliverMultiBoxAdaptorElement.new(this);
    }
    estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      if (!(dart.notNull(lastIndex) >= dart.notNull(firstIndex))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 765, 12, "lastIndex >= firstIndex");
      return this.delegate.estimateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverChildDelegate()).new("delegate", this.delegate));
    }
  };
  (sliver$.SliverMultiBoxAdaptorWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$3] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 725, 15, "delegate != null");
    sliver$.SliverMultiBoxAdaptorWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverMultiBoxAdaptorWidget.prototype;
  dart.addTypeTests(sliver$.SliverMultiBoxAdaptorWidget);
  dart.setMethodSignature(sliver$.SliverMultiBoxAdaptorWidget, () => ({
    __proto__: dart.getMethods(sliver$.SliverMultiBoxAdaptorWidget.__proto__),
    createElement: dart.fnType(sliver$.SliverMultiBoxAdaptorElement, []),
    estimateMaxScrollOffset: dart.fnType(core.double, [sliver.SliverConstraints, core.int, core.int, core.double, core.double])
  }));
  dart.setLibraryUri(sliver$.SliverMultiBoxAdaptorWidget, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverMultiBoxAdaptorWidget, () => ({
    __proto__: dart.getFields(sliver$.SliverMultiBoxAdaptorWidget.__proto__),
    delegate: dart.finalFieldType(sliver$.SliverChildDelegate)
  }));
  sliver$.SliverList = class SliverList extends sliver$.SliverMultiBoxAdaptorWidget {
    createRenderObject(context) {
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_list.RenderSliverList.new({childManager: element});
    }
  };
  (sliver$.SliverList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver$.SliverList.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverList.prototype;
  dart.addTypeTests(sliver$.SliverList);
  dart.setMethodSignature(sliver$.SliverList, () => ({
    __proto__: dart.getMethods(sliver$.SliverList.__proto__),
    createRenderObject: dart.fnType(sliver_list.RenderSliverList, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverList, "package:flutter/src/widgets/sliver.dart");
  var itemExtent$ = dart.privateName(sliver$, "SliverFixedExtentList.itemExtent");
  sliver$.SliverFixedExtentList = class SliverFixedExtentList extends sliver$.SliverMultiBoxAdaptorWidget {
    get itemExtent() {
      return this[itemExtent$];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    createRenderObject(context) {
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_fixed_extent_list.RenderSliverFixedExtentList.new({childManager: element, itemExtent: this.itemExtent});
    }
    updateRenderObject(context, renderObject) {
      sliver_fixed_extent_list.RenderSliverFixedExtentList._check(renderObject);
      renderObject.itemExtent = this.itemExtent;
    }
  };
  (sliver$.SliverFixedExtentList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$] = itemExtent;
    sliver$.SliverFixedExtentList.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverFixedExtentList.prototype;
  dart.addTypeTests(sliver$.SliverFixedExtentList);
  dart.setMethodSignature(sliver$.SliverFixedExtentList, () => ({
    __proto__: dart.getMethods(sliver$.SliverFixedExtentList.__proto__),
    createRenderObject: dart.fnType(sliver_fixed_extent_list.RenderSliverFixedExtentList, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverFixedExtentList, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverFixedExtentList, () => ({
    __proto__: dart.getFields(sliver$.SliverFixedExtentList.__proto__),
    itemExtent: dart.finalFieldType(core.double)
  }));
  var gridDelegate$ = dart.privateName(sliver$, "SliverGrid.gridDelegate");
  sliver$.SliverGrid = class SliverGrid extends sliver$.SliverMultiBoxAdaptorWidget {
    get gridDelegate() {
      return this[gridDelegate$];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    createRenderObject(context) {
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_grid.RenderSliverGrid.new({childManager: element, gridDelegate: this.gridDelegate});
    }
    updateRenderObject(context, renderObject) {
      sliver_grid.RenderSliverGrid._check(renderObject);
      renderObject.gridDelegate = this.gridDelegate;
    }
    estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      let t33;
      t33 = super.estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      return t33 == null ? this.gridDelegate.getLayout(constraints).computeMaxScrollOffset(this.delegate.estimatedChildCount) : t33;
    }
  };
  (sliver$.SliverGrid.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = gridDelegate;
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  (sliver$.SliverGrid.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = new sliver_grid.SliverGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: new sliver$.SliverChildListDelegate.new(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  (sliver$.SliverGrid.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$] = new sliver_grid.SliverGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    sliver$.SliverGrid.__proto__.new.call(this, {key: key, delegate: new sliver$.SliverChildListDelegate.new(children), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverGrid.prototype;
  dart.addTypeTests(sliver$.SliverGrid);
  dart.setMethodSignature(sliver$.SliverGrid, () => ({
    __proto__: dart.getMethods(sliver$.SliverGrid.__proto__),
    createRenderObject: dart.fnType(sliver_grid.RenderSliverGrid, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverGrid, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverGrid, () => ({
    __proto__: dart.getFields(sliver$.SliverGrid.__proto__),
    gridDelegate: dart.finalFieldType(sliver_grid.SliverGridDelegate)
  }));
  var _childWidgets = dart.privateName(sliver$, "_childWidgets");
  var _childElements = dart.privateName(sliver$, "_childElements");
  var _currentBeforeChild = dart.privateName(sliver$, "_currentBeforeChild");
  var _currentlyUpdatingChildIndex = dart.privateName(sliver$, "_currentlyUpdatingChildIndex");
  var _didUnderflow = dart.privateName(sliver$, "_didUnderflow");
  var _build = dart.privateName(sliver$, "_build");
  sliver$.SliverMultiBoxAdaptorElement = class SliverMultiBoxAdaptorElement extends framework.RenderObjectElement {
    get widget() {
      return sliver$.SliverMultiBoxAdaptorWidget.as(super.widget);
    }
    get renderObject() {
      return sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.as(super.renderObject);
    }
    update(newWidget) {
      sliver$.SliverMultiBoxAdaptorWidget._check(newWidget);
      let oldWidget = this.widget;
      super.update(newWidget);
      let newDelegate = newWidget.delegate;
      let oldDelegate = oldWidget.delegate;
      if (!dart.equals(newDelegate, oldDelegate) && (!dart.equals(dart.runtimeType(newDelegate), dart.runtimeType(oldDelegate)) || dart.test(newDelegate.shouldRebuild(oldDelegate)))) this.performRebuild();
    }
    performRebuild() {
      let t33;
      this[_childWidgets][$clear]();
      super.performRebuild();
      this[_currentBeforeChild] = null;
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1069, 12, "_currentlyUpdatingChildIndex == null");
      try {
        let newChildren = new (SplayTreeMapOfint$Element()).new();
        const processElement = index => {
          this[_currentlyUpdatingChildIndex] = index;
          if (this[_childElements]._get(index) != null && !dart.equals(this[_childElements]._get(index), newChildren._get(index))) {
            this[_childElements]._set(index, this.updateChild(this[_childElements]._get(index), null, index));
          }
          let newChild = this.updateChild(newChildren._get(index), this[_build](index), index);
          if (newChild != null) {
            this[_childElements]._set(index, newChild);
            let parentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(newChild.renderObject.parentData);
            if (!dart.test(parentData.keptAlive)) this[_currentBeforeChild] = box$.RenderBox.as(newChild.renderObject);
          } else {
            this[_childElements].remove(index);
          }
        };
        dart.fn(processElement, intTovoid());
        for (let index of this[_childElements].keys[$toList]()) {
          let key = this[_childElements]._get(index).widget.key;
          let newIndex = key == null ? null : this.widget.delegate.findIndexByKey(key);
          if (newIndex != null && newIndex != index) {
            newChildren._set(newIndex, this[_childElements]._get(index));
            newChildren.putIfAbsent(index, dart.fn(() => null, VoidToNull()));
            this[_childElements].remove(index);
          } else {
            newChildren.putIfAbsent(index, dart.fn(() => this[_childElements]._get(index), VoidToElement()));
          }
        }
        this.renderObject.debugChildIntegrityEnabled = false;
        newChildren.keys[$forEach](processElement);
        if (dart.test(this[_didUnderflow])) {
          let lastKey = (t33 = this[_childElements].lastKey(), t33 == null ? -1 : t33);
          let rightBoundary = dart.notNull(lastKey) + 1;
          newChildren._set(rightBoundary, this[_childElements]._get(rightBoundary));
          processElement(rightBoundary);
        }
      } finally {
        this[_currentlyUpdatingChildIndex] = null;
        this.renderObject.debugChildIntegrityEnabled = true;
      }
    }
    [_build](index) {
      return this[_childWidgets][$putIfAbsent](index, dart.fn(() => this.widget.delegate.build(this, index), VoidToWidget()));
    }
    createChild(index, opts) {
      let after = opts && 'after' in opts ? opts.after : null;
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1124, 12, "_currentlyUpdatingChildIndex == null");
      this.owner.buildScope(this, dart.fn(() => {
        let insertFirst = after == null;
        if (!(insertFirst || this[_childElements]._get(dart.notNull(index) - 1) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1127, 14, "insertFirst || _childElements[index-1] != null");
        this[_currentBeforeChild] = insertFirst ? null : box$.RenderBox.as(this[_childElements]._get(dart.notNull(index) - 1).renderObject);
        let newChild = null;
        try {
          this[_currentlyUpdatingChildIndex] = index;
          newChild = this.updateChild(this[_childElements]._get(index), this[_build](index), index);
        } finally {
          this[_currentlyUpdatingChildIndex] = null;
        }
        if (newChild != null) {
          this[_childElements]._set(index, newChild);
        } else {
          this[_childElements].remove(index);
        }
      }, VoidToNull()));
    }
    updateChild(child, newWidget, newSlot) {
      let t33, t33$, t33$0, t33$1;
      let oldParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as((t33$ = (t33 = child, t33 == null ? null : t33.renderObject), t33$ == null ? null : t33$.parentData));
      let newChild = super.updateChild(child, newWidget, newSlot);
      let newParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as((t33$1 = (t33$0 = newChild, t33$0 == null ? null : t33$0.renderObject), t33$1 == null ? null : t33$1.parentData));
      if (!dart.equals(oldParentData, newParentData) && oldParentData != null && newParentData != null) {
        newParentData.layoutOffset = oldParentData.layoutOffset;
      }
      return newChild;
    }
    forgetChild(child) {
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1159, 12, "child != null");
      if (!(child.slot != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1160, 12, "child.slot != null");
      if (!dart.test(this[_childElements].containsKey(child.slot))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1161, 12, "_childElements.containsKey(child.slot)");
      this[_childElements].remove(child.slot);
      super.forgetChild(child);
    }
    removeChild(child) {
      let index = this.renderObject.indexOf(child);
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1169, 12, "_currentlyUpdatingChildIndex == null");
      if (!(dart.notNull(index) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1170, 12, "index >= 0");
      this.owner.buildScope(this, dart.fn(() => {
        if (!dart.test(this[_childElements].containsKey(index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1172, 14, "_childElements.containsKey(index)");
        try {
          this[_currentlyUpdatingChildIndex] = index;
          let result = this.updateChild(this[_childElements]._get(index), null, index);
          if (!(result == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1176, 16, "result == null");
        } finally {
          this[_currentlyUpdatingChildIndex] = null;
        }
        this[_childElements].remove(index);
        if (!!dart.test(this[_childElements].containsKey(index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1181, 14, "!_childElements.containsKey(index)");
      }, VoidToNull()));
    }
    static _extrapolateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount) {
      if (lastIndex === dart.notNull(childCount) - 1) return trailingScrollOffset;
      let reifiedCount = dart.notNull(lastIndex) - dart.notNull(firstIndex) + 1;
      let averageExtent = (dart.notNull(trailingScrollOffset) - dart.notNull(leadingScrollOffset)) / reifiedCount;
      let remainingCount = dart.notNull(childCount) - dart.notNull(lastIndex) - 1;
      return dart.notNull(trailingScrollOffset) + averageExtent * remainingCount;
    }
    estimateMaxScrollOffset(constraints, opts) {
      let t33;
      let firstIndex = opts && 'firstIndex' in opts ? opts.firstIndex : null;
      let lastIndex = opts && 'lastIndex' in opts ? opts.lastIndex : null;
      let leadingScrollOffset = opts && 'leadingScrollOffset' in opts ? opts.leadingScrollOffset : null;
      let trailingScrollOffset = opts && 'trailingScrollOffset' in opts ? opts.trailingScrollOffset : null;
      let childCount = this.childCount;
      if (childCount == null) return 1 / 0;
      t33 = this.widget.estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      return t33 == null ? sliver$.SliverMultiBoxAdaptorElement._extrapolateMaxScrollOffset(firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset, childCount) : t33;
    }
    get childCount() {
      return this.widget.delegate.estimatedChildCount;
    }
    didStartLayout() {
      if (!dart.test(this.debugAssertChildListLocked())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1231, 12, "debugAssertChildListLocked()");
    }
    didFinishLayout() {
      let t33, t33$;
      if (!dart.test(this.debugAssertChildListLocked())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1236, 12, "debugAssertChildListLocked()");
      let firstIndex = (t33 = this[_childElements].firstKey(), t33 == null ? 0 : t33);
      let lastIndex = (t33$ = this[_childElements].lastKey(), t33$ == null ? 0 : t33$);
      this.widget.delegate.didFinishLayout(firstIndex, lastIndex);
    }
    debugAssertChildListLocked() {
      if (!(this[_currentlyUpdatingChildIndex] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1246, 12, "_currentlyUpdatingChildIndex == null");
      return true;
    }
    didAdoptChild(child) {
      if (!(this[_currentlyUpdatingChildIndex] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1252, 12, "_currentlyUpdatingChildIndex != null");
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(child.parentData);
      childParentData.index = this[_currentlyUpdatingChildIndex];
    }
    setDidUnderflow(value) {
      this[_didUnderflow] = value;
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      core.int._check(slot);
      if (!(slot != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1266, 12, "slot != null");
      if (!(this[_currentlyUpdatingChildIndex] == slot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1267, 12, "_currentlyUpdatingChildIndex == slot");
      if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1268, 12, "renderObject.debugValidateChild(child)");
      this.renderObject.insert(box$.RenderBox.as(child), {after: this[_currentBeforeChild]});
      if (!dart.test(dart.fn(() => {
        let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(child.parentData);
        if (!(slot == childParentData.index)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1272, 14, "slot == childParentData.index");
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1270, 12, "() {\r\n      final SliverMultiBoxAdaptorParentData childParentData = child.parentData as SliverMultiBoxAdaptorParentData;\r\n      assert(slot == childParentData.index);\r\n      return true;\r\n    }()");
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      core.int._check(slot);
      if (!(slot != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1279, 12, "slot != null");
      if (!(this[_currentlyUpdatingChildIndex] == slot)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1280, 12, "_currentlyUpdatingChildIndex == slot");
      this.renderObject.move(box$.RenderBox.as(child), {after: this[_currentBeforeChild]});
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      if (!(this[_currentlyUpdatingChildIndex] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1286, 12, "_currentlyUpdatingChildIndex != null");
      this.renderObject.remove(box$.RenderBox.as(child));
    }
    visitChildren(visitor) {
      if (!!dart.test(this[_childElements].values[$any](dart.fn(child => child == null, ElementTobool())))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1294, 12, "!_childElements.values.any((Element child) => child == null)");
      this[_childElements].values[$toList]()[$forEach](visitor);
    }
    debugVisitOnstageChildren(visitor) {
      this[_childElements].values[$where](dart.fn(child => {
        let parentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(child.renderObject.parentData);
        let itemExtent = null;
        switch (this.renderObject.constraints.axis) {
          case C78 || CT.C78:
          {
            itemExtent = child.renderObject.paintBounds.width;
            break;
          }
          case C77 || CT.C77:
          {
            itemExtent = child.renderObject.paintBounds.height;
            break;
          }
        }
        return dart.notNull(parentData.layoutOffset) < dart.notNull(this.renderObject.constraints.scrollOffset) + dart.notNull(this.renderObject.constraints.remainingPaintExtent) && dart.notNull(parentData.layoutOffset) + dart.notNull(itemExtent) > dart.notNull(this.renderObject.constraints.scrollOffset);
      }, ElementTobool()))[$forEach](visitor);
    }
  };
  (sliver$.SliverMultiBoxAdaptorElement.new = function(widget) {
    this[_childWidgets] = new (IdentityMapOfint$Widget()).new();
    this[_childElements] = new (SplayTreeMapOfint$Element()).new();
    this[_currentBeforeChild] = null;
    this[_currentlyUpdatingChildIndex] = null;
    this[_didUnderflow] = false;
    sliver$.SliverMultiBoxAdaptorElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver$.SliverMultiBoxAdaptorElement.prototype;
  dart.addTypeTests(sliver$.SliverMultiBoxAdaptorElement);
  sliver$.SliverMultiBoxAdaptorElement[dart.implements] = () => [sliver_multi_box_adaptor.RenderSliverBoxChildManager];
  dart.setMethodSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getMethods(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    [_build]: dart.fnType(framework.Widget, [core.int]),
    createChild: dart.fnType(dart.void, [core.int], {after: box$.RenderBox}, {}),
    removeChild: dart.fnType(dart.void, [box$.RenderBox]),
    estimateMaxScrollOffset: dart.fnType(core.double, [sliver.SliverConstraints], {firstIndex: core.int, lastIndex: core.int, leadingScrollOffset: core.double, trailingScrollOffset: core.double}, {}),
    didStartLayout: dart.fnType(dart.void, []),
    didFinishLayout: dart.fnType(dart.void, []),
    debugAssertChildListLocked: dart.fnType(core.bool, []),
    didAdoptChild: dart.fnType(dart.void, [box$.RenderBox]),
    setDidUnderflow: dart.fnType(dart.void, [core.bool]),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getGetters(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    widget: sliver$.SliverMultiBoxAdaptorWidget,
    renderObject: sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor,
    childCount: core.int
  }));
  dart.setLibraryUri(sliver$.SliverMultiBoxAdaptorElement, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverMultiBoxAdaptorElement, () => ({
    __proto__: dart.getFields(sliver$.SliverMultiBoxAdaptorElement.__proto__),
    [_childWidgets]: dart.finalFieldType(core.Map$(core.int, framework.Widget)),
    [_childElements]: dart.finalFieldType(collection.SplayTreeMap$(core.int, framework.Element)),
    [_currentBeforeChild]: dart.fieldType(box$.RenderBox),
    [_currentlyUpdatingChildIndex]: dart.fieldType(core.int),
    [_didUnderflow]: dart.fieldType(core.bool)
  }));
  var opacity$2 = dart.privateName(sliver$, "SliverOpacity.opacity");
  var alwaysIncludeSemantics$2 = dart.privateName(sliver$, "SliverOpacity.alwaysIncludeSemantics");
  sliver$.SliverOpacity = class SliverOpacity extends framework.SingleChildRenderObjectWidget {
    get opacity() {
      return this[opacity$2];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$2];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_sliver.RenderSliverOpacity.new({opacity: this.opacity, alwaysIncludeSemantics: this.alwaysIncludeSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t33;
      proxy_sliver.RenderSliverOpacity._check(renderObject);
      t33 = renderObject;
      t33.opacity = this.opacity;
      t33.alwaysIncludeSemantics = this.alwaysIncludeSemantics;
      t33;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfdouble()).new("opacity", this.opacity));
      properties.add(new diagnostics$.FlagProperty.new("alwaysIncludeSemantics", {value: this.alwaysIncludeSemantics, ifTrue: "alwaysIncludeSemantics"}));
    }
  };
  (sliver$.SliverOpacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[opacity$2] = opacity;
    this[alwaysIncludeSemantics$2] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1369, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    if (!(alwaysIncludeSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1370, 15, "alwaysIncludeSemantics != null");
    sliver$.SliverOpacity.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverOpacity.prototype;
  dart.addTypeTests(sliver$.SliverOpacity);
  dart.setMethodSignature(sliver$.SliverOpacity, () => ({
    __proto__: dart.getMethods(sliver$.SliverOpacity.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverOpacity, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverOpacity, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverOpacity, () => ({
    __proto__: dart.getFields(sliver$.SliverOpacity.__proto__),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var ignoring$0 = dart.privateName(sliver$, "SliverIgnorePointer.ignoring");
  var ignoringSemantics$1 = dart.privateName(sliver$, "SliverIgnorePointer.ignoringSemantics");
  sliver$.SliverIgnorePointer = class SliverIgnorePointer extends framework.SingleChildRenderObjectWidget {
    get ignoring() {
      return this[ignoring$0];
    }
    set ignoring(value) {
      super.ignoring = value;
    }
    get ignoringSemantics() {
      return this[ignoringSemantics$1];
    }
    set ignoringSemantics(value) {
      super.ignoringSemantics = value;
    }
    createRenderObject(context) {
      return new proxy_sliver.RenderSliverIgnorePointer.new({ignoring: this.ignoring, ignoringSemantics: this.ignoringSemantics});
    }
    updateRenderObject(context, renderObject) {
      let t33;
      proxy_sliver.RenderSliverIgnorePointer._check(renderObject);
      t33 = renderObject;
      t33.ignoring = this.ignoring;
      t33.ignoringSemantics = this.ignoringSemantics;
      t33;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoring", this.ignoring));
      properties.add(new (DiagnosticsPropertyOfbool()).new("ignoringSemantics", this.ignoringSemantics, {defaultValue: null}));
    }
  };
  (sliver$.SliverIgnorePointer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let ignoring = opts && 'ignoring' in opts ? opts.ignoring : true;
    let ignoringSemantics = opts && 'ignoringSemantics' in opts ? opts.ignoringSemantics : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[ignoring$0] = ignoring;
    this[ignoringSemantics$1] = ignoringSemantics;
    if (!(ignoring != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1438, 15, "ignoring != null");
    sliver$.SliverIgnorePointer.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverIgnorePointer.prototype;
  dart.addTypeTests(sliver$.SliverIgnorePointer);
  dart.setMethodSignature(sliver$.SliverIgnorePointer, () => ({
    __proto__: dart.getMethods(sliver$.SliverIgnorePointer.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverIgnorePointer, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver$.SliverIgnorePointer, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverIgnorePointer, () => ({
    __proto__: dart.getFields(sliver$.SliverIgnorePointer.__proto__),
    ignoring: dart.finalFieldType(core.bool),
    ignoringSemantics: dart.finalFieldType(core.bool)
  }));
  var offstage$0 = dart.privateName(sliver$, "SliverOffstage.offstage");
  sliver$.SliverOffstage = class SliverOffstage extends framework.SingleChildRenderObjectWidget {
    get offstage() {
      return this[offstage$0];
    }
    set offstage(value) {
      super.offstage = value;
    }
    createRenderObject(context) {
      return new proxy_sliver.RenderSliverOffstage.new({offstage: this.offstage});
    }
    updateRenderObject(context, renderObject) {
      proxy_sliver.RenderSliverOffstage._check(renderObject);
      renderObject.offstage = this.offstage;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("offstage", this.offstage));
    }
    createElement() {
      return new sliver$._SliverOffstageElement.new(this);
    }
  };
  (sliver$.SliverOffstage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let offstage = opts && 'offstage' in opts ? opts.offstage : true;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[offstage$0] = offstage;
    if (!(offstage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1495, 15, "offstage != null");
    sliver$.SliverOffstage.__proto__.new.call(this, {key: key, child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.SliverOffstage.prototype;
  dart.addTypeTests(sliver$.SliverOffstage);
  dart.setMethodSignature(sliver$.SliverOffstage, () => ({
    __proto__: dart.getMethods(sliver$.SliverOffstage.__proto__),
    createRenderObject: dart.fnType(proxy_sliver.RenderSliverOffstage, [framework.BuildContext]),
    createElement: dart.fnType(sliver$._SliverOffstageElement, [])
  }));
  dart.setLibraryUri(sliver$.SliverOffstage, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.SliverOffstage, () => ({
    __proto__: dart.getFields(sliver$.SliverOffstage.__proto__),
    offstage: dart.finalFieldType(core.bool)
  }));
  sliver$._SliverOffstageElement = class _SliverOffstageElement extends framework.SingleChildRenderObjectElement {
    get widget() {
      return sliver$.SliverOffstage.as(super.widget);
    }
    debugVisitOnstageChildren(visitor) {
      if (!dart.test(this.widget.offstage)) super.debugVisitOnstageChildren(visitor);
    }
  };
  (sliver$._SliverOffstageElement.new = function(widget) {
    sliver$._SliverOffstageElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver$._SliverOffstageElement.prototype;
  dart.addTypeTests(sliver$._SliverOffstageElement);
  dart.setGetterSignature(sliver$._SliverOffstageElement, () => ({
    __proto__: dart.getGetters(sliver$._SliverOffstageElement.__proto__),
    widget: sliver$.SliverOffstage
  }));
  dart.setLibraryUri(sliver$._SliverOffstageElement, "package:flutter/src/widgets/sliver.dart");
  var keepAlive$ = dart.privateName(sliver$, "KeepAlive.keepAlive");
  sliver$.KeepAlive = class KeepAlive extends framework.ParentDataWidget$(sliver_multi_box_adaptor.KeepAliveParentDataMixin) {
    get keepAlive() {
      return this[keepAlive$];
    }
    set keepAlive(value) {
      super.keepAlive = value;
    }
    applyParentData(renderObject) {
      if (!sliver_multi_box_adaptor.KeepAliveParentDataMixin.is(renderObject.parentData)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1577, 12, "renderObject.parentData is KeepAliveParentDataMixin");
      let parentData = sliver_multi_box_adaptor.KeepAliveParentDataMixin.as(renderObject.parentData);
      if (!dart.equals(parentData.keepAlive, this.keepAlive)) {
        parentData.keepAlive = this.keepAlive;
        let targetParent = renderObject.parent;
        if (object$.RenderObject.is(targetParent) && !dart.test(this.keepAlive)) targetParent.markNeedsLayout();
      }
    }
    debugCanApplyOutOfTurn() {
      return this.keepAlive;
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(sliver$.SliverWithKeepAliveWidget);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfbool()).new("keepAlive", this.keepAlive));
    }
  };
  (sliver$.KeepAlive.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let keepAlive = opts && 'keepAlive' in opts ? opts.keepAlive : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[keepAlive$] = keepAlive;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1566, 15, "child != null");
    if (!(keepAlive != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver.dart", 1567, 15, "keepAlive != null");
    sliver$.KeepAlive.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver$.KeepAlive.prototype;
  dart.addTypeTests(sliver$.KeepAlive);
  dart.setMethodSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getMethods(sliver$.KeepAlive.__proto__),
    applyParentData: dart.fnType(dart.void, [object$.RenderObject])
  }));
  dart.setGetterSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getGetters(sliver$.KeepAlive.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(sliver$.KeepAlive, "package:flutter/src/widgets/sliver.dart");
  dart.setFieldSignature(sliver$.KeepAlive, () => ({
    __proto__: dart.getFields(sliver$.KeepAlive.__proto__),
    keepAlive: dart.finalFieldType(core.bool)
  }));
  sliver$._kDefaultSemanticIndexCallback = function _kDefaultSemanticIndexCallback(_, localIndex) {
    return localIndex;
  };
  sliver$._createErrorWidget = function _createErrorWidget(exception, stackTrace) {
    let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stackTrace, library: "widgets library", context: new assertions.ErrorDescription.new("building")});
    assertions.FlutterError.reportError(details);
    return framework.ErrorWidget.builder(details);
  };
  var child$37 = dart.privateName(automatic_keep_alive, "AutomaticKeepAlive.child");
  automatic_keep_alive.AutomaticKeepAlive = class AutomaticKeepAlive extends framework.StatefulWidget {
    get child() {
      return this[child$37];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new automatic_keep_alive._AutomaticKeepAliveState.new();
    }
  };
  (automatic_keep_alive.AutomaticKeepAlive.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$37] = child;
    automatic_keep_alive.AutomaticKeepAlive.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = automatic_keep_alive.AutomaticKeepAlive.prototype;
  dart.addTypeTests(automatic_keep_alive.AutomaticKeepAlive);
  dart.setMethodSignature(automatic_keep_alive.AutomaticKeepAlive, () => ({
    __proto__: dart.getMethods(automatic_keep_alive.AutomaticKeepAlive.__proto__),
    createState: dart.fnType(automatic_keep_alive._AutomaticKeepAliveState, [])
  }));
  dart.setLibraryUri(automatic_keep_alive.AutomaticKeepAlive, "package:flutter/src/widgets/automatic_keep_alive.dart");
  dart.setFieldSignature(automatic_keep_alive.AutomaticKeepAlive, () => ({
    __proto__: dart.getFields(automatic_keep_alive.AutomaticKeepAlive.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _handles$ = dart.privateName(automatic_keep_alive, "_handles");
  var _child$2 = dart.privateName(automatic_keep_alive, "_child");
  var _keepingAlive = dart.privateName(automatic_keep_alive, "_keepingAlive");
  var _updateChild = dart.privateName(automatic_keep_alive, "_updateChild");
  var _addClient = dart.privateName(automatic_keep_alive, "_addClient");
  var C1163;
  var C1164;
  var C1162;
  var C1161;
  var _createCallback = dart.privateName(automatic_keep_alive, "_createCallback");
  var _getChildElement = dart.privateName(automatic_keep_alive, "_getChildElement");
  var _updateParentDataOfChild = dart.privateName(automatic_keep_alive, "_updateParentDataOfChild");
  var C1167;
  var C1168;
  var C1166;
  var C1165;
  automatic_keep_alive._AutomaticKeepAliveState = class _AutomaticKeepAliveState extends framework.State$(automatic_keep_alive.AutomaticKeepAlive) {
    initState() {
      super.initState();
      this[_updateChild]();
    }
    didUpdateWidget(oldWidget) {
      automatic_keep_alive.AutomaticKeepAlive._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      this[_updateChild]();
    }
    [_updateChild]() {
      this[_child$2] = new (NotificationListenerOfKeepAliveNotification()).new({onNotification: dart.bind(this, _addClient), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1161 || CT.C1161});
    }
    dispose() {
      if (this[_handles$] != null) {
        for (let handle of this[_handles$][$keys])
          handle.removeListener(this[_handles$][$_get](handle));
      }
      super.dispose();
    }
    [_addClient](notification) {
      let handle = notification.handle;
      this[_handles$] == null ? this[_handles$] = new (LinkedMapOfListenable$VoidTovoid()).new() : null;
      if (!!dart.test(this[_handles$][$containsKey](handle))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 79, 12, "!_handles.containsKey(handle)");
      this[_handles$][$_set](handle, this[_createCallback](handle));
      handle.addListener(this[_handles$][$_get](handle));
      if (!dart.test(this[_keepingAlive])) {
        this[_keepingAlive] = true;
        let childElement = this[_getChildElement]();
        if (childElement != null) {
          this[_updateParentDataOfChild](childElement);
        } else {
          binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(timeStamp => {
            if (!dart.test(this.mounted)) {
              return;
            }
            let childElement = this[_getChildElement]();
            if (!(childElement != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 97, 18, "childElement != null");
            this[_updateParentDataOfChild](childElement);
          }, DurationToNull()));
        }
      }
      return false;
    }
    [_getChildElement]() {
      if (!dart.test(this.mounted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 110, 12, "mounted");
      let element = framework.Element.as(this.context);
      let childElement = null;
      element.visitChildren(dart.fn(child => {
        childElement = child;
      }, ElementToNull()));
      if (!(childElement == null || ParentDataElementOfKeepAliveParentDataMixin().is(childElement))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 135, 12, "childElement == null || childElement is ParentDataElement<KeepAliveParentDataMixin>");
      return ParentDataElementOfKeepAliveParentDataMixin().as(childElement);
    }
    [_updateParentDataOfChild](childElement) {
      childElement.applyWidgetOutOfTurn(ParentDataWidgetOfKeepAliveParentDataMixin().as(this.build(this.context)));
    }
    [_createCallback](handle) {
      return dart.fn(() => {
        if (!dart.test(dart.fn(() => {
          if (!dart.test(this.mounted)) {
            dart.throw(assertions.FlutterError.new("AutomaticKeepAlive handle triggered after AutomaticKeepAlive was disposed.\n" + "Widgets should always trigger their KeepAliveNotification handle when they are " + "deactivated, so that they (or their handle) do not send spurious events later " + "when they are no longer in the tree."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 145, 14, "() {\r\n        if (!mounted) {\r\n          throw FlutterError(\r\n            'AutomaticKeepAlive handle triggered after AutomaticKeepAlive was disposed.\\n'\r\n            'Widgets should always trigger their KeepAliveNotification handle when they are '\r\n            'deactivated, so that they (or their handle) do not send spurious events later '\r\n            'when they are no longer in the tree.'\r\n          );\r\n        }\r\n        return true;\r\n      }()");
        this[_handles$][$remove](handle);
        if (dart.test(this[_handles$][$isEmpty])) {
          if (dart.notNull(binding$3.SchedulerBinding.instance.schedulerPhase.index) < dart.notNull(binding$3.SchedulerPhase.persistentCallbacks.index)) {
            this.setState(dart.fn(() => {
              this[_keepingAlive] = false;
            }, VoidToNull()));
          } else {
            this[_keepingAlive] = false;
            async.scheduleMicrotask(dart.fn(() => {
              if (dart.test(this.mounted) && dart.test(this[_handles$][$isEmpty])) {
                this.setState(dart.fn(() => {
                  if (!!dart.test(this[_keepingAlive])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 220, 24, "!_keepingAlive");
                }, VoidToNull()));
              }
            }, VoidToNull()));
          }
        }
      }, VoidToNull());
    }
    build(context) {
      if (!(this[_child$2] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 231, 12, "_child != null");
      return new sliver$.KeepAlive.new({keepAlive: this[_keepingAlive], child: this[_child$2], $creationLocationd_0dea112b090073317d4: C1165 || CT.C1165});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new diagnostics$.FlagProperty.new("_keepingAlive", {value: this[_keepingAlive], ifTrue: "keeping subtree alive"}));
      description.add(new (DiagnosticsPropertyOfMapOfListenable$VoidTovoid()).new("handles", this[_handles$], {description: this[_handles$] != null ? dart.str(this[_handles$][$length]) + " active client" + (this[_handles$][$length] === 1 ? "" : "s") : null, ifNull: "no notifications ever received"}));
    }
  };
  (automatic_keep_alive._AutomaticKeepAliveState.new = function() {
    this[_handles$] = null;
    this[_child$2] = null;
    this[_keepingAlive] = false;
    automatic_keep_alive._AutomaticKeepAliveState.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive._AutomaticKeepAliveState.prototype;
  dart.addTypeTests(automatic_keep_alive._AutomaticKeepAliveState);
  dart.setMethodSignature(automatic_keep_alive._AutomaticKeepAliveState, () => ({
    __proto__: dart.getMethods(automatic_keep_alive._AutomaticKeepAliveState.__proto__),
    [_updateChild]: dart.fnType(dart.void, []),
    [_addClient]: dart.fnType(core.bool, [automatic_keep_alive.KeepAliveNotification]),
    [_getChildElement]: dart.fnType(framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin), []),
    [_updateParentDataOfChild]: dart.fnType(dart.void, [framework.ParentDataElement$(sliver_multi_box_adaptor.KeepAliveParentDataMixin)]),
    [_createCallback]: dart.fnType(dart.fnType(dart.void, []), [change_notifier.Listenable]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(automatic_keep_alive._AutomaticKeepAliveState, "package:flutter/src/widgets/automatic_keep_alive.dart");
  dart.setFieldSignature(automatic_keep_alive._AutomaticKeepAliveState, () => ({
    __proto__: dart.getFields(automatic_keep_alive._AutomaticKeepAliveState.__proto__),
    [_handles$]: dart.fieldType(core.Map$(change_notifier.Listenable, dart.fnType(dart.void, []))),
    [_child$2]: dart.fieldType(framework.Widget),
    [_keepingAlive]: dart.fieldType(core.bool)
  }));
  var handle$ = dart.privateName(automatic_keep_alive, "KeepAliveNotification.handle");
  automatic_keep_alive.KeepAliveNotification = class KeepAliveNotification extends notification_listener.Notification {
    get handle() {
      return this[handle$];
    }
    set handle(value) {
      super.handle = value;
    }
  };
  (automatic_keep_alive.KeepAliveNotification.new = function(handle) {
    this[handle$] = handle;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/automatic_keep_alive.dart", 295, 53, "handle != null");
    automatic_keep_alive.KeepAliveNotification.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive.KeepAliveNotification.prototype;
  dart.addTypeTests(automatic_keep_alive.KeepAliveNotification);
  dart.setLibraryUri(automatic_keep_alive.KeepAliveNotification, "package:flutter/src/widgets/automatic_keep_alive.dart");
  dart.setFieldSignature(automatic_keep_alive.KeepAliveNotification, () => ({
    __proto__: dart.getFields(automatic_keep_alive.KeepAliveNotification.__proto__),
    handle: dart.finalFieldType(change_notifier.Listenable)
  }));
  automatic_keep_alive.KeepAliveHandle = class KeepAliveHandle extends change_notifier.ChangeNotifier {
    release() {
      this.notifyListeners();
    }
  };
  (automatic_keep_alive.KeepAliveHandle.new = function() {
    automatic_keep_alive.KeepAliveHandle.__proto__.new.call(this);
    ;
  }).prototype = automatic_keep_alive.KeepAliveHandle.prototype;
  dart.addTypeTests(automatic_keep_alive.KeepAliveHandle);
  dart.setMethodSignature(automatic_keep_alive.KeepAliveHandle, () => ({
    __proto__: dart.getMethods(automatic_keep_alive.KeepAliveHandle.__proto__),
    release: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(automatic_keep_alive.KeepAliveHandle, "package:flutter/src/widgets/automatic_keep_alive.dart");
  dart.defineLazy(constants$, {
    /*constants$.kMinInteractiveDimension*/get kMinInteractiveDimension() {
      return 48;
    }
  });
  var C1171;
  var C1172;
  var C1170;
  var C1169;
  var C1175;
  var C1176;
  var C1174;
  var C1173;
  var viewportFraction$ = dart.privateName(sliver_fill$, "SliverFillViewport.viewportFraction");
  var padEnds$ = dart.privateName(sliver_fill$, "SliverFillViewport.padEnds");
  var delegate$4 = dart.privateName(sliver_fill$, "SliverFillViewport.delegate");
  sliver_fill$.SliverFillViewport = class SliverFillViewport extends framework.StatelessWidget {
    get viewportFraction() {
      return this[viewportFraction$];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    get padEnds() {
      return this[padEnds$];
    }
    set padEnds(value) {
      super.padEnds = value;
    }
    get delegate() {
      return this[delegate$4];
    }
    set delegate(value) {
      super.delegate = value;
    }
    build(context) {
      return new sliver_fill$._SliverFractionalPadding.new({viewportFraction: dart.test(this.padEnds) ? (1 - dart.notNull(this.viewportFraction))[$clamp](0, 1) / 2 : 0.0, sliver: new sliver_fill$._SliverFillViewportRenderObjectWidget.new({viewportFraction: this.viewportFraction, delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C1169 || CT.C1169}), $creationLocationd_0dea112b090073317d4: C1173 || CT.C1173});
    }
  };
  (sliver_fill$.SliverFillViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let padEnds = opts && 'padEnds' in opts ? opts.padEnds : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$4] = delegate;
    this[viewportFraction$] = viewportFraction;
    this[padEnds$] = padEnds;
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 34, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) > 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 35, 15, "viewportFraction > 0.0");
    if (!(padEnds != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 36, 15, "padEnds != null");
    sliver_fill$.SliverFillViewport.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$.SliverFillViewport.prototype;
  dart.addTypeTests(sliver_fill$.SliverFillViewport);
  dart.setMethodSignature(sliver_fill$.SliverFillViewport, () => ({
    __proto__: dart.getMethods(sliver_fill$.SliverFillViewport.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$.SliverFillViewport, "package:flutter/src/widgets/sliver_fill.dart");
  dart.setFieldSignature(sliver_fill$.SliverFillViewport, () => ({
    __proto__: dart.getFields(sliver_fill$.SliverFillViewport.__proto__),
    viewportFraction: dart.finalFieldType(core.double),
    padEnds: dart.finalFieldType(core.bool),
    delegate: dart.finalFieldType(sliver$.SliverChildDelegate)
  }));
  var viewportFraction$0 = dart.privateName(sliver_fill$, "_SliverFillViewportRenderObjectWidget.viewportFraction");
  sliver_fill$._SliverFillViewportRenderObjectWidget = class _SliverFillViewportRenderObjectWidget extends sliver$.SliverMultiBoxAdaptorWidget {
    get viewportFraction() {
      return this[viewportFraction$0];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    createRenderObject(context) {
      let element = sliver$.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_fill.RenderSliverFillViewport.new({childManager: element, viewportFraction: this.viewportFraction});
    }
    updateRenderObject(context, renderObject) {
      sliver_fill.RenderSliverFillViewport._check(renderObject);
      renderObject.viewportFraction = this.viewportFraction;
    }
  };
  (sliver_fill$._SliverFillViewportRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewportFraction$0] = viewportFraction;
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 79, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) > 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 80, 14, "viewportFraction > 0.0");
    sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillViewportRenderObjectWidget.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillViewportRenderObjectWidget);
  dart.setMethodSignature(sliver_fill$._SliverFillViewportRenderObjectWidget, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillViewportRenderObjectWidget, "package:flutter/src/widgets/sliver_fill.dart");
  dart.setFieldSignature(sliver_fill$._SliverFillViewportRenderObjectWidget, () => ({
    __proto__: dart.getFields(sliver_fill$._SliverFillViewportRenderObjectWidget.__proto__),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var viewportFraction$1 = dart.privateName(sliver_fill$, "_SliverFractionalPadding.viewportFraction");
  sliver_fill$._SliverFractionalPadding = class _SliverFractionalPadding extends framework.SingleChildRenderObjectWidget {
    get viewportFraction() {
      return this[viewportFraction$1];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    createRenderObject(context) {
      return new sliver_fill$._RenderSliverFractionalPadding.new({viewportFraction: this.viewportFraction});
    }
    updateRenderObject(context, renderObject) {
      sliver_fill$._RenderSliverFractionalPadding._check(renderObject);
      renderObject.viewportFraction = this.viewportFraction;
    }
  };
  (sliver_fill$._SliverFractionalPadding.new = function(opts) {
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 0;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewportFraction$1] = viewportFraction;
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 101, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 102, 14, "viewportFraction >= 0");
    if (!(dart.notNull(viewportFraction) <= 0.5)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 103, 14, "viewportFraction <= 0.5");
    sliver_fill$._SliverFractionalPadding.__proto__.new.call(this, {child: sliver, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFractionalPadding.prototype;
  dart.addTypeTests(sliver_fill$._SliverFractionalPadding);
  dart.setMethodSignature(sliver_fill$._SliverFractionalPadding, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFractionalPadding.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFractionalPadding, "package:flutter/src/widgets/sliver_fill.dart");
  dart.setFieldSignature(sliver_fill$._SliverFractionalPadding, () => ({
    __proto__: dart.getFields(sliver_fill$._SliverFractionalPadding.__proto__),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var _resolvedPadding = dart.privateName(sliver_fill$, "_resolvedPadding");
  var _viewportFraction = dart.privateName(sliver_fill$, "_viewportFraction");
  var _markNeedsResolution = dart.privateName(sliver_fill$, "_markNeedsResolution");
  var _resolve$ = dart.privateName(sliver_fill$, "_resolve");
  sliver_fill$._RenderSliverFractionalPadding = class _RenderSliverFractionalPadding extends sliver_padding.RenderSliverEdgeInsetsPadding {
    get viewportFraction() {
      return this[_viewportFraction];
    }
    set viewportFraction(newValue) {
      if (!(newValue != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 128, 12, "newValue != null");
      if (this[_viewportFraction] == newValue) return;
      this[_viewportFraction] = newValue;
      this[_markNeedsResolution]();
    }
    get resolvedPadding() {
      return this[_resolvedPadding];
    }
    [_markNeedsResolution]() {
      this[_resolvedPadding] = null;
      this.markNeedsLayout();
    }
    [_resolve$]() {
      if (this[_resolvedPadding] != null) return;
      if (!(this.constraints.axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 147, 12, "constraints.axis != null");
      let paddingValue = dart.notNull(this.constraints.viewportMainAxisExtent) * dart.notNull(this.viewportFraction);
      switch (this.constraints.axis) {
        case C78 || CT.C78:
        {
          this[_resolvedPadding] = new edge_insets.EdgeInsets.symmetric({horizontal: paddingValue});
          break;
        }
        case C77 || CT.C77:
        {
          this[_resolvedPadding] = new edge_insets.EdgeInsets.symmetric({vertical: paddingValue});
          break;
        }
      }
      return;
    }
    performLayout() {
      this[_resolve$]();
      super.performLayout();
    }
  };
  (sliver_fill$._RenderSliverFractionalPadding.new = function(opts) {
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 0;
    this[_resolvedPadding] = null;
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 120, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) <= 0.5)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 121, 14, "viewportFraction <= 0.5");
    if (!(dart.notNull(viewportFraction) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 122, 14, "viewportFraction >= 0");
    this[_viewportFraction] = viewportFraction;
    sliver_fill$._RenderSliverFractionalPadding.__proto__.new.call(this);
    ;
  }).prototype = sliver_fill$._RenderSliverFractionalPadding.prototype;
  dart.addTypeTests(sliver_fill$._RenderSliverFractionalPadding);
  dart.setMethodSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getMethods(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    [_markNeedsResolution]: dart.fnType(dart.void, []),
    [_resolve$]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getGetters(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    viewportFraction: core.double,
    resolvedPadding: edge_insets.EdgeInsets
  }));
  dart.setSetterSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getSetters(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    viewportFraction: core.double
  }));
  dart.setLibraryUri(sliver_fill$._RenderSliverFractionalPadding, "package:flutter/src/widgets/sliver_fill.dart");
  dart.setFieldSignature(sliver_fill$._RenderSliverFractionalPadding, () => ({
    __proto__: dart.getFields(sliver_fill$._RenderSliverFractionalPadding.__proto__),
    [_viewportFraction]: dart.fieldType(core.double),
    [_resolvedPadding]: dart.fieldType(edge_insets.EdgeInsets)
  }));
  var C1179;
  var C1178;
  var C1177;
  var C1182;
  var C1181;
  var C1180;
  var C1185;
  var C1184;
  var C1183;
  var child$38 = dart.privateName(sliver_fill$, "SliverFillRemaining.child");
  var hasScrollBody$ = dart.privateName(sliver_fill$, "SliverFillRemaining.hasScrollBody");
  var fillOverscroll$ = dart.privateName(sliver_fill$, "SliverFillRemaining.fillOverscroll");
  sliver_fill$.SliverFillRemaining = class SliverFillRemaining extends framework.StatelessWidget {
    get child() {
      return this[child$38];
    }
    set child(value) {
      super.child = value;
    }
    get hasScrollBody() {
      return this[hasScrollBody$];
    }
    set hasScrollBody(value) {
      super.hasScrollBody = value;
    }
    get fillOverscroll() {
      return this[fillOverscroll$];
    }
    set fillOverscroll(value) {
      super.fillOverscroll = value;
    }
    build(context) {
      if (dart.test(this.hasScrollBody)) return new sliver_fill$._SliverFillRemainingWithScrollable.new({child: this.child, $creationLocationd_0dea112b090073317d4: C1177 || CT.C1177});
      if (!dart.test(this.fillOverscroll)) return new sliver_fill$._SliverFillRemainingWithoutScrollable.new({child: this.child, $creationLocationd_0dea112b090073317d4: C1180 || CT.C1180});
      return new sliver_fill$._SliverFillRemainingAndOverscroll.new({child: this.child, $creationLocationd_0dea112b090073317d4: C1183 || CT.C1183});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfWidget()).new("child", this.child));
      let flags = (() => {
        let t33 = JSArrayOfString().of([]);
        if (dart.test(this.hasScrollBody)) t33[$add]("scrollable");
        if (dart.test(this.fillOverscroll)) t33[$add]("fillOverscroll");
        return t33;
      })();
      if (dart.test(flags[$isEmpty])) flags[$add]("nonscrollable");
      properties.add(new (IterablePropertyOfString()).new("mode", flags));
    }
  };
  (sliver_fill$.SliverFillRemaining.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let hasScrollBody = opts && 'hasScrollBody' in opts ? opts.hasScrollBody : true;
    let fillOverscroll = opts && 'fillOverscroll' in opts ? opts.fillOverscroll : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$38] = child;
    this[hasScrollBody$] = hasScrollBody;
    this[fillOverscroll$] = fillOverscroll;
    if (!(hasScrollBody != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 394, 15, "hasScrollBody != null");
    if (!(fillOverscroll != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_fill.dart", 395, 15, "fillOverscroll != null");
    sliver_fill$.SliverFillRemaining.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$.SliverFillRemaining.prototype;
  dart.addTypeTests(sliver_fill$.SliverFillRemaining);
  dart.setMethodSignature(sliver_fill$.SliverFillRemaining, () => ({
    __proto__: dart.getMethods(sliver_fill$.SliverFillRemaining.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$.SliverFillRemaining, "package:flutter/src/widgets/sliver_fill.dart");
  dart.setFieldSignature(sliver_fill$.SliverFillRemaining, () => ({
    __proto__: dart.getFields(sliver_fill$.SliverFillRemaining.__proto__),
    child: dart.finalFieldType(framework.Widget),
    hasScrollBody: dart.finalFieldType(core.bool),
    fillOverscroll: dart.finalFieldType(core.bool)
  }));
  sliver_fill$._SliverFillRemainingWithScrollable = class _SliverFillRemainingWithScrollable extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemainingWithScrollable.new();
    }
  };
  (sliver_fill$._SliverFillRemainingWithScrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingWithScrollable.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingWithScrollable.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingWithScrollable);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingWithScrollable, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingWithScrollable.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemainingWithScrollable, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingWithScrollable, "package:flutter/src/widgets/sliver_fill.dart");
  sliver_fill$._SliverFillRemainingWithoutScrollable = class _SliverFillRemainingWithoutScrollable extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemaining.new();
    }
  };
  (sliver_fill$._SliverFillRemainingWithoutScrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingWithoutScrollable.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingWithoutScrollable.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingWithoutScrollable);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingWithoutScrollable, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingWithoutScrollable.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemaining, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingWithoutScrollable, "package:flutter/src/widgets/sliver_fill.dart");
  sliver_fill$._SliverFillRemainingAndOverscroll = class _SliverFillRemainingAndOverscroll extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_fill.RenderSliverFillRemainingAndOverscroll.new();
    }
  };
  (sliver_fill$._SliverFillRemainingAndOverscroll.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_fill$._SliverFillRemainingAndOverscroll.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_fill$._SliverFillRemainingAndOverscroll.prototype;
  dart.addTypeTests(sliver_fill$._SliverFillRemainingAndOverscroll);
  dart.setMethodSignature(sliver_fill$._SliverFillRemainingAndOverscroll, () => ({
    __proto__: dart.getMethods(sliver_fill$._SliverFillRemainingAndOverscroll.__proto__),
    createRenderObject: dart.fnType(sliver_fill.RenderSliverFillRemainingAndOverscroll, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_fill$._SliverFillRemainingAndOverscroll, "package:flutter/src/widgets/sliver_fill.dart");
  var C1186;
  var curve$ = dart.privateName(implicit_animations, "ImplicitlyAnimatedWidget.curve");
  var duration$ = dart.privateName(implicit_animations, "ImplicitlyAnimatedWidget.duration");
  var onEnd$ = dart.privateName(implicit_animations, "ImplicitlyAnimatedWidget.onEnd");
  implicit_animations.ImplicitlyAnimatedWidget = class ImplicitlyAnimatedWidget extends framework.StatefulWidget {
    get curve() {
      return this[curve$];
    }
    set curve(value) {
      super.curve = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get onEnd() {
      return this[onEnd$];
    }
    set onEnd(value) {
      super.onEnd = value;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("duration", this.duration.inMilliseconds, {unit: "ms"}));
    }
  };
  (implicit_animations.ImplicitlyAnimatedWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[curve$] = curve;
    this[duration$] = duration;
    this[onEnd$] = onEnd;
    if (!(curve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 280, 15, "curve != null");
    if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 281, 15, "duration != null");
    implicit_animations.ImplicitlyAnimatedWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.ImplicitlyAnimatedWidget.prototype;
  dart.addTypeTests(implicit_animations.ImplicitlyAnimatedWidget);
  dart.setLibraryUri(implicit_animations.ImplicitlyAnimatedWidget, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.ImplicitlyAnimatedWidget, () => ({
    __proto__: dart.getFields(implicit_animations.ImplicitlyAnimatedWidget.__proto__),
    curve: dart.finalFieldType(curves.Curve),
    duration: dart.finalFieldType(core.Duration),
    onEnd: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  const _is_TweenAnimationBuilder_default = Symbol('_is_TweenAnimationBuilder_default');
  var tween$ = dart.privateName(tween_animation_builder, "TweenAnimationBuilder.tween");
  var builder$5 = dart.privateName(tween_animation_builder, "TweenAnimationBuilder.builder");
  var child$39 = dart.privateName(tween_animation_builder, "TweenAnimationBuilder.child");
  tween_animation_builder.TweenAnimationBuilder$ = dart.generic(T => {
    var _TweenAnimationBuilderStateOfT = () => (_TweenAnimationBuilderStateOfT = dart.constFn(tween_animation_builder._TweenAnimationBuilderState$(T)))();
    class TweenAnimationBuilder extends implicit_animations.ImplicitlyAnimatedWidget {
      get tween() {
        return this[tween$];
      }
      set tween(value) {
        super.tween = value;
      }
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      get child() {
        return this[child$39];
      }
      set child(value) {
        super.child = value;
      }
      createState() {
        return new (_TweenAnimationBuilderStateOfT()).new();
      }
    }
    (TweenAnimationBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let tween = opts && 'tween' in opts ? opts.tween : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tween$] = tween;
      this[builder$5] = builder;
      this[child$39] = child;
      if (!(tween != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/tween_animation_builder.dart", 132, 15, "tween != null");
      if (!(curve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/tween_animation_builder.dart", 133, 15, "curve != null");
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/tween_animation_builder.dart", 134, 15, "builder != null");
      TweenAnimationBuilder.__proto__.new.call(this, {key: key, duration: duration, curve: curve, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = TweenAnimationBuilder.prototype;
    dart.addTypeTests(TweenAnimationBuilder);
    TweenAnimationBuilder.prototype[_is_TweenAnimationBuilder_default] = true;
    dart.setMethodSignature(TweenAnimationBuilder, () => ({
      __proto__: dart.getMethods(TweenAnimationBuilder.__proto__),
      createState: dart.fnType(implicit_animations.ImplicitlyAnimatedWidgetState$(implicit_animations.ImplicitlyAnimatedWidget), [])
    }));
    dart.setLibraryUri(TweenAnimationBuilder, "package:flutter/src/widgets/tween_animation_builder.dart");
    dart.setFieldSignature(TweenAnimationBuilder, () => ({
      __proto__: dart.getFields(TweenAnimationBuilder.__proto__),
      tween: dart.finalFieldType(tween.Tween$(T)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, framework.Widget])),
      child: dart.finalFieldType(framework.Widget)
    }));
    return TweenAnimationBuilder;
  });
  tween_animation_builder.TweenAnimationBuilder = tween_animation_builder.TweenAnimationBuilder$();
  dart.addTypeTests(tween_animation_builder.TweenAnimationBuilder, _is_TweenAnimationBuilder_default);
  var _currentTween = dart.privateName(tween_animation_builder, "_currentTween");
  var _handleAnimationChanged = dart.privateName(implicit_animations, "_handleAnimationChanged");
  var _controller$1 = dart.privateName(implicit_animations, "_controller");
  var _animation$ = dart.privateName(implicit_animations, "_animation");
  var _updateCurve = dart.privateName(implicit_animations, "_updateCurve");
  var _constructTweens = dart.privateName(implicit_animations, "_constructTweens");
  var _updateTween = dart.privateName(implicit_animations, "_updateTween");
  var _shouldAnimateTween = dart.privateName(implicit_animations, "_shouldAnimateTween");
  const _is_ImplicitlyAnimatedWidgetState_default = Symbol('_is_ImplicitlyAnimatedWidgetState_default');
  implicit_animations.ImplicitlyAnimatedWidgetState$ = dart.generic(T => {
    const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(T) {};
    (State_SingleTickerProviderStateMixin$36.new = function() {
      ticker_provider.SingleTickerProviderStateMixin$(T)[dart.mixinNew].call(this);
      State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
    }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
    dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(T));
    class ImplicitlyAnimatedWidgetState extends State_SingleTickerProviderStateMixin$36 {
      get controller() {
        return this[_controller$1];
      }
      get animation() {
        return this[_animation$];
      }
      initState() {
        super.initState();
        this[_controller$1] = new animation_controller.AnimationController.new({duration: this.widget.duration, debugLabel: true ? this.widget.toStringShort() : null, vsync: this});
        this[_controller$1].addStatusListener(dart.fn(status => {
          switch (status) {
            case C659 || CT.C659:
            {
              if (this.widget.onEnd != null) this.widget.onEnd();
              break;
            }
            case C662 || CT.C662:
            case C660 || CT.C660:
            case C661 || CT.C661:
          }
        }, AnimationStatusToNull()));
        this[_updateCurve]();
        this[_constructTweens]();
        this.didUpdateTweens();
      }
      didUpdateWidget(oldWidget) {
        let t34;
        T._check(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.widget.curve, oldWidget.curve)) this[_updateCurve]();
        this[_controller$1].duration = this.widget.duration;
        if (dart.test(this[_constructTweens]())) {
          this.forEachTween(dart.fn((tween, targetValue, constructor) => {
            this[_updateTween](tween, targetValue);
            return tween;
          }, TweenAnddynamicAndFnToTween()));
          t34 = this[_controller$1];
          t34.value = 0.0;
          t34.forward();
          t34;
          this.didUpdateTweens();
        }
      }
      [_updateCurve]() {
        if (this.widget.curve != null)
          this[_animation$] = new animations.CurvedAnimation.new({parent: this[_controller$1], curve: this.widget.curve});
        else
          this[_animation$] = this[_controller$1];
      }
      dispose() {
        this[_controller$1].dispose();
        super.dispose();
      }
      [_shouldAnimateTween](tween, targetValue) {
        let t34;
        return !dart.equals(targetValue, (t34 = tween.end, t34 == null ? tween.begin : t34));
      }
      [_updateTween](tween, targetValue) {
        let t34;
        if (tween == null) return;
        t34 = tween;
        t34.begin = tween.evaluate(this[_animation$]);
        t34.end = targetValue;
        t34;
      }
      [_constructTweens]() {
        let shouldStartAnimation = false;
        this.forEachTween(dart.fn((tween, targetValue, constructor) => {
          if (targetValue != null) {
            tween == null ? tween = constructor(targetValue) : null;
            if (dart.test(this[_shouldAnimateTween](tween, targetValue))) shouldStartAnimation = true;
          } else {
            tween = null;
          }
          return tween;
        }, TweenAnddynamicAndFnToTween()));
        return shouldStartAnimation;
      }
      didUpdateTweens() {
      }
    }
    (ImplicitlyAnimatedWidgetState.new = function() {
      this[_controller$1] = null;
      this[_animation$] = null;
      ImplicitlyAnimatedWidgetState.__proto__.new.call(this);
      ;
    }).prototype = ImplicitlyAnimatedWidgetState.prototype;
    dart.addTypeTests(ImplicitlyAnimatedWidgetState);
    ImplicitlyAnimatedWidgetState.prototype[_is_ImplicitlyAnimatedWidgetState_default] = true;
    dart.setMethodSignature(ImplicitlyAnimatedWidgetState, () => ({
      __proto__: dart.getMethods(ImplicitlyAnimatedWidgetState.__proto__),
      [_updateCurve]: dart.fnType(dart.void, []),
      [_shouldAnimateTween]: dart.fnType(core.bool, [tween.Tween, dart.dynamic]),
      [_updateTween]: dart.fnType(dart.void, [tween.Tween, dart.dynamic]),
      [_constructTweens]: dart.fnType(core.bool, []),
      didUpdateTweens: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(ImplicitlyAnimatedWidgetState, () => ({
      __proto__: dart.getGetters(ImplicitlyAnimatedWidgetState.__proto__),
      controller: animation_controller.AnimationController,
      animation: animation$.Animation$(core.double)
    }));
    dart.setLibraryUri(ImplicitlyAnimatedWidgetState, "package:flutter/src/widgets/implicit_animations.dart");
    dart.setFieldSignature(ImplicitlyAnimatedWidgetState, () => ({
      __proto__: dart.getFields(ImplicitlyAnimatedWidgetState.__proto__),
      [_controller$1]: dart.fieldType(animation_controller.AnimationController),
      [_animation$]: dart.fieldType(animation$.Animation$(core.double))
    }));
    return ImplicitlyAnimatedWidgetState;
  });
  implicit_animations.ImplicitlyAnimatedWidgetState = implicit_animations.ImplicitlyAnimatedWidgetState$();
  dart.addTypeTests(implicit_animations.ImplicitlyAnimatedWidgetState, _is_ImplicitlyAnimatedWidgetState_default);
  const _is_AnimatedWidgetBaseState_default = Symbol('_is_AnimatedWidgetBaseState_default');
  implicit_animations.AnimatedWidgetBaseState$ = dart.generic(T => {
    class AnimatedWidgetBaseState extends implicit_animations.ImplicitlyAnimatedWidgetState$(T) {
      initState() {
        super.initState();
        this.controller.addListener(dart.bind(this, _handleAnimationChanged));
      }
      [_handleAnimationChanged]() {
        this.setState(dart.fn(() => {
        }, VoidToNull()));
      }
    }
    (AnimatedWidgetBaseState.new = function() {
      AnimatedWidgetBaseState.__proto__.new.call(this);
      ;
    }).prototype = AnimatedWidgetBaseState.prototype;
    dart.addTypeTests(AnimatedWidgetBaseState);
    AnimatedWidgetBaseState.prototype[_is_AnimatedWidgetBaseState_default] = true;
    dart.setMethodSignature(AnimatedWidgetBaseState, () => ({
      __proto__: dart.getMethods(AnimatedWidgetBaseState.__proto__),
      [_handleAnimationChanged]: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(AnimatedWidgetBaseState, "package:flutter/src/widgets/implicit_animations.dart");
    return AnimatedWidgetBaseState;
  });
  implicit_animations.AnimatedWidgetBaseState = implicit_animations.AnimatedWidgetBaseState$();
  dart.addTypeTests(implicit_animations.AnimatedWidgetBaseState, _is_AnimatedWidgetBaseState_default);
  const _is__TweenAnimationBuilderState_default = Symbol('_is__TweenAnimationBuilderState_default');
  tween_animation_builder._TweenAnimationBuilderState$ = dart.generic(T => {
    var TweenOfT = () => (TweenOfT = dart.constFn(tween.Tween$(T)))();
    var BuildContextAndTAndWidgetToWidget = () => (BuildContextAndTAndWidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, framework.Widget])))();
    class _TweenAnimationBuilderState extends implicit_animations.AnimatedWidgetBaseState$(tween_animation_builder.TweenAnimationBuilder$(T)) {
      initState() {
        let t34;
        this[_currentTween] = this.widget.tween;
        t34 = this[_currentTween];
        t34.begin == null ? t34.begin = this[_currentTween].end : null;
        super.initState();
        if (!dart.equals(this[_currentTween].begin, this[_currentTween].end)) {
          this.controller.forward();
        }
      }
      forEachTween(visitor) {
        if (!(this.widget.tween.end != null)) dart.assertFailed("Tween provided to TweenAnimationBuilder must have non-null Tween.end value.", "org-dartlang-app:///packages/flutter/src/widgets/tween_animation_builder.dart", 211, 7, "widget.tween.end != null");
        this[_currentTween] = TweenOfT().as(visitor(this[_currentTween], this.widget.tween.end, dart.fn(value => {
          if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/tween_animation_builder.dart", 216, 14, "false");
          return null;
        }, dynamicToNull())));
      }
      build(context) {
        return BuildContextAndTAndWidgetToWidget()._check(this.widget.builder)(context, this[_currentTween].evaluate(this.animation), this.widget.child);
      }
    }
    (_TweenAnimationBuilderState.new = function() {
      this[_currentTween] = null;
      _TweenAnimationBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _TweenAnimationBuilderState.prototype;
    dart.addTypeTests(_TweenAnimationBuilderState);
    _TweenAnimationBuilderState.prototype[_is__TweenAnimationBuilderState_default] = true;
    dart.setMethodSignature(_TweenAnimationBuilderState, () => ({
      __proto__: dart.getMethods(_TweenAnimationBuilderState.__proto__),
      forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_TweenAnimationBuilderState, "package:flutter/src/widgets/tween_animation_builder.dart");
    dart.setFieldSignature(_TweenAnimationBuilderState, () => ({
      __proto__: dart.getFields(_TweenAnimationBuilderState.__proto__),
      [_currentTween]: dart.fieldType(tween.Tween$(T))
    }));
    return _TweenAnimationBuilderState;
  });
  tween_animation_builder._TweenAnimationBuilderState = tween_animation_builder._TweenAnimationBuilderState$();
  dart.addTypeTests(tween_animation_builder._TweenAnimationBuilderState, _is__TweenAnimationBuilderState_default);
  const _is_ValueListenableBuilder_default = Symbol('_is_ValueListenableBuilder_default');
  var valueListenable$ = dart.privateName(value_listenable_builder, "ValueListenableBuilder.valueListenable");
  var builder$6 = dart.privateName(value_listenable_builder, "ValueListenableBuilder.builder");
  var child$40 = dart.privateName(value_listenable_builder, "ValueListenableBuilder.child");
  value_listenable_builder.ValueListenableBuilder$ = dart.generic(T => {
    var _ValueListenableBuilderStateOfT = () => (_ValueListenableBuilderStateOfT = dart.constFn(value_listenable_builder._ValueListenableBuilderState$(T)))();
    class ValueListenableBuilder extends framework.StatefulWidget {
      get valueListenable() {
        return this[valueListenable$];
      }
      set valueListenable(value) {
        super.valueListenable = value;
      }
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get child() {
        return this[child$40];
      }
      set child(value) {
        super.child = value;
      }
      createState() {
        return new (_ValueListenableBuilderStateOfT()).new();
      }
    }
    (ValueListenableBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let valueListenable = opts && 'valueListenable' in opts ? opts.valueListenable : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[valueListenable$] = valueListenable;
      this[builder$6] = builder;
      this[child$40] = child;
      if (!(valueListenable != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/value_listenable_builder.dart", 122, 15, "valueListenable != null");
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/value_listenable_builder.dart", 123, 15, "builder != null");
      ValueListenableBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ValueListenableBuilder.prototype;
    dart.addTypeTests(ValueListenableBuilder);
    ValueListenableBuilder.prototype[_is_ValueListenableBuilder_default] = true;
    dart.setMethodSignature(ValueListenableBuilder, () => ({
      __proto__: dart.getMethods(ValueListenableBuilder.__proto__),
      createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
    }));
    dart.setLibraryUri(ValueListenableBuilder, "package:flutter/src/widgets/value_listenable_builder.dart");
    dart.setFieldSignature(ValueListenableBuilder, () => ({
      __proto__: dart.getFields(ValueListenableBuilder.__proto__),
      valueListenable: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, framework.Widget])),
      child: dart.finalFieldType(framework.Widget)
    }));
    return ValueListenableBuilder;
  });
  value_listenable_builder.ValueListenableBuilder = value_listenable_builder.ValueListenableBuilder$();
  dart.addTypeTests(value_listenable_builder.ValueListenableBuilder, _is_ValueListenableBuilder_default);
  var _valueChanged = dart.privateName(value_listenable_builder, "_valueChanged");
  const _is__ValueListenableBuilderState_default = Symbol('_is__ValueListenableBuilderState_default');
  var value$2 = dart.privateName(value_listenable_builder, "_ValueListenableBuilderState.value");
  value_listenable_builder._ValueListenableBuilderState$ = dart.generic(T => {
    var ValueListenableBuilderOfT = () => (ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var BuildContextAndTAndWidgetToWidget = () => (BuildContextAndTAndWidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, framework.Widget])))();
    class _ValueListenableBuilderState extends framework.State$(value_listenable_builder.ValueListenableBuilder$(T)) {
      get value() {
        return this[value$2];
      }
      set value(value) {
        this[value$2] = T._check(value);
      }
      initState() {
        super.initState();
        this.value = this.widget.valueListenable.value;
        this.widget.valueListenable.addListener(dart.bind(this, _valueChanged));
      }
      didUpdateWidget(oldWidget) {
        ValueListenableBuilderOfT()._check(oldWidget);
        if (!dart.equals(oldWidget.valueListenable, this.widget.valueListenable)) {
          oldWidget.valueListenable.removeListener(dart.bind(this, _valueChanged));
          this.value = this.widget.valueListenable.value;
          this.widget.valueListenable.addListener(dart.bind(this, _valueChanged));
        }
        super.didUpdateWidget(oldWidget);
      }
      dispose() {
        this.widget.valueListenable.removeListener(dart.bind(this, _valueChanged));
        super.dispose();
      }
      [_valueChanged]() {
        this.setState(dart.fn(() => {
          this.value = this.widget.valueListenable.value;
        }, VoidToNull()));
      }
      build(context) {
        return BuildContextAndTAndWidgetToWidget()._check(this.widget.builder)(context, this.value, this.widget.child);
      }
    }
    (_ValueListenableBuilderState.new = function() {
      this[value$2] = null;
      _ValueListenableBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueListenableBuilderState.prototype;
    dart.addTypeTests(_ValueListenableBuilderState);
    _ValueListenableBuilderState.prototype[_is__ValueListenableBuilderState_default] = true;
    dart.setMethodSignature(_ValueListenableBuilderState, () => ({
      __proto__: dart.getMethods(_ValueListenableBuilderState.__proto__),
      [_valueChanged]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_ValueListenableBuilderState, "package:flutter/src/widgets/value_listenable_builder.dart");
    dart.setFieldSignature(_ValueListenableBuilderState, () => ({
      __proto__: dart.getFields(_ValueListenableBuilderState.__proto__),
      value: dart.fieldType(T)
    }));
    return _ValueListenableBuilderState;
  });
  value_listenable_builder._ValueListenableBuilderState = value_listenable_builder._ValueListenableBuilderState$();
  dart.addTypeTests(value_listenable_builder._ValueListenableBuilderState, _is__ValueListenableBuilderState_default);
  implicit_animations.BoxConstraintsTween = class BoxConstraintsTween extends tween.Tween$(box$.BoxConstraints) {
    lerp(t) {
      return box$.BoxConstraints.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.BoxConstraintsTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.BoxConstraintsTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.BoxConstraintsTween.prototype;
  dart.addTypeTests(implicit_animations.BoxConstraintsTween);
  dart.setLibraryUri(implicit_animations.BoxConstraintsTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.DecorationTween = class DecorationTween extends tween.Tween$(decoration.Decoration) {
    lerp(t) {
      return decoration.Decoration.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.DecorationTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.DecorationTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.DecorationTween.prototype;
  dart.addTypeTests(implicit_animations.DecorationTween);
  dart.setLibraryUri(implicit_animations.DecorationTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.EdgeInsetsTween = class EdgeInsetsTween extends tween.Tween$(edge_insets.EdgeInsets) {
    lerp(t) {
      return edge_insets.EdgeInsets.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.EdgeInsetsTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.EdgeInsetsTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.EdgeInsetsTween.prototype;
  dart.addTypeTests(implicit_animations.EdgeInsetsTween);
  dart.setLibraryUri(implicit_animations.EdgeInsetsTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.EdgeInsetsGeometryTween = class EdgeInsetsGeometryTween extends tween.Tween$(edge_insets.EdgeInsetsGeometry) {
    lerp(t) {
      return edge_insets.EdgeInsetsGeometry.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.EdgeInsetsGeometryTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.EdgeInsetsGeometryTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.EdgeInsetsGeometryTween.prototype;
  dart.addTypeTests(implicit_animations.EdgeInsetsGeometryTween);
  dart.setLibraryUri(implicit_animations.EdgeInsetsGeometryTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.BorderRadiusTween = class BorderRadiusTween extends tween.Tween$(border_radius.BorderRadius) {
    lerp(t) {
      return border_radius.BorderRadius.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.BorderRadiusTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.BorderRadiusTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.BorderRadiusTween.prototype;
  dart.addTypeTests(implicit_animations.BorderRadiusTween);
  dart.setLibraryUri(implicit_animations.BorderRadiusTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.BorderTween = class BorderTween extends tween.Tween$(box_border.Border) {
    lerp(t) {
      return box_border.Border.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.BorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.BorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.BorderTween.prototype;
  dart.addTypeTests(implicit_animations.BorderTween);
  dart.setLibraryUri(implicit_animations.BorderTween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.Matrix4Tween = class Matrix4Tween extends tween.Tween$(vector_math_64.Matrix4) {
    lerp(t) {
      if (!(this.begin != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 175, 12, "begin != null");
      if (!(this.end != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 176, 12, "end != null");
      let beginTranslation = new vector_math_64.Vector3.zero();
      let endTranslation = new vector_math_64.Vector3.zero();
      let beginRotation = vector_math_64.Quaternion.identity();
      let endRotation = vector_math_64.Quaternion.identity();
      let beginScale = new vector_math_64.Vector3.zero();
      let endScale = new vector_math_64.Vector3.zero();
      this.begin.decompose(beginTranslation, beginRotation, beginScale);
      this.end.decompose(endTranslation, endRotation, endScale);
      let lerpTranslation = beginTranslation['*'](1.0 - dart.notNull(t))['+'](endTranslation['*'](t));
      let lerpRotation = beginRotation.scaled(1.0 - dart.notNull(t))['+'](endRotation.scaled(t)).normalized();
      let lerpScale = beginScale['*'](1.0 - dart.notNull(t))['+'](endScale['*'](t));
      return vector_math_64.Matrix4.compose(lerpTranslation, lerpRotation, lerpScale);
    }
  };
  (implicit_animations.Matrix4Tween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.Matrix4Tween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.Matrix4Tween.prototype;
  dart.addTypeTests(implicit_animations.Matrix4Tween);
  dart.setLibraryUri(implicit_animations.Matrix4Tween, "package:flutter/src/widgets/implicit_animations.dart");
  implicit_animations.TextStyleTween = class TextStyleTween extends tween.Tween$(text_style.TextStyle) {
    lerp(t) {
      return text_style.TextStyle.lerp(this.begin, this.end, t);
    }
  };
  (implicit_animations.TextStyleTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    implicit_animations.TextStyleTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = implicit_animations.TextStyleTween.prototype;
  dart.addTypeTests(implicit_animations.TextStyleTween);
  dart.setLibraryUri(implicit_animations.TextStyleTween, "package:flutter/src/widgets/implicit_animations.dart");
  var child$41 = dart.privateName(implicit_animations, "AnimatedContainer.child");
  var alignment$14 = dart.privateName(implicit_animations, "AnimatedContainer.alignment");
  var padding$3 = dart.privateName(implicit_animations, "AnimatedContainer.padding");
  var decoration$3 = dart.privateName(implicit_animations, "AnimatedContainer.decoration");
  var foregroundDecoration$0 = dart.privateName(implicit_animations, "AnimatedContainer.foregroundDecoration");
  var constraints$1 = dart.privateName(implicit_animations, "AnimatedContainer.constraints");
  var margin$0 = dart.privateName(implicit_animations, "AnimatedContainer.margin");
  var transform$1 = dart.privateName(implicit_animations, "AnimatedContainer.transform");
  implicit_animations.AnimatedContainer = class AnimatedContainer extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$41];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[alignment$14];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get padding() {
      return this[padding$3];
    }
    set padding(value) {
      super.padding = value;
    }
    get decoration() {
      return this[decoration$3];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get foregroundDecoration() {
      return this[foregroundDecoration$0];
    }
    set foregroundDecoration(value) {
      super.foregroundDecoration = value;
    }
    get constraints() {
      return this[constraints$1];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get margin() {
      return this[margin$0];
    }
    set margin(value) {
      super.margin = value;
    }
    get transform() {
      return this[transform$1];
    }
    set transform(value) {
      super.transform = value;
    }
    createState() {
      return new implicit_animations._AnimatedContainerState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {showName: false, defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new("bg", this.decoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfDecoration()).new("fg", this.foregroundDecoration, {defaultValue: null}));
      properties.add(new (DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null, showName: false}));
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (ObjectFlagPropertyOfMatrix4()).has("transform", this.transform));
    }
  };
  (implicit_animations.AnimatedContainer.new = function(opts) {
    let t34, t34$, t34$0;
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let foregroundDecoration = opts && 'foregroundDecoration' in opts ? opts.foregroundDecoration : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let transform = opts && 'transform' in opts ? opts.transform : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$14] = alignment;
    this[padding$3] = padding;
    this[foregroundDecoration$0] = foregroundDecoration;
    this[margin$0] = margin;
    this[transform$1] = transform;
    this[child$41] = child;
    if (!(margin == null || dart.test(margin.isNonNegative))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 642, 15, "margin == null || margin.isNonNegative");
    if (!(padding == null || dart.test(padding.isNonNegative))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 643, 15, "padding == null || padding.isNonNegative");
    if (!(decoration == null || dart.test(decoration.debugAssertIsValid()))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 644, 15, "decoration == null || decoration.debugAssertIsValid()");
    if (!(constraints == null || dart.test(constraints.debugAssertIsValid()))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 645, 15, "constraints == null || constraints.debugAssertIsValid()");
    if (!(color == null || decoration == null)) dart.assertFailed("Cannot provide both a color and a decoration\n" + "The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".", "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 646, 15, "color == null || decoration == null");
    this[decoration$3] = (t34 = decoration, t34 == null ? color != null ? new box_decoration.BoxDecoration.new({color: color}) : null : t34);
    this[constraints$1] = width != null || height != null ? (t34$0 = (t34$ = constraints, t34$ == null ? null : t34$.tighten({width: width, height: height})), t34$0 == null ? new box$.BoxConstraints.tightFor({width: width, height: height}) : t34$0) : constraints;
    implicit_animations.AnimatedContainer.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedContainer.prototype;
  dart.addTypeTests(implicit_animations.AnimatedContainer);
  dart.setMethodSignature(implicit_animations.AnimatedContainer, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedContainer.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedContainerState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedContainer, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedContainer, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedContainer.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    decoration: dart.finalFieldType(decoration.Decoration),
    foregroundDecoration: dart.finalFieldType(decoration.Decoration),
    constraints: dart.finalFieldType(box$.BoxConstraints),
    margin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    transform: dart.finalFieldType(vector_math_64.Matrix4)
  }));
  var _alignment = dart.privateName(implicit_animations, "_alignment");
  var _padding = dart.privateName(implicit_animations, "_padding");
  var _decoration = dart.privateName(implicit_animations, "_decoration");
  var _foregroundDecoration = dart.privateName(implicit_animations, "_foregroundDecoration");
  var _constraints = dart.privateName(implicit_animations, "_constraints");
  var _margin = dart.privateName(implicit_animations, "_margin");
  var _transform$0 = dart.privateName(implicit_animations, "_transform");
  var C1189;
  var C1190;
  var C1191;
  var C1192;
  var C1193;
  var C1194;
  var C1195;
  var C1196;
  var C1188;
  var C1187;
  implicit_animations._AnimatedContainerState = class _AnimatedContainerState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedContainer) {
    forEachTween(visitor) {
      this[_alignment] = tweens.AlignmentGeometryTween.as(visitor(this[_alignment], this.widget.alignment, dart.fn(value => new tweens.AlignmentGeometryTween.new({begin: alignment$.AlignmentGeometry.as(value)}), dynamicToAlignmentGeometryTween())));
      this[_padding] = implicit_animations.EdgeInsetsGeometryTween.as(visitor(this[_padding], this.widget.padding, dart.fn(value => new implicit_animations.EdgeInsetsGeometryTween.new({begin: edge_insets.EdgeInsetsGeometry.as(value)}), dynamicToEdgeInsetsGeometryTween())));
      this[_decoration] = implicit_animations.DecorationTween.as(visitor(this[_decoration], this.widget.decoration, dart.fn(value => new implicit_animations.DecorationTween.new({begin: decoration.Decoration.as(value)}), dynamicToDecorationTween())));
      this[_foregroundDecoration] = implicit_animations.DecorationTween.as(visitor(this[_foregroundDecoration], this.widget.foregroundDecoration, dart.fn(value => new implicit_animations.DecorationTween.new({begin: decoration.Decoration.as(value)}), dynamicToDecorationTween())));
      this[_constraints] = implicit_animations.BoxConstraintsTween.as(visitor(this[_constraints], this.widget.constraints, dart.fn(value => new implicit_animations.BoxConstraintsTween.new({begin: box$.BoxConstraints.as(value)}), dynamicToBoxConstraintsTween())));
      this[_margin] = implicit_animations.EdgeInsetsGeometryTween.as(visitor(this[_margin], this.widget.margin, dart.fn(value => new implicit_animations.EdgeInsetsGeometryTween.new({begin: edge_insets.EdgeInsetsGeometry.as(value)}), dynamicToEdgeInsetsGeometryTween())));
      this[_transform$0] = implicit_animations.Matrix4Tween.as(visitor(this[_transform$0], this.widget.transform, dart.fn(value => new implicit_animations.Matrix4Tween.new({begin: vector_math_64.Matrix4.as(value)}), dynamicToMatrix4Tween())));
    }
    build(context) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4;
      return new container.Container.new({child: this.widget.child, alignment: (t34 = this[_alignment], t34 == null ? null : t34.evaluate(this.animation)), padding: (t34$ = this[_padding], t34$ == null ? null : t34$.evaluate(this.animation)), decoration: (t34$0 = this[_decoration], t34$0 == null ? null : t34$0.evaluate(this.animation)), foregroundDecoration: (t34$1 = this[_foregroundDecoration], t34$1 == null ? null : t34$1.evaluate(this.animation)), constraints: (t34$2 = this[_constraints], t34$2 == null ? null : t34$2.evaluate(this.animation)), margin: (t34$3 = this[_margin], t34$3 == null ? null : t34$3.evaluate(this.animation)), transform: (t34$4 = this[_transform$0], t34$4 == null ? null : t34$4.evaluate(this.animation)), $creationLocationd_0dea112b090073317d4: C1187 || CT.C1187});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfAlignmentGeometryTween()).new("alignment", this[_alignment], {showName: false, defaultValue: null}));
      description.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryTween()).new("padding", this[_padding], {defaultValue: null}));
      description.add(new (DiagnosticsPropertyOfDecorationTween()).new("bg", this[_decoration], {defaultValue: null}));
      description.add(new (DiagnosticsPropertyOfDecorationTween()).new("fg", this[_foregroundDecoration], {defaultValue: null}));
      description.add(new (DiagnosticsPropertyOfBoxConstraintsTween()).new("constraints", this[_constraints], {showName: false, defaultValue: null}));
      description.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryTween()).new("margin", this[_margin], {defaultValue: null}));
      description.add(new (ObjectFlagPropertyOfMatrix4Tween()).has("transform", this[_transform$0]));
    }
  };
  (implicit_animations._AnimatedContainerState.new = function() {
    this[_alignment] = null;
    this[_padding] = null;
    this[_decoration] = null;
    this[_foregroundDecoration] = null;
    this[_constraints] = null;
    this[_margin] = null;
    this[_transform$0] = null;
    implicit_animations._AnimatedContainerState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedContainerState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedContainerState);
  dart.setMethodSignature(implicit_animations._AnimatedContainerState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedContainerState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedContainerState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedContainerState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedContainerState.__proto__),
    [_alignment]: dart.fieldType(tweens.AlignmentGeometryTween),
    [_padding]: dart.fieldType(implicit_animations.EdgeInsetsGeometryTween),
    [_decoration]: dart.fieldType(implicit_animations.DecorationTween),
    [_foregroundDecoration]: dart.fieldType(implicit_animations.DecorationTween),
    [_constraints]: dart.fieldType(implicit_animations.BoxConstraintsTween),
    [_margin]: dart.fieldType(implicit_animations.EdgeInsetsGeometryTween),
    [_transform$0]: dart.fieldType(implicit_animations.Matrix4Tween)
  }));
  var padding$4 = dart.privateName(implicit_animations, "AnimatedPadding.padding");
  var child$42 = dart.privateName(implicit_animations, "AnimatedPadding.child");
  implicit_animations.AnimatedPadding = class AnimatedPadding extends implicit_animations.ImplicitlyAnimatedWidget {
    get padding() {
      return this[padding$4];
    }
    set padding(value) {
      super.padding = value;
    }
    get child() {
      return this[child$42];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new implicit_animations._AnimatedPaddingState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding));
    }
  };
  (implicit_animations.AnimatedPadding.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$4] = padding;
    this[child$42] = child;
    if (!(padding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 801, 15, "padding != null");
    if (!dart.test(padding.isNonNegative)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 802, 15, "padding.isNonNegative");
    implicit_animations.AnimatedPadding.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedPadding.prototype;
  dart.addTypeTests(implicit_animations.AnimatedPadding);
  dart.setMethodSignature(implicit_animations.AnimatedPadding, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedPadding.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedPaddingState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedPadding, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedPadding, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedPadding.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1199;
  var C1200;
  var C1198;
  var C1197;
  implicit_animations._AnimatedPaddingState = class _AnimatedPaddingState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedPadding) {
    forEachTween(visitor) {
      this[_padding] = implicit_animations.EdgeInsetsGeometryTween.as(visitor(this[_padding], this.widget.padding, dart.fn(value => new implicit_animations.EdgeInsetsGeometryTween.new({begin: edge_insets.EdgeInsetsGeometry.as(value)}), dynamicToEdgeInsetsGeometryTween())));
    }
    build(context) {
      return new basic.Padding.new({padding: this[_padding].evaluate(this.animation), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1197 || CT.C1197});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfEdgeInsetsGeometryTween()).new("padding", this[_padding], {defaultValue: null}));
    }
  };
  (implicit_animations._AnimatedPaddingState.new = function() {
    this[_padding] = null;
    implicit_animations._AnimatedPaddingState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedPaddingState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedPaddingState);
  dart.setMethodSignature(implicit_animations._AnimatedPaddingState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedPaddingState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedPaddingState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedPaddingState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedPaddingState.__proto__),
    [_padding]: dart.fieldType(implicit_animations.EdgeInsetsGeometryTween)
  }));
  var alignment$15 = dart.privateName(implicit_animations, "AnimatedAlign.alignment");
  var child$43 = dart.privateName(implicit_animations, "AnimatedAlign.child");
  implicit_animations.AnimatedAlign = class AnimatedAlign extends implicit_animations.ImplicitlyAnimatedWidget {
    get alignment() {
      return this[alignment$15];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get child() {
      return this[child$43];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new implicit_animations._AnimatedAlignState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment));
    }
  };
  (implicit_animations.AnimatedAlign.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$15] = alignment;
    this[child$43] = child;
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 881, 15, "alignment != null");
    implicit_animations.AnimatedAlign.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedAlign.prototype;
  dart.addTypeTests(implicit_animations.AnimatedAlign);
  dart.setMethodSignature(implicit_animations.AnimatedAlign, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedAlign.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedAlignState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedAlign, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedAlign, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedAlign.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1203;
  var C1204;
  var C1202;
  var C1201;
  implicit_animations._AnimatedAlignState = class _AnimatedAlignState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedAlign) {
    forEachTween(visitor) {
      this[_alignment] = tweens.AlignmentGeometryTween.as(visitor(this[_alignment], this.widget.alignment, dart.fn(value => new tweens.AlignmentGeometryTween.new({begin: alignment$.AlignmentGeometry.as(value)}), dynamicToAlignmentGeometryTween())));
    }
    build(context) {
      return new basic.Align.new({alignment: this[_alignment].evaluate(this.animation), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1201 || CT.C1201});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfAlignmentGeometryTween()).new("alignment", this[_alignment], {defaultValue: null}));
    }
  };
  (implicit_animations._AnimatedAlignState.new = function() {
    this[_alignment] = null;
    implicit_animations._AnimatedAlignState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedAlignState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedAlignState);
  dart.setMethodSignature(implicit_animations._AnimatedAlignState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedAlignState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedAlignState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedAlignState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedAlignState.__proto__),
    [_alignment]: dart.fieldType(tweens.AlignmentGeometryTween)
  }));
  var child$44 = dart.privateName(implicit_animations, "AnimatedPositioned.child");
  var left$0 = dart.privateName(implicit_animations, "AnimatedPositioned.left");
  var top$1 = dart.privateName(implicit_animations, "AnimatedPositioned.top");
  var right$0 = dart.privateName(implicit_animations, "AnimatedPositioned.right");
  var bottom$1 = dart.privateName(implicit_animations, "AnimatedPositioned.bottom");
  var width$4 = dart.privateName(implicit_animations, "AnimatedPositioned.width");
  var height$4 = dart.privateName(implicit_animations, "AnimatedPositioned.height");
  implicit_animations.AnimatedPositioned = class AnimatedPositioned extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$44];
    }
    set child(value) {
      super.child = value;
    }
    get left() {
      return this[left$0];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$1];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$0];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$1];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$4];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$4];
    }
    set height(value) {
      super.height = value;
    }
    createState() {
      return new implicit_animations._AnimatedPositionedState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("left", this.left, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("top", this.top, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("right", this.right, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("bottom", this.bottom, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
    }
  };
  (implicit_animations.AnimatedPositioned.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let left = opts && 'left' in opts ? opts.left : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let right = opts && 'right' in opts ? opts.right : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$44] = child;
    this[left$0] = left;
    this[top$1] = top;
    this[right$0] = right;
    this[bottom$1] = bottom;
    this[width$4] = width;
    this[height$4] = height;
    if (!(left == null || right == null || width == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 992, 15, "left == null || right == null || width == null");
    if (!(top == null || bottom == null || height == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 993, 15, "top == null || bottom == null || height == null");
    implicit_animations.AnimatedPositioned.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedPositioned.prototype;
  (implicit_animations.AnimatedPositioned.fromRect = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let rect = opts && 'rect' in opts ? opts.rect : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$44] = child;
    this[left$0] = rect.left;
    this[top$1] = rect.top;
    this[width$4] = rect.width;
    this[height$4] = rect.height;
    this[right$0] = null;
    this[bottom$1] = null;
    implicit_animations.AnimatedPositioned.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedPositioned.prototype;
  dart.addTypeTests(implicit_animations.AnimatedPositioned);
  dart.setMethodSignature(implicit_animations.AnimatedPositioned, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedPositioned.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedPositionedState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedPositioned, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedPositioned, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedPositioned.__proto__),
    child: dart.finalFieldType(framework.Widget),
    left: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    right: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double)
  }));
  var _left = dart.privateName(implicit_animations, "_left");
  var _top = dart.privateName(implicit_animations, "_top");
  var _right = dart.privateName(implicit_animations, "_right");
  var _bottom = dart.privateName(implicit_animations, "_bottom");
  var _width = dart.privateName(implicit_animations, "_width");
  var _height = dart.privateName(implicit_animations, "_height");
  var C1207;
  var C1208;
  var C1209;
  var C1210;
  var C1211;
  var C1212;
  var C1213;
  var C1206;
  var C1205;
  implicit_animations._AnimatedPositionedState = class _AnimatedPositionedState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedPositioned) {
    forEachTween(visitor) {
      this[_left] = TweenOfdouble().as(visitor(this[_left], this.widget.left, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_top] = TweenOfdouble().as(visitor(this[_top], this.widget.top, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_right] = TweenOfdouble().as(visitor(this[_right], this.widget.right, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_bottom] = TweenOfdouble().as(visitor(this[_bottom], this.widget.bottom, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_width] = TweenOfdouble().as(visitor(this[_width], this.widget.width, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_height] = TweenOfdouble().as(visitor(this[_height], this.widget.height, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
    }
    build(context) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3;
      return new basic.Positioned.new({child: this.widget.child, left: (t34 = this[_left], t34 == null ? null : t34.evaluate(this.animation)), top: (t34$ = this[_top], t34$ == null ? null : t34$.evaluate(this.animation)), right: (t34$0 = this[_right], t34$0 == null ? null : t34$0.evaluate(this.animation)), bottom: (t34$1 = this[_bottom], t34$1 == null ? null : t34$1.evaluate(this.animation)), width: (t34$2 = this[_width], t34$2 == null ? null : t34$2.evaluate(this.animation)), height: (t34$3 = this[_height], t34$3 == null ? null : t34$3.evaluate(this.animation)), $creationLocationd_0dea112b090073317d4: C1205 || CT.C1205});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("left", this[_left]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("top", this[_top]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("right", this[_right]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("bottom", this[_bottom]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("width", this[_width]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("height", this[_height]));
    }
  };
  (implicit_animations._AnimatedPositionedState.new = function() {
    this[_left] = null;
    this[_top] = null;
    this[_right] = null;
    this[_bottom] = null;
    this[_width] = null;
    this[_height] = null;
    implicit_animations._AnimatedPositionedState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedPositionedState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedPositionedState);
  dart.setMethodSignature(implicit_animations._AnimatedPositionedState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedPositionedState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedPositionedState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedPositionedState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedPositionedState.__proto__),
    [_left]: dart.fieldType(tween.Tween$(core.double)),
    [_top]: dart.fieldType(tween.Tween$(core.double)),
    [_right]: dart.fieldType(tween.Tween$(core.double)),
    [_bottom]: dart.fieldType(tween.Tween$(core.double)),
    [_width]: dart.fieldType(tween.Tween$(core.double)),
    [_height]: dart.fieldType(tween.Tween$(core.double))
  }));
  var child$45 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.child");
  var start$0 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.start");
  var top$2 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.top");
  var end$0 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.end");
  var bottom$2 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.bottom");
  var width$5 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.width");
  var height$5 = dart.privateName(implicit_animations, "AnimatedPositionedDirectional.height");
  implicit_animations.AnimatedPositionedDirectional = class AnimatedPositionedDirectional extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$45];
    }
    set child(value) {
      super.child = value;
    }
    get start() {
      return this[start$0];
    }
    set start(value) {
      super.start = value;
    }
    get top() {
      return this[top$2];
    }
    set top(value) {
      super.top = value;
    }
    get end() {
      return this[end$0];
    }
    set end(value) {
      super.end = value;
    }
    get bottom() {
      return this[bottom$2];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get width() {
      return this[width$5];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$5];
    }
    set height(value) {
      super.height = value;
    }
    createState() {
      return new implicit_animations._AnimatedPositionedDirectionalState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("start", this.start, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("top", this.top, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("end", this.end, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("bottom", this.bottom, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("width", this.width, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("height", this.height, {defaultValue: null}));
    }
  };
  (implicit_animations.AnimatedPositionedDirectional.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let start = opts && 'start' in opts ? opts.start : null;
    let top = opts && 'top' in opts ? opts.top : null;
    let end = opts && 'end' in opts ? opts.end : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$45] = child;
    this[start$0] = start;
    this[top$2] = top;
    this[end$0] = end;
    this[bottom$2] = bottom;
    this[width$5] = width;
    this[height$5] = height;
    if (!(start == null || end == null || width == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1145, 15, "start == null || end == null || width == null");
    if (!(top == null || bottom == null || height == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1146, 15, "top == null || bottom == null || height == null");
    implicit_animations.AnimatedPositionedDirectional.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedPositionedDirectional.prototype;
  dart.addTypeTests(implicit_animations.AnimatedPositionedDirectional);
  dart.setMethodSignature(implicit_animations.AnimatedPositionedDirectional, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedPositionedDirectional.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedPositionedDirectionalState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedPositionedDirectional, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedPositionedDirectional, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedPositionedDirectional.__proto__),
    child: dart.finalFieldType(framework.Widget),
    start: dart.finalFieldType(core.double),
    top: dart.finalFieldType(core.double),
    end: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double)
  }));
  var _start = dart.privateName(implicit_animations, "_start");
  var _end$ = dart.privateName(implicit_animations, "_end");
  var C1216;
  var C1217;
  var C1218;
  var C1219;
  var C1220;
  var C1221;
  var C1222;
  var C1223;
  var C1215;
  var C1214;
  implicit_animations._AnimatedPositionedDirectionalState = class _AnimatedPositionedDirectionalState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedPositionedDirectional) {
    forEachTween(visitor) {
      this[_start] = TweenOfdouble().as(visitor(this[_start], this.widget.start, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_top] = TweenOfdouble().as(visitor(this[_top], this.widget.top, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_end$] = TweenOfdouble().as(visitor(this[_end$], this.widget.end, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_bottom] = TweenOfdouble().as(visitor(this[_bottom], this.widget.bottom, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_width] = TweenOfdouble().as(visitor(this[_width], this.widget.width, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_height] = TweenOfdouble().as(visitor(this[_height], this.widget.height, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
    }
    build(context) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3;
      if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1213, 12, "debugCheckHasDirectionality(context)");
      return basic.Positioned.directional({textDirection: basic.Directionality.of(context), child: this.widget.child, start: (t34 = this[_start], t34 == null ? null : t34.evaluate(this.animation)), top: (t34$ = this[_top], t34$ == null ? null : t34$.evaluate(this.animation)), end: (t34$0 = this[_end$], t34$0 == null ? null : t34$0.evaluate(this.animation)), bottom: (t34$1 = this[_bottom], t34$1 == null ? null : t34$1.evaluate(this.animation)), width: (t34$2 = this[_width], t34$2 == null ? null : t34$2.evaluate(this.animation)), height: (t34$3 = this[_height], t34$3 == null ? null : t34$3.evaluate(this.animation)), $creationLocationd_0dea112b090073317d4: C1214 || CT.C1214});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("start", this[_start]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("top", this[_top]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("end", this[_end$]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("bottom", this[_bottom]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("width", this[_width]));
      description.add(new (ObjectFlagPropertyOfTweenOfdouble()).has("height", this[_height]));
    }
  };
  (implicit_animations._AnimatedPositionedDirectionalState.new = function() {
    this[_start] = null;
    this[_top] = null;
    this[_end$] = null;
    this[_bottom] = null;
    this[_width] = null;
    this[_height] = null;
    implicit_animations._AnimatedPositionedDirectionalState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedPositionedDirectionalState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedPositionedDirectionalState);
  dart.setMethodSignature(implicit_animations._AnimatedPositionedDirectionalState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedPositionedDirectionalState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedPositionedDirectionalState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedPositionedDirectionalState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedPositionedDirectionalState.__proto__),
    [_start]: dart.fieldType(tween.Tween$(core.double)),
    [_top]: dart.fieldType(tween.Tween$(core.double)),
    [_end$]: dart.fieldType(tween.Tween$(core.double)),
    [_bottom]: dart.fieldType(tween.Tween$(core.double)),
    [_width]: dart.fieldType(tween.Tween$(core.double)),
    [_height]: dart.fieldType(tween.Tween$(core.double))
  }));
  var child$46 = dart.privateName(implicit_animations, "AnimatedOpacity.child");
  var opacity$3 = dart.privateName(implicit_animations, "AnimatedOpacity.opacity");
  var alwaysIncludeSemantics$3 = dart.privateName(implicit_animations, "AnimatedOpacity.alwaysIncludeSemantics");
  implicit_animations.AnimatedOpacity = class AnimatedOpacity extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$46];
    }
    set child(value) {
      super.child = value;
    }
    get opacity() {
      return this[opacity$3];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$3];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createState() {
      return new implicit_animations._AnimatedOpacityState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("opacity", this.opacity));
    }
  };
  (implicit_animations.AnimatedOpacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$46] = child;
    this[opacity$3] = opacity;
    this[alwaysIncludeSemantics$3] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1307, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    implicit_animations.AnimatedOpacity.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedOpacity.prototype;
  dart.addTypeTests(implicit_animations.AnimatedOpacity);
  dart.setMethodSignature(implicit_animations.AnimatedOpacity, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedOpacity.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedOpacityState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedOpacity, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedOpacity, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedOpacity.__proto__),
    child: dart.finalFieldType(framework.Widget),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var _opacity$ = dart.privateName(implicit_animations, "_opacity");
  var _opacityAnimation = dart.privateName(implicit_animations, "_opacityAnimation");
  var C1226;
  var C1227;
  var C1228;
  var C1225;
  var C1224;
  implicit_animations._AnimatedOpacityState = class _AnimatedOpacityState extends implicit_animations.ImplicitlyAnimatedWidgetState$(implicit_animations.AnimatedOpacity) {
    forEachTween(visitor) {
      this[_opacity$] = TweenOfdouble().as(visitor(this[_opacity$], this.widget.opacity, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
    }
    didUpdateTweens() {
      this[_opacityAnimation] = this.animation.drive(core.double, this[_opacity$]);
    }
    build(context) {
      return new transitions.FadeTransition.new({opacity: this[_opacityAnimation], child: this.widget.child, alwaysIncludeSemantics: this.widget.alwaysIncludeSemantics, $creationLocationd_0dea112b090073317d4: C1224 || CT.C1224});
    }
  };
  (implicit_animations._AnimatedOpacityState.new = function() {
    this[_opacity$] = null;
    this[_opacityAnimation] = null;
    implicit_animations._AnimatedOpacityState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedOpacityState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedOpacityState);
  dart.setMethodSignature(implicit_animations._AnimatedOpacityState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedOpacityState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedOpacityState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedOpacityState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedOpacityState.__proto__),
    [_opacity$]: dart.fieldType(tween.Tween$(core.double)),
    [_opacityAnimation]: dart.fieldType(animation$.Animation$(core.double))
  }));
  var sliver$1 = dart.privateName(implicit_animations, "SliverAnimatedOpacity.sliver");
  var opacity$4 = dart.privateName(implicit_animations, "SliverAnimatedOpacity.opacity");
  var alwaysIncludeSemantics$4 = dart.privateName(implicit_animations, "SliverAnimatedOpacity.alwaysIncludeSemantics");
  implicit_animations.SliverAnimatedOpacity = class SliverAnimatedOpacity extends implicit_animations.ImplicitlyAnimatedWidget {
    get sliver() {
      return this[sliver$1];
    }
    set sliver(value) {
      super.sliver = value;
    }
    get opacity() {
      return this[opacity$4];
    }
    set opacity(value) {
      super.opacity = value;
    }
    get alwaysIncludeSemantics() {
      return this[alwaysIncludeSemantics$4];
    }
    set alwaysIncludeSemantics(value) {
      super.alwaysIncludeSemantics = value;
    }
    createState() {
      return new implicit_animations._SliverAnimatedOpacityState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("opacity", this.opacity));
    }
  };
  (implicit_animations.SliverAnimatedOpacity.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let alwaysIncludeSemantics = opts && 'alwaysIncludeSemantics' in opts ? opts.alwaysIncludeSemantics : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[sliver$1] = sliver;
    this[opacity$4] = opacity;
    this[alwaysIncludeSemantics$4] = alwaysIncludeSemantics;
    if (!(opacity != null && dart.notNull(opacity) >= 0.0 && dart.notNull(opacity) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1442, 15, "opacity != null && opacity >= 0.0 && opacity <= 1.0");
    implicit_animations.SliverAnimatedOpacity.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.SliverAnimatedOpacity.prototype;
  dart.addTypeTests(implicit_animations.SliverAnimatedOpacity);
  dart.setMethodSignature(implicit_animations.SliverAnimatedOpacity, () => ({
    __proto__: dart.getMethods(implicit_animations.SliverAnimatedOpacity.__proto__),
    createState: dart.fnType(implicit_animations._SliverAnimatedOpacityState, [])
  }));
  dart.setLibraryUri(implicit_animations.SliverAnimatedOpacity, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.SliverAnimatedOpacity, () => ({
    __proto__: dart.getFields(implicit_animations.SliverAnimatedOpacity.__proto__),
    sliver: dart.finalFieldType(framework.Widget),
    opacity: dart.finalFieldType(core.double),
    alwaysIncludeSemantics: dart.finalFieldType(core.bool)
  }));
  var C1231;
  var C1232;
  var C1233;
  var C1230;
  var C1229;
  implicit_animations._SliverAnimatedOpacityState = class _SliverAnimatedOpacityState extends implicit_animations.ImplicitlyAnimatedWidgetState$(implicit_animations.SliverAnimatedOpacity) {
    forEachTween(visitor) {
      this[_opacity$] = TweenOfdouble().as(visitor(this[_opacity$], this.widget.opacity, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
    }
    didUpdateTweens() {
      this[_opacityAnimation] = this.animation.drive(core.double, this[_opacity$]);
    }
    build(context) {
      return new transitions.SliverFadeTransition.new({opacity: this[_opacityAnimation], sliver: this.widget.sliver, alwaysIncludeSemantics: this.widget.alwaysIncludeSemantics, $creationLocationd_0dea112b090073317d4: C1229 || CT.C1229});
    }
  };
  (implicit_animations._SliverAnimatedOpacityState.new = function() {
    this[_opacity$] = null;
    this[_opacityAnimation] = null;
    implicit_animations._SliverAnimatedOpacityState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._SliverAnimatedOpacityState.prototype;
  dart.addTypeTests(implicit_animations._SliverAnimatedOpacityState);
  dart.setMethodSignature(implicit_animations._SliverAnimatedOpacityState, () => ({
    __proto__: dart.getMethods(implicit_animations._SliverAnimatedOpacityState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._SliverAnimatedOpacityState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._SliverAnimatedOpacityState, () => ({
    __proto__: dart.getFields(implicit_animations._SliverAnimatedOpacityState.__proto__),
    [_opacity$]: dart.fieldType(tween.Tween$(core.double)),
    [_opacityAnimation]: dart.fieldType(animation$.Animation$(core.double))
  }));
  var child$47 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.child");
  var style$2 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.style");
  var textAlign$5 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.textAlign");
  var softWrap$3 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.softWrap");
  var overflow$4 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.overflow");
  var maxLines$5 = dart.privateName(implicit_animations, "AnimatedDefaultTextStyle.maxLines");
  implicit_animations.AnimatedDefaultTextStyle = class AnimatedDefaultTextStyle extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$47];
    }
    set child(value) {
      super.child = value;
    }
    get style() {
      return this[style$2];
    }
    set style(value) {
      super.style = value;
    }
    get textAlign() {
      return this[textAlign$5];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get softWrap() {
      return this[softWrap$3];
    }
    set softWrap(value) {
      super.softWrap = value;
    }
    get overflow() {
      return this[overflow$4];
    }
    set overflow(value) {
      super.overflow = value;
    }
    get maxLines() {
      return this[maxLines$5];
    }
    set maxLines(value) {
      super.maxLines = value;
    }
    createState() {
      return new implicit_animations._AnimatedDefaultTextStyleState.new();
    }
    debugFillProperties(properties) {
      let t34;
      super.debugFillProperties(properties);
      t34 = this.style;
      t34 == null ? null : t34.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("softWrap", {value: this.softWrap, ifTrue: "wrapping at box width", ifFalse: "no wrapping except at line break characters", showName: true}));
      properties.add(new (EnumPropertyOfTextOverflow()).new("overflow", this.overflow, {defaultValue: null}));
      properties.add(new diagnostics$.IntProperty.new("maxLines", this.maxLines, {defaultValue: null}));
    }
  };
  (implicit_animations.AnimatedDefaultTextStyle.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let softWrap = opts && 'softWrap' in opts ? opts.softWrap : true;
    let overflow = opts && 'overflow' in opts ? opts.overflow : C164 || CT.C164;
    let maxLines = opts && 'maxLines' in opts ? opts.maxLines : null;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$47] = child;
    this[style$2] = style;
    this[textAlign$5] = textAlign;
    this[softWrap$3] = softWrap;
    this[overflow$4] = overflow;
    this[maxLines$5] = maxLines;
    if (!(style != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1535, 15, "style != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1536, 15, "child != null");
    if (!(softWrap != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1537, 15, "softWrap != null");
    if (!(overflow != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1538, 15, "overflow != null");
    if (!(maxLines == null || dart.notNull(maxLines) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1539, 15, "maxLines == null || maxLines > 0");
    implicit_animations.AnimatedDefaultTextStyle.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedDefaultTextStyle.prototype;
  dart.addTypeTests(implicit_animations.AnimatedDefaultTextStyle);
  dart.setMethodSignature(implicit_animations.AnimatedDefaultTextStyle, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedDefaultTextStyle.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedDefaultTextStyleState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedDefaultTextStyle, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedDefaultTextStyle, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedDefaultTextStyle.__proto__),
    child: dart.finalFieldType(framework.Widget),
    style: dart.finalFieldType(text_style.TextStyle),
    textAlign: dart.finalFieldType(ui.TextAlign),
    softWrap: dart.finalFieldType(core.bool),
    overflow: dart.finalFieldType(paragraph.TextOverflow),
    maxLines: dart.finalFieldType(core.int)
  }));
  var _style = dart.privateName(implicit_animations, "_style");
  var C1236;
  var C1237;
  var C1238;
  var C1239;
  var C1240;
  var C1241;
  var C1235;
  var C1234;
  implicit_animations._AnimatedDefaultTextStyleState = class _AnimatedDefaultTextStyleState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedDefaultTextStyle) {
    forEachTween(visitor) {
      this[_style] = implicit_animations.TextStyleTween.as(visitor(this[_style], this.widget.style, dart.fn(value => new implicit_animations.TextStyleTween.new({begin: text_style.TextStyle.as(value)}), dynamicToTextStyleTween())));
    }
    build(context) {
      return new text.DefaultTextStyle.new({style: this[_style].evaluate(this.animation), textAlign: this.widget.textAlign, softWrap: this.widget.softWrap, overflow: this.widget.overflow, maxLines: this.widget.maxLines, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1234 || CT.C1234});
    }
  };
  (implicit_animations._AnimatedDefaultTextStyleState.new = function() {
    this[_style] = null;
    implicit_animations._AnimatedDefaultTextStyleState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedDefaultTextStyleState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedDefaultTextStyleState);
  dart.setMethodSignature(implicit_animations._AnimatedDefaultTextStyleState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedDefaultTextStyleState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedDefaultTextStyleState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedDefaultTextStyleState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedDefaultTextStyleState.__proto__),
    [_style]: dart.fieldType(implicit_animations.TextStyleTween)
  }));
  var child$48 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.child");
  var shape$0 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.shape");
  var clipBehavior$6 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.clipBehavior");
  var borderRadius$1 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.borderRadius");
  var elevation$1 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.elevation");
  var color$9 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.color");
  var animateColor$ = dart.privateName(implicit_animations, "AnimatedPhysicalModel.animateColor");
  var shadowColor$1 = dart.privateName(implicit_animations, "AnimatedPhysicalModel.shadowColor");
  var animateShadowColor$ = dart.privateName(implicit_animations, "AnimatedPhysicalModel.animateShadowColor");
  implicit_animations.AnimatedPhysicalModel = class AnimatedPhysicalModel extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[child$48];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[shape$0];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get borderRadius() {
      return this[borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get elevation() {
      return this[elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[color$9];
    }
    set color(value) {
      super.color = value;
    }
    get animateColor() {
      return this[animateColor$];
    }
    set animateColor(value) {
      super.animateColor = value;
    }
    get shadowColor() {
      return this[shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get animateShadowColor() {
      return this[animateShadowColor$];
    }
    set animateShadowColor(value) {
      super.animateShadowColor = value;
    }
    createState() {
      return new implicit_animations._AnimatedPhysicalModelState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfBoxShape()).new("shape", this.shape));
      properties.add(new (DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius));
      properties.add(new diagnostics$.DoubleProperty.new("elevation", this.elevation));
      properties.add(new colors.ColorProperty.new("color", this.color));
      properties.add(new (DiagnosticsPropertyOfbool()).new("animateColor", this.animateColor));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
      properties.add(new (DiagnosticsPropertyOfbool()).new("animateShadowColor", this.animateShadowColor));
    }
  };
  (implicit_animations.AnimatedPhysicalModel.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C138 || CT.C138;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C125 || CT.C125;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let animateColor = opts && 'animateColor' in opts ? opts.animateColor : true;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let animateShadowColor = opts && 'animateShadowColor' in opts ? opts.animateShadowColor : true;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$48] = child;
    this[shape$0] = shape;
    this[clipBehavior$6] = clipBehavior;
    this[borderRadius$1] = borderRadius;
    this[elevation$1] = elevation;
    this[color$9] = color;
    this[animateColor$] = animateColor;
    this[shadowColor$1] = shadowColor;
    this[animateShadowColor$] = animateShadowColor;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1651, 15, "child != null");
    if (!(shape != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1652, 15, "shape != null");
    if (!(clipBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1653, 15, "clipBehavior != null");
    if (!(borderRadius != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1654, 15, "borderRadius != null");
    if (!(elevation != null && dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1655, 15, "elevation != null && elevation >= 0.0");
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1656, 15, "color != null");
    if (!(shadowColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1657, 15, "shadowColor != null");
    if (!(animateColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1658, 15, "animateColor != null");
    if (!(animateShadowColor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/implicit_animations.dart", 1659, 15, "animateShadowColor != null");
    implicit_animations.AnimatedPhysicalModel.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = implicit_animations.AnimatedPhysicalModel.prototype;
  dart.addTypeTests(implicit_animations.AnimatedPhysicalModel);
  dart.setMethodSignature(implicit_animations.AnimatedPhysicalModel, () => ({
    __proto__: dart.getMethods(implicit_animations.AnimatedPhysicalModel.__proto__),
    createState: dart.fnType(implicit_animations._AnimatedPhysicalModelState, [])
  }));
  dart.setLibraryUri(implicit_animations.AnimatedPhysicalModel, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations.AnimatedPhysicalModel, () => ({
    __proto__: dart.getFields(implicit_animations.AnimatedPhysicalModel.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(box_border.BoxShape),
    clipBehavior: dart.finalFieldType(ui.Clip),
    borderRadius: dart.finalFieldType(border_radius.BorderRadius),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    animateColor: dart.finalFieldType(core.bool),
    shadowColor: dart.finalFieldType(ui.Color),
    animateShadowColor: dart.finalFieldType(core.bool)
  }));
  var _borderRadius = dart.privateName(implicit_animations, "_borderRadius");
  var _elevation = dart.privateName(implicit_animations, "_elevation");
  var _color$ = dart.privateName(implicit_animations, "_color");
  var _shadowColor = dart.privateName(implicit_animations, "_shadowColor");
  var C1244;
  var C1245;
  var C1246;
  var C1247;
  var C1248;
  var C1249;
  var C1250;
  var C1243;
  var C1242;
  implicit_animations._AnimatedPhysicalModelState = class _AnimatedPhysicalModelState extends implicit_animations.AnimatedWidgetBaseState$(implicit_animations.AnimatedPhysicalModel) {
    forEachTween(visitor) {
      this[_borderRadius] = implicit_animations.BorderRadiusTween.as(visitor(this[_borderRadius], this.widget.borderRadius, dart.fn(value => new implicit_animations.BorderRadiusTween.new({begin: border_radius.BorderRadius.as(value)}), dynamicToBorderRadiusTween())));
      this[_elevation] = TweenOfdouble().as(visitor(this[_elevation], this.widget.elevation, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_color$] = tween.ColorTween.as(visitor(this[_color$], this.widget.color, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), dynamicToColorTween())));
      this[_shadowColor] = tween.ColorTween.as(visitor(this[_shadowColor], this.widget.shadowColor, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), dynamicToColorTween())));
    }
    build(context) {
      return new basic.PhysicalModel.new({child: this.widget.child, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, borderRadius: this[_borderRadius].evaluate(this.animation), elevation: this[_elevation].evaluate(this.animation), color: dart.test(this.widget.animateColor) ? this[_color$].evaluate(this.animation) : this.widget.color, shadowColor: dart.test(this.widget.animateShadowColor) ? this[_shadowColor].evaluate(this.animation) : this.widget.shadowColor, $creationLocationd_0dea112b090073317d4: C1242 || CT.C1242});
    }
  };
  (implicit_animations._AnimatedPhysicalModelState.new = function() {
    this[_borderRadius] = null;
    this[_elevation] = null;
    this[_color$] = null;
    this[_shadowColor] = null;
    implicit_animations._AnimatedPhysicalModelState.__proto__.new.call(this);
    ;
  }).prototype = implicit_animations._AnimatedPhysicalModelState.prototype;
  dart.addTypeTests(implicit_animations._AnimatedPhysicalModelState);
  dart.setMethodSignature(implicit_animations._AnimatedPhysicalModelState, () => ({
    __proto__: dart.getMethods(implicit_animations._AnimatedPhysicalModelState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(implicit_animations._AnimatedPhysicalModelState, "package:flutter/src/widgets/implicit_animations.dart");
  dart.setFieldSignature(implicit_animations._AnimatedPhysicalModelState, () => ({
    __proto__: dart.getFields(implicit_animations._AnimatedPhysicalModelState.__proto__),
    [_borderRadius]: dart.fieldType(implicit_animations.BorderRadiusTween),
    [_elevation]: dart.fieldType(tween.Tween$(core.double)),
    [_color$]: dart.fieldType(tween.ColorTween),
    [_shadowColor]: dart.fieldType(tween.ColorTween)
  }));
  var prototypeItem$ = dart.privateName(sliver_prototype_extent_list, "SliverPrototypeExtentList.prototypeItem");
  sliver_prototype_extent_list.SliverPrototypeExtentList = class SliverPrototypeExtentList extends sliver$.SliverMultiBoxAdaptorWidget {
    get prototypeItem() {
      return this[prototypeItem$];
    }
    set prototypeItem(value) {
      super.prototypeItem = value;
    }
    createRenderObject(context) {
      let element = sliver_prototype_extent_list._SliverPrototypeExtentListElement.as(context);
      return new sliver_prototype_extent_list._RenderSliverPrototypeExtentList.new({childManager: element});
    }
    createElement() {
      return new sliver_prototype_extent_list._SliverPrototypeExtentListElement.new(this);
    }
  };
  (sliver_prototype_extent_list.SliverPrototypeExtentList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let prototypeItem = opts && 'prototypeItem' in opts ? opts.prototypeItem : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[prototypeItem$] = prototypeItem;
    if (!(prototypeItem != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_prototype_extent_list.dart", 42, 15, "prototypeItem != null");
    sliver_prototype_extent_list.SliverPrototypeExtentList.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_prototype_extent_list.SliverPrototypeExtentList.prototype;
  dart.addTypeTests(sliver_prototype_extent_list.SliverPrototypeExtentList);
  dart.setMethodSignature(sliver_prototype_extent_list.SliverPrototypeExtentList, () => ({
    __proto__: dart.getMethods(sliver_prototype_extent_list.SliverPrototypeExtentList.__proto__),
    createRenderObject: dart.fnType(sliver_prototype_extent_list._RenderSliverPrototypeExtentList, [framework.BuildContext]),
    createElement: dart.fnType(sliver_prototype_extent_list._SliverPrototypeExtentListElement, [])
  }));
  dart.setLibraryUri(sliver_prototype_extent_list.SliverPrototypeExtentList, "package:flutter/src/widgets/sliver_prototype_extent_list.dart");
  dart.setFieldSignature(sliver_prototype_extent_list.SliverPrototypeExtentList, () => ({
    __proto__: dart.getFields(sliver_prototype_extent_list.SliverPrototypeExtentList.__proto__),
    prototypeItem: dart.finalFieldType(framework.Widget)
  }));
  var _prototype = dart.privateName(sliver_prototype_extent_list, "_prototype");
  sliver_prototype_extent_list._SliverPrototypeExtentListElement = class _SliverPrototypeExtentListElement extends sliver$.SliverMultiBoxAdaptorElement {
    get widget() {
      return sliver_prototype_extent_list.SliverPrototypeExtentList.as(super.widget);
    }
    get renderObject() {
      return sliver_prototype_extent_list._RenderSliverPrototypeExtentList.as(super.renderObject);
    }
    insertChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      if (dart.equals(slot, sliver_prototype_extent_list._SliverPrototypeExtentListElement._prototypeSlot)) {
        if (!box$.RenderBox.is(child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_prototype_extent_list.dart", 78, 14, "child is RenderBox");
        this.renderObject.child = box$.RenderBox.as(child);
      } else {
        super.insertChildRenderObject(child, core.int.as(slot));
      }
    }
    didAdoptChild(child) {
      if (!dart.equals(child, this.renderObject.child)) super.didAdoptChild(child);
    }
    moveChildRenderObject(child, slot) {
      box$.RenderBox._check(child);
      if (dart.equals(slot, sliver_prototype_extent_list._SliverPrototypeExtentListElement._prototypeSlot)) {
        if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_prototype_extent_list.dart", 94, 14, "false");
      } else
        super.moveChildRenderObject(child, core.int.as(slot));
    }
    removeChildRenderObject(child) {
      box$.RenderBox._check(child);
      if (dart.equals(this.renderObject.child, child))
        this.renderObject.child = null;
      else
        super.removeChildRenderObject(child);
    }
    visitChildren(visitor) {
      if (this[_prototype] != null) visitor(this[_prototype]);
      super.visitChildren(visitor);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this[_prototype] = this.updateChild(this[_prototype], this.widget.prototypeItem, sliver_prototype_extent_list._SliverPrototypeExtentListElement._prototypeSlot);
    }
    update(newWidget) {
      sliver_prototype_extent_list.SliverPrototypeExtentList._check(newWidget);
      super.update(newWidget);
      if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_prototype_extent_list.dart", 123, 12, "widget == newWidget");
      this[_prototype] = this.updateChild(this[_prototype], this.widget.prototypeItem, sliver_prototype_extent_list._SliverPrototypeExtentListElement._prototypeSlot);
    }
  };
  (sliver_prototype_extent_list._SliverPrototypeExtentListElement.new = function(widget) {
    this[_prototype] = null;
    sliver_prototype_extent_list._SliverPrototypeExtentListElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver_prototype_extent_list._SliverPrototypeExtentListElement.prototype;
  dart.addTypeTests(sliver_prototype_extent_list._SliverPrototypeExtentListElement);
  dart.setGetterSignature(sliver_prototype_extent_list._SliverPrototypeExtentListElement, () => ({
    __proto__: dart.getGetters(sliver_prototype_extent_list._SliverPrototypeExtentListElement.__proto__),
    widget: sliver_prototype_extent_list.SliverPrototypeExtentList,
    renderObject: sliver_prototype_extent_list._RenderSliverPrototypeExtentList
  }));
  dart.setLibraryUri(sliver_prototype_extent_list._SliverPrototypeExtentListElement, "package:flutter/src/widgets/sliver_prototype_extent_list.dart");
  dart.setFieldSignature(sliver_prototype_extent_list._SliverPrototypeExtentListElement, () => ({
    __proto__: dart.getFields(sliver_prototype_extent_list._SliverPrototypeExtentListElement.__proto__),
    [_prototype]: dart.fieldType(framework.Element)
  }));
  dart.defineLazy(sliver_prototype_extent_list._SliverPrototypeExtentListElement, {
    /*sliver_prototype_extent_list._SliverPrototypeExtentListElement._prototypeSlot*/get _prototypeSlot() {
      return new core.Object.new();
    }
  });
  var _child$3 = dart.privateName(sliver_prototype_extent_list, "_child");
  sliver_prototype_extent_list._RenderSliverPrototypeExtentList = class _RenderSliverPrototypeExtentList extends sliver_fixed_extent_list.RenderSliverFixedExtentBoxAdaptor {
    get child() {
      return this[_child$3];
    }
    set child(value) {
      if (this[_child$3] != null) this.dropChild(this[_child$3]);
      this[_child$3] = value;
      if (this[_child$3] != null) this.adoptChild(this[_child$3]);
      this.markNeedsLayout();
    }
    performLayout() {
      this.child.layout(this.constraints.asBoxConstraints(), {parentUsesSize: true});
      super.performLayout();
    }
    attach(owner) {
      object$.PipelineOwner._check(owner);
      super.attach(owner);
      if (this[_child$3] != null) this[_child$3].attach(owner);
    }
    detach() {
      super.detach();
      if (this[_child$3] != null) this[_child$3].detach();
    }
    redepthChildren() {
      if (this[_child$3] != null) this.redepthChild(this[_child$3]);
      super.redepthChildren();
    }
    visitChildren(visitor) {
      if (this[_child$3] != null) visitor(this[_child$3]);
      super.visitChildren(visitor);
    }
    get itemExtent() {
      if (!(this.child != null && dart.test(this.child.hasSize))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_prototype_extent_list.dart", 180, 12, "child != null && child.hasSize");
      return dart.equals(this.constraints.axis, basic_types$.Axis.vertical) ? this.child.size.height : this.child.size.width;
    }
  };
  (sliver_prototype_extent_list._RenderSliverPrototypeExtentList.new = function(opts) {
    let childManager = opts && 'childManager' in opts ? opts.childManager : null;
    this[_child$3] = null;
    sliver_prototype_extent_list._RenderSliverPrototypeExtentList.__proto__.new.call(this, {childManager: childManager});
    ;
  }).prototype = sliver_prototype_extent_list._RenderSliverPrototypeExtentList.prototype;
  dart.addTypeTests(sliver_prototype_extent_list._RenderSliverPrototypeExtentList);
  dart.setGetterSignature(sliver_prototype_extent_list._RenderSliverPrototypeExtentList, () => ({
    __proto__: dart.getGetters(sliver_prototype_extent_list._RenderSliverPrototypeExtentList.__proto__),
    child: box$.RenderBox,
    itemExtent: core.double
  }));
  dart.setSetterSignature(sliver_prototype_extent_list._RenderSliverPrototypeExtentList, () => ({
    __proto__: dart.getSetters(sliver_prototype_extent_list._RenderSliverPrototypeExtentList.__proto__),
    child: box$.RenderBox
  }));
  dart.setLibraryUri(sliver_prototype_extent_list._RenderSliverPrototypeExtentList, "package:flutter/src/widgets/sliver_prototype_extent_list.dart");
  dart.setFieldSignature(sliver_prototype_extent_list._RenderSliverPrototypeExtentList, () => ({
    __proto__: dart.getFields(sliver_prototype_extent_list._RenderSliverPrototypeExtentList.__proto__),
    [_child$3]: dart.fieldType(box$.RenderBox)
  }));
  var _name$27 = dart.privateName(animated_cross_fade, "_name");
  var C1251;
  var C1252;
  var C1253;
  animated_cross_fade.CrossFadeState = class CrossFadeState extends core.Object {
    toString() {
      return this[_name$27];
    }
  };
  (animated_cross_fade.CrossFadeState.new = function(index, _name) {
    this.index = index;
    this[_name$27] = _name;
    ;
  }).prototype = animated_cross_fade.CrossFadeState.prototype;
  dart.addTypeTests(animated_cross_fade.CrossFadeState);
  dart.setLibraryUri(animated_cross_fade.CrossFadeState, "package:flutter/src/widgets/animated_cross_fade.dart");
  dart.setFieldSignature(animated_cross_fade.CrossFadeState, () => ({
    __proto__: dart.getFields(animated_cross_fade.CrossFadeState.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$27]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(animated_cross_fade.CrossFadeState, ['toString']);
  animated_cross_fade.CrossFadeState.showFirst = C1251 || CT.C1251;
  animated_cross_fade.CrossFadeState.showSecond = C1252 || CT.C1252;
  animated_cross_fade.CrossFadeState.values = C1253 || CT.C1253;
  var C1254;
  var C1255;
  var C1258;
  var C1259;
  var C1260;
  var C1261;
  var C1262;
  var C1257;
  var C1256;
  var C1265;
  var C1266;
  var C1264;
  var C1263;
  var C1269;
  var C1270;
  var C1268;
  var C1267;
  var firstChild$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.firstChild");
  var secondChild$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.secondChild");
  var crossFadeState$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.crossFadeState");
  var duration$0 = dart.privateName(animated_cross_fade, "AnimatedCrossFade.duration");
  var reverseDuration$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.reverseDuration");
  var firstCurve$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.firstCurve");
  var secondCurve$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.secondCurve");
  var sizeCurve$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.sizeCurve");
  var alignment$16 = dart.privateName(animated_cross_fade, "AnimatedCrossFade.alignment");
  var layoutBuilder$ = dart.privateName(animated_cross_fade, "AnimatedCrossFade.layoutBuilder");
  animated_cross_fade.AnimatedCrossFade = class AnimatedCrossFade extends framework.StatefulWidget {
    get firstChild() {
      return this[firstChild$];
    }
    set firstChild(value) {
      super.firstChild = value;
    }
    get secondChild() {
      return this[secondChild$];
    }
    set secondChild(value) {
      super.secondChild = value;
    }
    get crossFadeState() {
      return this[crossFadeState$];
    }
    set crossFadeState(value) {
      super.crossFadeState = value;
    }
    get duration() {
      return this[duration$0];
    }
    set duration(value) {
      super.duration = value;
    }
    get reverseDuration() {
      return this[reverseDuration$];
    }
    set reverseDuration(value) {
      super.reverseDuration = value;
    }
    get firstCurve() {
      return this[firstCurve$];
    }
    set firstCurve(value) {
      super.firstCurve = value;
    }
    get secondCurve() {
      return this[secondCurve$];
    }
    set secondCurve(value) {
      super.secondCurve = value;
    }
    get sizeCurve() {
      return this[sizeCurve$];
    }
    set sizeCurve(value) {
      super.sizeCurve = value;
    }
    get alignment() {
      return this[alignment$16];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get layoutBuilder() {
      return this[layoutBuilder$];
    }
    set layoutBuilder(value) {
      super.layoutBuilder = value;
    }
    static defaultLayoutBuilder(topChild, topChildKey, bottomChild, bottomChildKey) {
      return new basic.Stack.new({overflow: stack.Overflow.visible, children: JSArrayOfWidget().of([new basic.Positioned.new({key: bottomChildKey, left: 0.0, top: 0.0, right: 0.0, child: bottomChild, $creationLocationd_0dea112b090073317d4: C1256 || CT.C1256}), new basic.Positioned.new({key: topChildKey, child: topChild, $creationLocationd_0dea112b090073317d4: C1263 || CT.C1263})]), $creationLocationd_0dea112b090073317d4: C1267 || CT.C1267});
    }
    createState() {
      return new animated_cross_fade._AnimatedCrossFadeState.new();
    }
    debugFillProperties(properties) {
      let t34;
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfCrossFadeState()).new("crossFadeState", this.crossFadeState));
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: alignment$.Alignment.topCenter}));
      properties.add(new diagnostics$.IntProperty.new("duration", this.duration.inMilliseconds, {unit: "ms"}));
      properties.add(new diagnostics$.IntProperty.new("reverseDuration", (t34 = this.reverseDuration, t34 == null ? null : t34.inMilliseconds), {unit: "ms", defaultValue: null}));
    }
  };
  (animated_cross_fade.AnimatedCrossFade.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let firstChild = opts && 'firstChild' in opts ? opts.firstChild : null;
    let secondChild = opts && 'secondChild' in opts ? opts.secondChild : null;
    let firstCurve = opts && 'firstCurve' in opts ? opts.firstCurve : C1186 || CT.C1186;
    let secondCurve = opts && 'secondCurve' in opts ? opts.secondCurve : C1186 || CT.C1186;
    let sizeCurve = opts && 'sizeCurve' in opts ? opts.sizeCurve : C1186 || CT.C1186;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1254 || CT.C1254;
    let crossFadeState = opts && 'crossFadeState' in opts ? opts.crossFadeState : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let reverseDuration = opts && 'reverseDuration' in opts ? opts.reverseDuration : null;
    let layoutBuilder = opts && 'layoutBuilder' in opts ? opts.layoutBuilder : C1255 || CT.C1255;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[firstChild$] = firstChild;
    this[secondChild$] = secondChild;
    this[firstCurve$] = firstCurve;
    this[secondCurve$] = secondCurve;
    this[sizeCurve$] = sizeCurve;
    this[alignment$16] = alignment;
    this[crossFadeState$] = crossFadeState;
    this[duration$0] = duration;
    this[reverseDuration$] = reverseDuration;
    this[layoutBuilder$] = layoutBuilder;
    if (!(firstChild != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 132, 15, "firstChild != null");
    if (!(secondChild != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 133, 15, "secondChild != null");
    if (!(firstCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 134, 15, "firstCurve != null");
    if (!(secondCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 135, 15, "secondCurve != null");
    if (!(sizeCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 136, 15, "sizeCurve != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 137, 15, "alignment != null");
    if (!(crossFadeState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 138, 15, "crossFadeState != null");
    if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 139, 15, "duration != null");
    if (!(layoutBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_cross_fade.dart", 140, 15, "layoutBuilder != null");
    animated_cross_fade.AnimatedCrossFade.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = animated_cross_fade.AnimatedCrossFade.prototype;
  dart.addTypeTests(animated_cross_fade.AnimatedCrossFade);
  dart.setMethodSignature(animated_cross_fade.AnimatedCrossFade, () => ({
    __proto__: dart.getMethods(animated_cross_fade.AnimatedCrossFade.__proto__),
    createState: dart.fnType(animated_cross_fade._AnimatedCrossFadeState, [])
  }));
  dart.setLibraryUri(animated_cross_fade.AnimatedCrossFade, "package:flutter/src/widgets/animated_cross_fade.dart");
  dart.setFieldSignature(animated_cross_fade.AnimatedCrossFade, () => ({
    __proto__: dart.getFields(animated_cross_fade.AnimatedCrossFade.__proto__),
    firstChild: dart.finalFieldType(framework.Widget),
    secondChild: dart.finalFieldType(framework.Widget),
    crossFadeState: dart.finalFieldType(animated_cross_fade.CrossFadeState),
    duration: dart.finalFieldType(core.Duration),
    reverseDuration: dart.finalFieldType(core.Duration),
    firstCurve: dart.finalFieldType(curves.Curve),
    secondCurve: dart.finalFieldType(curves.Curve),
    sizeCurve: dart.finalFieldType(curves.Curve),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    layoutBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.Widget, key.Key, framework.Widget, key.Key]))
  }));
  var _controller$2 = dart.privateName(animated_cross_fade, "_controller");
  var _firstAnimation = dart.privateName(animated_cross_fade, "_firstAnimation");
  var _secondAnimation = dart.privateName(animated_cross_fade, "_secondAnimation");
  var _initAnimation = dart.privateName(animated_cross_fade, "_initAnimation");
  var _isTransitioning = dart.privateName(animated_cross_fade, "_isTransitioning");
  var C1271;
  var C1272;
  var C1275;
  var C1276;
  var C1274;
  var C1273;
  var C1279;
  var C1280;
  var C1278;
  var C1277;
  var C1283;
  var C1284;
  var C1285;
  var C1282;
  var C1281;
  var C1288;
  var C1289;
  var C1287;
  var C1286;
  var C1292;
  var C1293;
  var C1291;
  var C1290;
  var C1296;
  var C1297;
  var C1298;
  var C1295;
  var C1294;
  var C1301;
  var C1302;
  var C1303;
  var C1304;
  var C1305;
  var C1306;
  var C1300;
  var C1299;
  var C1309;
  var C1308;
  var C1307;
  const State_TickerProviderStateMixin$36$3 = class State_TickerProviderStateMixin extends framework.State$(animated_cross_fade.AnimatedCrossFade) {};
  (State_TickerProviderStateMixin$36$3.new = function() {
    ticker_provider.TickerProviderStateMixin$(animated_cross_fade.AnimatedCrossFade)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$3.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$3.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$3, ticker_provider.TickerProviderStateMixin$(animated_cross_fade.AnimatedCrossFade));
  animated_cross_fade._AnimatedCrossFadeState = class _AnimatedCrossFadeState extends State_TickerProviderStateMixin$36$3 {
    initState() {
      super.initState();
      this[_controller$2] = new animation_controller.AnimationController.new({duration: this.widget.duration, reverseDuration: this.widget.reverseDuration, vsync: this});
      if (dart.equals(this.widget.crossFadeState, animated_cross_fade.CrossFadeState.showSecond)) this[_controller$2].value = 1.0;
      this[_firstAnimation] = this[_initAnimation](this.widget.firstCurve, true);
      this[_secondAnimation] = this[_initAnimation](this.widget.secondCurve, false);
      this[_controller$2].addStatusListener(dart.fn(status => {
        this.setState(dart.fn(() => {
        }, VoidToNull()));
      }, AnimationStatusToNull()));
    }
    [_initAnimation](curve, inverted) {
      let result = this[_controller$2].drive(core.double, new tween.CurveTween.new({curve: curve}));
      if (dart.test(inverted)) result = result.drive(core.double, new (TweenOfdouble()).new({begin: 1.0, end: 0.0}));
      return result;
    }
    dispose() {
      this[_controller$2].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      animated_cross_fade.AnimatedCrossFade._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.duration, oldWidget.duration)) this[_controller$2].duration = this.widget.duration;
      if (!dart.equals(this.widget.reverseDuration, oldWidget.reverseDuration)) this[_controller$2].reverseDuration = this.widget.reverseDuration;
      if (!dart.equals(this.widget.firstCurve, oldWidget.firstCurve)) this[_firstAnimation] = this[_initAnimation](this.widget.firstCurve, true);
      if (!dart.equals(this.widget.secondCurve, oldWidget.secondCurve)) this[_secondAnimation] = this[_initAnimation](this.widget.secondCurve, false);
      if (!dart.equals(this.widget.crossFadeState, oldWidget.crossFadeState)) {
        switch (this.widget.crossFadeState) {
          case C1251 || CT.C1251:
          {
            this[_controller$2].reverse();
            break;
          }
          case C1252 || CT.C1252:
          {
            this[_controller$2].forward();
            break;
          }
        }
      }
    }
    get [_isTransitioning]() {
      return dart.equals(this[_controller$2].status, animation$.AnimationStatus.forward) || dart.equals(this[_controller$2].status, animation$.AnimationStatus.reverse);
    }
    build(context) {
      let kFirstChildKey = C1271 || CT.C1271;
      let kSecondChildKey = C1272 || CT.C1272;
      let transitioningForwards = dart.equals(this[_controller$2].status, animation$.AnimationStatus.completed) || dart.equals(this[_controller$2].status, animation$.AnimationStatus.forward);
      let topKey = null;
      let topChild = null;
      let topAnimation = null;
      let bottomKey = null;
      let bottomChild = null;
      let bottomAnimation = null;
      if (transitioningForwards) {
        topKey = kSecondChildKey;
        topChild = this.widget.secondChild;
        topAnimation = this[_secondAnimation];
        bottomKey = kFirstChildKey;
        bottomChild = this.widget.firstChild;
        bottomAnimation = this[_firstAnimation];
      } else {
        topKey = kFirstChildKey;
        topChild = this.widget.firstChild;
        topAnimation = this[_firstAnimation];
        bottomKey = kSecondChildKey;
        bottomChild = this.widget.secondChild;
        bottomAnimation = this[_secondAnimation];
      }
      bottomChild = new ticker_provider.TickerMode.new({key: bottomKey, enabled: this[_isTransitioning], child: new basic.ExcludeSemantics.new({excluding: true, child: new transitions.FadeTransition.new({opacity: bottomAnimation, child: bottomChild, $creationLocationd_0dea112b090073317d4: C1273 || CT.C1273}), $creationLocationd_0dea112b090073317d4: C1277 || CT.C1277}), $creationLocationd_0dea112b090073317d4: C1281 || CT.C1281});
      topChild = new ticker_provider.TickerMode.new({key: topKey, enabled: true, child: new basic.ExcludeSemantics.new({excluding: false, child: new transitions.FadeTransition.new({opacity: topAnimation, child: topChild, $creationLocationd_0dea112b090073317d4: C1286 || CT.C1286}), $creationLocationd_0dea112b090073317d4: C1290 || CT.C1290}), $creationLocationd_0dea112b090073317d4: C1294 || CT.C1294});
      return new basic.ClipRect.new({child: new animated_size$.AnimatedSize.new({alignment: this.widget.alignment, duration: this.widget.duration, reverseDuration: this.widget.reverseDuration, curve: this.widget.sizeCurve, vsync: this, child: this.widget.layoutBuilder(topChild, topKey, bottomChild, bottomKey), $creationLocationd_0dea112b090073317d4: C1299 || CT.C1299}), $creationLocationd_0dea112b090073317d4: C1307 || CT.C1307});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (EnumPropertyOfCrossFadeState()).new("crossFadeState", this.widget.crossFadeState));
      description.add(new (DiagnosticsPropertyOfAnimationController()).new("controller", this[_controller$2], {showName: false}));
      description.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.widget.alignment, {defaultValue: alignment$.Alignment.topCenter}));
    }
  };
  (animated_cross_fade._AnimatedCrossFadeState.new = function() {
    this[_controller$2] = null;
    this[_firstAnimation] = null;
    this[_secondAnimation] = null;
    animated_cross_fade._AnimatedCrossFadeState.__proto__.new.call(this);
    ;
  }).prototype = animated_cross_fade._AnimatedCrossFadeState.prototype;
  dart.addTypeTests(animated_cross_fade._AnimatedCrossFadeState);
  dart.setMethodSignature(animated_cross_fade._AnimatedCrossFadeState, () => ({
    __proto__: dart.getMethods(animated_cross_fade._AnimatedCrossFadeState.__proto__),
    [_initAnimation]: dart.fnType(animation$.Animation$(core.double), [curves.Curve, core.bool]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(animated_cross_fade._AnimatedCrossFadeState, () => ({
    __proto__: dart.getGetters(animated_cross_fade._AnimatedCrossFadeState.__proto__),
    [_isTransitioning]: core.bool
  }));
  dart.setLibraryUri(animated_cross_fade._AnimatedCrossFadeState, "package:flutter/src/widgets/animated_cross_fade.dart");
  dart.setFieldSignature(animated_cross_fade._AnimatedCrossFadeState, () => ({
    __proto__: dart.getFields(animated_cross_fade._AnimatedCrossFadeState.__proto__),
    [_controller$2]: dart.fieldType(animation_controller.AnimationController),
    [_firstAnimation]: dart.fieldType(animation$.Animation$(core.double)),
    [_secondAnimation]: dart.fieldType(animation$.Animation$(core.double))
  }));
  var alignment$17 = dart.privateName(animated_size$, "AnimatedSize.alignment");
  var curve$0 = dart.privateName(animated_size$, "AnimatedSize.curve");
  var duration$1 = dart.privateName(animated_size$, "AnimatedSize.duration");
  var reverseDuration$0 = dart.privateName(animated_size$, "AnimatedSize.reverseDuration");
  var vsync$ = dart.privateName(animated_size$, "AnimatedSize.vsync");
  animated_size$.AnimatedSize = class AnimatedSize extends framework.SingleChildRenderObjectWidget {
    get alignment() {
      return this[alignment$17];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get curve() {
      return this[curve$0];
    }
    set curve(value) {
      super.curve = value;
    }
    get duration() {
      return this[duration$1];
    }
    set duration(value) {
      super.duration = value;
    }
    get reverseDuration() {
      return this[reverseDuration$0];
    }
    set reverseDuration(value) {
      super.reverseDuration = value;
    }
    get vsync() {
      return this[vsync$];
    }
    set vsync(value) {
      super.vsync = value;
    }
    createRenderObject(context) {
      return new animated_size.RenderAnimatedSize.new({alignment: this.alignment, duration: this.duration, reverseDuration: this.reverseDuration, curve: this.curve, vsync: this.vsync, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t34;
      animated_size.RenderAnimatedSize._check(renderObject);
      t34 = renderObject;
      t34.alignment = this.alignment;
      t34.duration = this.duration;
      t34.reverseDuration = this.reverseDuration;
      t34.curve = this.curve;
      t34.vsync = this.vsync;
      t34.textDirection = basic.Directionality.of(context);
      t34;
    }
    debugFillProperties(properties) {
      let t34;
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: alignment$.Alignment.topCenter}));
      properties.add(new diagnostics$.IntProperty.new("duration", this.duration.inMilliseconds, {unit: "ms"}));
      properties.add(new diagnostics$.IntProperty.new("reverseDuration", (t34 = this.reverseDuration, t34 == null ? null : t34.inMilliseconds), {unit: "ms", defaultValue: null}));
    }
  };
  (animated_size$.AnimatedSize.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let curve = opts && 'curve' in opts ? opts.curve : C1186 || CT.C1186;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let reverseDuration = opts && 'reverseDuration' in opts ? opts.reverseDuration : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$17] = alignment;
    this[curve$0] = curve;
    this[duration$1] = duration;
    this[reverseDuration$0] = reverseDuration;
    this[vsync$] = vsync;
    animated_size$.AnimatedSize.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = animated_size$.AnimatedSize.prototype;
  dart.addTypeTests(animated_size$.AnimatedSize);
  dart.setMethodSignature(animated_size$.AnimatedSize, () => ({
    __proto__: dart.getMethods(animated_size$.AnimatedSize.__proto__),
    createRenderObject: dart.fnType(animated_size.RenderAnimatedSize, [framework.BuildContext])
  }));
  dart.setLibraryUri(animated_size$.AnimatedSize, "package:flutter/src/widgets/animated_size.dart");
  dart.setFieldSignature(animated_size$.AnimatedSize, () => ({
    __proto__: dart.getFields(animated_size$.AnimatedSize.__proto__),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    curve: dart.finalFieldType(curves.Curve),
    duration: dart.finalFieldType(core.Duration),
    reverseDuration: dart.finalFieldType(core.Duration),
    vsync: dart.finalFieldType(ticker.TickerProvider)
  }));
  var controller$1 = dart.privateName(primary_scroll_controller, "PrimaryScrollController.controller");
  primary_scroll_controller.PrimaryScrollController = class PrimaryScrollController extends framework.InheritedWidget {
    get controller() {
      return this[controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    static of(context) {
      let t34;
      let result = context.dependOnInheritedWidgetOfExactType(primary_scroll_controller.PrimaryScrollController);
      t34 = result;
      return t34 == null ? null : t34.controller;
    }
    updateShouldNotify(oldWidget) {
      primary_scroll_controller.PrimaryScrollController._check(oldWidget);
      return !dart.equals(this.controller, oldWidget.controller);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfScrollController()).new("controller", this.controller, {ifNull: "no controller", showName: false}));
    }
  };
  (primary_scroll_controller.PrimaryScrollController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$1] = controller;
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/primary_scroll_controller.dart", 25, 15, "controller != null");
    primary_scroll_controller.PrimaryScrollController.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = primary_scroll_controller.PrimaryScrollController.prototype;
  (primary_scroll_controller.PrimaryScrollController.none = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$1] = null;
    primary_scroll_controller.PrimaryScrollController.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = primary_scroll_controller.PrimaryScrollController.prototype;
  dart.addTypeTests(primary_scroll_controller.PrimaryScrollController);
  dart.setMethodSignature(primary_scroll_controller.PrimaryScrollController, () => ({
    __proto__: dart.getMethods(primary_scroll_controller.PrimaryScrollController.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(primary_scroll_controller.PrimaryScrollController, "package:flutter/src/widgets/primary_scroll_controller.dart");
  dart.setFieldSignature(primary_scroll_controller.PrimaryScrollController, () => ({
    __proto__: dart.getFields(primary_scroll_controller.PrimaryScrollController.__proto__),
    controller: dart.finalFieldType(scroll_controller.ScrollController)
  }));
  preferred_size.PreferredSizeWidget = class PreferredSizeWidget extends core.Object {};
  (preferred_size.PreferredSizeWidget.new = function() {
    ;
  }).prototype = preferred_size.PreferredSizeWidget.prototype;
  dart.addTypeTests(preferred_size.PreferredSizeWidget);
  preferred_size.PreferredSizeWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(preferred_size.PreferredSizeWidget, "package:flutter/src/widgets/preferred_size.dart");
  var child$49 = dart.privateName(preferred_size, "PreferredSize.child");
  var preferredSize$ = dart.privateName(preferred_size, "PreferredSize.preferredSize");
  preferred_size.PreferredSize = class PreferredSize extends framework.StatelessWidget {
    get child() {
      return this[child$49];
    }
    set child(value) {
      super.child = value;
    }
    get preferredSize() {
      return this[preferredSize$];
    }
    set preferredSize(value) {
      super.preferredSize = value;
    }
    build(context) {
      return this.child;
    }
  };
  (preferred_size.PreferredSize.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let preferredSize = opts && 'preferredSize' in opts ? opts.preferredSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$49] = child;
    this[preferredSize$] = preferredSize;
    preferred_size.PreferredSize.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = preferred_size.PreferredSize.prototype;
  dart.addTypeTests(preferred_size.PreferredSize);
  preferred_size.PreferredSize[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(preferred_size.PreferredSize, () => ({
    __proto__: dart.getMethods(preferred_size.PreferredSize.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(preferred_size.PreferredSize, "package:flutter/src/widgets/preferred_size.dart");
  dart.setFieldSignature(preferred_size.PreferredSize, () => ({
    __proto__: dart.getFields(preferred_size.PreferredSize.__proto__),
    child: dart.finalFieldType(framework.Widget),
    preferredSize: dart.finalFieldType(ui.Size)
  }));
  var _opacity$0 = dart.privateName(icon_theme_data, "_opacity");
  var color$10 = dart.privateName(icon_theme_data, "IconThemeData.color");
  var _opacity$1 = dart.privateName(icon_theme_data, "IconThemeData._opacity");
  var size$3 = dart.privateName(icon_theme_data, "IconThemeData.size");
  icon_theme_data.IconThemeData = class IconThemeData extends diagnostics$.Diagnosticable {
    get color() {
      return this[color$10];
    }
    set color(value) {
      super.color = value;
    }
    get [_opacity$0]() {
      return this[_opacity$1];
    }
    set [_opacity$0](value) {
      super[_opacity$0] = value;
    }
    get size() {
      return this[size$3];
    }
    set size(value) {
      super.size = value;
    }
    copyWith(opts) {
      let t34, t34$, t34$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let opacity = opts && 'opacity' in opts ? opts.opacity : null;
      let size = opts && 'size' in opts ? opts.size : null;
      return new icon_theme_data.IconThemeData.new({color: (t34 = color, t34 == null ? this.color : t34), opacity: (t34$ = opacity, t34$ == null ? this.opacity : t34$), size: (t34$0 = size, t34$0 == null ? this.size : t34$0)});
    }
    merge(other) {
      if (other == null) return this;
      return this.copyWith({color: other.color, opacity: other.opacity, size: other.size});
    }
    resolve(context) {
      return this;
    }
    get isConcrete() {
      return this.color != null && this.opacity != null && this.size != null;
    }
    get opacity() {
      let t34;
      t34 = this[_opacity$0];
      return t34 == null ? null : t34[$clamp](0.0, 1.0);
    }
    static lerp(a, b, t) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3;
      if (!(t != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_theme_data.dart", 94, 12, "t != null");
      return new icon_theme_data.IconThemeData.new({color: ui.Color.lerp((t34 = a, t34 == null ? null : t34.color), (t34$ = b, t34$ == null ? null : t34$.color), t), opacity: ui.lerpDouble((t34$0 = a, t34$0 == null ? null : t34$0.opacity), (t34$1 = b, t34$1 == null ? null : t34$1.opacity), t), size: ui.lerpDouble((t34$2 = a, t34$2 == null ? null : t34$2.size), (t34$3 = b, t34$3 == null ? null : t34$3.size), t)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return icon_theme_data.IconThemeData.is(other) && dart.equals(other.color, this.color) && other.opacity == this.opacity && other.size == this.size;
    }
    get hashCode() {
      return ui.hashValues(this.color, this.opacity, this.size);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("opacity", this.opacity, {defaultValue: null}));
      properties.add(new diagnostics$.DoubleProperty.new("size", this.size, {defaultValue: null}));
    }
  };
  (icon_theme_data.IconThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : null;
    let size = opts && 'size' in opts ? opts.size : null;
    this[color$10] = color;
    this[size$3] = size;
    this[_opacity$1] = opacity;
    icon_theme_data.IconThemeData.__proto__.new.call(this);
    ;
  }).prototype = icon_theme_data.IconThemeData.prototype;
  (icon_theme_data.IconThemeData.fallback = function() {
    this[color$10] = C139 || CT.C139;
    this[_opacity$1] = 1.0;
    this[size$3] = 24.0;
    icon_theme_data.IconThemeData.__proto__.new.call(this);
    ;
  }).prototype = icon_theme_data.IconThemeData.prototype;
  dart.addTypeTests(icon_theme_data.IconThemeData);
  dart.setMethodSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getMethods(icon_theme_data.IconThemeData.__proto__),
    copyWith: dart.fnType(icon_theme_data.IconThemeData, [], {color: ui.Color, opacity: core.double, size: core.double}, {}),
    merge: dart.fnType(icon_theme_data.IconThemeData, [icon_theme_data.IconThemeData]),
    resolve: dart.fnType(icon_theme_data.IconThemeData, [framework.BuildContext]),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getGetters(icon_theme_data.IconThemeData.__proto__),
    isConcrete: core.bool,
    opacity: core.double
  }));
  dart.setLibraryUri(icon_theme_data.IconThemeData, "package:flutter/src/widgets/icon_theme_data.dart");
  dart.setFieldSignature(icon_theme_data.IconThemeData, () => ({
    __proto__: dart.getFields(icon_theme_data.IconThemeData.__proto__),
    color: dart.finalFieldType(ui.Color),
    [_opacity$0]: dart.finalFieldType(core.double),
    size: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(icon_theme_data.IconThemeData, ['_equals']);
  dart.defineExtensionAccessors(icon_theme_data.IconThemeData, ['hashCode']);
  var focusNode$2 = dart.privateName(raw_keyboard_listener, "RawKeyboardListener.focusNode");
  var autofocus$2 = dart.privateName(raw_keyboard_listener, "RawKeyboardListener.autofocus");
  var onKey$0 = dart.privateName(raw_keyboard_listener, "RawKeyboardListener.onKey");
  var child$50 = dart.privateName(raw_keyboard_listener, "RawKeyboardListener.child");
  raw_keyboard_listener.RawKeyboardListener = class RawKeyboardListener extends framework.StatefulWidget {
    get focusNode() {
      return this[focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[autofocus$2];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get onKey() {
      return this[onKey$0];
    }
    set onKey(value) {
      super.onKey = value;
    }
    get child() {
      return this[child$50];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new raw_keyboard_listener._RawKeyboardListenerState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode));
    }
  };
  (raw_keyboard_listener.RawKeyboardListener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let onKey = opts && 'onKey' in opts ? opts.onKey : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[focusNode$2] = focusNode;
    this[autofocus$2] = autofocus;
    this[onKey$0] = onKey;
    this[child$50] = child;
    if (!(focusNode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/raw_keyboard_listener.dart", 44, 15, "focusNode != null");
    if (!(autofocus != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/raw_keyboard_listener.dart", 45, 15, "autofocus != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/raw_keyboard_listener.dart", 46, 15, "child != null");
    raw_keyboard_listener.RawKeyboardListener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = raw_keyboard_listener.RawKeyboardListener.prototype;
  dart.addTypeTests(raw_keyboard_listener.RawKeyboardListener);
  dart.setMethodSignature(raw_keyboard_listener.RawKeyboardListener, () => ({
    __proto__: dart.getMethods(raw_keyboard_listener.RawKeyboardListener.__proto__),
    createState: dart.fnType(raw_keyboard_listener._RawKeyboardListenerState, [])
  }));
  dart.setLibraryUri(raw_keyboard_listener.RawKeyboardListener, "package:flutter/src/widgets/raw_keyboard_listener.dart");
  dart.setFieldSignature(raw_keyboard_listener.RawKeyboardListener, () => ({
    __proto__: dart.getFields(raw_keyboard_listener.RawKeyboardListener.__proto__),
    focusNode: dart.finalFieldType(focus_manager.FocusNode),
    autofocus: dart.finalFieldType(core.bool),
    onKey: dart.finalFieldType(dart.fnType(dart.void, [raw_keyboard.RawKeyEvent])),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _listening = dart.privateName(raw_keyboard_listener, "_listening");
  var _handleFocusChanged$0 = dart.privateName(raw_keyboard_listener, "_handleFocusChanged");
  var _detachKeyboardIfAttached = dart.privateName(raw_keyboard_listener, "_detachKeyboardIfAttached");
  var _attachKeyboardIfDetached = dart.privateName(raw_keyboard_listener, "_attachKeyboardIfDetached");
  var _handleRawKeyEvent$ = dart.privateName(raw_keyboard_listener, "_handleRawKeyEvent");
  var C1312;
  var C1313;
  var C1314;
  var C1311;
  var C1310;
  raw_keyboard_listener._RawKeyboardListenerState = class _RawKeyboardListenerState extends framework.State$(raw_keyboard_listener.RawKeyboardListener) {
    initState() {
      super.initState();
      this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged$0));
    }
    didUpdateWidget(oldWidget) {
      raw_keyboard_listener.RawKeyboardListener._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.focusNode, oldWidget.focusNode)) {
        oldWidget.focusNode.removeListener(dart.bind(this, _handleFocusChanged$0));
        this.widget.focusNode.addListener(dart.bind(this, _handleFocusChanged$0));
      }
    }
    dispose() {
      this.widget.focusNode.removeListener(dart.bind(this, _handleFocusChanged$0));
      this[_detachKeyboardIfAttached]();
      super.dispose();
    }
    [_handleFocusChanged$0]() {
      if (dart.test(this.widget.focusNode.hasFocus))
        this[_attachKeyboardIfDetached]();
      else
        this[_detachKeyboardIfAttached]();
    }
    [_attachKeyboardIfDetached]() {
      if (dart.test(this[_listening])) return;
      raw_keyboard.RawKeyboard.instance.addListener(dart.bind(this, _handleRawKeyEvent$));
      this[_listening] = true;
    }
    [_detachKeyboardIfAttached]() {
      if (!dart.test(this[_listening])) return;
      raw_keyboard.RawKeyboard.instance.removeListener(dart.bind(this, _handleRawKeyEvent$));
      this[_listening] = false;
    }
    [_handleRawKeyEvent$](event) {
      if (this.widget.onKey != null) this.widget.onKey(event);
    }
    build(context) {
      return new focus_scope.Focus.new({focusNode: this.widget.focusNode, autofocus: this.widget.autofocus, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1310 || CT.C1310});
    }
  };
  (raw_keyboard_listener._RawKeyboardListenerState.new = function() {
    this[_listening] = false;
    raw_keyboard_listener._RawKeyboardListenerState.__proto__.new.call(this);
    ;
  }).prototype = raw_keyboard_listener._RawKeyboardListenerState.prototype;
  dart.addTypeTests(raw_keyboard_listener._RawKeyboardListenerState);
  dart.setMethodSignature(raw_keyboard_listener._RawKeyboardListenerState, () => ({
    __proto__: dart.getMethods(raw_keyboard_listener._RawKeyboardListenerState.__proto__),
    [_handleFocusChanged$0]: dart.fnType(dart.void, []),
    [_attachKeyboardIfDetached]: dart.fnType(dart.void, []),
    [_detachKeyboardIfAttached]: dart.fnType(dart.void, []),
    [_handleRawKeyEvent$]: dart.fnType(dart.void, [raw_keyboard.RawKeyEvent]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(raw_keyboard_listener._RawKeyboardListenerState, "package:flutter/src/widgets/raw_keyboard_listener.dart");
  dart.setFieldSignature(raw_keyboard_listener._RawKeyboardListenerState, () => ({
    __proto__: dart.getFields(raw_keyboard_listener._RawKeyboardListenerState.__proto__),
    [_listening]: dart.fieldType(core.bool)
  }));
  const _is_StreamBuilderBase_default = Symbol('_is_StreamBuilderBase_default');
  var stream$ = dart.privateName(async$, "StreamBuilderBase.stream");
  async$.StreamBuilderBase$ = dart.generic((T, S) => {
    var _StreamBuilderBaseStateOfT$S = () => (_StreamBuilderBaseStateOfT$S = dart.constFn(async$._StreamBuilderBaseState$(T, S)))();
    class StreamBuilderBase extends framework.StatefulWidget {
      get stream() {
        return this[stream$];
      }
      set stream(value) {
        super.stream = value;
      }
      afterConnected(current) {
        S._check(current);
        return current;
      }
      afterError(current, error) {
        S._check(current);
        return current;
      }
      afterDone(current) {
        S._check(current);
        return current;
      }
      afterDisconnected(current) {
        S._check(current);
        return current;
      }
      createState() {
        return new (_StreamBuilderBaseStateOfT$S()).new();
      }
    }
    (StreamBuilderBase.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[stream$] = stream;
      StreamBuilderBase.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilderBase.prototype;
    dart.addTypeTests(StreamBuilderBase);
    StreamBuilderBase.prototype[_is_StreamBuilderBase_default] = true;
    dart.setMethodSignature(StreamBuilderBase, () => ({
      __proto__: dart.getMethods(StreamBuilderBase.__proto__),
      afterConnected: dart.fnType(S, [core.Object]),
      afterError: dart.fnType(S, [core.Object, core.Object]),
      afterDone: dart.fnType(S, [core.Object]),
      afterDisconnected: dart.fnType(S, [core.Object]),
      createState: dart.fnType(framework.State$(async$.StreamBuilderBase$(T, S)), [])
    }));
    dart.setLibraryUri(StreamBuilderBase, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(StreamBuilderBase, () => ({
      __proto__: dart.getFields(StreamBuilderBase.__proto__),
      stream: dart.finalFieldType(async.Stream$(T))
    }));
    return StreamBuilderBase;
  });
  async$.StreamBuilderBase = async$.StreamBuilderBase$();
  dart.addTypeTests(async$.StreamBuilderBase, _is_StreamBuilderBase_default);
  var _subscription = dart.privateName(async$, "_subscription");
  var _summary = dart.privateName(async$, "_summary");
  var _subscribe = dart.privateName(async$, "_subscribe");
  var _unsubscribe = dart.privateName(async$, "_unsubscribe");
  const _is__StreamBuilderBaseState_default = Symbol('_is__StreamBuilderBaseState_default');
  async$._StreamBuilderBaseState$ = dart.generic((T, S) => {
    var StreamBuilderBaseOfT$S = () => (StreamBuilderBaseOfT$S = dart.constFn(async$.StreamBuilderBase$(T, S)))();
    var TToNull = () => (TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class _StreamBuilderBaseState extends framework.State$(async$.StreamBuilderBase$(T, S)) {
      initState() {
        super.initState();
        this[_summary] = this.widget.initial();
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        StreamBuilderBaseOfT$S()._check(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.stream, this.widget.stream)) {
          if (this[_subscription] != null) {
            this[_unsubscribe]();
            this[_summary] = this.widget.afterDisconnected(this[_summary]);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        return this.widget.build(context, this[_summary]);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.stream != null) {
          this[_subscription] = this.widget.stream.listen(dart.fn(data => {
            this.setState(dart.fn(() => {
              this[_summary] = this.widget.afterData(this[_summary], data);
            }, VoidToNull()));
          }, TToNull()), {onError: dart.fn(error => {
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterError(this[_summary], error);
              }, VoidToNull()));
            }, ObjectToNull()), onDone: dart.fn(() => {
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterDone(this[_summary]);
              }, VoidToNull()));
            }, VoidToNull())});
          this[_summary] = this.widget.afterConnected(this[_summary]);
        }
      }
      [_unsubscribe]() {
        if (this[_subscription] != null) {
          this[_subscription].cancel();
          this[_subscription] = null;
        }
      }
    }
    (_StreamBuilderBaseState.new = function() {
      this[_subscription] = null;
      this[_summary] = null;
      _StreamBuilderBaseState.__proto__.new.call(this);
      ;
    }).prototype = _StreamBuilderBaseState.prototype;
    dart.addTypeTests(_StreamBuilderBaseState);
    _StreamBuilderBaseState.prototype[_is__StreamBuilderBaseState_default] = true;
    dart.setMethodSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getMethods(_StreamBuilderBaseState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(_StreamBuilderBaseState, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getFields(_StreamBuilderBaseState.__proto__),
      [_subscription]: dart.fieldType(async.StreamSubscription$(T)),
      [_summary]: dart.fieldType(S)
    }));
    return _StreamBuilderBaseState;
  });
  async$._StreamBuilderBaseState = async$._StreamBuilderBaseState$();
  dart.addTypeTests(async$._StreamBuilderBaseState, _is__StreamBuilderBaseState_default);
  var _name$28 = dart.privateName(async$, "_name");
  var C1315;
  var C1316;
  var C1317;
  var C1318;
  var C1319;
  async$.ConnectionState = class ConnectionState extends core.Object {
    toString() {
      return this[_name$28];
    }
  };
  (async$.ConnectionState.new = function(index, _name) {
    this.index = index;
    this[_name$28] = _name;
    ;
  }).prototype = async$.ConnectionState.prototype;
  dart.addTypeTests(async$.ConnectionState);
  dart.setLibraryUri(async$.ConnectionState, "package:flutter/src/widgets/async.dart");
  dart.setFieldSignature(async$.ConnectionState, () => ({
    __proto__: dart.getFields(async$.ConnectionState.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$28]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(async$.ConnectionState, ['toString']);
  async$.ConnectionState.none = C1315 || CT.C1315;
  async$.ConnectionState.waiting = C1316 || CT.C1316;
  async$.ConnectionState.active = C1317 || CT.C1317;
  async$.ConnectionState.done = C1318 || CT.C1318;
  async$.ConnectionState.values = C1319 || CT.C1319;
  const _is_AsyncSnapshot_default = Symbol('_is_AsyncSnapshot_default');
  var connectionState$ = dart.privateName(async$, "AsyncSnapshot.connectionState");
  var data$1 = dart.privateName(async$, "AsyncSnapshot.data");
  var error$ = dart.privateName(async$, "AsyncSnapshot.error");
  async$.AsyncSnapshot$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class AsyncSnapshot extends core.Object {
      get connectionState() {
        return this[connectionState$];
      }
      set connectionState(value) {
        super.connectionState = value;
      }
      get data() {
        return this[data$1];
      }
      set data(value) {
        super.data = value;
      }
      get error() {
        return this[error$];
      }
      set error(value) {
        super.error = value;
      }
      get requireData() {
        if (dart.test(this.hasData)) return this.data;
        if (dart.test(this.hasError)) dart.throw(this.error);
        dart.throw(new core.StateError.new("Snapshot has neither data nor error"));
      }
      inState(state) {
        return new (AsyncSnapshotOfT()).__(state, this.data, this.error);
      }
      get hasData() {
        return this.data != null;
      }
      get hasError() {
        return this.error != null;
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "AsyncSnapshot")) + "(" + dart.str(this.connectionState) + ", " + dart.str(this.data) + ", " + dart.str(this.error) + ")";
      }
      _equals(other) {
        if (other == null) return false;
        if (this === other) return true;
        return AsyncSnapshotOfT().is(other) && dart.equals(other.connectionState, this.connectionState) && dart.equals(other.data, this.data) && dart.equals(other.error, this.error);
      }
      get hashCode() {
        return ui.hashValues(this.connectionState, this.data, this.error);
      }
    }
    (AsyncSnapshot.__ = function(connectionState, data, error) {
      this[connectionState$] = connectionState;
      this[data$1] = data;
      this[error$] = error;
      if (!(connectionState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/async.dart", 201, 14, "connectionState != null");
      if (!!(data != null && error != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/async.dart", 202, 14, "!(data != null && error != null)");
      ;
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.nothing = function() {
      AsyncSnapshot.__.call(this, async$.ConnectionState.none, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withData = function(state, data) {
      AsyncSnapshot.__.call(this, state, data, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withError = function(state, error) {
      AsyncSnapshot.__.call(this, state, null, error);
    }).prototype = AsyncSnapshot.prototype;
    dart.addTypeTests(AsyncSnapshot);
    AsyncSnapshot.prototype[_is_AsyncSnapshot_default] = true;
    dart.setMethodSignature(AsyncSnapshot, () => ({
      __proto__: dart.getMethods(AsyncSnapshot.__proto__),
      inState: dart.fnType(async$.AsyncSnapshot$(T), [async$.ConnectionState]),
      _equals: dart.fnType(core.bool, [core.Object]),
      [$_equals]: dart.fnType(core.bool, [core.Object])
    }));
    dart.setGetterSignature(AsyncSnapshot, () => ({
      __proto__: dart.getGetters(AsyncSnapshot.__proto__),
      requireData: T,
      hasData: core.bool,
      hasError: core.bool
    }));
    dart.setLibraryUri(AsyncSnapshot, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(AsyncSnapshot, () => ({
      __proto__: dart.getFields(AsyncSnapshot.__proto__),
      connectionState: dart.finalFieldType(async$.ConnectionState),
      data: dart.finalFieldType(T),
      error: dart.finalFieldType(core.Object)
    }));
    dart.defineExtensionMethods(AsyncSnapshot, ['toString', '_equals']);
    dart.defineExtensionAccessors(AsyncSnapshot, ['hashCode']);
    return AsyncSnapshot;
  });
  async$.AsyncSnapshot = async$.AsyncSnapshot$();
  dart.addTypeTests(async$.AsyncSnapshot, _is_AsyncSnapshot_default);
  const _is_StreamBuilder_default = Symbol('_is_StreamBuilder_default');
  var builder$7 = dart.privateName(async$, "StreamBuilder.builder");
  var initialData$ = dart.privateName(async$, "StreamBuilder.initialData");
  async$.StreamBuilder$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class StreamBuilder extends async$.StreamBuilderBase$(T, async$.AsyncSnapshot$(T)) {
      get builder() {
        return this[builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$];
      }
      set initialData(value) {
        super.initialData = value;
      }
      initial() {
        return new (AsyncSnapshotOfT()).withData(async$.ConnectionState.none, this.initialData);
      }
      afterConnected(current) {
        AsyncSnapshotOfT()._check(current);
        return current.inState(async$.ConnectionState.waiting);
      }
      afterData(current, data) {
        AsyncSnapshotOfT()._check(current);
        T._check(data);
        return new (AsyncSnapshotOfT()).withData(async$.ConnectionState.active, data);
      }
      afterError(current, error) {
        AsyncSnapshotOfT()._check(current);
        return new (AsyncSnapshotOfT()).withError(async$.ConnectionState.active, error);
      }
      afterDone(current) {
        AsyncSnapshotOfT()._check(current);
        return current.inState(async$.ConnectionState.done);
      }
      afterDisconnected(current) {
        AsyncSnapshotOfT()._check(current);
        return current.inState(async$.ConnectionState.none);
      }
      build(context, currentSummary) {
        AsyncSnapshotOfT()._check(currentSummary);
        return this.builder(context, currentSummary);
      }
    }
    (StreamBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[initialData$] = initialData;
      this[builder$7] = builder;
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/async.dart", 470, 15, "builder != null");
      StreamBuilder.__proto__.new.call(this, {key: key, stream: stream, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilder.prototype;
    dart.addTypeTests(StreamBuilder);
    StreamBuilder.prototype[_is_StreamBuilder_default] = true;
    dart.setMethodSignature(StreamBuilder, () => ({
      __proto__: dart.getMethods(StreamBuilder.__proto__),
      initial: dart.fnType(async$.AsyncSnapshot$(T), []),
      afterData: dart.fnType(async$.AsyncSnapshot$(T), [core.Object, core.Object]),
      build: dart.fnType(framework.Widget, [framework.BuildContext, core.Object])
    }));
    dart.setLibraryUri(StreamBuilder, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(StreamBuilder, () => ({
      __proto__: dart.getFields(StreamBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(T)
    }));
    return StreamBuilder;
  });
  async$.StreamBuilder = async$.StreamBuilder$();
  dart.addTypeTests(async$.StreamBuilder, _is_StreamBuilder_default);
  const _is_FutureBuilder_default = Symbol('_is_FutureBuilder_default');
  var future$ = dart.privateName(async$, "FutureBuilder.future");
  var builder$8 = dart.privateName(async$, "FutureBuilder.builder");
  var initialData$0 = dart.privateName(async$, "FutureBuilder.initialData");
  async$.FutureBuilder$ = dart.generic(T => {
    var _FutureBuilderStateOfT = () => (_FutureBuilderStateOfT = dart.constFn(async$._FutureBuilderState$(T)))();
    class FutureBuilder extends framework.StatefulWidget {
      get future() {
        return this[future$];
      }
      set future(value) {
        super.future = value;
      }
      get builder() {
        return this[builder$8];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$0];
      }
      set initialData(value) {
        super.initialData = value;
      }
      createState() {
        return new (_FutureBuilderStateOfT()).new();
      }
    }
    (FutureBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let future = opts && 'future' in opts ? opts.future : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[future$] = future;
      this[initialData$0] = initialData;
      this[builder$8] = builder;
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/async.dart", 659, 15, "builder != null");
      FutureBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = FutureBuilder.prototype;
    dart.addTypeTests(FutureBuilder);
    FutureBuilder.prototype[_is_FutureBuilder_default] = true;
    dart.setMethodSignature(FutureBuilder, () => ({
      __proto__: dart.getMethods(FutureBuilder.__proto__),
      createState: dart.fnType(framework.State$(async$.FutureBuilder$(T)), [])
    }));
    dart.setLibraryUri(FutureBuilder, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(FutureBuilder, () => ({
      __proto__: dart.getFields(FutureBuilder.__proto__),
      future: dart.finalFieldType(async.Future$(T)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(T)
    }));
    return FutureBuilder;
  });
  async$.FutureBuilder = async$.FutureBuilder$();
  dart.addTypeTests(async$.FutureBuilder, _is_FutureBuilder_default);
  var _activeCallbackIdentity = dart.privateName(async$, "_activeCallbackIdentity");
  var _snapshot = dart.privateName(async$, "_snapshot");
  const _is__FutureBuilderState_default = Symbol('_is__FutureBuilderState_default');
  async$._FutureBuilderState$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    var FutureBuilderOfT = () => (FutureBuilderOfT = dart.constFn(async$.FutureBuilder$(T)))();
    var BuildContextAndAsyncSnapshotOfTToWidget = () => (BuildContextAndAsyncSnapshotOfTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AsyncSnapshotOfT()])))();
    var TToNull = () => (TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class _FutureBuilderState extends framework.State$(async$.FutureBuilder$(T)) {
      initState() {
        super.initState();
        this[_snapshot] = new (AsyncSnapshotOfT()).withData(async$.ConnectionState.none, this.widget.initialData);
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        FutureBuilderOfT()._check(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.future, this.widget.future)) {
          if (this[_activeCallbackIdentity] != null) {
            this[_unsubscribe]();
            this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.none);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        return BuildContextAndAsyncSnapshotOfTToWidget()._check(this.widget.builder)(context, this[_snapshot]);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.future != null) {
          let callbackIdentity = new core.Object.new();
          this[_activeCallbackIdentity] = callbackIdentity;
          this.widget.future.then(dart.void, dart.fn(data => {
            if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
              this.setState(dart.fn(() => {
                this[_snapshot] = new (AsyncSnapshotOfT()).withData(async$.ConnectionState.done, data);
              }, VoidToNull()));
            }
          }, TToNull()), {onError: dart.fn(error => {
              if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
                this.setState(dart.fn(() => {
                  this[_snapshot] = new (AsyncSnapshotOfT()).withError(async$.ConnectionState.done, error);
                }, VoidToNull()));
              }
            }, ObjectToNull())});
          this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.waiting);
        }
      }
      [_unsubscribe]() {
        this[_activeCallbackIdentity] = null;
      }
    }
    (_FutureBuilderState.new = function() {
      this[_activeCallbackIdentity] = null;
      this[_snapshot] = null;
      _FutureBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _FutureBuilderState.prototype;
    dart.addTypeTests(_FutureBuilderState);
    _FutureBuilderState.prototype[_is__FutureBuilderState_default] = true;
    dart.setMethodSignature(_FutureBuilderState, () => ({
      __proto__: dart.getMethods(_FutureBuilderState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(_FutureBuilderState, "package:flutter/src/widgets/async.dart");
    dart.setFieldSignature(_FutureBuilderState, () => ({
      __proto__: dart.getFields(_FutureBuilderState.__proto__),
      [_activeCallbackIdentity]: dart.fieldType(core.Object),
      [_snapshot]: dart.fieldType(async$.AsyncSnapshot$(T))
    }));
    return _FutureBuilderState;
  });
  async$._FutureBuilderState = async$._FutureBuilderState$();
  dart.addTypeTests(async$._FutureBuilderState, _is__FutureBuilderState_default);
  var imageFilter$ = dart.privateName(image_filter, "ImageFiltered.imageFilter");
  image_filter.ImageFiltered = class ImageFiltered extends framework.SingleChildRenderObjectWidget {
    get imageFilter() {
      return this[imageFilter$];
    }
    set imageFilter(value) {
      super.imageFilter = value;
    }
    createRenderObject(context) {
      return new image_filter._ImageFilterRenderObject.new(this.imageFilter);
    }
    updateRenderObject(context, renderObject) {
      let t34;
      image_filter._ImageFilterRenderObject._check(renderObject);
      t34 = renderObject;
      t34.imageFilter = this.imageFilter;
      t34;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImageFilter()).new("imageFilter", this.imageFilter));
    }
  };
  (image_filter.ImageFiltered.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let imageFilter = opts && 'imageFilter' in opts ? opts.imageFilter : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[imageFilter$] = imageFilter;
    if (!(imageFilter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image_filter.dart", 22, 15, "imageFilter != null");
    image_filter.ImageFiltered.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image_filter.ImageFiltered.prototype;
  dart.addTypeTests(image_filter.ImageFiltered);
  dart.setMethodSignature(image_filter.ImageFiltered, () => ({
    __proto__: dart.getMethods(image_filter.ImageFiltered.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(image_filter.ImageFiltered, "package:flutter/src/widgets/image_filter.dart");
  dart.setFieldSignature(image_filter.ImageFiltered, () => ({
    __proto__: dart.getFields(image_filter.ImageFiltered.__proto__),
    imageFilter: dart.finalFieldType(ui.ImageFilter)
  }));
  var _imageFilter$ = dart.privateName(image_filter, "_imageFilter");
  image_filter._ImageFilterRenderObject = class _ImageFilterRenderObject extends proxy_box.RenderProxyBox {
    get imageFilter() {
      return this[_imageFilter$];
    }
    set imageFilter(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image_filter.dart", 49, 12, "value != null");
      if (!dart.equals(value, this[_imageFilter$])) {
        this[_imageFilter$] = value;
        this.markNeedsPaint();
      }
    }
    get alwaysNeedsCompositing() {
      return this.child != null;
    }
    paint(context, offset) {
      let t34;
      if (!(this.imageFilter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image_filter.dart", 61, 12, "imageFilter != null");
      if (this.layer == null) {
        this.layer = new layer.ImageFilterLayer.new({imageFilter: this.imageFilter});
      } else {
        let filterLayer = layer.ImageFilterLayer.as(this.layer);
        t34 = filterLayer;
        t34.imageFilter = this.imageFilter;
        t34;
      }
      context.pushLayer(this.layer, dart.bind(this, 'paint', super.paint), offset);
      if (!(this.layer != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/image_filter.dart", 70, 12, "layer != null");
    }
  };
  (image_filter._ImageFilterRenderObject.new = function(_imageFilter) {
    this[_imageFilter$] = _imageFilter;
    image_filter._ImageFilterRenderObject.__proto__.new.call(this);
    ;
  }).prototype = image_filter._ImageFilterRenderObject.prototype;
  dart.addTypeTests(image_filter._ImageFilterRenderObject);
  dart.setGetterSignature(image_filter._ImageFilterRenderObject, () => ({
    __proto__: dart.getGetters(image_filter._ImageFilterRenderObject.__proto__),
    imageFilter: ui.ImageFilter
  }));
  dart.setSetterSignature(image_filter._ImageFilterRenderObject, () => ({
    __proto__: dart.getSetters(image_filter._ImageFilterRenderObject.__proto__),
    imageFilter: ui.ImageFilter
  }));
  dart.setLibraryUri(image_filter._ImageFilterRenderObject, "package:flutter/src/widgets/image_filter.dart");
  dart.setFieldSignature(image_filter._ImageFilterRenderObject, () => ({
    __proto__: dart.getFields(image_filter._ImageFilterRenderObject.__proto__),
    [_imageFilter$]: dart.fieldType(ui.ImageFilter)
  }));
  var C1320;
  var C1321;
  var C1322;
  var C1325;
  var C1326;
  var C1327;
  var C1328;
  var C1329;
  var C1330;
  var C1331;
  var C1332;
  var C1333;
  var C1334;
  var C1324;
  var C1323;
  var _image = dart.privateName(fade_in_image, "_image");
  var C1337;
  var C1338;
  var C1339;
  var C1340;
  var C1341;
  var C1342;
  var C1343;
  var C1336;
  var C1335;
  var C1346;
  var C1347;
  var C1348;
  var C1349;
  var C1345;
  var C1344;
  var placeholder$ = dart.privateName(fade_in_image, "FadeInImage.placeholder");
  var image$2 = dart.privateName(fade_in_image, "FadeInImage.image");
  var fadeOutDuration$ = dart.privateName(fade_in_image, "FadeInImage.fadeOutDuration");
  var fadeOutCurve$ = dart.privateName(fade_in_image, "FadeInImage.fadeOutCurve");
  var fadeInDuration$ = dart.privateName(fade_in_image, "FadeInImage.fadeInDuration");
  var fadeInCurve$ = dart.privateName(fade_in_image, "FadeInImage.fadeInCurve");
  var width$6 = dart.privateName(fade_in_image, "FadeInImage.width");
  var height$6 = dart.privateName(fade_in_image, "FadeInImage.height");
  var fit$4 = dart.privateName(fade_in_image, "FadeInImage.fit");
  var alignment$18 = dart.privateName(fade_in_image, "FadeInImage.alignment");
  var repeat$1 = dart.privateName(fade_in_image, "FadeInImage.repeat");
  var matchTextDirection$1 = dart.privateName(fade_in_image, "FadeInImage.matchTextDirection");
  var excludeFromSemantics$3 = dart.privateName(fade_in_image, "FadeInImage.excludeFromSemantics");
  var imageSemanticLabel$ = dart.privateName(fade_in_image, "FadeInImage.imageSemanticLabel");
  fade_in_image.FadeInImage = class FadeInImage extends framework.StatelessWidget {
    get placeholder() {
      return this[placeholder$];
    }
    set placeholder(value) {
      super.placeholder = value;
    }
    get image() {
      return this[image$2];
    }
    set image(value) {
      super.image = value;
    }
    get fadeOutDuration() {
      return this[fadeOutDuration$];
    }
    set fadeOutDuration(value) {
      super.fadeOutDuration = value;
    }
    get fadeOutCurve() {
      return this[fadeOutCurve$];
    }
    set fadeOutCurve(value) {
      super.fadeOutCurve = value;
    }
    get fadeInDuration() {
      return this[fadeInDuration$];
    }
    set fadeInDuration(value) {
      super.fadeInDuration = value;
    }
    get fadeInCurve() {
      return this[fadeInCurve$];
    }
    set fadeInCurve(value) {
      super.fadeInCurve = value;
    }
    get width() {
      return this[width$6];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$6];
    }
    set height(value) {
      super.height = value;
    }
    get fit() {
      return this[fit$4];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$18];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get repeat() {
      return this[repeat$1];
    }
    set repeat(value) {
      super.repeat = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$1];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$3];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get imageSemanticLabel() {
      return this[imageSemanticLabel$];
    }
    set imageSemanticLabel(value) {
      super.imageSemanticLabel = value;
    }
    [_image](opts) {
      let image = opts && 'image' in opts ? opts.image : null;
      let frameBuilder = opts && 'frameBuilder' in opts ? opts.frameBuilder : null;
      if (!(image != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 342, 12, "image != null");
      return new image$.Image.new({image: image, frameBuilder: frameBuilder, width: this.width, height: this.height, fit: this.fit, alignment: this.alignment, repeat: this.repeat, matchTextDirection: this.matchTextDirection, gaplessPlayback: true, excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C1323 || CT.C1323});
    }
    build(context) {
      let t34;
      let result = this[_image]({image: this.image, frameBuilder: dart.fn((context, child, frame, wasSynchronouslyLoaded) => {
          if (dart.test(wasSynchronouslyLoaded)) return child;
          return new fade_in_image._AnimatedFadeOutFadeIn.new({target: child, placeholder: this[_image]({image: this.placeholder}), isTargetLoaded: frame != null, fadeInDuration: this.fadeInDuration, fadeOutDuration: this.fadeOutDuration, fadeInCurve: this.fadeInCurve, fadeOutCurve: this.fadeOutCurve, $creationLocationd_0dea112b090073317d4: C1335 || CT.C1335});
        }, BuildContextAndWidgetAndint__ToWidget())});
      if (!dart.test(this.excludeFromSemantics)) {
        result = new basic.Semantics.new({container: this.imageSemanticLabel != null, image: true, label: (t34 = this.imageSemanticLabel, t34 == null ? "" : t34), child: result, $creationLocationd_0dea112b090073317d4: C1344 || CT.C1344});
      }
      return result;
    }
  };
  (fade_in_image.FadeInImage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let imageSemanticLabel = opts && 'imageSemanticLabel' in opts ? opts.imageSemanticLabel : null;
    let fadeOutDuration = opts && 'fadeOutDuration' in opts ? opts.fadeOutDuration : C666 || CT.C666;
    let fadeOutCurve = opts && 'fadeOutCurve' in opts ? opts.fadeOutCurve : C1320 || CT.C1320;
    let fadeInDuration = opts && 'fadeInDuration' in opts ? opts.fadeInDuration : C1321 || CT.C1321;
    let fadeInCurve = opts && 'fadeInCurve' in opts ? opts.fadeInCurve : C1322 || CT.C1322;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[placeholder$] = placeholder;
    this[image$2] = image;
    this[excludeFromSemantics$3] = excludeFromSemantics;
    this[imageSemanticLabel$] = imageSemanticLabel;
    this[fadeOutDuration$] = fadeOutDuration;
    this[fadeOutCurve$] = fadeOutCurve;
    this[fadeInDuration$] = fadeInDuration;
    this[fadeInCurve$] = fadeInCurve;
    this[width$6] = width;
    this[height$6] = height;
    this[fit$4] = fit;
    this[alignment$18] = alignment;
    this[repeat$1] = repeat;
    this[matchTextDirection$1] = matchTextDirection;
    if (!(placeholder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 93, 15, "placeholder != null");
    if (!(image != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 94, 15, "image != null");
    if (!(fadeOutDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 95, 15, "fadeOutDuration != null");
    if (!(fadeOutCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 96, 15, "fadeOutCurve != null");
    if (!(fadeInDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 97, 15, "fadeInDuration != null");
    if (!(fadeInCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 98, 15, "fadeInCurve != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 99, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 100, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 101, 15, "matchTextDirection != null");
    fade_in_image.FadeInImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = fade_in_image.FadeInImage.prototype;
  (fade_in_image.FadeInImage.memoryNetwork = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let placeholderScale = opts && 'placeholderScale' in opts ? opts.placeholderScale : 1;
    let imageScale = opts && 'imageScale' in opts ? opts.imageScale : 1;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let imageSemanticLabel = opts && 'imageSemanticLabel' in opts ? opts.imageSemanticLabel : null;
    let fadeOutDuration = opts && 'fadeOutDuration' in opts ? opts.fadeOutDuration : C666 || CT.C666;
    let fadeOutCurve = opts && 'fadeOutCurve' in opts ? opts.fadeOutCurve : C1320 || CT.C1320;
    let fadeInDuration = opts && 'fadeInDuration' in opts ? opts.fadeInDuration : C1321 || CT.C1321;
    let fadeInCurve = opts && 'fadeInCurve' in opts ? opts.fadeInCurve : C1322 || CT.C1322;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let placeholderCacheWidth = opts && 'placeholderCacheWidth' in opts ? opts.placeholderCacheWidth : null;
    let placeholderCacheHeight = opts && 'placeholderCacheHeight' in opts ? opts.placeholderCacheHeight : null;
    let imageCacheWidth = opts && 'imageCacheWidth' in opts ? opts.imageCacheWidth : null;
    let imageCacheHeight = opts && 'imageCacheHeight' in opts ? opts.imageCacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[excludeFromSemantics$3] = excludeFromSemantics;
    this[imageSemanticLabel$] = imageSemanticLabel;
    this[fadeOutDuration$] = fadeOutDuration;
    this[fadeOutCurve$] = fadeOutCurve;
    this[fadeInDuration$] = fadeInDuration;
    this[fadeInCurve$] = fadeInCurve;
    this[width$6] = width;
    this[height$6] = height;
    this[fit$4] = fit;
    this[alignment$18] = alignment;
    this[repeat$1] = repeat;
    this[matchTextDirection$1] = matchTextDirection;
    if (!(placeholder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 154, 15, "placeholder != null");
    if (!(image != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 155, 15, "image != null");
    if (!(placeholderScale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 156, 15, "placeholderScale != null");
    if (!(imageScale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 157, 15, "imageScale != null");
    if (!(fadeOutDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 158, 15, "fadeOutDuration != null");
    if (!(fadeOutCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 159, 15, "fadeOutCurve != null");
    if (!(fadeInDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 160, 15, "fadeInDuration != null");
    if (!(fadeInCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 161, 15, "fadeInCurve != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 162, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 163, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 164, 15, "matchTextDirection != null");
    this[placeholder$] = image_provider.ResizeImage.resizeIfNeeded(placeholderCacheWidth, placeholderCacheHeight, new image_provider.MemoryImage.new(placeholder, {scale: placeholderScale}));
    this[image$2] = image_provider.ResizeImage.resizeIfNeeded(imageCacheWidth, imageCacheHeight, new _network_image_web.NetworkImage.new(image, {scale: imageScale}));
    fade_in_image.FadeInImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = fade_in_image.FadeInImage.prototype;
  (fade_in_image.FadeInImage.assetNetwork = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let placeholderScale = opts && 'placeholderScale' in opts ? opts.placeholderScale : null;
    let imageScale = opts && 'imageScale' in opts ? opts.imageScale : 1;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let imageSemanticLabel = opts && 'imageSemanticLabel' in opts ? opts.imageSemanticLabel : null;
    let fadeOutDuration = opts && 'fadeOutDuration' in opts ? opts.fadeOutDuration : C666 || CT.C666;
    let fadeOutCurve = opts && 'fadeOutCurve' in opts ? opts.fadeOutCurve : C1320 || CT.C1320;
    let fadeInDuration = opts && 'fadeInDuration' in opts ? opts.fadeInDuration : C1321 || CT.C1321;
    let fadeInCurve = opts && 'fadeInCurve' in opts ? opts.fadeInCurve : C1322 || CT.C1322;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C140 || CT.C140;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C166 || CT.C166;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let placeholderCacheWidth = opts && 'placeholderCacheWidth' in opts ? opts.placeholderCacheWidth : null;
    let placeholderCacheHeight = opts && 'placeholderCacheHeight' in opts ? opts.placeholderCacheHeight : null;
    let imageCacheWidth = opts && 'imageCacheWidth' in opts ? opts.imageCacheWidth : null;
    let imageCacheHeight = opts && 'imageCacheHeight' in opts ? opts.imageCacheHeight : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[excludeFromSemantics$3] = excludeFromSemantics;
    this[imageSemanticLabel$] = imageSemanticLabel;
    this[fadeOutDuration$] = fadeOutDuration;
    this[fadeOutCurve$] = fadeOutCurve;
    this[fadeInDuration$] = fadeInDuration;
    this[fadeInCurve$] = fadeInCurve;
    this[width$6] = width;
    this[height$6] = height;
    this[fit$4] = fit;
    this[alignment$18] = alignment;
    this[repeat$1] = repeat;
    this[matchTextDirection$1] = matchTextDirection;
    if (!(placeholder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 223, 15, "placeholder != null");
    if (!(image != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 224, 15, "image != null");
    this[placeholder$] = placeholderScale != null ? image_provider.ResizeImage.resizeIfNeeded(placeholderCacheWidth, placeholderCacheHeight, new image_provider.ExactAssetImage.new(placeholder, {bundle: bundle, scale: placeholderScale})) : image_provider.ResizeImage.resizeIfNeeded(placeholderCacheWidth, placeholderCacheHeight, new image_resolution.AssetImage.new(placeholder, {bundle: bundle}));
    if (!(imageScale != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 228, 15, "imageScale != null");
    if (!(fadeOutDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 229, 15, "fadeOutDuration != null");
    if (!(fadeOutCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 230, 15, "fadeOutCurve != null");
    if (!(fadeInDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 231, 15, "fadeInDuration != null");
    if (!(fadeInCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 232, 15, "fadeInCurve != null");
    if (!(alignment != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 233, 15, "alignment != null");
    if (!(repeat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 234, 15, "repeat != null");
    if (!(matchTextDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 235, 15, "matchTextDirection != null");
    this[image$2] = image_provider.ResizeImage.resizeIfNeeded(imageCacheWidth, imageCacheHeight, new _network_image_web.NetworkImage.new(image, {scale: imageScale}));
    fade_in_image.FadeInImage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = fade_in_image.FadeInImage.prototype;
  dart.addTypeTests(fade_in_image.FadeInImage);
  dart.setMethodSignature(fade_in_image.FadeInImage, () => ({
    __proto__: dart.getMethods(fade_in_image.FadeInImage.__proto__),
    [_image]: dart.fnType(image$.Image, [], {frameBuilder: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, core.int, core.bool]), image: image_provider.ImageProvider}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(fade_in_image.FadeInImage, "package:flutter/src/widgets/fade_in_image.dart");
  dart.setFieldSignature(fade_in_image.FadeInImage, () => ({
    __proto__: dart.getFields(fade_in_image.FadeInImage.__proto__),
    placeholder: dart.finalFieldType(image_provider.ImageProvider),
    image: dart.finalFieldType(image_provider.ImageProvider),
    fadeOutDuration: dart.finalFieldType(core.Duration),
    fadeOutCurve: dart.finalFieldType(curves.Curve),
    fadeInDuration: dart.finalFieldType(core.Duration),
    fadeInCurve: dart.finalFieldType(curves.Curve),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    fit: dart.finalFieldType(box_fit.BoxFit),
    alignment: dart.finalFieldType(alignment$.AlignmentGeometry),
    repeat: dart.finalFieldType(decoration_image.ImageRepeat),
    matchTextDirection: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    imageSemanticLabel: dart.finalFieldType(core.String)
  }));
  var target$ = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.target");
  var placeholder$0 = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.placeholder");
  var isTargetLoaded$ = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.isTargetLoaded");
  var fadeInDuration$0 = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.fadeInDuration");
  var fadeOutDuration$0 = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.fadeOutDuration");
  var fadeInCurve$0 = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.fadeInCurve");
  var fadeOutCurve$0 = dart.privateName(fade_in_image, "_AnimatedFadeOutFadeIn.fadeOutCurve");
  fade_in_image._AnimatedFadeOutFadeIn = class _AnimatedFadeOutFadeIn extends implicit_animations.ImplicitlyAnimatedWidget {
    get target() {
      return this[target$];
    }
    set target(value) {
      super.target = value;
    }
    get placeholder() {
      return this[placeholder$0];
    }
    set placeholder(value) {
      super.placeholder = value;
    }
    get isTargetLoaded() {
      return this[isTargetLoaded$];
    }
    set isTargetLoaded(value) {
      super.isTargetLoaded = value;
    }
    get fadeInDuration() {
      return this[fadeInDuration$0];
    }
    set fadeInDuration(value) {
      super.fadeInDuration = value;
    }
    get fadeOutDuration() {
      return this[fadeOutDuration$0];
    }
    set fadeOutDuration(value) {
      super.fadeOutDuration = value;
    }
    get fadeInCurve() {
      return this[fadeInCurve$0];
    }
    set fadeInCurve(value) {
      super.fadeInCurve = value;
    }
    get fadeOutCurve() {
      return this[fadeOutCurve$0];
    }
    set fadeOutCurve(value) {
      super.fadeOutCurve = value;
    }
    createState() {
      return new fade_in_image._AnimatedFadeOutFadeInState.new();
    }
  };
  (fade_in_image._AnimatedFadeOutFadeIn.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let target = opts && 'target' in opts ? opts.target : null;
    let placeholder = opts && 'placeholder' in opts ? opts.placeholder : null;
    let isTargetLoaded = opts && 'isTargetLoaded' in opts ? opts.isTargetLoaded : null;
    let fadeOutDuration = opts && 'fadeOutDuration' in opts ? opts.fadeOutDuration : null;
    let fadeOutCurve = opts && 'fadeOutCurve' in opts ? opts.fadeOutCurve : null;
    let fadeInDuration = opts && 'fadeInDuration' in opts ? opts.fadeInDuration : null;
    let fadeInCurve = opts && 'fadeInCurve' in opts ? opts.fadeInCurve : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[target$] = target;
    this[placeholder$0] = placeholder;
    this[isTargetLoaded$] = isTargetLoaded;
    this[fadeOutDuration$0] = fadeOutDuration;
    this[fadeOutCurve$0] = fadeOutCurve;
    this[fadeInDuration$0] = fadeInDuration;
    this[fadeInCurve$0] = fadeInCurve;
    if (!(target != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 399, 15, "target != null");
    if (!(placeholder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 400, 15, "placeholder != null");
    if (!(isTargetLoaded != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 401, 15, "isTargetLoaded != null");
    if (!(fadeOutDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 402, 15, "fadeOutDuration != null");
    if (!(fadeOutCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 403, 15, "fadeOutCurve != null");
    if (!(fadeInDuration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 404, 15, "fadeInDuration != null");
    if (!(fadeInCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/fade_in_image.dart", 405, 15, "fadeInCurve != null");
    fade_in_image._AnimatedFadeOutFadeIn.__proto__.new.call(this, {key: key, duration: fadeInDuration['+'](fadeOutDuration), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = fade_in_image._AnimatedFadeOutFadeIn.prototype;
  dart.addTypeTests(fade_in_image._AnimatedFadeOutFadeIn);
  dart.setMethodSignature(fade_in_image._AnimatedFadeOutFadeIn, () => ({
    __proto__: dart.getMethods(fade_in_image._AnimatedFadeOutFadeIn.__proto__),
    createState: dart.fnType(fade_in_image._AnimatedFadeOutFadeInState, [])
  }));
  dart.setLibraryUri(fade_in_image._AnimatedFadeOutFadeIn, "package:flutter/src/widgets/fade_in_image.dart");
  dart.setFieldSignature(fade_in_image._AnimatedFadeOutFadeIn, () => ({
    __proto__: dart.getFields(fade_in_image._AnimatedFadeOutFadeIn.__proto__),
    target: dart.finalFieldType(framework.Widget),
    placeholder: dart.finalFieldType(framework.Widget),
    isTargetLoaded: dart.finalFieldType(core.bool),
    fadeInDuration: dart.finalFieldType(core.Duration),
    fadeOutDuration: dart.finalFieldType(core.Duration),
    fadeInCurve: dart.finalFieldType(curves.Curve),
    fadeOutCurve: dart.finalFieldType(curves.Curve)
  }));
  var _targetOpacity = dart.privateName(fade_in_image, "_targetOpacity");
  var _placeholderOpacity = dart.privateName(fade_in_image, "_placeholderOpacity");
  var _targetOpacityAnimation = dart.privateName(fade_in_image, "_targetOpacityAnimation");
  var _placeholderOpacityAnimation = dart.privateName(fade_in_image, "_placeholderOpacityAnimation");
  var _isValid = dart.privateName(fade_in_image, "_isValid");
  var C1352;
  var C1353;
  var C1351;
  var C1350;
  var C1356;
  var C1357;
  var C1355;
  var C1354;
  var C1360;
  var C1361;
  var C1362;
  var C1363;
  var C1359;
  var C1358;
  fade_in_image._AnimatedFadeOutFadeInState = class _AnimatedFadeOutFadeInState extends implicit_animations.ImplicitlyAnimatedWidgetState$(fade_in_image._AnimatedFadeOutFadeIn) {
    forEachTween(visitor) {
      this[_targetOpacity] = TweenOfdouble().as(visitor(this[_targetOpacity], dart.test(this.widget.isTargetLoaded) ? 1.0 : 0.0, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
      this[_placeholderOpacity] = TweenOfdouble().as(visitor(this[_placeholderOpacity], dart.test(this.widget.isTargetLoaded) ? 0.0 : 1.0, dart.fn(value => new (TweenOfdouble()).new({begin: core.double.as(value)}), dynamicToTweenOfdouble())));
    }
    didUpdateTweens() {
      this[_placeholderOpacityAnimation] = this.animation.drive(core.double, new (TweenSequenceOfdouble()).new(JSArrayOfTweenSequenceItemOfdouble().of([new (TweenSequenceItemOfdouble()).new({tween: this[_placeholderOpacity].chain(new tween.CurveTween.new({curve: this.widget.fadeOutCurve})), weight: this.widget.fadeOutDuration.inMilliseconds[$toDouble]()}), new (TweenSequenceItemOfdouble()).new({tween: new (ConstantTweenOfdouble()).new(0.0), weight: this.widget.fadeInDuration.inMilliseconds[$toDouble]()})])));
      this[_targetOpacityAnimation] = this.animation.drive(core.double, new (TweenSequenceOfdouble()).new(JSArrayOfTweenSequenceItemOfdouble().of([new (TweenSequenceItemOfdouble()).new({tween: new (ConstantTweenOfdouble()).new(0.0), weight: this.widget.fadeOutDuration.inMilliseconds[$toDouble]()}), new (TweenSequenceItemOfdouble()).new({tween: this[_targetOpacity].chain(new tween.CurveTween.new({curve: this.widget.fadeInCurve})), weight: this.widget.fadeInDuration.inMilliseconds[$toDouble]()})])));
      if (!dart.test(this.widget.isTargetLoaded) && dart.test(this[_isValid](this[_placeholderOpacity])) && dart.test(this[_isValid](this[_targetOpacity]))) {
        this.controller.value = this.controller.upperBound;
      }
    }
    [_isValid](tween) {
      return tween.begin != null && tween.end != null;
    }
    build(context) {
      return new basic.Stack.new({fit: stack.StackFit.passthrough, alignment: alignment$.AlignmentDirectional.center, textDirection: ui.TextDirection.ltr, children: JSArrayOfWidget().of([new transitions.FadeTransition.new({opacity: this[_targetOpacityAnimation], child: this.widget.target, $creationLocationd_0dea112b090073317d4: C1350 || CT.C1350}), new transitions.FadeTransition.new({opacity: this[_placeholderOpacityAnimation], child: this.widget.placeholder, $creationLocationd_0dea112b090073317d4: C1354 || CT.C1354})]), $creationLocationd_0dea112b090073317d4: C1358 || CT.C1358});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("targetOpacity", this[_targetOpacityAnimation]));
      properties.add(new (DiagnosticsPropertyOfAnimationOfdouble()).new("placeholderOpacity", this[_placeholderOpacityAnimation]));
    }
  };
  (fade_in_image._AnimatedFadeOutFadeInState.new = function() {
    this[_targetOpacity] = null;
    this[_placeholderOpacity] = null;
    this[_targetOpacityAnimation] = null;
    this[_placeholderOpacityAnimation] = null;
    fade_in_image._AnimatedFadeOutFadeInState.__proto__.new.call(this);
    ;
  }).prototype = fade_in_image._AnimatedFadeOutFadeInState.prototype;
  dart.addTypeTests(fade_in_image._AnimatedFadeOutFadeInState);
  dart.setMethodSignature(fade_in_image._AnimatedFadeOutFadeInState, () => ({
    __proto__: dart.getMethods(fade_in_image._AnimatedFadeOutFadeInState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(tween.Tween, [tween.Tween, dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    [_isValid]: dart.fnType(core.bool, [tween.Tween$(core.double)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(fade_in_image._AnimatedFadeOutFadeInState, "package:flutter/src/widgets/fade_in_image.dart");
  dart.setFieldSignature(fade_in_image._AnimatedFadeOutFadeInState, () => ({
    __proto__: dart.getFields(fade_in_image._AnimatedFadeOutFadeInState.__proto__),
    [_targetOpacity]: dart.fieldType(tween.Tween$(core.double)),
    [_placeholderOpacity]: dart.fieldType(tween.Tween$(core.double)),
    [_targetOpacityAnimation]: dart.fieldType(animation$.Animation$(core.double)),
    [_placeholderOpacityAnimation]: dart.fieldType(animation$.Animation$(core.double))
  }));
  var C1364;
  var C1367;
  var C1368;
  var C1369;
  var C1366;
  var C1365;
  var C1372;
  var C1373;
  var C1374;
  var C1375;
  var C1376;
  var C1377;
  var C1371;
  var C1370;
  var C1380;
  var C1381;
  var C1382;
  var C1383;
  var C1384;
  var C1385;
  var C1379;
  var C1378;
  var C1388;
  var C1387;
  var C1386;
  var scrollDirection$ = dart.privateName(scroll_view, "ScrollView.scrollDirection");
  var reverse$0 = dart.privateName(scroll_view, "ScrollView.reverse");
  var controller$2 = dart.privateName(scroll_view, "ScrollView.controller");
  var primary$ = dart.privateName(scroll_view, "ScrollView.primary");
  var physics$1 = dart.privateName(scroll_view, "ScrollView.physics");
  var shrinkWrap$ = dart.privateName(scroll_view, "ScrollView.shrinkWrap");
  var center$0 = dart.privateName(scroll_view, "ScrollView.center");
  var anchor$0 = dart.privateName(scroll_view, "ScrollView.anchor");
  var cacheExtent$0 = dart.privateName(scroll_view, "ScrollView.cacheExtent");
  var semanticChildCount$1 = dart.privateName(scroll_view, "ScrollView.semanticChildCount");
  var dragStartBehavior$4 = dart.privateName(scroll_view, "ScrollView.dragStartBehavior");
  scroll_view.ScrollView = class ScrollView extends framework.StatelessWidget {
    get scrollDirection() {
      return this[scrollDirection$];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$0];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get controller() {
      return this[controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get primary() {
      return this[primary$];
    }
    set primary(value) {
      super.primary = value;
    }
    get physics() {
      return this[physics$1];
    }
    set physics(value) {
      super.physics = value;
    }
    get shrinkWrap() {
      return this[shrinkWrap$];
    }
    set shrinkWrap(value) {
      super.shrinkWrap = value;
    }
    get center() {
      return this[center$0];
    }
    set center(value) {
      super.center = value;
    }
    get anchor() {
      return this[anchor$0];
    }
    set anchor(value) {
      super.anchor = value;
    }
    get cacheExtent() {
      return this[cacheExtent$0];
    }
    set cacheExtent(value) {
      super.cacheExtent = value;
    }
    get semanticChildCount() {
      return this[semanticChildCount$1];
    }
    set semanticChildCount(value) {
      super.semanticChildCount = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$4];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    getDirection(context) {
      return basic.getAxisDirectionFromAxisReverseAndDirectionality(context, this.scrollDirection, this.reverse);
    }
    buildViewport(context, offset, axisDirection, slivers) {
      if (dart.test(this.shrinkWrap)) {
        return new viewport.ShrinkWrappingViewport.new({axisDirection: axisDirection, offset: offset, slivers: slivers, $creationLocationd_0dea112b090073317d4: C1365 || CT.C1365});
      }
      return new viewport.Viewport.new({axisDirection: axisDirection, offset: offset, slivers: slivers, cacheExtent: this.cacheExtent, center: this.center, anchor: this.anchor, $creationLocationd_0dea112b090073317d4: C1370 || CT.C1370});
    }
    build(context) {
      let slivers = this.buildSlivers(context);
      let axisDirection = this.getDirection(context);
      let scrollController = dart.test(this.primary) ? primary_scroll_controller.PrimaryScrollController.of(context) : this.controller;
      let scrollable = new scrollable$.Scrollable.new({dragStartBehavior: this.dragStartBehavior, axisDirection: axisDirection, controller: scrollController, physics: this.physics, semanticChildCount: this.semanticChildCount, viewportBuilder: dart.fn((context, offset) => this.buildViewport(context, offset, axisDirection, slivers), BuildContextAndViewportOffsetToWidget()), $creationLocationd_0dea112b090073317d4: C1378 || CT.C1378});
      return dart.test(this.primary) && scrollController != null ? new primary_scroll_controller.PrimaryScrollController.none({child: scrollable, $creationLocationd_0dea112b090073317d4: C1386 || CT.C1386}) : scrollable;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (EnumPropertyOfAxis()).new("scrollDirection", this.scrollDirection));
      properties.add(new diagnostics$.FlagProperty.new("reverse", {value: this.reverse, ifTrue: "reversed", showName: true}));
      properties.add(new (DiagnosticsPropertyOfScrollController()).new("controller", this.controller, {showName: false, defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("primary", {value: this.primary, ifTrue: "using primary controller", showName: true}));
      properties.add(new (DiagnosticsPropertyOfScrollPhysics()).new("physics", this.physics, {showName: false, defaultValue: null}));
      properties.add(new diagnostics$.FlagProperty.new("shrinkWrap", {value: this.shrinkWrap, ifTrue: "shrink-wrapping", showName: true}));
    }
  };
  (scroll_view.ScrollView.new = function(opts) {
    let t34, t34$;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let center = opts && 'center' in opts ? opts.center : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$] = scrollDirection;
    this[reverse$0] = reverse;
    this[controller$2] = controller;
    this[shrinkWrap$] = shrinkWrap;
    this[center$0] = center;
    this[anchor$0] = anchor;
    this[cacheExtent$0] = cacheExtent;
    this[semanticChildCount$1] = semanticChildCount;
    this[dragStartBehavior$4] = dragStartBehavior;
    if (!(scrollDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 73, 15, "scrollDirection != null");
    if (!(reverse != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 74, 15, "reverse != null");
    if (!(shrinkWrap != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 75, 15, "shrinkWrap != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 76, 15, "dragStartBehavior != null");
    if (!!(controller != null && dart.equals(primary, true))) dart.assertFailed("Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. " + "You cannot both set primary to true and pass an explicit controller.", "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 77, 15, "!(controller != null && primary == true)");
    if (!(!dart.test(shrinkWrap) || center == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 81, 15, "!shrinkWrap || center == null");
    if (!(anchor != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 82, 15, "anchor != null");
    if (!(dart.notNull(anchor) >= 0.0 && dart.notNull(anchor) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 83, 15, "anchor >= 0.0 && anchor <= 1.0");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 84, 15, "semanticChildCount == null || semanticChildCount >= 0");
    this[primary$] = (t34 = primary, t34 == null ? controller == null && scrollDirection == basic_types$.Axis.vertical : t34);
    this[physics$1] = (t34$ = physics, t34$ == null ? dart.equals(primary, true) || primary == null && controller == null && scrollDirection == basic_types$.Axis.vertical ? C1364 || CT.C1364 : null : t34$);
    scroll_view.ScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.ScrollView.prototype;
  dart.addTypeTests(scroll_view.ScrollView);
  dart.setMethodSignature(scroll_view.ScrollView, () => ({
    __proto__: dart.getMethods(scroll_view.ScrollView.__proto__),
    getDirection: dart.fnType(basic_types$.AxisDirection, [framework.BuildContext]),
    buildViewport: dart.fnType(framework.Widget, [framework.BuildContext, viewport_offset.ViewportOffset, basic_types$.AxisDirection, core.List$(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_view.ScrollView, "package:flutter/src/widgets/scroll_view.dart");
  dart.setFieldSignature(scroll_view.ScrollView, () => ({
    __proto__: dart.getFields(scroll_view.ScrollView.__proto__),
    scrollDirection: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    primary: dart.finalFieldType(core.bool),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    shrinkWrap: dart.finalFieldType(core.bool),
    center: dart.finalFieldType(key.Key),
    anchor: dart.finalFieldType(core.double),
    cacheExtent: dart.finalFieldType(core.double),
    semanticChildCount: dart.finalFieldType(core.int),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var slivers$ = dart.privateName(scroll_view, "CustomScrollView.slivers");
  scroll_view.CustomScrollView = class CustomScrollView extends scroll_view.ScrollView {
    get slivers() {
      return this[slivers$];
    }
    set slivers(value) {
      super.slivers = value;
    }
    buildSlivers(context) {
      return this.slivers;
    }
  };
  (scroll_view.CustomScrollView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let center = opts && 'center' in opts ? opts.center : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let slivers = opts && 'slivers' in opts ? opts.slivers : C27 || CT.C27;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[slivers$] = slivers;
    scroll_view.CustomScrollView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, center: center, anchor: anchor, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.CustomScrollView.prototype;
  dart.addTypeTests(scroll_view.CustomScrollView);
  dart.setMethodSignature(scroll_view.CustomScrollView, () => ({
    __proto__: dart.getMethods(scroll_view.CustomScrollView.__proto__),
    buildSlivers: dart.fnType(core.List$(framework.Widget), [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_view.CustomScrollView, "package:flutter/src/widgets/scroll_view.dart");
  dart.setFieldSignature(scroll_view.CustomScrollView, () => ({
    __proto__: dart.getFields(scroll_view.CustomScrollView.__proto__),
    slivers: dart.finalFieldType(core.List$(framework.Widget))
  }));
  var C1391;
  var C1392;
  var C1390;
  var C1389;
  var C1395;
  var C1396;
  var C1394;
  var C1393;
  var padding$5 = dart.privateName(scroll_view, "BoxScrollView.padding");
  scroll_view.BoxScrollView = class BoxScrollView extends scroll_view.ScrollView {
    get padding() {
      return this[padding$5];
    }
    set padding(value) {
      super.padding = value;
    }
    buildSlivers(context) {
      let sliver = this.buildChildLayout(context);
      let effectivePadding = this.padding;
      if (this.padding == null) {
        let mediaQuery = media_query.MediaQuery.of(context, {nullOk: true});
        if (mediaQuery != null) {
          let mediaQueryHorizontalPadding = mediaQuery.padding.copyWith({top: 0.0, bottom: 0.0});
          let mediaQueryVerticalPadding = mediaQuery.padding.copyWith({left: 0.0, right: 0.0});
          effectivePadding = dart.equals(this.scrollDirection, basic_types$.Axis.vertical) ? mediaQueryVerticalPadding : mediaQueryHorizontalPadding;
          sliver = new media_query.MediaQuery.new({data: mediaQuery.copyWith({padding: dart.equals(this.scrollDirection, basic_types$.Axis.vertical) ? mediaQueryHorizontalPadding : mediaQueryVerticalPadding}), child: sliver, $creationLocationd_0dea112b090073317d4: C1389 || CT.C1389});
        }
      }
      if (effectivePadding != null) sliver = new basic.SliverPadding.new({padding: effectivePadding, sliver: sliver, $creationLocationd_0dea112b090073317d4: C1393 || CT.C1393});
      return JSArrayOfWidget().of([sliver]);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
    }
  };
  (scroll_view.BoxScrollView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[padding$5] = padding;
    scroll_view.BoxScrollView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.BoxScrollView.prototype;
  dart.addTypeTests(scroll_view.BoxScrollView);
  dart.setMethodSignature(scroll_view.BoxScrollView, () => ({
    __proto__: dart.getMethods(scroll_view.BoxScrollView.__proto__),
    buildSlivers: dart.fnType(core.List$(framework.Widget), [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_view.BoxScrollView, "package:flutter/src/widgets/scroll_view.dart");
  dart.setFieldSignature(scroll_view.BoxScrollView, () => ({
    __proto__: dart.getFields(scroll_view.BoxScrollView.__proto__),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var C1399;
  var C1400;
  var C1398;
  var C1397;
  var C1403;
  var C1402;
  var C1401;
  var itemExtent$0 = dart.privateName(scroll_view, "ListView.itemExtent");
  var childrenDelegate$ = dart.privateName(scroll_view, "ListView.childrenDelegate");
  scroll_view.ListView = class ListView extends scroll_view.BoxScrollView {
    get itemExtent() {
      return this[itemExtent$0];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    get childrenDelegate() {
      return this[childrenDelegate$];
    }
    set childrenDelegate(value) {
      super.childrenDelegate = value;
    }
    buildChildLayout(context) {
      if (this.itemExtent != null) {
        return new sliver$.SliverFixedExtentList.new({delegate: this.childrenDelegate, itemExtent: this.itemExtent, $creationLocationd_0dea112b090073317d4: C1397 || CT.C1397});
      }
      return new sliver$.SliverList.new({delegate: this.childrenDelegate, $creationLocationd_0dea112b090073317d4: C1401 || CT.C1401});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.DoubleProperty.new("itemExtent", this.itemExtent, {defaultValue: null}));
    }
    static _computeActualChildCount(itemCount) {
      return math.max(core.int, 0, dart.notNull(itemCount) * 2 - 1);
    }
  };
  (scroll_view.ListView.new = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$0] = itemExtent;
    this[childrenDelegate$] = new sliver$.SliverChildListDelegate.new(children, {addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.ListView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t34 = semanticChildCount, t34 == null ? children[$length] : t34), dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.ListView.prototype;
  (scroll_view.ListView.builder = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$0] = itemExtent;
    if (!(itemCount == null || dart.notNull(itemCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 947, 15, "itemCount == null || itemCount >= 0");
    if (!(semanticChildCount == null || dart.notNull(semanticChildCount) <= dart.notNull(itemCount))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 948, 15, "semanticChildCount == null || semanticChildCount <= itemCount");
    this[childrenDelegate$] = new sliver$.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.ListView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t34 = semanticChildCount, t34 == null ? itemCount : t34), dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.ListView.prototype;
  (scroll_view.ListView.separated = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let separatorBuilder = opts && 'separatorBuilder' in opts ? opts.separatorBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(itemBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1033, 15, "itemBuilder != null");
    if (!(separatorBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1034, 15, "separatorBuilder != null");
    if (!(itemCount != null && dart.notNull(itemCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1035, 15, "itemCount != null && itemCount >= 0");
    this[itemExtent$0] = null;
    this[childrenDelegate$] = new sliver$.SliverChildBuilderDelegate.new(dart.fn((context, index) => {
      let itemIndex = (dart.notNull(index) / 2)[$truncate]();
      let widget = null;
      if (index[$isEven]) {
        widget = itemBuilder(context, itemIndex);
      } else {
        widget = separatorBuilder(context, itemIndex);
        if (!dart.test(dart.fn(() => {
          if (widget == null) {
            dart.throw(assertions.FlutterError.new("separatorBuilder cannot return null."));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1045, 21, "() {\r\n               if (widget == null) {\r\n                 throw FlutterError('separatorBuilder cannot return null.');\r\n               }\r\n               return true;\r\n             }()");
      }
      return widget;
    }, BuildContextAndintToWidget()), {childCount: scroll_view.ListView._computeActualChildCount(itemCount), addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes, semanticIndexCallback: dart.fn((_, index) => index[$isEven] ? (dart.notNull(index) / 2)[$truncate]() : null, WidgetAndintToint())});
    scroll_view.ListView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: itemCount, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.ListView.prototype;
  (scroll_view.ListView.custom = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$0] = itemExtent;
    this[childrenDelegate$] = childrenDelegate;
    if (!(childrenDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1170, 15, "childrenDelegate != null");
    scroll_view.ListView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.ListView.prototype;
  dart.addTypeTests(scroll_view.ListView);
  dart.setMethodSignature(scroll_view.ListView, () => ({
    __proto__: dart.getMethods(scroll_view.ListView.__proto__),
    buildChildLayout: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_view.ListView, "package:flutter/src/widgets/scroll_view.dart");
  dart.setFieldSignature(scroll_view.ListView, () => ({
    __proto__: dart.getFields(scroll_view.ListView.__proto__),
    itemExtent: dart.finalFieldType(core.double),
    childrenDelegate: dart.finalFieldType(sliver$.SliverChildDelegate)
  }));
  var C1406;
  var C1407;
  var C1405;
  var C1404;
  var gridDelegate$0 = dart.privateName(scroll_view, "GridView.gridDelegate");
  var childrenDelegate$0 = dart.privateName(scroll_view, "GridView.childrenDelegate");
  scroll_view.GridView = class GridView extends scroll_view.BoxScrollView {
    get gridDelegate() {
      return this[gridDelegate$0];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    get childrenDelegate() {
      return this[childrenDelegate$0];
    }
    set childrenDelegate(value) {
      super.childrenDelegate = value;
    }
    buildChildLayout(context) {
      return new sliver$.SliverGrid.new({delegate: this.childrenDelegate, gridDelegate: this.gridDelegate, $creationLocationd_0dea112b090073317d4: C1404 || CT.C1404});
    }
  };
  (scroll_view.GridView.new = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$0] = gridDelegate;
    if (!(gridDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1440, 15, "gridDelegate != null");
    this[childrenDelegate$0] = new sliver$.SliverChildListDelegate.new(children, {addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.GridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t34 = semanticChildCount, t34 == null ? children[$length] : t34), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.GridView.prototype;
  (scroll_view.GridView.builder = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$0] = gridDelegate;
    if (!(gridDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1496, 15, "gridDelegate != null");
    this[childrenDelegate$0] = new sliver$.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.GridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t34 = semanticChildCount, t34 == null ? itemCount : t34), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.GridView.prototype;
  (scroll_view.GridView.custom = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$0] = gridDelegate;
    this[childrenDelegate$0] = childrenDelegate;
    if (!(gridDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1538, 15, "gridDelegate != null");
    if (!(childrenDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scroll_view.dart", 1539, 15, "childrenDelegate != null");
    scroll_view.GridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.GridView.prototype;
  (scroll_view.GridView.count = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$0] = new sliver_grid.SliverGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    this[childrenDelegate$0] = new sliver$.SliverChildListDelegate.new(children, {addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.GridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t34 = semanticChildCount, t34 == null ? children[$length] : t34), dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.GridView.prototype;
  (scroll_view.GridView.extent = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let childAspectRatio = opts && 'childAspectRatio' in opts ? opts.childAspectRatio : 1;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[gridDelegate$0] = new sliver_grid.SliverGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, childAspectRatio: childAspectRatio});
    this[childrenDelegate$0] = new sliver$.SliverChildListDelegate.new(children, {addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    scroll_view.GridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, semanticChildCount: (t34 = semanticChildCount, t34 == null ? children[$length] : t34), dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scroll_view.GridView.prototype;
  dart.addTypeTests(scroll_view.GridView);
  dart.setMethodSignature(scroll_view.GridView, () => ({
    __proto__: dart.getMethods(scroll_view.GridView.__proto__),
    buildChildLayout: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scroll_view.GridView, "package:flutter/src/widgets/scroll_view.dart");
  dart.setFieldSignature(scroll_view.GridView, () => ({
    __proto__: dart.getFields(scroll_view.GridView.__proto__),
    gridDelegate: dart.finalFieldType(sliver_grid.SliverGridDelegate),
    childrenDelegate: dart.finalFieldType(sliver$.SliverChildDelegate)
  }));
  const _is_UniqueWidget_default = Symbol('_is_UniqueWidget_default');
  unique_widget.UniqueWidget$ = dart.generic(T => {
    var GlobalKeyOfT = () => (GlobalKeyOfT = dart.constFn(framework.GlobalKey$(T)))();
    class UniqueWidget extends framework.StatefulWidget {
      get currentState() {
        let globalKey = GlobalKeyOfT().as(this.key);
        return globalKey.currentState;
      }
    }
    (UniqueWidget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/unique_widget.dart", 27, 15, "key != null");
      UniqueWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = UniqueWidget.prototype;
    dart.addTypeTests(UniqueWidget);
    UniqueWidget.prototype[_is_UniqueWidget_default] = true;
    dart.setGetterSignature(UniqueWidget, () => ({
      __proto__: dart.getGetters(UniqueWidget.__proto__),
      currentState: T
    }));
    dart.setLibraryUri(UniqueWidget, "package:flutter/src/widgets/unique_widget.dart");
    return UniqueWidget;
  });
  unique_widget.UniqueWidget = unique_widget.UniqueWidget$();
  dart.addTypeTests(unique_widget.UniqueWidget, _is_UniqueWidget_default);
  var textureId$ = dart.privateName(texture$, "Texture.textureId");
  texture$.Texture = class Texture extends framework.LeafRenderObjectWidget {
    get textureId() {
      return this[textureId$];
    }
    set textureId(value) {
      super.textureId = value;
    }
    createRenderObject(context) {
      return new texture.TextureBox.new({textureId: this.textureId});
    }
    updateRenderObject(context, renderObject) {
      texture.TextureBox._check(renderObject);
      renderObject.textureId = this.textureId;
    }
  };
  (texture$.Texture.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textureId = opts && 'textureId' in opts ? opts.textureId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[textureId$] = textureId;
    if (!(textureId != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/texture.dart", 40, 15, "textureId != null");
    texture$.Texture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = texture$.Texture.prototype;
  dart.addTypeTests(texture$.Texture);
  dart.setMethodSignature(texture$.Texture, () => ({
    __proto__: dart.getMethods(texture$.Texture.__proto__),
    createRenderObject: dart.fnType(texture.TextureBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(texture$.Texture, "package:flutter/src/widgets/texture.dart");
  dart.setFieldSignature(texture$.Texture, () => ({
    __proto__: dart.getFields(texture$.Texture.__proto__),
    textureId: dart.finalFieldType(core.int)
  }));
  var initialPage$ = dart.privateName(page_view, "PageController.initialPage");
  var keepPage$ = dart.privateName(page_view, "PageController.keepPage");
  var viewportFraction$2 = dart.privateName(page_view, "PageController.viewportFraction");
  page_view.PageController = class PageController extends scroll_controller.ScrollController {
    get initialPage() {
      return this[initialPage$];
    }
    set initialPage(value) {
      super.initialPage = value;
    }
    get keepPage() {
      return this[keepPage$];
    }
    set keepPage(value) {
      super.keepPage = value;
    }
    get viewportFraction() {
      return this[viewportFraction$2];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    get page() {
      if (!dart.test(this.positions[$isNotEmpty])) dart.assertFailed("PageController.page cannot be accessed before a PageView is built with it.", "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 180, 7, "positions.isNotEmpty");
      if (!(this.positions[$length] === 1)) dart.assertFailed("The page property cannot be read when multiple PageViews are attached to " + "the same PageController.", "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 184, 7, "positions.length == 1");
      let position = page_view._PagePosition.as(this.position);
      return position.page;
    }
    animateToPage(page, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let position = page_view._PagePosition.as(this.position);
      return position.animateTo(position.getPixelsFromPage(page[$toDouble]()), {duration: duration, curve: curve});
    }
    jumpToPage(page) {
      let position = page_view._PagePosition.as(this.position);
      position.jumpTo(position.getPixelsFromPage(page[$toDouble]()));
    }
    nextPage(opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      return this.animateToPage(this.page[$round]() + 1, {duration: duration, curve: curve});
    }
    previousPage(opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      return this.animateToPage(this.page[$round]() - 1, {duration: duration, curve: curve});
    }
    createScrollPosition(physics, context, oldPosition) {
      return new page_view._PagePosition.new({physics: physics, context: context, initialPage: this.initialPage, keepPage: this.keepPage, viewportFraction: this.viewportFraction, oldPosition: oldPosition});
    }
    attach(position) {
      super.attach(position);
      let pagePosition = page_view._PagePosition.as(position);
      pagePosition.viewportFraction = this.viewportFraction;
    }
  };
  (page_view.PageController.new = function(opts) {
    let initialPage = opts && 'initialPage' in opts ? opts.initialPage : 0;
    let keepPage = opts && 'keepPage' in opts ? opts.keepPage : true;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    this[initialPage$] = initialPage;
    this[keepPage$] = keepPage;
    this[viewportFraction$2] = viewportFraction;
    if (!(initialPage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 130, 15, "initialPage != null");
    if (!(keepPage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 131, 15, "keepPage != null");
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 132, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) > 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 133, 15, "viewportFraction > 0.0");
    page_view.PageController.__proto__.new.call(this);
    ;
  }).prototype = page_view.PageController.prototype;
  dart.addTypeTests(page_view.PageController);
  dart.setMethodSignature(page_view.PageController, () => ({
    __proto__: dart.getMethods(page_view.PageController.__proto__),
    animateToPage: dart.fnType(async.Future$(dart.void), [core.int], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpToPage: dart.fnType(dart.void, [core.int]),
    nextPage: dart.fnType(async.Future$(dart.void), [], {curve: curves.Curve, duration: core.Duration}, {}),
    previousPage: dart.fnType(async.Future$(dart.void), [], {curve: curves.Curve, duration: core.Duration}, {})
  }));
  dart.setGetterSignature(page_view.PageController, () => ({
    __proto__: dart.getGetters(page_view.PageController.__proto__),
    page: core.double
  }));
  dart.setLibraryUri(page_view.PageController, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view.PageController, () => ({
    __proto__: dart.getFields(page_view.PageController.__proto__),
    initialPage: dart.finalFieldType(core.int),
    keepPage: dart.finalFieldType(core.bool),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var viewportFraction$3 = dart.privateName(page_view, "PageMetrics.viewportFraction");
  page_view.PageMetrics = class PageMetrics extends scroll_metrics.FixedScrollMetrics {
    get viewportFraction() {
      return this[viewportFraction$3];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : null;
      return new page_view.PageMetrics.new({minScrollExtent: (t34 = minScrollExtent, t34 == null ? this.minScrollExtent : t34), maxScrollExtent: (t34$ = maxScrollExtent, t34$ == null ? this.maxScrollExtent : t34$), pixels: (t34$0 = pixels, t34$0 == null ? this.pixels : t34$0), viewportDimension: (t34$1 = viewportDimension, t34$1 == null ? this.viewportDimension : t34$1), axisDirection: (t34$2 = axisDirection, t34$2 == null ? this.axisDirection : t34$2), viewportFraction: (t34$3 = viewportFraction, t34$3 == null ? this.viewportFraction : t34$3)});
    }
    get page() {
      return math.max(core.num, 0.0, this.pixels[$clamp](this.minScrollExtent, this.maxScrollExtent)) / math.max(core.num, 1.0, dart.notNull(this.viewportDimension) * dart.notNull(this.viewportFraction));
    }
  };
  (page_view.PageMetrics.new = function(opts) {
    let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
    let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
    let pixels = opts && 'pixels' in opts ? opts.pixels : null;
    let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : null;
    this[viewportFraction$3] = viewportFraction;
    page_view.PageMetrics.__proto__.new.call(this, {minScrollExtent: minScrollExtent, maxScrollExtent: maxScrollExtent, pixels: pixels, viewportDimension: viewportDimension, axisDirection: axisDirection});
    ;
  }).prototype = page_view.PageMetrics.prototype;
  dart.addTypeTests(page_view.PageMetrics);
  dart.setMethodSignature(page_view.PageMetrics, () => ({
    __proto__: dart.getMethods(page_view.PageMetrics.__proto__),
    copyWith: dart.fnType(page_view.PageMetrics, [], {axisDirection: basic_types$.AxisDirection, maxScrollExtent: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double, viewportFraction: core.double}, {})
  }));
  dart.setGetterSignature(page_view.PageMetrics, () => ({
    __proto__: dart.getGetters(page_view.PageMetrics.__proto__),
    page: core.double
  }));
  dart.setLibraryUri(page_view.PageMetrics, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view.PageMetrics, () => ({
    __proto__: dart.getFields(page_view.PageMetrics.__proto__),
    viewportFraction: dart.finalFieldType(core.double)
  }));
  var _viewportFraction$ = dart.privateName(page_view, "_viewportFraction");
  var _pageToUseOnStartup = dart.privateName(page_view, "_pageToUseOnStartup");
  var _initialPageOffset = dart.privateName(page_view, "_initialPageOffset");
  page_view._PagePosition = class _PagePosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    get viewportFraction() {
      return this[_viewportFraction$];
    }
    set viewportFraction(value) {
      if (this[_viewportFraction$] == value) return;
      let oldPage = this.page;
      this[_viewportFraction$] = value;
      if (oldPage != null) this.forcePixels(this.getPixelsFromPage(oldPage));
    }
    get [_initialPageOffset]() {
      return math.max(core.double, 0.0, dart.notNull(this.viewportDimension) * (dart.notNull(this.viewportFraction) - 1) / 2);
    }
    getPageFromPixels(pixels, viewportDimension) {
      let actual = math.max(core.double, 0.0, dart.notNull(pixels) - dart.notNull(this[_initialPageOffset])) / math.max(core.num, 1.0, dart.notNull(viewportDimension) * dart.notNull(this.viewportFraction));
      let round = actual[$roundToDouble]();
      if ((actual - round)[$abs]() < 1e-10) {
        return round;
      }
      return actual;
    }
    getPixelsFromPage(page) {
      return dart.notNull(page) * dart.notNull(this.viewportDimension) * dart.notNull(this.viewportFraction) + dart.notNull(this[_initialPageOffset]);
    }
    get page() {
      if (!(this.pixels == null || this.minScrollExtent != null && this.maxScrollExtent != null)) dart.assertFailed("Page value is only available after content dimensions are established.", "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 373, 7, "pixels == null || (minScrollExtent != null && maxScrollExtent != null)");
      return this.pixels == null ? null : this.getPageFromPixels(this.pixels[$clamp](this.minScrollExtent, this.maxScrollExtent), this.viewportDimension);
    }
    saveScrollOffset() {
      let t34;
      t34 = page_storage.PageStorage.of(this.context.storageContext);
      t34 == null ? null : t34.writeState(this.context.storageContext, this.getPageFromPixels(this.pixels, this.viewportDimension));
    }
    restoreScrollOffset() {
      let t34;
      if (this.pixels == null) {
        let value = core.double.as((t34 = page_storage.PageStorage.of(this.context.storageContext), t34 == null ? null : t34.readState(this.context.storageContext)));
        if (value != null) this[_pageToUseOnStartup] = value;
      }
    }
    applyViewportDimension(viewportDimension) {
      let oldViewportDimensions = this.viewportDimension;
      let result = super.applyViewportDimension(viewportDimension);
      let oldPixels = this.pixels;
      let page = oldPixels == null || oldViewportDimensions === 0.0 ? this[_pageToUseOnStartup] : this.getPageFromPixels(oldPixels, oldViewportDimensions);
      let newPixels = this.getPixelsFromPage(page);
      if (newPixels != oldPixels) {
        this.correctPixels(newPixels);
        return false;
      }
      return result;
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      let newMinScrollExtent = dart.notNull(minScrollExtent) + dart.notNull(this[_initialPageOffset]);
      return super.applyContentDimensions(newMinScrollExtent, math.max(core.double, newMinScrollExtent, dart.notNull(maxScrollExtent) - dart.notNull(this[_initialPageOffset])));
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : null;
      return new page_view.PageMetrics.new({minScrollExtent: (t34 = minScrollExtent, t34 == null ? this.minScrollExtent : t34), maxScrollExtent: (t34$ = maxScrollExtent, t34$ == null ? this.maxScrollExtent : t34$), pixels: (t34$0 = pixels, t34$0 == null ? this.pixels : t34$0), viewportDimension: (t34$1 = viewportDimension, t34$1 == null ? this.viewportDimension : t34$1), axisDirection: (t34$2 = axisDirection, t34$2 == null ? this.axisDirection : t34$2), viewportFraction: (t34$3 = viewportFraction, t34$3 == null ? this.viewportFraction : t34$3)});
    }
  };
  (page_view._PagePosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialPage = opts && 'initialPage' in opts ? opts.initialPage : 0;
    let keepPage = opts && 'keepPage' in opts ? opts.keepPage : true;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    this.initialPage = initialPage;
    if (!(initialPage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 320, 15, "initialPage != null");
    if (!(keepPage != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 321, 15, "keepPage != null");
    if (!(viewportFraction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 322, 15, "viewportFraction != null");
    if (!(dart.notNull(viewportFraction) > 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 323, 15, "viewportFraction > 0.0");
    this[_viewportFraction$] = viewportFraction;
    this[_pageToUseOnStartup] = initialPage[$toDouble]();
    page_view._PagePosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: null, keepScrollOffset: keepPage, oldPosition: oldPosition});
    ;
  }).prototype = page_view._PagePosition.prototype;
  dart.addTypeTests(page_view._PagePosition);
  page_view._PagePosition[dart.implements] = () => [page_view.PageMetrics];
  dart.setMethodSignature(page_view._PagePosition, () => ({
    __proto__: dart.getMethods(page_view._PagePosition.__proto__),
    getPageFromPixels: dart.fnType(core.double, [core.double, core.double]),
    getPixelsFromPage: dart.fnType(core.double, [core.double]),
    copyWith: dart.fnType(page_view.PageMetrics, [], {axisDirection: basic_types$.AxisDirection, maxScrollExtent: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double, viewportFraction: core.double}, {})
  }));
  dart.setGetterSignature(page_view._PagePosition, () => ({
    __proto__: dart.getGetters(page_view._PagePosition.__proto__),
    viewportFraction: core.double,
    [_initialPageOffset]: core.double,
    page: core.double
  }));
  dart.setSetterSignature(page_view._PagePosition, () => ({
    __proto__: dart.getSetters(page_view._PagePosition.__proto__),
    viewportFraction: core.double
  }));
  dart.setLibraryUri(page_view._PagePosition, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view._PagePosition, () => ({
    __proto__: dart.getFields(page_view._PagePosition.__proto__),
    initialPage: dart.finalFieldType(core.int),
    [_pageToUseOnStartup]: dart.fieldType(core.double),
    [_viewportFraction$]: dart.fieldType(core.double)
  }));
  var allowImplicitScrolling$0 = dart.privateName(page_view, "_ForceImplicitScrollPhysics.allowImplicitScrolling");
  page_view._ForceImplicitScrollPhysics = class _ForceImplicitScrollPhysics extends scroll_physics.ScrollPhysics {
    get allowImplicitScrolling() {
      return this[allowImplicitScrolling$0];
    }
    set allowImplicitScrolling(value) {
      super.allowImplicitScrolling = value;
    }
    applyTo(ancestor) {
      return new page_view._ForceImplicitScrollPhysics.new({allowImplicitScrolling: this.allowImplicitScrolling, parent: this.buildParent(ancestor)});
    }
  };
  (page_view._ForceImplicitScrollPhysics.new = function(opts) {
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : null;
    let parent = opts && 'parent' in opts ? opts.parent : null;
    this[allowImplicitScrolling$0] = allowImplicitScrolling;
    if (!(allowImplicitScrolling != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 441, 15, "allowImplicitScrolling != null");
    page_view._ForceImplicitScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = page_view._ForceImplicitScrollPhysics.prototype;
  dart.addTypeTests(page_view._ForceImplicitScrollPhysics);
  dart.setMethodSignature(page_view._ForceImplicitScrollPhysics, () => ({
    __proto__: dart.getMethods(page_view._ForceImplicitScrollPhysics.__proto__),
    applyTo: dart.fnType(page_view._ForceImplicitScrollPhysics, [scroll_physics.ScrollPhysics])
  }));
  dart.setLibraryUri(page_view._ForceImplicitScrollPhysics, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view._ForceImplicitScrollPhysics, () => ({
    __proto__: dart.getFields(page_view._ForceImplicitScrollPhysics.__proto__),
    allowImplicitScrolling: dart.finalFieldType(core.bool)
  }));
  var _getPage = dart.privateName(page_view, "_getPage");
  var _getPixels = dart.privateName(page_view, "_getPixels");
  var _getTargetPixels = dart.privateName(page_view, "_getTargetPixels");
  page_view.PageScrollPhysics = class PageScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new page_view.PageScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    [_getPage](position) {
      if (page_view._PagePosition.is(position)) return position.page;
      return dart.notNull(position.pixels) / dart.notNull(position.viewportDimension);
    }
    [_getPixels](position, page) {
      if (page_view._PagePosition.is(position)) return position.getPixelsFromPage(page);
      return dart.notNull(page) * dart.notNull(position.viewportDimension);
    }
    [_getTargetPixels](position, tolerance, velocity) {
      let page = this[_getPage](position);
      if (dart.notNull(velocity) < -dart.notNull(tolerance.velocity))
        page = dart.notNull(page) - 0.5;
      else if (dart.notNull(velocity) > dart.notNull(tolerance.velocity)) page = dart.notNull(page) + 0.5;
      return this[_getPixels](position, page[$roundToDouble]());
    }
    createBallisticSimulation(position, velocity) {
      if (dart.notNull(velocity) <= 0.0 && dart.notNull(position.pixels) <= dart.notNull(position.minScrollExtent) || dart.notNull(velocity) >= 0.0 && dart.notNull(position.pixels) >= dart.notNull(position.maxScrollExtent)) return super.createBallisticSimulation(position, velocity);
      let tolerance = this.tolerance;
      let target = this[_getTargetPixels](position, tolerance, velocity);
      if (target != position.pixels) return new spring_simulation.ScrollSpringSimulation.new(this.spring, position.pixels, target, velocity, {tolerance: tolerance});
      return null;
    }
    get allowImplicitScrolling() {
      return false;
    }
  };
  (page_view.PageScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    page_view.PageScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = page_view.PageScrollPhysics.prototype;
  dart.addTypeTests(page_view.PageScrollPhysics);
  dart.setMethodSignature(page_view.PageScrollPhysics, () => ({
    __proto__: dart.getMethods(page_view.PageScrollPhysics.__proto__),
    applyTo: dart.fnType(page_view.PageScrollPhysics, [scroll_physics.ScrollPhysics]),
    [_getPage]: dart.fnType(core.double, [scroll_metrics.ScrollMetrics]),
    [_getPixels]: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    [_getTargetPixels]: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, tolerance.Tolerance, core.double])
  }));
  dart.setLibraryUri(page_view.PageScrollPhysics, "package:flutter/src/widgets/page_view.dart");
  var allowImplicitScrolling$1 = dart.privateName(page_view, "PageView.allowImplicitScrolling");
  var scrollDirection$0 = dart.privateName(page_view, "PageView.scrollDirection");
  var reverse$1 = dart.privateName(page_view, "PageView.reverse");
  var controller$3 = dart.privateName(page_view, "PageView.controller");
  var physics$2 = dart.privateName(page_view, "PageView.physics");
  var pageSnapping$ = dart.privateName(page_view, "PageView.pageSnapping");
  var onPageChanged$ = dart.privateName(page_view, "PageView.onPageChanged");
  var childrenDelegate$1 = dart.privateName(page_view, "PageView.childrenDelegate");
  var dragStartBehavior$5 = dart.privateName(page_view, "PageView.dragStartBehavior");
  page_view.PageView = class PageView extends framework.StatefulWidget {
    get allowImplicitScrolling() {
      return this[allowImplicitScrolling$1];
    }
    set allowImplicitScrolling(value) {
      super.allowImplicitScrolling = value;
    }
    get scrollDirection() {
      return this[scrollDirection$0];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$1];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get controller() {
      return this[controller$3];
    }
    set controller(value) {
      super.controller = value;
    }
    get physics() {
      return this[physics$2];
    }
    set physics(value) {
      super.physics = value;
    }
    get pageSnapping() {
      return this[pageSnapping$];
    }
    set pageSnapping(value) {
      super.pageSnapping = value;
    }
    get onPageChanged() {
      return this[onPageChanged$];
    }
    set onPageChanged(value) {
      super.onPageChanged = value;
    }
    get childrenDelegate() {
      return this[childrenDelegate$1];
    }
    set childrenDelegate(value) {
      super.childrenDelegate = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$5];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new page_view._PageViewState.new();
    }
  };
  (page_view.PageView.new = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C78 || CT.C78;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let children = opts && 'children' in opts ? opts.children : C27 || CT.C27;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$0] = scrollDirection;
    this[reverse$1] = reverse;
    this[physics$2] = physics;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[dragStartBehavior$5] = dragStartBehavior;
    this[allowImplicitScrolling$1] = allowImplicitScrolling;
    if (!(allowImplicitScrolling != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 570, 15, "allowImplicitScrolling != null");
    this[controller$3] = (t34 = controller, t34 == null ? page_view._defaultPageController : t34);
    this[childrenDelegate$1] = new sliver$.SliverChildListDelegate.new(children);
    page_view.PageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_view.PageView.prototype;
  (page_view.PageView.builder = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C78 || CT.C78;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$0] = scrollDirection;
    this[reverse$1] = reverse;
    this[physics$2] = physics;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[dragStartBehavior$5] = dragStartBehavior;
    this[allowImplicitScrolling$1] = allowImplicitScrolling;
    if (!(allowImplicitScrolling != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 605, 15, "allowImplicitScrolling != null");
    this[controller$3] = (t34 = controller, t34 == null ? page_view._defaultPageController : t34);
    this[childrenDelegate$1] = new sliver$.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount});
    page_view.PageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_view.PageView.prototype;
  (page_view.PageView.custom = function(opts) {
    let t34;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C78 || CT.C78;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let pageSnapping = opts && 'pageSnapping' in opts ? opts.pageSnapping : true;
    let onPageChanged = opts && 'onPageChanged' in opts ? opts.onPageChanged : null;
    let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let allowImplicitScrolling = opts && 'allowImplicitScrolling' in opts ? opts.allowImplicitScrolling : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$0] = scrollDirection;
    this[reverse$1] = reverse;
    this[physics$2] = physics;
    this[pageSnapping$] = pageSnapping;
    this[onPageChanged$] = onPageChanged;
    this[childrenDelegate$1] = childrenDelegate;
    this[dragStartBehavior$5] = dragStartBehavior;
    this[allowImplicitScrolling$1] = allowImplicitScrolling;
    if (!(childrenDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 703, 15, "childrenDelegate != null");
    if (!(allowImplicitScrolling != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 704, 15, "allowImplicitScrolling != null");
    this[controller$3] = (t34 = controller, t34 == null ? page_view._defaultPageController : t34);
    page_view.PageView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_view.PageView.prototype;
  dart.addTypeTests(page_view.PageView);
  dart.setMethodSignature(page_view.PageView, () => ({
    __proto__: dart.getMethods(page_view.PageView.__proto__),
    createState: dart.fnType(page_view._PageViewState, [])
  }));
  dart.setLibraryUri(page_view.PageView, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view.PageView, () => ({
    __proto__: dart.getFields(page_view.PageView.__proto__),
    allowImplicitScrolling: dart.finalFieldType(core.bool),
    scrollDirection: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool),
    controller: dart.finalFieldType(page_view.PageController),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    pageSnapping: dart.finalFieldType(core.bool),
    onPageChanged: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    childrenDelegate: dart.finalFieldType(sliver$.SliverChildDelegate),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var _lastReportedPage = dart.privateName(page_view, "_lastReportedPage");
  var _getDirection$ = dart.privateName(page_view, "_getDirection");
  var C1410;
  var C1411;
  var C1409;
  var C1408;
  var C1414;
  var C1415;
  var C1416;
  var C1417;
  var C1418;
  var C1413;
  var C1412;
  var C1421;
  var C1422;
  var C1423;
  var C1424;
  var C1425;
  var C1420;
  var C1419;
  var C1428;
  var C1429;
  var C1427;
  var C1426;
  page_view._PageViewState = class _PageViewState extends framework.State$(page_view.PageView) {
    initState() {
      super.initState();
      this[_lastReportedPage] = this.widget.controller.initialPage;
    }
    [_getDirection$](context) {
      switch (this.widget.scrollDirection) {
        case C78 || CT.C78:
        {
          if (!dart.test(debug$0.debugCheckHasDirectionality(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/page_view.dart", 788, 16, "debugCheckHasDirectionality(context)");
          let textDirection = basic.Directionality.of(context);
          let axisDirection = basic_types$.textDirectionToAxisDirection(textDirection);
          return dart.test(this.widget.reverse) ? basic_types$.flipAxisDirection(axisDirection) : axisDirection;
        }
        case C77 || CT.C77:
        {
          return dart.test(this.widget.reverse) ? basic_types$.AxisDirection.up : basic_types$.AxisDirection.down;
        }
      }
      return null;
    }
    build(context) {
      let axisDirection = this[_getDirection$](context);
      let physics = new page_view._ForceImplicitScrollPhysics.new({allowImplicitScrolling: this.widget.allowImplicitScrolling}).applyTo(dart.test(this.widget.pageSnapping) ? page_view._kPagePhysics.applyTo(this.widget.physics) : this.widget.physics);
      return new (NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification.depth === 0 && this.widget.onPageChanged != null && scroll_notification.ScrollUpdateNotification.is(notification)) {
            let metrics = page_view.PageMetrics.as(notification.metrics);
            let currentPage = metrics.page[$round]();
            if (currentPage !== this[_lastReportedPage]) {
              this[_lastReportedPage] = currentPage;
              this.widget.onPageChanged(currentPage);
            }
          }
          return false;
        }, ScrollNotificationTobool()), child: new scrollable$.Scrollable.new({dragStartBehavior: this.widget.dragStartBehavior, axisDirection: axisDirection, controller: this.widget.controller, physics: physics, viewportBuilder: dart.fn((context, position) => new viewport.Viewport.new({cacheExtent: dart.test(this.widget.allowImplicitScrolling) ? 1.0 : 0.0, cacheExtentStyle: viewport$.CacheExtentStyle.viewport, axisDirection: axisDirection, offset: position, slivers: JSArrayOfWidget().of([new sliver_fill$.SliverFillViewport.new({viewportFraction: this.widget.controller.viewportFraction, delegate: this.widget.childrenDelegate, $creationLocationd_0dea112b090073317d4: C1408 || CT.C1408})]), $creationLocationd_0dea112b090073317d4: C1412 || CT.C1412}), BuildContextAndViewportOffsetToViewport()), $creationLocationd_0dea112b090073317d4: C1419 || CT.C1419}), $creationLocationd_0dea112b090073317d4: C1426 || CT.C1426});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (EnumPropertyOfAxis()).new("scrollDirection", this.widget.scrollDirection));
      description.add(new diagnostics$.FlagProperty.new("reverse", {value: this.widget.reverse, ifTrue: "reversed"}));
      description.add(new (DiagnosticsPropertyOfPageController()).new("controller", this.widget.controller, {showName: false}));
      description.add(new (DiagnosticsPropertyOfScrollPhysics()).new("physics", this.widget.physics, {showName: false}));
      description.add(new diagnostics$.FlagProperty.new("pageSnapping", {value: this.widget.pageSnapping, ifFalse: "snapping disabled"}));
      description.add(new diagnostics$.FlagProperty.new("allowImplicitScrolling", {value: this.widget.allowImplicitScrolling, ifTrue: "allow implicit scrolling"}));
    }
  };
  (page_view._PageViewState.new = function() {
    this[_lastReportedPage] = 0;
    page_view._PageViewState.__proto__.new.call(this);
    ;
  }).prototype = page_view._PageViewState.prototype;
  dart.addTypeTests(page_view._PageViewState);
  dart.setMethodSignature(page_view._PageViewState, () => ({
    __proto__: dart.getMethods(page_view._PageViewState.__proto__),
    [_getDirection$]: dart.fnType(basic_types$.AxisDirection, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_view._PageViewState, "package:flutter/src/widgets/page_view.dart");
  dart.setFieldSignature(page_view._PageViewState, () => ({
    __proto__: dart.getFields(page_view._PageViewState.__proto__),
    [_lastReportedPage]: dart.fieldType(core.int)
  }));
  var C1430;
  dart.defineLazy(page_view, {
    /*page_view._defaultPageController*/get _defaultPageController() {
      return new page_view.PageController.new();
    },
    /*page_view._kPagePhysics*/get _kPagePhysics() {
      return C1430 || CT.C1430;
    }
  });
  var icon$0 = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.icon");
  var activeIcon$ = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.activeIcon");
  var title$2 = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.title");
  var backgroundColor$ = dart.privateName(bottom_navigation_bar_item, "BottomNavigationBarItem.backgroundColor");
  bottom_navigation_bar_item.BottomNavigationBarItem = class BottomNavigationBarItem extends core.Object {
    get icon() {
      return this[icon$0];
    }
    set icon(value) {
      super.icon = value;
    }
    get activeIcon() {
      return this[activeIcon$];
    }
    set activeIcon(value) {
      super.activeIcon = value;
    }
    get title() {
      return this[title$2];
    }
    set title(value) {
      super.title = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
  };
  (bottom_navigation_bar_item.BottomNavigationBarItem.new = function(opts) {
    let t34;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let activeIcon = opts && 'activeIcon' in opts ? opts.activeIcon : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    this[icon$0] = icon;
    this[title$2] = title;
    this[backgroundColor$] = backgroundColor;
    this[activeIcon$] = (t34 = activeIcon, t34 == null ? icon : t34);
    if (!(icon != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/bottom_navigation_bar_item.dart", 31, 15, "icon != null");
    ;
  }).prototype = bottom_navigation_bar_item.BottomNavigationBarItem.prototype;
  dart.addTypeTests(bottom_navigation_bar_item.BottomNavigationBarItem);
  dart.setLibraryUri(bottom_navigation_bar_item.BottomNavigationBarItem, "package:flutter/src/widgets/bottom_navigation_bar_item.dart");
  dart.setFieldSignature(bottom_navigation_bar_item.BottomNavigationBarItem, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_item.BottomNavigationBarItem.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    activeIcon: dart.finalFieldType(framework.Widget),
    title: dart.finalFieldType(framework.Widget),
    backgroundColor: dart.finalFieldType(ui.Color)
  }));
  var colorFilter$ = dart.privateName(color_filter, "ColorFiltered.colorFilter");
  color_filter.ColorFiltered = class ColorFiltered extends framework.SingleChildRenderObjectWidget {
    get colorFilter() {
      return this[colorFilter$];
    }
    set colorFilter(value) {
      super.colorFilter = value;
    }
    createRenderObject(context) {
      return new color_filter._ColorFilterRenderObject.new(this.colorFilter);
    }
    updateRenderObject(context, renderObject) {
      let t34;
      color_filter._ColorFilterRenderObject._check(renderObject);
      t34 = renderObject;
      t34.colorFilter = this.colorFilter;
      t34;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfColorFilter()).new("colorFilter", this.colorFilter));
    }
  };
  (color_filter.ColorFiltered.new = function(opts) {
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[colorFilter$] = colorFilter;
    if (!(colorFilter != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/color_filter.dart", 19, 16, "colorFilter != null");
    color_filter.ColorFiltered.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = color_filter.ColorFiltered.prototype;
  dart.addTypeTests(color_filter.ColorFiltered);
  dart.setMethodSignature(color_filter.ColorFiltered, () => ({
    __proto__: dart.getMethods(color_filter.ColorFiltered.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(color_filter.ColorFiltered, "package:flutter/src/widgets/color_filter.dart");
  dart.setFieldSignature(color_filter.ColorFiltered, () => ({
    __proto__: dart.getFields(color_filter.ColorFiltered.__proto__),
    colorFilter: dart.finalFieldType(ui.ColorFilter)
  }));
  var _colorFilter$ = dart.privateName(color_filter, "_colorFilter");
  color_filter._ColorFilterRenderObject = class _ColorFilterRenderObject extends proxy_box.RenderProxyBox {
    get colorFilter() {
      return this[_colorFilter$];
    }
    set colorFilter(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/color_filter.dart", 46, 12, "value != null");
      if (!dart.equals(value, this[_colorFilter$])) {
        this[_colorFilter$] = value;
        this.markNeedsPaint();
      }
    }
    get alwaysNeedsCompositing() {
      return this.child != null;
    }
    paint(context, offset) {
      this.layer = context.pushColorFilter(offset, this.colorFilter, dart.bind(this, 'paint', super.paint), {oldLayer: layer.ColorFilterLayer.as(this.layer)});
    }
  };
  (color_filter._ColorFilterRenderObject.new = function(_colorFilter) {
    this[_colorFilter$] = _colorFilter;
    color_filter._ColorFilterRenderObject.__proto__.new.call(this);
    ;
  }).prototype = color_filter._ColorFilterRenderObject.prototype;
  dart.addTypeTests(color_filter._ColorFilterRenderObject);
  dart.setGetterSignature(color_filter._ColorFilterRenderObject, () => ({
    __proto__: dart.getGetters(color_filter._ColorFilterRenderObject.__proto__),
    colorFilter: ui.ColorFilter
  }));
  dart.setSetterSignature(color_filter._ColorFilterRenderObject, () => ({
    __proto__: dart.getSetters(color_filter._ColorFilterRenderObject.__proto__),
    colorFilter: ui.ColorFilter
  }));
  dart.setLibraryUri(color_filter._ColorFilterRenderObject, "package:flutter/src/widgets/color_filter.dart");
  dart.setFieldSignature(color_filter._ColorFilterRenderObject, () => ({
    __proto__: dart.getFields(color_filter._ColorFilterRenderObject.__proto__),
    [_colorFilter$]: dart.fieldType(ui.ColorFilter)
  }));
  var animation$0 = dart.privateName(status_transitions, "StatusTransitionWidget.animation");
  status_transitions.StatusTransitionWidget = class StatusTransitionWidget extends framework.StatefulWidget {
    get animation() {
      return this[animation$0];
    }
    set animation(value) {
      super.animation = value;
    }
    createState() {
      return new status_transitions._StatusTransitionState.new();
    }
  };
  (status_transitions.StatusTransitionWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[animation$0] = animation;
    if (!(animation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/status_transitions.dart", 16, 15, "animation != null");
    status_transitions.StatusTransitionWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = status_transitions.StatusTransitionWidget.prototype;
  dart.addTypeTests(status_transitions.StatusTransitionWidget);
  dart.setMethodSignature(status_transitions.StatusTransitionWidget, () => ({
    __proto__: dart.getMethods(status_transitions.StatusTransitionWidget.__proto__),
    createState: dart.fnType(status_transitions._StatusTransitionState, [])
  }));
  dart.setLibraryUri(status_transitions.StatusTransitionWidget, "package:flutter/src/widgets/status_transitions.dart");
  dart.setFieldSignature(status_transitions.StatusTransitionWidget, () => ({
    __proto__: dart.getFields(status_transitions.StatusTransitionWidget.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double))
  }));
  var _animationStatusChanged = dart.privateName(status_transitions, "_animationStatusChanged");
  status_transitions._StatusTransitionState = class _StatusTransitionState extends framework.State$(status_transitions.StatusTransitionWidget) {
    initState() {
      super.initState();
      this.widget.animation.addStatusListener(dart.bind(this, _animationStatusChanged));
    }
    didUpdateWidget(oldWidget) {
      status_transitions.StatusTransitionWidget._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        oldWidget.animation.removeStatusListener(dart.bind(this, _animationStatusChanged));
        this.widget.animation.addStatusListener(dart.bind(this, _animationStatusChanged));
      }
    }
    dispose() {
      this.widget.animation.removeStatusListener(dart.bind(this, _animationStatusChanged));
      super.dispose();
    }
    [_animationStatusChanged](status) {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    build(context) {
      return this.widget.build(context);
    }
  };
  (status_transitions._StatusTransitionState.new = function() {
    status_transitions._StatusTransitionState.__proto__.new.call(this);
    ;
  }).prototype = status_transitions._StatusTransitionState.prototype;
  dart.addTypeTests(status_transitions._StatusTransitionState);
  dart.setMethodSignature(status_transitions._StatusTransitionState, () => ({
    __proto__: dart.getMethods(status_transitions._StatusTransitionState.__proto__),
    [_animationStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(status_transitions._StatusTransitionState, "package:flutter/src/widgets/status_transitions.dart");
  const _is_ConstrainedLayoutBuilder_default = Symbol('_is_ConstrainedLayoutBuilder_default');
  var builder$9 = dart.privateName(layout_builder, "ConstrainedLayoutBuilder.builder");
  layout_builder.ConstrainedLayoutBuilder$ = dart.generic(ConstraintType => {
    var _LayoutBuilderElementOfConstraintType = () => (_LayoutBuilderElementOfConstraintType = dart.constFn(layout_builder._LayoutBuilderElement$(ConstraintType)))();
    class ConstrainedLayoutBuilder extends framework.RenderObjectWidget {
      get builder() {
        return this[builder$9];
      }
      set builder(value) {
        super.builder = value;
      }
      createElement() {
        return new (_LayoutBuilderElementOfConstraintType()).new(this);
      }
    }
    (ConstrainedLayoutBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[builder$9] = builder;
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 28, 15, "builder != null");
      ConstrainedLayoutBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ConstrainedLayoutBuilder.prototype;
    dart.addTypeTests(ConstrainedLayoutBuilder);
    ConstrainedLayoutBuilder.prototype[_is_ConstrainedLayoutBuilder_default] = true;
    dart.setMethodSignature(ConstrainedLayoutBuilder, () => ({
      __proto__: dart.getMethods(ConstrainedLayoutBuilder.__proto__),
      createElement: dart.fnType(layout_builder._LayoutBuilderElement$(ConstraintType), [])
    }));
    dart.setLibraryUri(ConstrainedLayoutBuilder, "package:flutter/src/widgets/layout_builder.dart");
    dart.setFieldSignature(ConstrainedLayoutBuilder, () => ({
      __proto__: dart.getFields(ConstrainedLayoutBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, ConstraintType]))
    }));
    return ConstrainedLayoutBuilder;
  });
  layout_builder.ConstrainedLayoutBuilder = layout_builder.ConstrainedLayoutBuilder$();
  dart.addTypeTests(layout_builder.ConstrainedLayoutBuilder, _is_ConstrainedLayoutBuilder_default);
  sliver_layout_builder.SliverLayoutBuilder = class SliverLayoutBuilder extends layout_builder.ConstrainedLayoutBuilder$(sliver.SliverConstraints) {
    get builder() {
      return super.builder;
    }
    createRenderObject(context) {
      return new sliver_layout_builder._RenderSliverLayoutBuilder.new();
    }
  };
  (sliver_layout_builder.SliverLayoutBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_layout_builder.SliverLayoutBuilder.__proto__.new.call(this, {key: key, builder: builder, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_layout_builder.SliverLayoutBuilder.prototype;
  dart.addTypeTests(sliver_layout_builder.SliverLayoutBuilder);
  dart.setMethodSignature(sliver_layout_builder.SliverLayoutBuilder, () => ({
    __proto__: dart.getMethods(sliver_layout_builder.SliverLayoutBuilder.__proto__),
    createRenderObject: dart.fnType(sliver_layout_builder._RenderSliverLayoutBuilder, [framework.BuildContext])
  }));
  dart.setGetterSignature(sliver_layout_builder.SliverLayoutBuilder, () => ({
    __proto__: dart.getGetters(sliver_layout_builder.SliverLayoutBuilder.__proto__),
    builder: dart.fnType(framework.Widget, [framework.BuildContext, sliver.SliverConstraints])
  }));
  dart.setLibraryUri(sliver_layout_builder.SliverLayoutBuilder, "package:flutter/src/widgets/sliver_layout_builder.dart");
  var _callback = dart.privateName(layout_builder, "_callback");
  const _is_RenderConstrainedLayoutBuilder_default = Symbol('_is_RenderConstrainedLayoutBuilder_default');
  layout_builder.RenderConstrainedLayoutBuilder$ = dart.generic((ConstraintType, ChildType) => {
    class RenderConstrainedLayoutBuilder extends object$.RenderObjectWithChildMixin$(ChildType) {}
    RenderConstrainedLayoutBuilder[dart.mixinOn] = RenderObjectWithChildMixin => class RenderConstrainedLayoutBuilder extends RenderObjectWithChildMixin {
      updateCallback(value) {
        if (dart.equals(value, this[_callback])) return;
        this[_callback] = value;
        this.markNeedsLayout();
      }
      layoutAndBuildChild() {
        if (!(this[_callback] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 173, 12, "_callback != null");
        this.invokeLayoutCallback(ConstraintType, this[_callback]);
      }
    };
    (RenderConstrainedLayoutBuilder[dart.mixinNew] = function() {
      this[_callback] = null;
    }).prototype = RenderConstrainedLayoutBuilder.prototype;
    dart.addTypeTests(RenderConstrainedLayoutBuilder);
    RenderConstrainedLayoutBuilder.prototype[_is_RenderConstrainedLayoutBuilder_default] = true;
    RenderConstrainedLayoutBuilder[dart.implements] = () => [object$.RenderObjectWithChildMixin$(ChildType)];
    dart.setMethodSignature(RenderConstrainedLayoutBuilder, () => ({
      __proto__: dart.getMethods(RenderConstrainedLayoutBuilder.__proto__),
      updateCallback: dart.fnType(dart.void, [dart.fnType(dart.void, [ConstraintType])]),
      layoutAndBuildChild: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(RenderConstrainedLayoutBuilder, "package:flutter/src/widgets/layout_builder.dart");
    dart.setFieldSignature(RenderConstrainedLayoutBuilder, () => ({
      __proto__: dart.getFields(RenderConstrainedLayoutBuilder.__proto__),
      [_callback]: dart.fieldType(dart.fnType(dart.void, [ConstraintType]))
    }));
    return RenderConstrainedLayoutBuilder;
  });
  layout_builder.RenderConstrainedLayoutBuilder = layout_builder.RenderConstrainedLayoutBuilder$();
  dart.addTypeTests(layout_builder.RenderConstrainedLayoutBuilder, _is_RenderConstrainedLayoutBuilder_default);
  const RenderSliver_RenderObjectWithChildMixin$36 = class RenderSliver_RenderObjectWithChildMixin extends sliver.RenderSliver {};
  (RenderSliver_RenderObjectWithChildMixin$36.new = function() {
    object$.RenderObjectWithChildMixin$(sliver.RenderSliver)[dart.mixinNew].call(this);
    RenderSliver_RenderObjectWithChildMixin$36.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderObjectWithChildMixin$36.prototype;
  dart.applyMixin(RenderSliver_RenderObjectWithChildMixin$36, object$.RenderObjectWithChildMixin$(sliver.RenderSliver));
  const RenderSliver_RenderConstrainedLayoutBuilder$36 = class RenderSliver_RenderConstrainedLayoutBuilder extends RenderSliver_RenderObjectWithChildMixin$36 {};
  (RenderSliver_RenderConstrainedLayoutBuilder$36.new = function() {
    layout_builder.RenderConstrainedLayoutBuilder$(sliver.SliverConstraints, sliver.RenderSliver)[dart.mixinNew].call(this);
    RenderSliver_RenderConstrainedLayoutBuilder$36.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderConstrainedLayoutBuilder$36.prototype;
  dart.applyMixin(RenderSliver_RenderConstrainedLayoutBuilder$36, layout_builder.RenderConstrainedLayoutBuilder$(sliver.SliverConstraints, sliver.RenderSliver));
  sliver_layout_builder._RenderSliverLayoutBuilder = class _RenderSliverLayoutBuilder extends RenderSliver_RenderConstrainedLayoutBuilder$36 {
    childMainAxisPosition(child) {
      object$.RenderObject._check(child);
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_layout_builder.dart", 48, 12, "child != null");
      if (!dart.equals(child, this.child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_layout_builder.dart", 49, 12, "child == this.child");
      return 0.0;
    }
    performLayout() {
      let t34, t34$, t34$0;
      this.layoutAndBuildChild();
      t34 = this.child;
      t34 == null ? null : t34.layout(this.constraints, {parentUsesSize: true});
      this.geometry = (t34$0 = (t34$ = this.child, t34$ == null ? null : t34$.geometry), t34$0 == null ? sliver.SliverGeometry.zero : t34$0);
    }
    applyPaintTransform(child, transform) {
      object$.RenderObject._check(child);
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_layout_builder.dart", 62, 12, "child != null");
      if (!dart.equals(child, this.child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_layout_builder.dart", 63, 12, "child == this.child");
    }
    paint(context, offset) {
      let t34, t34$;
      if (dart.equals((t34$ = (t34 = this.child, t34 == null ? null : t34.geometry), t34$ == null ? null : t34$.visible), true)) context.paintChild(this.child, offset);
    }
    hitTestChildren(result, opts) {
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      return this.child != null && dart.notNull(this.child.geometry.hitTestExtent) > 0 && dart.test(this.child.hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition}));
    }
  };
  (sliver_layout_builder._RenderSliverLayoutBuilder.new = function() {
    sliver_layout_builder._RenderSliverLayoutBuilder.__proto__.new.call(this);
    ;
  }).prototype = sliver_layout_builder._RenderSliverLayoutBuilder.prototype;
  dart.addTypeTests(sliver_layout_builder._RenderSliverLayoutBuilder);
  dart.setMethodSignature(sliver_layout_builder._RenderSliverLayoutBuilder, () => ({
    __proto__: dart.getMethods(sliver_layout_builder._RenderSliverLayoutBuilder.__proto__),
    performLayout: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(sliver_layout_builder._RenderSliverLayoutBuilder, "package:flutter/src/widgets/sliver_layout_builder.dart");
  var _child$4 = dart.privateName(layout_builder, "_child");
  var _layout = dart.privateName(layout_builder, "_layout");
  const _is__LayoutBuilderElement_default = Symbol('_is__LayoutBuilderElement_default');
  layout_builder._LayoutBuilderElement$ = dart.generic(ConstraintType => {
    var ConstrainedLayoutBuilderOfConstraintType = () => (ConstrainedLayoutBuilderOfConstraintType = dart.constFn(layout_builder.ConstrainedLayoutBuilder$(ConstraintType)))();
    var RenderConstrainedLayoutBuilderOfConstraintType$RenderObject = () => (RenderConstrainedLayoutBuilderOfConstraintType$RenderObject = dart.constFn(layout_builder.RenderConstrainedLayoutBuilder$(ConstraintType, object$.RenderObject)))();
    var BuildContextAndConstraintTypeToWidget = () => (BuildContextAndConstraintTypeToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, ConstraintType])))();
    class _LayoutBuilderElement extends framework.RenderObjectElement {
      get widget() {
        return ConstrainedLayoutBuilderOfConstraintType().as(super.widget);
      }
      get renderObject() {
        return RenderConstrainedLayoutBuilderOfConstraintType$RenderObject().as(super.renderObject);
      }
      visitChildren(visitor) {
        if (this[_child$4] != null) visitor(this[_child$4]);
      }
      forgetChild(child) {
        if (!dart.equals(child, this[_child$4])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 61, 12, "child == _child");
        this[_child$4] = null;
        super.forgetChild(child);
      }
      mount(parent, newSlot) {
        super.mount(parent, newSlot);
        this.renderObject.updateCallback(dart.bind(this, _layout));
      }
      update(newWidget) {
        ConstrainedLayoutBuilderOfConstraintType()._check(newWidget);
        if (!!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 74, 12, "widget != newWidget");
        super.update(newWidget);
        if (!dart.equals(this.widget, newWidget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 76, 12, "widget == newWidget");
        this.renderObject.updateCallback(dart.bind(this, _layout));
        this.renderObject.markNeedsLayout();
      }
      performRebuild() {
        this.renderObject.markNeedsLayout();
        super.performRebuild();
      }
      unmount() {
        this.renderObject.updateCallback(null);
        super.unmount();
      }
      [_layout](constraints) {
        ConstraintType._check(constraints);
        this.owner.buildScope(this, dart.fn(() => {
          let built = null;
          if (BuildContextAndConstraintTypeToWidget()._check(this.widget.builder) != null) {
            try {
              built = BuildContextAndConstraintTypeToWidget()._check(this.widget.builder)(this, constraints);
              debug$0.debugWidgetBuilderValue(this.widget, built);
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stack = dart.stackTrace(e$);
              built = framework.ErrorWidget.builder(layout_builder._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this.widget)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsDebugCreator()).new((function*() {
                  yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
                }).bind(this)), VoidToIterableOfDiagnosticsDebugCreator())}));
            }
          }
          try {
            this[_child$4] = this.updateChild(this[_child$4], built, null);
            if (!(this[_child$4] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 117, 16, "_child != null");
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            let stack = dart.stackTrace(e$0);
            built = framework.ErrorWidget.builder(layout_builder._debugReportException(new assertions.ErrorDescription.new("building " + dart.str(this.widget)), e, stack, {informationCollector: dart.fn(() => new (SyncIterableOfDiagnosticsDebugCreator()).new((function*() {
                yield new object$.DiagnosticsDebugCreator.new(new framework.DebugCreator.new(this));
              }).bind(this)), VoidToIterableOfDiagnosticsDebugCreator())}));
            this[_child$4] = this.updateChild(null, built, this.slot);
          }
        }, VoidToNull()));
      }
      insertChildRenderObject(child, slot) {
        object$.RenderObject._check(child);
        let renderObject = this.renderObject;
        if (!(slot == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 137, 12, "slot == null");
        if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 138, 12, "renderObject.debugValidateChild(child)");
        renderObject.child = child;
        if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 140, 12, "renderObject == this.renderObject");
      }
      moveChildRenderObject(child, slot) {
        object$.RenderObject._check(child);
        if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 145, 12, "false");
      }
      removeChildRenderObject(child) {
        object$.RenderObject._check(child);
        let renderObject = this.renderObject;
        if (!dart.equals(renderObject.child, child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 151, 12, "renderObject.child == child");
        renderObject.child = null;
        if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 153, 12, "renderObject == this.renderObject");
      }
    }
    (_LayoutBuilderElement.new = function(widget) {
      this[_child$4] = null;
      _LayoutBuilderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _LayoutBuilderElement.prototype;
    dart.addTypeTests(_LayoutBuilderElement);
    _LayoutBuilderElement.prototype[_is__LayoutBuilderElement_default] = true;
    dart.setMethodSignature(_LayoutBuilderElement, () => ({
      __proto__: dart.getMethods(_LayoutBuilderElement.__proto__),
      [_layout]: dart.fnType(dart.void, [core.Object]),
      insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
      moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
      removeChildRenderObject: dart.fnType(dart.void, [core.Object])
    }));
    dart.setGetterSignature(_LayoutBuilderElement, () => ({
      __proto__: dart.getGetters(_LayoutBuilderElement.__proto__),
      widget: layout_builder.ConstrainedLayoutBuilder$(ConstraintType),
      renderObject: layout_builder.RenderConstrainedLayoutBuilder$(ConstraintType, object$.RenderObject)
    }));
    dart.setLibraryUri(_LayoutBuilderElement, "package:flutter/src/widgets/layout_builder.dart");
    dart.setFieldSignature(_LayoutBuilderElement, () => ({
      __proto__: dart.getFields(_LayoutBuilderElement.__proto__),
      [_child$4]: dart.fieldType(framework.Element)
    }));
    return _LayoutBuilderElement;
  });
  layout_builder._LayoutBuilderElement = layout_builder._LayoutBuilderElement$();
  dart.addTypeTests(layout_builder._LayoutBuilderElement, _is__LayoutBuilderElement_default);
  layout_builder.LayoutBuilder = class LayoutBuilder extends layout_builder.ConstrainedLayoutBuilder$(box$.BoxConstraints) {
    get builder() {
      return super.builder;
    }
    createRenderObject(context) {
      return new layout_builder._RenderLayoutBuilder.new();
    }
  };
  (layout_builder.LayoutBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    layout_builder.LayoutBuilder.__proto__.new.call(this, {key: key, builder: builder, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = layout_builder.LayoutBuilder.prototype;
  dart.addTypeTests(layout_builder.LayoutBuilder);
  dart.setMethodSignature(layout_builder.LayoutBuilder, () => ({
    __proto__: dart.getMethods(layout_builder.LayoutBuilder.__proto__),
    createRenderObject: dart.fnType(layout_builder._RenderLayoutBuilder, [framework.BuildContext])
  }));
  dart.setGetterSignature(layout_builder.LayoutBuilder, () => ({
    __proto__: dart.getGetters(layout_builder.LayoutBuilder.__proto__),
    builder: dart.fnType(framework.Widget, [framework.BuildContext, box$.BoxConstraints])
  }));
  dart.setLibraryUri(layout_builder.LayoutBuilder, "package:flutter/src/widgets/layout_builder.dart");
  var _debugThrowIfNotCheckingIntrinsics = dart.privateName(layout_builder, "_debugThrowIfNotCheckingIntrinsics");
  const RenderBox_RenderObjectWithChildMixin$36 = class RenderBox_RenderObjectWithChildMixin extends box$.RenderBox {};
  (RenderBox_RenderObjectWithChildMixin$36.new = function() {
    object$.RenderObjectWithChildMixin$(box$.RenderBox)[dart.mixinNew].call(this);
    RenderBox_RenderObjectWithChildMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderObjectWithChildMixin$36.prototype;
  dart.applyMixin(RenderBox_RenderObjectWithChildMixin$36, object$.RenderObjectWithChildMixin$(box$.RenderBox));
  const RenderBox_RenderConstrainedLayoutBuilder$36 = class RenderBox_RenderConstrainedLayoutBuilder extends RenderBox_RenderObjectWithChildMixin$36 {};
  (RenderBox_RenderConstrainedLayoutBuilder$36.new = function() {
    layout_builder.RenderConstrainedLayoutBuilder$(box$.BoxConstraints, box$.RenderBox)[dart.mixinNew].call(this);
    RenderBox_RenderConstrainedLayoutBuilder$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderConstrainedLayoutBuilder$36.prototype;
  dart.applyMixin(RenderBox_RenderConstrainedLayoutBuilder$36, layout_builder.RenderConstrainedLayoutBuilder$(box$.BoxConstraints, box$.RenderBox));
  layout_builder._RenderLayoutBuilder = class _RenderLayoutBuilder extends RenderBox_RenderConstrainedLayoutBuilder$36 {
    computeMinIntrinsicWidth(height) {
      if (!dart.test(this[_debugThrowIfNotCheckingIntrinsics]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 217, 12, "_debugThrowIfNotCheckingIntrinsics()");
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (!dart.test(this[_debugThrowIfNotCheckingIntrinsics]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 223, 12, "_debugThrowIfNotCheckingIntrinsics()");
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (!dart.test(this[_debugThrowIfNotCheckingIntrinsics]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 229, 12, "_debugThrowIfNotCheckingIntrinsics()");
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (!dart.test(this[_debugThrowIfNotCheckingIntrinsics]())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 235, 12, "_debugThrowIfNotCheckingIntrinsics()");
      return 0.0;
    }
    performLayout() {
      this.layoutAndBuildChild();
      if (this.child != null) {
        this.child.layout(this.constraints, {parentUsesSize: true});
        this.size = this.constraints.constrain(this.child.size);
      } else {
        this.size = this.constraints.biggest;
      }
    }
    hitTestChildren(result, opts) {
      let t36, t36$;
      let position = opts && 'position' in opts ? opts.position : null;
      t36$ = (t36 = this.child, t36 == null ? null : t36.hitTest(result, {position: position}));
      return t36$ == null ? false : t36$;
    }
    paint(context, offset) {
      if (this.child != null) context.paintChild(this.child, offset);
    }
    [_debugThrowIfNotCheckingIntrinsics]() {
      if (!dart.test(dart.fn(() => {
        if (!dart.test(object$.RenderObject.debugCheckingIntrinsics)) {
          dart.throw(assertions.FlutterError.new("LayoutBuilder does not support returning intrinsic dimensions.\n" + "Calculating the intrinsic dimensions would require running the layout " + "callback speculatively, which might mutate the live render object tree."));
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/layout_builder.dart", 262, 12, "() {\r\n      if (!RenderObject.debugCheckingIntrinsics) {\r\n        throw FlutterError(\r\n          'LayoutBuilder does not support returning intrinsic dimensions.\\n'\r\n          'Calculating the intrinsic dimensions would require running the layout '\r\n          'callback speculatively, which might mutate the live render object tree.'\r\n        );\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
  };
  (layout_builder._RenderLayoutBuilder.new = function() {
    layout_builder._RenderLayoutBuilder.__proto__.new.call(this);
    ;
  }).prototype = layout_builder._RenderLayoutBuilder.prototype;
  dart.addTypeTests(layout_builder._RenderLayoutBuilder);
  dart.setMethodSignature(layout_builder._RenderLayoutBuilder, () => ({
    __proto__: dart.getMethods(layout_builder._RenderLayoutBuilder.__proto__),
    [_debugThrowIfNotCheckingIntrinsics]: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(layout_builder._RenderLayoutBuilder, "package:flutter/src/widgets/layout_builder.dart");
  layout_builder._debugReportException = function _debugReportException$(context, exception, stack, opts) {
    let informationCollector = opts && 'informationCollector' in opts ? opts.informationCollector : null;
    let details = new assertions.FlutterErrorDetails.new({exception: exception, stack: stack, library: "widgets library", context: context, informationCollector: informationCollector});
    assertions.FlutterError.reportError(details);
    return details;
  };
  var codePoint$ = dart.privateName(icon_data, "IconData.codePoint");
  var fontFamily$ = dart.privateName(icon_data, "IconData.fontFamily");
  var fontPackage$ = dart.privateName(icon_data, "IconData.fontPackage");
  var matchTextDirection$2 = dart.privateName(icon_data, "IconData.matchTextDirection");
  icon_data.IconData = class IconData extends core.Object {
    get codePoint() {
      return this[codePoint$];
    }
    set codePoint(value) {
      super.codePoint = value;
    }
    get fontFamily() {
      return this[fontFamily$];
    }
    set fontFamily(value) {
      super.fontFamily = value;
    }
    get fontPackage() {
      return this[fontPackage$];
    }
    set fontPackage(value) {
      super.fontPackage = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$2];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    _equals(other) {
      if (other == null) return false;
      if (!dart.equals(dart.runtimeType(other), this[$runtimeType])) return false;
      return icon_data.IconData.is(other) && other.codePoint == this.codePoint && other.fontFamily == this.fontFamily && other.fontPackage == this.fontPackage && dart.equals(other.matchTextDirection, this.matchTextDirection);
    }
    get hashCode() {
      return ui.hashValues(this.codePoint, this.fontFamily, this.fontPackage, this.matchTextDirection);
    }
    toString() {
      return "IconData(U+" + this.codePoint[$toRadixString](16)[$toUpperCase]()[$padLeft](5, "0") + ")";
    }
  };
  (icon_data.IconData.new = function(codePoint, opts) {
    let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
    let fontPackage = opts && 'fontPackage' in opts ? opts.fontPackage : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    this[codePoint$] = codePoint;
    this[fontFamily$] = fontFamily;
    this[fontPackage$] = fontPackage;
    this[matchTextDirection$2] = matchTextDirection;
    ;
  }).prototype = icon_data.IconData.prototype;
  dart.addTypeTests(icon_data.IconData);
  dart.setMethodSignature(icon_data.IconData, () => ({
    __proto__: dart.getMethods(icon_data.IconData.__proto__),
    _equals: dart.fnType(core.bool, [core.Object]),
    [$_equals]: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(icon_data.IconData, "package:flutter/src/widgets/icon_data.dart");
  dart.setFieldSignature(icon_data.IconData, () => ({
    __proto__: dart.getFields(icon_data.IconData.__proto__),
    codePoint: dart.finalFieldType(core.int),
    fontFamily: dart.finalFieldType(core.String),
    fontPackage: dart.finalFieldType(core.String),
    matchTextDirection: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(icon_data.IconData, ['_equals', 'toString']);
  dart.defineExtensionAccessors(icon_data.IconData, ['hashCode']);
  var C1431;
  icon_data.IconDataProperty = class IconDataProperty extends diagnostics$.DiagnosticsProperty$(icon_data.IconData) {
    toJsonMap(delegate) {
      let json = super.toJsonMap(delegate);
      if (this.value != null) {
        json[$_set]("valueProperties", new (IdentityMapOfString$Object()).from(["codePoint", this.value.codePoint]));
      }
      return json;
    }
  };
  (icon_data.IconDataProperty.new = function(name, value, opts) {
    let ifNull = opts && 'ifNull' in opts ? opts.ifNull : null;
    let showName = opts && 'showName' in opts ? opts.showName : true;
    let style = opts && 'style' in opts ? opts.style : C1431 || CT.C1431;
    let level = opts && 'level' in opts ? opts.level : C561 || CT.C561;
    if (!(showName != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_data.dart", 82, 15, "showName != null");
    if (!(style != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_data.dart", 83, 15, "style != null");
    if (!(level != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_data.dart", 84, 15, "level != null");
    icon_data.IconDataProperty.__proto__.new.call(this, name, value, {showName: showName, ifNull: ifNull, style: style, level: level});
    ;
  }).prototype = icon_data.IconDataProperty.prototype;
  dart.addTypeTests(icon_data.IconDataProperty);
  dart.setLibraryUri(icon_data.IconDataProperty, "package:flutter/src/widgets/icon_data.dart");
  const _is_AnnotatedRegion_default = Symbol('_is_AnnotatedRegion_default');
  var value$3 = dart.privateName(annotated_region, "AnnotatedRegion.value");
  var sized$ = dart.privateName(annotated_region, "AnnotatedRegion.sized");
  annotated_region.AnnotatedRegion$ = dart.generic(T => {
    var RenderAnnotatedRegionOfT = () => (RenderAnnotatedRegionOfT = dart.constFn(proxy_box.RenderAnnotatedRegion$(T)))();
    class AnnotatedRegion extends framework.SingleChildRenderObjectWidget {
      get value() {
        return this[value$3];
      }
      set value(value) {
        super.value = value;
      }
      get sized() {
        return this[sized$];
      }
      set sized(value) {
        super.sized = value;
      }
      createRenderObject(context) {
        return new (RenderAnnotatedRegionOfT()).new({value: this.value, sized: this.sized});
      }
      updateRenderObject(context, renderObject) {
        let t36;
        RenderAnnotatedRegionOfT()._check(renderObject);
        t36 = renderObject;
        t36.value = this.value;
        t36.sized = this.sized;
        t36;
      }
    }
    (AnnotatedRegion.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let sized = opts && 'sized' in opts ? opts.sized : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[value$3] = value;
      this[sized$] = sized;
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/annotated_region.dart", 28, 15, "value != null");
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/annotated_region.dart", 29, 15, "child != null");
      AnnotatedRegion.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = AnnotatedRegion.prototype;
    dart.addTypeTests(AnnotatedRegion);
    AnnotatedRegion.prototype[_is_AnnotatedRegion_default] = true;
    dart.setMethodSignature(AnnotatedRegion, () => ({
      __proto__: dart.getMethods(AnnotatedRegion.__proto__),
      createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
    }));
    dart.setLibraryUri(AnnotatedRegion, "package:flutter/src/widgets/annotated_region.dart");
    dart.setFieldSignature(AnnotatedRegion, () => ({
      __proto__: dart.getFields(AnnotatedRegion.__proto__),
      value: dart.finalFieldType(T),
      sized: dart.finalFieldType(core.bool)
    }));
    return AnnotatedRegion;
  });
  annotated_region.AnnotatedRegion = annotated_region.AnnotatedRegion$();
  dart.addTypeTests(annotated_region.AnnotatedRegion, _is_AnnotatedRegion_default);
  var _getDirection$0 = dart.privateName(single_child_scroll_view, "_getDirection");
  var C1434;
  var C1435;
  var C1433;
  var C1432;
  var C1438;
  var C1439;
  var C1440;
  var C1437;
  var C1436;
  var C1443;
  var C1444;
  var C1445;
  var C1446;
  var C1447;
  var C1442;
  var C1441;
  var C1450;
  var C1449;
  var C1448;
  var scrollDirection$1 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.scrollDirection");
  var reverse$2 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.reverse");
  var padding$6 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.padding");
  var controller$4 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.controller");
  var primary$0 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.primary");
  var physics$3 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.physics");
  var child$51 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.child");
  var dragStartBehavior$6 = dart.privateName(single_child_scroll_view, "SingleChildScrollView.dragStartBehavior");
  single_child_scroll_view.SingleChildScrollView = class SingleChildScrollView extends framework.StatelessWidget {
    get scrollDirection() {
      return this[scrollDirection$1];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$2];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get padding() {
      return this[padding$6];
    }
    set padding(value) {
      super.padding = value;
    }
    get controller() {
      return this[controller$4];
    }
    set controller(value) {
      super.controller = value;
    }
    get primary() {
      return this[primary$0];
    }
    set primary(value) {
      super.primary = value;
    }
    get physics() {
      return this[physics$3];
    }
    set physics(value) {
      super.physics = value;
    }
    get child() {
      return this[child$51];
    }
    set child(value) {
      super.child = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$6];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    [_getDirection$0](context) {
      return basic.getAxisDirectionFromAxisReverseAndDirectionality(context, this.scrollDirection, this.reverse);
    }
    build(context) {
      let axisDirection = this[_getDirection$0](context);
      let contents = this.child;
      if (this.padding != null) contents = new basic.Padding.new({padding: this.padding, child: contents, $creationLocationd_0dea112b090073317d4: C1432 || CT.C1432});
      let scrollController = dart.test(this.primary) ? primary_scroll_controller.PrimaryScrollController.of(context) : this.controller;
      let scrollable = new scrollable$.Scrollable.new({dragStartBehavior: this.dragStartBehavior, axisDirection: axisDirection, controller: scrollController, physics: this.physics, viewportBuilder: dart.fn((context, offset) => new single_child_scroll_view._SingleChildViewport.new({axisDirection: axisDirection, offset: offset, child: contents, $creationLocationd_0dea112b090073317d4: C1436 || CT.C1436}), BuildContextAndViewportOffsetTo_SingleChildViewport()), $creationLocationd_0dea112b090073317d4: C1441 || CT.C1441});
      return dart.test(this.primary) && scrollController != null ? new primary_scroll_controller.PrimaryScrollController.none({child: scrollable, $creationLocationd_0dea112b090073317d4: C1448 || CT.C1448}) : scrollable;
    }
  };
  (single_child_scroll_view.SingleChildScrollView.new = function(opts) {
    let t36;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$1] = scrollDirection;
    this[reverse$2] = reverse;
    this[padding$6] = padding;
    this[physics$3] = physics;
    this[controller$4] = controller;
    this[child$51] = child;
    this[dragStartBehavior$6] = dragStartBehavior;
    if (!(scrollDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 222, 15, "scrollDirection != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 223, 15, "dragStartBehavior != null");
    if (!!(controller != null && dart.equals(primary, true))) dart.assertFailed("Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. " + "You cannot both set primary to true and pass an explicit controller.", "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 224, 15, "!(controller != null && primary == true)");
    this[primary$0] = (t36 = primary, t36 == null ? controller == null && scrollDirection == basic_types$.Axis.vertical : t36);
    single_child_scroll_view.SingleChildScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = single_child_scroll_view.SingleChildScrollView.prototype;
  dart.addTypeTests(single_child_scroll_view.SingleChildScrollView);
  dart.setMethodSignature(single_child_scroll_view.SingleChildScrollView, () => ({
    __proto__: dart.getMethods(single_child_scroll_view.SingleChildScrollView.__proto__),
    [_getDirection$0]: dart.fnType(basic_types$.AxisDirection, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(single_child_scroll_view.SingleChildScrollView, "package:flutter/src/widgets/single_child_scroll_view.dart");
  dart.setFieldSignature(single_child_scroll_view.SingleChildScrollView, () => ({
    __proto__: dart.getFields(single_child_scroll_view.SingleChildScrollView.__proto__),
    scrollDirection: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    primary: dart.finalFieldType(core.bool),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    child: dart.finalFieldType(framework.Widget),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var axisDirection$4 = dart.privateName(single_child_scroll_view, "_SingleChildViewport.axisDirection");
  var offset$3 = dart.privateName(single_child_scroll_view, "_SingleChildViewport.offset");
  single_child_scroll_view._SingleChildViewport = class _SingleChildViewport extends framework.SingleChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$4];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get offset() {
      return this[offset$3];
    }
    set offset(value) {
      super.offset = value;
    }
    createRenderObject(context) {
      return new single_child_scroll_view._RenderSingleChildViewport.new({axisDirection: this.axisDirection, offset: this.offset});
    }
    updateRenderObject(context, renderObject) {
      let t36;
      single_child_scroll_view._RenderSingleChildViewport._check(renderObject);
      t36 = renderObject;
      t36.axisDirection = this.axisDirection;
      t36.offset = this.offset;
      t36;
    }
  };
  (single_child_scroll_view._SingleChildViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$4] = axisDirection;
    this[offset$3] = offset;
    if (!(axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 331, 15, "axisDirection != null");
    single_child_scroll_view._SingleChildViewport.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = single_child_scroll_view._SingleChildViewport.prototype;
  dart.addTypeTests(single_child_scroll_view._SingleChildViewport);
  dart.setMethodSignature(single_child_scroll_view._SingleChildViewport, () => ({
    __proto__: dart.getMethods(single_child_scroll_view._SingleChildViewport.__proto__),
    createRenderObject: dart.fnType(single_child_scroll_view._RenderSingleChildViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(single_child_scroll_view._SingleChildViewport, "package:flutter/src/widgets/single_child_scroll_view.dart");
  dart.setFieldSignature(single_child_scroll_view._SingleChildViewport, () => ({
    __proto__: dart.getFields(single_child_scroll_view._SingleChildViewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types$.AxisDirection),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset)
  }));
  var _axisDirection = dart.privateName(single_child_scroll_view, "_axisDirection");
  var _offset = dart.privateName(single_child_scroll_view, "_offset");
  var _cacheExtent = dart.privateName(single_child_scroll_view, "_cacheExtent");
  var _hasScrolled = dart.privateName(single_child_scroll_view, "_hasScrolled");
  var _viewportExtent = dart.privateName(single_child_scroll_view, "_viewportExtent");
  var _minScrollExtent$ = dart.privateName(single_child_scroll_view, "_minScrollExtent");
  var _maxScrollExtent$ = dart.privateName(single_child_scroll_view, "_maxScrollExtent");
  var _getInnerConstraints = dart.privateName(single_child_scroll_view, "_getInnerConstraints");
  var _paintOffsetForPosition = dart.privateName(single_child_scroll_view, "_paintOffsetForPosition");
  var _paintOffset = dart.privateName(single_child_scroll_view, "_paintOffset");
  var _shouldClipAtPaintOffset = dart.privateName(single_child_scroll_view, "_shouldClipAtPaintOffset");
  const RenderBox_RenderObjectWithChildMixin$36$ = class RenderBox_RenderObjectWithChildMixin extends box$.RenderBox {};
  (RenderBox_RenderObjectWithChildMixin$36$.new = function() {
    object$.RenderObjectWithChildMixin$(box$.RenderBox)[dart.mixinNew].call(this);
    RenderBox_RenderObjectWithChildMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_RenderObjectWithChildMixin$36$.prototype;
  dart.applyMixin(RenderBox_RenderObjectWithChildMixin$36$, object$.RenderObjectWithChildMixin$(box$.RenderBox));
  single_child_scroll_view._RenderSingleChildViewport = class _RenderSingleChildViewport extends RenderBox_RenderObjectWithChildMixin$36$ {
    get axisDirection() {
      return this[_axisDirection];
    }
    set axisDirection(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 372, 12, "value != null");
      if (dart.equals(value, this[_axisDirection])) return;
      this[_axisDirection] = value;
      this.markNeedsLayout();
    }
    get axis() {
      return basic_types$.axisDirectionToAxis(this.axisDirection);
    }
    get offset() {
      return this[_offset];
    }
    set offset(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 384, 12, "value != null");
      if (dart.equals(value, this[_offset])) return;
      if (dart.test(this.attached)) this[_offset].removeListener(dart.bind(this, _hasScrolled));
      this[_offset] = value;
      if (dart.test(this.attached)) this[_offset].addListener(dart.bind(this, _hasScrolled));
      this.markNeedsLayout();
    }
    get cacheExtent() {
      return this[_cacheExtent];
    }
    set cacheExtent(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 399, 12, "value != null");
      if (value == this[_cacheExtent]) return;
      this[_cacheExtent] = value;
      this.markNeedsLayout();
    }
    [_hasScrolled]() {
      this.markNeedsPaint();
      this.markNeedsSemanticsUpdate();
    }
    setupParentData(child) {
      object$.RenderObject._check(child);
      if (!object$.ParentData.is(child.parentData)) child.parentData = new object$.ParentData.new();
    }
    attach(owner) {
      object$.PipelineOwner._check(owner);
      super.attach(owner);
      this[_offset].addListener(dart.bind(this, _hasScrolled));
    }
    detach() {
      this[_offset].removeListener(dart.bind(this, _hasScrolled));
      super.detach();
    }
    get isRepaintBoundary() {
      return true;
    }
    get [_viewportExtent]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 435, 12, "hasSize");
      switch (this.axis) {
        case C78 || CT.C78:
        {
          return this.size.width;
        }
        case C77 || CT.C77:
        {
          return this.size.height;
        }
      }
      return null;
    }
    get [_minScrollExtent$]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 446, 12, "hasSize");
      return 0.0;
    }
    get [_maxScrollExtent$]() {
      if (!dart.test(this.hasSize)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 451, 12, "hasSize");
      if (this.child == null) return 0.0;
      switch (this.axis) {
        case C78 || CT.C78:
        {
          return math.max(core.double, 0.0, dart.notNull(this.child.size.width) - dart.notNull(this.size.width));
        }
        case C77 || CT.C77:
        {
          return math.max(core.double, 0.0, dart.notNull(this.child.size.height) - dart.notNull(this.size.height));
        }
      }
      return null;
    }
    [_getInnerConstraints](constraints) {
      switch (this.axis) {
        case C78 || CT.C78:
        {
          return constraints.heightConstraints();
        }
        case C77 || CT.C77:
        {
          return constraints.widthConstraints();
        }
      }
      return null;
    }
    computeMinIntrinsicWidth(height) {
      if (this.child != null) return this.child.getMinIntrinsicWidth(height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (this.child != null) return this.child.getMaxIntrinsicWidth(height);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (this.child != null) return this.child.getMinIntrinsicHeight(width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (this.child != null) return this.child.getMaxIntrinsicHeight(width);
      return 0.0;
    }
    performLayout() {
      if (this.child == null) {
        this.size = this.constraints.smallest;
      } else {
        this.child.layout(this[_getInnerConstraints](this.constraints), {parentUsesSize: true});
        this.size = this.constraints.constrain(this.child.size);
      }
      this.offset.applyViewportDimension(this[_viewportExtent]);
      this.offset.applyContentDimensions(this[_minScrollExtent$], this[_maxScrollExtent$]);
    }
    get [_paintOffset]() {
      return this[_paintOffsetForPosition](this.offset.pixels);
    }
    [_paintOffsetForPosition](position) {
      if (!(this.axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 522, 12, "axisDirection != null");
      switch (this.axisDirection) {
        case C115 || CT.C115:
        {
          return new ui.Offset.new(0.0, dart.notNull(position) - dart.notNull(this.child.size.height) + dart.notNull(this.size.height));
        }
        case C72 || CT.C72:
        {
          return new ui.Offset.new(0.0, -dart.notNull(position));
        }
        case C117 || CT.C117:
        {
          return new ui.Offset.new(dart.notNull(position) - dart.notNull(this.child.size.width) + dart.notNull(this.size.width), 0.0);
        }
        case C116 || CT.C116:
        {
          return new ui.Offset.new(-dart.notNull(position), 0.0);
        }
      }
      return null;
    }
    [_shouldClipAtPaintOffset](paintOffset) {
      if (!(this.child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 537, 12, "child != null");
      return dart.test(paintOffset['<'](ui.Offset.zero)) || !dart.test(ui.Offset.zero['&'](this.size).contains(paintOffset['&'](this.child.size).bottomRight));
    }
    paint(context, offset) {
      if (this.child != null) {
        let paintOffset = this[_paintOffset];
        const paintContents = (context, offset) => {
          context.paintChild(this.child, offset['+'](paintOffset));
        };
        dart.fn(paintContents, PaintingContextAndOffsetTovoid());
        if (dart.test(this[_shouldClipAtPaintOffset](paintOffset))) {
          context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), paintContents);
        } else {
          paintContents(context, offset);
        }
      }
    }
    applyPaintTransform(child, transform) {
      box$.RenderBox._check(child);
      let paintOffset = this[_paintOffset];
      transform.translate(paintOffset.dx, paintOffset.dy);
    }
    describeApproximatePaintClip(child) {
      object$.RenderObject._check(child);
      if (child != null && dart.test(this[_shouldClipAtPaintOffset](this[_paintOffset]))) return ui.Offset.zero['&'](this.size);
      return null;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (this.child != null) {
        return result.addWithPaintOffset({offset: this[_paintOffset], position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['+'](this[_paintOffset]._negate()))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 578, 18, "transformed == position + -_paintOffset");
            return this.child.hitTest(result, {position: transformed});
          }, BoxHitTestResultAndOffsetTobool())});
      }
      return false;
    }
    getOffsetToReveal(target, alignment, opts) {
      let rect = opts && 'rect' in opts ? opts.rect : null;
      rect == null ? rect = target.paintBounds : null;
      if (!box$.RenderBox.is(target)) return new viewport$.RevealedOffset.new({offset: this.offset.pixels, rect: rect});
      let targetBox = box$.RenderBox.as(target);
      let transform = targetBox.getTransformTo(this.child);
      let bounds = matrix_utils.MatrixUtils.transformRect(transform, rect);
      let contentSize = this.child.size;
      let leadingScrollOffset = null;
      let targetMainAxisExtent = null;
      let mainAxisExtent = null;
      if (!(this.axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 601, 12, "axisDirection != null");
      switch (this.axisDirection) {
        case C115 || CT.C115:
        {
          mainAxisExtent = this.size.height;
          leadingScrollOffset = dart.notNull(contentSize.height) - dart.notNull(bounds.bottom);
          targetMainAxisExtent = bounds.height;
          break;
        }
        case C116 || CT.C116:
        {
          mainAxisExtent = this.size.width;
          leadingScrollOffset = bounds.left;
          targetMainAxisExtent = bounds.width;
          break;
        }
        case C72 || CT.C72:
        {
          mainAxisExtent = this.size.height;
          leadingScrollOffset = bounds.top;
          targetMainAxisExtent = bounds.height;
          break;
        }
        case C117 || CT.C117:
        {
          mainAxisExtent = this.size.width;
          leadingScrollOffset = dart.notNull(contentSize.width) - dart.notNull(bounds.right);
          targetMainAxisExtent = bounds.width;
          break;
        }
      }
      let targetOffset = dart.notNull(leadingScrollOffset) - (dart.notNull(mainAxisExtent) - dart.notNull(targetMainAxisExtent)) * dart.notNull(alignment);
      let targetRect = bounds.shift(this[_paintOffsetForPosition](targetOffset));
      return new viewport$.RevealedOffset.new({offset: targetOffset, rect: targetRect});
    }
    showOnScreen(opts) {
      let descendant = opts && 'descendant' in opts ? opts.descendant : null;
      let rect = opts && 'rect' in opts ? opts.rect : null;
      let duration = opts && 'duration' in opts ? opts.duration : C74 || CT.C74;
      let curve = opts && 'curve' in opts ? opts.curve : C75 || CT.C75;
      if (!dart.test(this.offset.allowImplicitScrolling)) {
        return super.showOnScreen({descendant: descendant, rect: rect, duration: duration, curve: curve});
      }
      let newRect = viewport$.RenderViewportBase.showInViewport({descendant: descendant, viewport: this, offset: this.offset, rect: rect, duration: duration, curve: curve});
      super.showOnScreen({rect: newRect, duration: duration, curve: curve});
    }
    describeSemanticsClip(child) {
      object$.RenderObject._check(child);
      if (!(this.axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 663, 12, "axis != null");
      switch (this.axis) {
        case C77 || CT.C77:
        {
          return new ui.Rect.fromLTRB(this.semanticBounds.left, dart.notNull(this.semanticBounds.top) - dart.notNull(this.cacheExtent), this.semanticBounds.right, dart.notNull(this.semanticBounds.bottom) + dart.notNull(this.cacheExtent));
        }
        case C78 || CT.C78:
        {
          return new ui.Rect.fromLTRB(dart.notNull(this.semanticBounds.left) - dart.notNull(this.cacheExtent), this.semanticBounds.top, dart.notNull(this.semanticBounds.right) + dart.notNull(this.cacheExtent), this.semanticBounds.bottom);
        }
      }
      return null;
    }
  };
  (single_child_scroll_view._RenderSingleChildViewport.new = function(opts) {
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : 250;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!(axisDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 360, 15, "axisDirection != null");
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 361, 15, "offset != null");
    if (!(cacheExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/single_child_scroll_view.dart", 362, 15, "cacheExtent != null");
    this[_axisDirection] = axisDirection;
    this[_offset] = offset;
    this[_cacheExtent] = cacheExtent;
    single_child_scroll_view._RenderSingleChildViewport.__proto__.new.call(this);
    this.child = child;
  }).prototype = single_child_scroll_view._RenderSingleChildViewport.prototype;
  dart.addTypeTests(single_child_scroll_view._RenderSingleChildViewport);
  single_child_scroll_view._RenderSingleChildViewport[dart.implements] = () => [viewport$.RenderAbstractViewport];
  dart.setMethodSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getMethods(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    [_hasScrolled]: dart.fnType(dart.void, []),
    [_getInnerConstraints]: dart.fnType(box$.BoxConstraints, [box$.BoxConstraints]),
    [_paintOffsetForPosition]: dart.fnType(ui.Offset, [core.double]),
    [_shouldClipAtPaintOffset]: dart.fnType(core.bool, [ui.Offset]),
    getOffsetToReveal: dart.fnType(viewport$.RevealedOffset, [object$.RenderObject, core.double], {rect: ui.Rect}, {})
  }));
  dart.setGetterSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getGetters(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    axisDirection: basic_types$.AxisDirection,
    axis: basic_types$.Axis,
    offset: viewport_offset.ViewportOffset,
    cacheExtent: core.double,
    [_viewportExtent]: core.double,
    [_minScrollExtent$]: core.double,
    [_maxScrollExtent$]: core.double,
    [_paintOffset]: ui.Offset
  }));
  dart.setSetterSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getSetters(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    axisDirection: basic_types$.AxisDirection,
    offset: viewport_offset.ViewportOffset,
    cacheExtent: core.double
  }));
  dart.setLibraryUri(single_child_scroll_view._RenderSingleChildViewport, "package:flutter/src/widgets/single_child_scroll_view.dart");
  dart.setFieldSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getFields(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    [_axisDirection]: dart.fieldType(basic_types$.AxisDirection),
    [_offset]: dart.fieldType(viewport_offset.ViewportOffset),
    [_cacheExtent]: dart.fieldType(core.double)
  }));
  var _lastMetrics = dart.privateName(scrollbar, "_lastMetrics");
  var _lastAxisDirection$ = dart.privateName(scrollbar, "_lastAxisDirection");
  var _thumbRect = dart.privateName(scrollbar, "_thumbRect");
  var _color$0 = dart.privateName(scrollbar, "_color");
  var _textDirection$1 = dart.privateName(scrollbar, "_textDirection");
  var _padding$ = dart.privateName(scrollbar, "_padding");
  var _paint$ = dart.privateName(scrollbar, "_paint");
  var _paintThumbCrossAxis = dart.privateName(scrollbar, "_paintThumbCrossAxis");
  var _mainAxisPadding = dart.privateName(scrollbar, "_mainAxisPadding");
  var _totalContentExtent = dart.privateName(scrollbar, "_totalContentExtent");
  var _trackExtent = dart.privateName(scrollbar, "_trackExtent");
  var _beforeExtent = dart.privateName(scrollbar, "_beforeExtent");
  var _afterExtent = dart.privateName(scrollbar, "_afterExtent");
  var _thumbExtent = dart.privateName(scrollbar, "_thumbExtent");
  var _isVertical = dart.privateName(scrollbar, "_isVertical");
  var _isReversed = dart.privateName(scrollbar, "_isReversed");
  var _getScrollToTrack = dart.privateName(scrollbar, "_getScrollToTrack");
  var _repaint = dart.privateName(scrollbar, "_repaint");
  var C1451;
  var _repaint$ = dart.privateName(custom_paint, "_repaint");
  var thickness$ = dart.privateName(scrollbar, "ScrollbarPainter.thickness");
  var fadeoutOpacityAnimation$ = dart.privateName(scrollbar, "ScrollbarPainter.fadeoutOpacityAnimation");
  var mainAxisMargin$ = dart.privateName(scrollbar, "ScrollbarPainter.mainAxisMargin");
  var crossAxisMargin$ = dart.privateName(scrollbar, "ScrollbarPainter.crossAxisMargin");
  var radius$ = dart.privateName(scrollbar, "ScrollbarPainter.radius");
  var minLength$ = dart.privateName(scrollbar, "ScrollbarPainter.minLength");
  var minOverscrollLength$ = dart.privateName(scrollbar, "ScrollbarPainter.minOverscrollLength");
  scrollbar.ScrollbarPainter = class ScrollbarPainter extends change_notifier.ChangeNotifier {
    get thickness() {
      return this[thickness$];
    }
    set thickness(value) {
      this[thickness$] = value;
    }
    get fadeoutOpacityAnimation() {
      return this[fadeoutOpacityAnimation$];
    }
    set fadeoutOpacityAnimation(value) {
      super.fadeoutOpacityAnimation = value;
    }
    get mainAxisMargin() {
      return this[mainAxisMargin$];
    }
    set mainAxisMargin(value) {
      super.mainAxisMargin = value;
    }
    get crossAxisMargin() {
      return this[crossAxisMargin$];
    }
    set crossAxisMargin(value) {
      super.crossAxisMargin = value;
    }
    get radius() {
      return this[radius$];
    }
    set radius(value) {
      this[radius$] = value;
    }
    get minLength() {
      return this[minLength$];
    }
    set minLength(value) {
      super.minLength = value;
    }
    get minOverscrollLength() {
      return this[minOverscrollLength$];
    }
    set minOverscrollLength(value) {
      super.minOverscrollLength = value;
    }
    get color() {
      return this[_color$0];
    }
    set color(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 80, 12, "value != null");
      if (dart.equals(this.color, value)) return;
      this[_color$0] = value;
      this.notifyListeners();
    }
    get textDirection() {
      return this[_textDirection$1];
    }
    set textDirection(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 93, 12, "value != null");
      if (dart.equals(this.textDirection, value)) return;
      this[_textDirection$1] = value;
      this.notifyListeners();
    }
    get padding() {
      return this[_padding$];
    }
    set padding(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 137, 12, "value != null");
      if (dart.equals(this.padding, value)) return;
      this[_padding$] = value;
      this.notifyListeners();
    }
    update(metrics, axisDirection) {
      this[_lastMetrics] = metrics;
      this[_lastAxisDirection$] = axisDirection;
      this.notifyListeners();
    }
    updateThickness(nextThickness, nextRadius) {
      this.thickness = nextThickness;
      this.radius = nextRadius;
      this.notifyListeners();
    }
    get [_paint$]() {
      let t36;
      t36 = ui.Paint.new();
      t36.color = this.color.withOpacity(dart.notNull(this.color.opacity) * dart.notNull(this.fadeoutOpacityAnimation.value));
      return t36;
    }
    [_paintThumbCrossAxis](canvas, size, thumbOffset, thumbExtent, direction) {
      let x = null;
      let y = null;
      let thumbSize = null;
      switch (direction) {
        case C72 || CT.C72:
        {
          thumbSize = new ui.Size.new(this.thickness, thumbExtent);
          x = dart.equals(this.textDirection, ui.TextDirection.rtl) ? dart.notNull(this.crossAxisMargin) + dart.notNull(this.padding.left) : dart.notNull(size.width) - dart.notNull(this.thickness) - dart.notNull(this.crossAxisMargin) - dart.notNull(this.padding.right);
          y = thumbOffset;
          break;
        }
        case C115 || CT.C115:
        {
          thumbSize = new ui.Size.new(this.thickness, thumbExtent);
          x = dart.equals(this.textDirection, ui.TextDirection.rtl) ? dart.notNull(this.crossAxisMargin) + dart.notNull(this.padding.left) : dart.notNull(size.width) - dart.notNull(this.thickness) - dart.notNull(this.crossAxisMargin) - dart.notNull(this.padding.right);
          y = thumbOffset;
          break;
        }
        case C117 || CT.C117:
        {
          thumbSize = new ui.Size.new(thumbExtent, this.thickness);
          x = thumbOffset;
          y = dart.notNull(size.height) - dart.notNull(this.thickness) - dart.notNull(this.crossAxisMargin) - dart.notNull(this.padding.bottom);
          break;
        }
        case C116 || CT.C116:
        {
          thumbSize = new ui.Size.new(thumbExtent, this.thickness);
          x = thumbOffset;
          y = dart.notNull(size.height) - dart.notNull(this.thickness) - dart.notNull(this.crossAxisMargin) - dart.notNull(this.padding.bottom);
          break;
        }
      }
      this[_thumbRect] = new ui.Offset.new(x, y)['&'](thumbSize);
      if (this.radius == null)
        canvas.drawRect(this[_thumbRect], this[_paint$]);
      else
        canvas.drawRRect(new ui.RRect.fromRectAndRadius(this[_thumbRect], this.radius), this[_paint$]);
    }
    [_thumbExtent]() {
      let fractionVisible = ((dart.notNull(this[_lastMetrics].extentInside) - dart.notNull(this[_mainAxisPadding])) / (dart.notNull(this[_totalContentExtent]) - dart.notNull(this[_mainAxisPadding])))[$clamp](0.0, 1.0);
      let thumbExtent = math.max(core.double, math.min(core.double, this[_trackExtent], this.minOverscrollLength), dart.notNull(this[_trackExtent]) * fractionVisible);
      let fractionOverscrolled = 1.0 - dart.notNull(this[_lastMetrics].extentInside) / dart.notNull(this[_lastMetrics].viewportDimension);
      let safeMinLength = math.min(core.double, this.minLength, this[_trackExtent]);
      let newMinLength = dart.notNull(this[_beforeExtent]) > 0 && dart.notNull(this[_afterExtent]) > 0 ? safeMinLength : safeMinLength * (1.0 - fractionOverscrolled[$clamp](0.0, 0.2) / 0.2);
      return thumbExtent[$clamp](newMinLength, this[_trackExtent]);
    }
    dispose() {
      this.fadeoutOpacityAnimation.removeListener(dart.bind(this, 'notifyListeners'));
      super.dispose();
    }
    get [_isVertical]() {
      return dart.equals(this[_lastAxisDirection$], basic_types$.AxisDirection.down) || dart.equals(this[_lastAxisDirection$], basic_types$.AxisDirection.up);
    }
    get [_isReversed]() {
      return dart.equals(this[_lastAxisDirection$], basic_types$.AxisDirection.up) || dart.equals(this[_lastAxisDirection$], basic_types$.AxisDirection.left);
    }
    get [_beforeExtent]() {
      return dart.test(this[_isReversed]) ? this[_lastMetrics].extentAfter : this[_lastMetrics].extentBefore;
    }
    get [_afterExtent]() {
      return dart.test(this[_isReversed]) ? this[_lastMetrics].extentBefore : this[_lastMetrics].extentAfter;
    }
    get [_mainAxisPadding]() {
      return dart.test(this[_isVertical]) ? this.padding.vertical : this.padding.horizontal;
    }
    get [_trackExtent]() {
      return dart.notNull(this[_lastMetrics].viewportDimension) - 2 * dart.notNull(this.mainAxisMargin) - dart.notNull(this[_mainAxisPadding]);
    }
    get [_totalContentExtent]() {
      return dart.notNull(this[_lastMetrics].maxScrollExtent) - dart.notNull(this[_lastMetrics].minScrollExtent) + dart.notNull(this[_lastMetrics].viewportDimension);
    }
    getTrackToScroll(thumbOffsetLocal) {
      if (!(thumbOffsetLocal != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 301, 12, "thumbOffsetLocal != null");
      let scrollableExtent = dart.notNull(this[_lastMetrics].maxScrollExtent) - dart.notNull(this[_lastMetrics].minScrollExtent);
      let thumbMovableExtent = dart.notNull(this[_trackExtent]) - dart.notNull(this[_thumbExtent]());
      return scrollableExtent * dart.notNull(thumbOffsetLocal) / thumbMovableExtent;
    }
    [_getScrollToTrack](metrics, thumbExtent) {
      let scrollableExtent = dart.notNull(metrics.maxScrollExtent) - dart.notNull(metrics.minScrollExtent);
      let fractionPast = scrollableExtent > 0 ? ((dart.notNull(metrics.pixels) - dart.notNull(metrics.minScrollExtent)) / scrollableExtent)[$clamp](0.0, 1.0) : 0.0;
      return (dart.test(this[_isReversed]) ? 1 - fractionPast : fractionPast) * (dart.notNull(this[_trackExtent]) - dart.notNull(thumbExtent));
    }
    paint(canvas, size) {
      if (this[_lastAxisDirection$] == null || this[_lastMetrics] == null || this.fadeoutOpacityAnimation.value === 0.0) return;
      if (dart.notNull(this[_lastMetrics].viewportDimension) <= dart.notNull(this[_mainAxisPadding]) || dart.notNull(this[_trackExtent]) <= 0) {
        return;
      }
      let beforePadding = dart.test(this[_isVertical]) ? this.padding.top : this.padding.left;
      let thumbExtent = this[_thumbExtent]();
      let thumbOffsetLocal = this[_getScrollToTrack](this[_lastMetrics], thumbExtent);
      let thumbOffset = dart.notNull(thumbOffsetLocal) + dart.notNull(this.mainAxisMargin) + dart.notNull(beforePadding);
      return this[_paintThumbCrossAxis](canvas, size, thumbOffset, thumbExtent, this[_lastAxisDirection$]);
    }
    hitTestInteractive(position) {
      if (this[_thumbRect] == null) {
        return false;
      }
      if (this.fadeoutOpacityAnimation.value === 0.0) {
        return false;
      }
      let interactiveThumbRect = this[_thumbRect].expandToInclude(new ui.Rect.fromCircle({center: this[_thumbRect].center, radius: 48 / 2}));
      return interactiveThumbRect.contains(position);
    }
    hitTest(position) {
      if (this[_thumbRect] == null) {
        return null;
      }
      if (this.fadeoutOpacityAnimation.value === 0.0) {
        return false;
      }
      return this[_thumbRect].contains(position);
    }
    shouldRepaint(old) {
      scrollbar.ScrollbarPainter._check(old);
      return !dart.equals(this.color, old.color) || !dart.equals(this.textDirection, old.textDirection) || this.thickness != old.thickness || !dart.equals(this.fadeoutOpacityAnimation, old.fadeoutOpacityAnimation) || this.mainAxisMargin != old.mainAxisMargin || this.crossAxisMargin != old.crossAxisMargin || !dart.equals(this.radius, old.radius) || this.minLength != old.minLength || !dart.equals(this.padding, old.padding);
    }
    shouldRebuildSemantics(oldDelegate) {
      custom_paint.CustomPainter._check(oldDelegate);
      return false;
    }
    get semanticsBuilder() {
      return null;
    }
    get [_repaint$]() {
      return change_notifier.Listenable._check(this[$noSuchMethod](new core._Invocation.getter(C1451 || CT.C1451)));
    }
  };
  (scrollbar.ScrollbarPainter.new = function(opts) {
    let t36;
    let color = opts && 'color' in opts ? opts.color : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let fadeoutOpacityAnimation = opts && 'fadeoutOpacityAnimation' in opts ? opts.fadeoutOpacityAnimation : null;
    let padding = opts && 'padding' in opts ? opts.padding : C290 || CT.C290;
    let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : 0;
    let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : 0;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let minLength = opts && 'minLength' in opts ? opts.minLength : 18;
    let minOverscrollLength = opts && 'minOverscrollLength' in opts ? opts.minOverscrollLength : null;
    this[_lastMetrics] = null;
    this[_lastAxisDirection$] = null;
    this[_thumbRect] = null;
    this[thickness$] = thickness;
    this[fadeoutOpacityAnimation$] = fadeoutOpacityAnimation;
    this[mainAxisMargin$] = mainAxisMargin;
    this[crossAxisMargin$] = crossAxisMargin;
    this[radius$] = radius;
    this[minLength$] = minLength;
    if (!(color != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 57, 15, "color != null");
    if (!(textDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 58, 15, "textDirection != null");
    if (!(thickness != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 59, 15, "thickness != null");
    if (!(fadeoutOpacityAnimation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 60, 15, "fadeoutOpacityAnimation != null");
    if (!(mainAxisMargin != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 61, 15, "mainAxisMargin != null");
    if (!(crossAxisMargin != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 62, 15, "crossAxisMargin != null");
    if (!(minLength != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 63, 15, "minLength != null");
    if (!(dart.notNull(minLength) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 64, 15, "minLength >= 0");
    if (!(minOverscrollLength == null || dart.notNull(minOverscrollLength) <= dart.notNull(minLength))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 65, 15, "minOverscrollLength == null || minOverscrollLength <= minLength");
    if (!(minOverscrollLength == null || dart.notNull(minOverscrollLength) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 66, 15, "minOverscrollLength == null || minOverscrollLength >= 0");
    if (!(padding != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 67, 15, "padding != null");
    if (!dart.test(padding.isNonNegative)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/scrollbar.dart", 68, 15, "padding.isNonNegative");
    this[_color$0] = color;
    this[_textDirection$1] = textDirection;
    this[_padding$] = padding;
    this[minOverscrollLength$] = (t36 = minOverscrollLength, t36 == null ? minLength : t36);
    scrollbar.ScrollbarPainter.__proto__.new.call(this);
    this.fadeoutOpacityAnimation.addListener(dart.bind(this, 'notifyListeners'));
  }).prototype = scrollbar.ScrollbarPainter.prototype;
  dart.addTypeTests(scrollbar.ScrollbarPainter);
  scrollbar.ScrollbarPainter[dart.implements] = () => [custom_paint.CustomPainter];
  dart.setMethodSignature(scrollbar.ScrollbarPainter, () => ({
    __proto__: dart.getMethods(scrollbar.ScrollbarPainter.__proto__),
    update: dart.fnType(dart.void, [scroll_metrics.ScrollMetrics, basic_types$.AxisDirection]),
    updateThickness: dart.fnType(dart.void, [core.double, ui.Radius]),
    [_paintThumbCrossAxis]: dart.fnType(dart.void, [ui.Canvas, ui.Size, core.double, core.double, basic_types$.AxisDirection]),
    [_thumbExtent]: dart.fnType(core.double, []),
    getTrackToScroll: dart.fnType(core.double, [core.double]),
    [_getScrollToTrack]: dart.fnType(core.double, [scroll_metrics.ScrollMetrics, core.double]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    hitTestInteractive: dart.fnType(core.bool, [ui.Offset]),
    hitTest: dart.fnType(core.bool, [ui.Offset]),
    shouldRepaint: dart.fnType(core.bool, [core.Object]),
    shouldRebuildSemantics: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(scrollbar.ScrollbarPainter, () => ({
    __proto__: dart.getGetters(scrollbar.ScrollbarPainter.__proto__),
    color: ui.Color,
    textDirection: ui.TextDirection,
    padding: edge_insets.EdgeInsets,
    [_paint$]: ui.Paint,
    [_isVertical]: core.bool,
    [_isReversed]: core.bool,
    [_beforeExtent]: core.double,
    [_afterExtent]: core.double,
    [_mainAxisPadding]: core.double,
    [_trackExtent]: core.double,
    [_totalContentExtent]: core.double,
    semanticsBuilder: dart.fnType(core.List$(custom_paint.CustomPainterSemantics), [ui.Size]),
    [_repaint$]: change_notifier.Listenable
  }));
  dart.setSetterSignature(scrollbar.ScrollbarPainter, () => ({
    __proto__: dart.getSetters(scrollbar.ScrollbarPainter.__proto__),
    color: ui.Color,
    textDirection: ui.TextDirection,
    padding: edge_insets.EdgeInsets
  }));
  dart.setLibraryUri(scrollbar.ScrollbarPainter, "package:flutter/src/widgets/scrollbar.dart");
  dart.setFieldSignature(scrollbar.ScrollbarPainter, () => ({
    __proto__: dart.getFields(scrollbar.ScrollbarPainter.__proto__),
    [_color$0]: dart.fieldType(ui.Color),
    [_textDirection$1]: dart.fieldType(ui.TextDirection),
    thickness: dart.fieldType(core.double),
    fadeoutOpacityAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    mainAxisMargin: dart.finalFieldType(core.double),
    crossAxisMargin: dart.finalFieldType(core.double),
    radius: dart.fieldType(ui.Radius),
    [_padding$]: dart.fieldType(edge_insets.EdgeInsets),
    minLength: dart.finalFieldType(core.double),
    minOverscrollLength: dart.finalFieldType(core.double),
    [_lastMetrics]: dart.fieldType(scroll_metrics.ScrollMetrics),
    [_lastAxisDirection$]: dart.fieldType(basic_types$.AxisDirection),
    [_thumbRect]: dart.fieldType(ui.Rect)
  }));
  dart.defineLazy(scrollbar, {
    /*scrollbar._kMinThumbExtent*/get _kMinThumbExtent() {
      return 18;
    },
    /*scrollbar._kMinInteractiveSize*/get _kMinInteractiveSize() {
      return 48;
    }
  });
  var _name$29 = dart.privateName(heroes, "_name");
  var C1452;
  var C1453;
  var C1454;
  heroes.HeroFlightDirection = class HeroFlightDirection extends core.Object {
    toString() {
      return this[_name$29];
    }
  };
  (heroes.HeroFlightDirection.new = function(index, _name) {
    this.index = index;
    this[_name$29] = _name;
    ;
  }).prototype = heroes.HeroFlightDirection.prototype;
  dart.addTypeTests(heroes.HeroFlightDirection);
  dart.setLibraryUri(heroes.HeroFlightDirection, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes.HeroFlightDirection, () => ({
    __proto__: dart.getFields(heroes.HeroFlightDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$29]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(heroes.HeroFlightDirection, ['toString']);
  heroes.HeroFlightDirection.push = C1452 || CT.C1452;
  heroes.HeroFlightDirection.pop = C1453 || CT.C1453;
  heroes.HeroFlightDirection.values = C1454 || CT.C1454;
  var tag$ = dart.privateName(heroes, "Hero.tag");
  var createRectTween$ = dart.privateName(heroes, "Hero.createRectTween");
  var child$52 = dart.privateName(heroes, "Hero.child");
  var flightShuttleBuilder$ = dart.privateName(heroes, "Hero.flightShuttleBuilder");
  var placeholderBuilder$ = dart.privateName(heroes, "Hero.placeholderBuilder");
  var transitionOnUserGestures$ = dart.privateName(heroes, "Hero.transitionOnUserGestures");
  heroes.Hero = class Hero extends framework.StatefulWidget {
    get tag() {
      return this[tag$];
    }
    set tag(value) {
      super.tag = value;
    }
    get createRectTween() {
      return this[createRectTween$];
    }
    set createRectTween(value) {
      super.createRectTween = value;
    }
    get child() {
      return this[child$52];
    }
    set child(value) {
      super.child = value;
    }
    get flightShuttleBuilder() {
      return this[flightShuttleBuilder$];
    }
    set flightShuttleBuilder(value) {
      super.flightShuttleBuilder = value;
    }
    get placeholderBuilder() {
      return this[placeholderBuilder$];
    }
    set placeholderBuilder(value) {
      super.placeholderBuilder = value;
    }
    get transitionOnUserGestures() {
      return this[transitionOnUserGestures$];
    }
    set transitionOnUserGestures(value) {
      super.transitionOnUserGestures = value;
    }
    static _allHeroesFor(context, isUserGestureTransition, navigator) {
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 258, 12, "context != null");
      if (!(isUserGestureTransition != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 259, 12, "isUserGestureTransition != null");
      if (!(navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 260, 12, "navigator != null");
      let result = new (LinkedMapOfObject$_HeroState()).new();
      function inviteHero(hero, tag) {
        if (!dart.test(dart.fn(() => {
          if (dart.test(result[$containsKey](tag))) {
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("There are multiple heroes that share the same tag within a subtree."), new assertions.ErrorDescription.new("Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), " + "each Hero must have a unique non-null tag.\n" + "In this case, multiple heroes had the following tag: " + dart.str(tag) + "\n"), new (DiagnosticsPropertyOfStatefulElement()).new("Here is the subtree for one of the offending heroes", hero, {linePrefix: "# ", style: diagnostics$.DiagnosticsTreeStyle.dense})])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 264, 14, "() {\r\n        if (result.containsKey(tag)) {\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('There are multiple heroes that share the same tag within a subtree.'),\r\n            ErrorDescription(\r\n              'Within each subtree for which heroes are to be animated (i.e. a PageRoute subtree), '\r\n              'each Hero must have a unique non-null tag.\\n'\r\n              'In this case, multiple heroes had the following tag: $tag\\n'\r\n            ),\r\n            DiagnosticsProperty<StatefulElement>('Here is the subtree for one of the offending heroes', hero, linePrefix: '# ', style: DiagnosticsTreeStyle.dense),\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        let heroWidget = heroes.Hero.as(hero.widget);
        let heroState = heroes._HeroState.as(hero.state);
        if (!dart.test(isUserGestureTransition) || dart.test(heroWidget.transitionOnUserGestures)) {
          result[$_set](tag, heroState);
        } else {
          heroState.ensurePlaceholderIsHidden();
        }
      }
      dart.fn(inviteHero, StatefulElementAndObjectTovoid());
      function visitor(element) {
        let widget = element.widget;
        if (heroes.Hero.is(widget)) {
          let hero = framework.StatefulElement.as(element);
          let tag = widget.tag;
          if (!(tag != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 294, 16, "tag != null");
          if (dart.equals(navigator$.Navigator.of(hero), navigator)) {
            inviteHero(hero, tag);
          } else {
            let heroRoute = routes.ModalRoute.of(core.Object, hero);
            if (heroRoute != null && pages.PageRoute.is(heroRoute) && dart.test(heroRoute.isCurrent)) {
              inviteHero(hero, tag);
            }
          }
        }
        element.visitChildren(visitor);
      }
      dart.fn(visitor, ElementTovoid());
      context.visitChildElements(visitor);
      return result;
    }
    createState() {
      return new heroes._HeroState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfObject()).new("tag", this.tag));
    }
  };
  (heroes.Hero.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    let flightShuttleBuilder = opts && 'flightShuttleBuilder' in opts ? opts.flightShuttleBuilder : null;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let transitionOnUserGestures = opts && 'transitionOnUserGestures' in opts ? opts.transitionOnUserGestures : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[tag$] = tag;
    this[createRectTween$] = createRectTween;
    this[flightShuttleBuilder$] = flightShuttleBuilder;
    this[placeholderBuilder$] = placeholderBuilder;
    this[transitionOnUserGestures$] = transitionOnUserGestures;
    this[child$52] = child;
    if (!(tag != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 165, 15, "tag != null");
    if (!(transitionOnUserGestures != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 166, 15, "transitionOnUserGestures != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 167, 15, "child != null");
    heroes.Hero.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = heroes.Hero.prototype;
  dart.addTypeTests(heroes.Hero);
  dart.setMethodSignature(heroes.Hero, () => ({
    __proto__: dart.getMethods(heroes.Hero.__proto__),
    createState: dart.fnType(heroes._HeroState, [])
  }));
  dart.setLibraryUri(heroes.Hero, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes.Hero, () => ({
    __proto__: dart.getFields(heroes.Hero.__proto__),
    tag: dart.finalFieldType(core.Object),
    createRectTween: dart.finalFieldType(dart.fnType(tween.Tween$(ui.Rect), [ui.Rect, ui.Rect])),
    child: dart.finalFieldType(framework.Widget),
    flightShuttleBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext])),
    placeholderBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, ui.Size, framework.Widget])),
    transitionOnUserGestures: dart.finalFieldType(core.bool)
  }));
  var _key$ = dart.privateName(heroes, "_key");
  var _placeholderSize = dart.privateName(heroes, "_placeholderSize");
  var _shouldIncludeChild = dart.privateName(heroes, "_shouldIncludeChild");
  var C1457;
  var C1458;
  var C1456;
  var C1455;
  var C1461;
  var C1462;
  var C1460;
  var C1459;
  var C1465;
  var C1466;
  var C1464;
  var C1463;
  var C1469;
  var C1470;
  var C1468;
  var C1467;
  var C1473;
  var C1474;
  var C1475;
  var C1472;
  var C1471;
  heroes._HeroState = class _HeroState extends framework.State$(heroes.Hero) {
    startFlight(opts) {
      let shouldIncludedChildInPlaceholder = opts && 'shouldIncludedChildInPlaceholder' in opts ? opts.shouldIncludedChildInPlaceholder : false;
      this[_shouldIncludeChild] = shouldIncludedChildInPlaceholder;
      if (!dart.test(this.mounted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 347, 12, "mounted");
      let box = box$.RenderBox.as(this.context.findRenderObject());
      if (!(box != null && dart.test(box.hasSize))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 349, 12, "box != null && box.hasSize");
      this.setState(dart.fn(() => {
        this[_placeholderSize] = box.size;
      }, VoidToNull()));
    }
    ensurePlaceholderIsHidden() {
      if (dart.test(this.mounted)) {
        this.setState(dart.fn(() => {
          this[_placeholderSize] = null;
        }, VoidToNull()));
      }
    }
    endFlight(opts) {
      let keepPlaceholder = opts && 'keepPlaceholder' in opts ? opts.keepPlaceholder : false;
      if (!dart.test(keepPlaceholder)) {
        this.ensurePlaceholderIsHidden();
      }
    }
    build(context) {
      let t36, t36$;
      if (!(context.findAncestorWidgetOfExactType(heroes.Hero) == null)) dart.assertFailed("A Hero widget cannot be the descendant of another Hero widget.", "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 375, 7, "context.findAncestorWidgetOfExactType<Hero>() == null");
      let showPlaceholder = this[_placeholderSize] != null;
      if (showPlaceholder && this.widget.placeholderBuilder != null) {
        return this.widget.placeholderBuilder(context, this[_placeholderSize], this.widget.child);
      }
      if (showPlaceholder && !dart.test(this[_shouldIncludeChild])) {
        return new basic.SizedBox.new({width: this[_placeholderSize].width, height: this[_placeholderSize].height, $creationLocationd_0dea112b090073317d4: C1455 || CT.C1455});
      }
      return new basic.SizedBox.new({width: (t36 = this[_placeholderSize], t36 == null ? null : t36.width), height: (t36$ = this[_placeholderSize], t36$ == null ? null : t36$.height), child: new basic.Offstage.new({offstage: showPlaceholder, child: new ticker_provider.TickerMode.new({enabled: !showPlaceholder, child: new basic.KeyedSubtree.new({key: this[_key$], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1459 || CT.C1459}), $creationLocationd_0dea112b090073317d4: C1463 || CT.C1463}), $creationLocationd_0dea112b090073317d4: C1467 || CT.C1467}), $creationLocationd_0dea112b090073317d4: C1471 || CT.C1471});
    }
  };
  (heroes._HeroState.new = function() {
    this[_key$] = GlobalKeyOfStateOfStatefulWidget().new();
    this[_placeholderSize] = null;
    this[_shouldIncludeChild] = true;
    heroes._HeroState.__proto__.new.call(this);
    ;
  }).prototype = heroes._HeroState.prototype;
  dart.addTypeTests(heroes._HeroState);
  dart.setMethodSignature(heroes._HeroState, () => ({
    __proto__: dart.getMethods(heroes._HeroState.__proto__),
    startFlight: dart.fnType(dart.void, [], {shouldIncludedChildInPlaceholder: core.bool}, {}),
    ensurePlaceholderIsHidden: dart.fnType(dart.void, []),
    endFlight: dart.fnType(dart.void, [], {keepPlaceholder: core.bool}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(heroes._HeroState, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes._HeroState, () => ({
    __proto__: dart.getFields(heroes._HeroState.__proto__),
    [_key$]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [_placeholderSize]: dart.fieldType(ui.Size),
    [_shouldIncludeChild]: dart.fieldType(core.bool)
  }));
  heroes._HeroFlightManifest = class _HeroFlightManifest extends core.Object {
    get tag() {
      return this.fromHero.widget.tag;
    }
    get animation() {
      return new animations.CurvedAnimation.new({parent: dart.equals(this.type, heroes.HeroFlightDirection.push) ? this.toRoute.animation : this.fromRoute.animation, curve: curves.Curves.fastOutSlowIn, reverseCurve: dart.test(this.isDiverted) ? null : curves.Curves.fastOutSlowIn.flipped});
    }
    toString() {
      return "_HeroFlightManifest(" + dart.str(this.type) + " tag: " + dart.str(this.tag) + " from route: " + dart.str(this.fromRoute.settings) + " " + "to route: " + dart.str(this.toRoute.settings) + " with hero: " + dart.str(this.fromHero) + " to " + dart.str(this.toHero) + ")";
    }
  };
  (heroes._HeroFlightManifest.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let overlay = opts && 'overlay' in opts ? opts.overlay : null;
    let navigatorRect = opts && 'navigatorRect' in opts ? opts.navigatorRect : null;
    let fromRoute = opts && 'fromRoute' in opts ? opts.fromRoute : null;
    let toRoute = opts && 'toRoute' in opts ? opts.toRoute : null;
    let fromHero = opts && 'fromHero' in opts ? opts.fromHero : null;
    let toHero = opts && 'toHero' in opts ? opts.toHero : null;
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    let shuttleBuilder = opts && 'shuttleBuilder' in opts ? opts.shuttleBuilder : null;
    let isUserGestureTransition = opts && 'isUserGestureTransition' in opts ? opts.isUserGestureTransition : null;
    let isDiverted = opts && 'isDiverted' in opts ? opts.isDiverted : null;
    this.type = type;
    this.overlay = overlay;
    this.navigatorRect = navigatorRect;
    this.fromRoute = fromRoute;
    this.toRoute = toRoute;
    this.fromHero = fromHero;
    this.toHero = toHero;
    this.createRectTween = createRectTween;
    this.shuttleBuilder = shuttleBuilder;
    this.isUserGestureTransition = isUserGestureTransition;
    this.isDiverted = isDiverted;
    if (!dart.equals(fromHero.widget.tag, toHero.widget.tag)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 420, 15, "fromHero.widget.tag == toHero.widget.tag");
    ;
  }).prototype = heroes._HeroFlightManifest.prototype;
  dart.addTypeTests(heroes._HeroFlightManifest);
  dart.setGetterSignature(heroes._HeroFlightManifest, () => ({
    __proto__: dart.getGetters(heroes._HeroFlightManifest.__proto__),
    tag: core.Object,
    animation: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(heroes._HeroFlightManifest, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes._HeroFlightManifest, () => ({
    __proto__: dart.getFields(heroes._HeroFlightManifest.__proto__),
    type: dart.finalFieldType(heroes.HeroFlightDirection),
    overlay: dart.finalFieldType(overlay$.OverlayState),
    navigatorRect: dart.finalFieldType(ui.Rect),
    fromRoute: dart.finalFieldType(pages.PageRoute),
    toRoute: dart.finalFieldType(pages.PageRoute),
    fromHero: dart.finalFieldType(heroes._HeroState),
    toHero: dart.finalFieldType(heroes._HeroState),
    createRectTween: dart.finalFieldType(dart.fnType(tween.Tween$(ui.Rect), [ui.Rect, ui.Rect])),
    shuttleBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), heroes.HeroFlightDirection, framework.BuildContext, framework.BuildContext])),
    isUserGestureTransition: dart.finalFieldType(core.bool),
    isDiverted: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(heroes._HeroFlightManifest, ['toString']);
  var _heroOpacity = dart.privateName(heroes, "_heroOpacity");
  var _proxyAnimation = dart.privateName(heroes, "_proxyAnimation");
  var _aborted = dart.privateName(heroes, "_aborted");
  var _handleAnimationUpdate = dart.privateName(heroes, "_handleAnimationUpdate");
  var _doCreateRectTween = dart.privateName(heroes, "_doCreateRectTween");
  var C1478;
  var C1479;
  var C1477;
  var C1476;
  var C1482;
  var C1481;
  var C1480;
  var C1485;
  var C1484;
  var C1483;
  var C1488;
  var C1489;
  var C1490;
  var C1491;
  var C1492;
  var C1487;
  var C1486;
  var C1495;
  var C1496;
  var C1497;
  var C1494;
  var C1493;
  var _buildOverlay = dart.privateName(heroes, "_buildOverlay");
  heroes._HeroFlight = class _HeroFlight extends core.Object {
    [_doCreateRectTween](begin, end) {
      let t36;
      let createRectTween = (t36 = this.manifest.toHero.widget.createRectTween, t36 == null ? this.manifest.createRectTween : t36);
      if (createRectTween != null) return createRectTween(begin, end);
      return new tween.RectTween.new({begin: begin, end: end});
    }
    [_buildOverlay](context) {
      if (!(this.manifest != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 479, 12, "manifest != null");
      this.shuttle == null ? this.shuttle = this.manifest.shuttleBuilder(context, this.manifest.animation, this.manifest.type, this.manifest.fromHero.context, this.manifest.toHero.context) : null;
      if (!(this.shuttle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 487, 12, "shuttle != null");
      return new transitions.AnimatedBuilder.new({animation: this[_proxyAnimation], child: this.shuttle, builder: dart.fn((context, child) => {
          let t36, t36$;
          let toHeroBox = box$.RenderBox.as((t36 = this.manifest.toHero.context, t36 == null ? null : t36.findRenderObject()));
          if (dart.test(this[_aborted]) || toHeroBox == null || !dart.test(toHeroBox.attached)) {
            if (dart.test(this[_heroOpacity].isCompleted)) {
              this[_heroOpacity] = this[_proxyAnimation].drive(core.double, heroes._HeroFlight._reverseTween.chain(new tween.CurveTween.new({curve: new curves.Interval.new(this[_proxyAnimation].value, 1.0)})));
            }
          } else if (dart.test(toHeroBox.hasSize)) {
            let finalRouteBox = box$.RenderBox.as((t36$ = this.manifest.toRoute.subtreeContext, t36$ == null ? null : t36$.findRenderObject()));
            let toHeroOrigin = toHeroBox.localToGlobal(ui.Offset.zero, {ancestor: finalRouteBox});
            if (!dart.equals(toHeroOrigin, this.heroRectTween.end.topLeft)) {
              let heroRectEnd = toHeroOrigin['&'](this.heroRectTween.end.size);
              this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.begin, heroRectEnd);
            }
          }
          let rect = this.heroRectTween.evaluate(this[_proxyAnimation]);
          let size = this.manifest.navigatorRect.size;
          let offsets = stack.RelativeRect.fromSize(rect, size);
          return new basic.Positioned.new({top: offsets.top, right: offsets.right, bottom: offsets.bottom, left: offsets.left, child: new basic.IgnorePointer.new({child: new basic.RepaintBoundary.new({child: new basic.Opacity.new({opacity: this[_heroOpacity].value, child: child, $creationLocationd_0dea112b090073317d4: C1476 || CT.C1476}), $creationLocationd_0dea112b090073317d4: C1480 || CT.C1480}), $creationLocationd_0dea112b090073317d4: C1483 || CT.C1483}), $creationLocationd_0dea112b090073317d4: C1486 || CT.C1486});
        }, BuildContextAndWidgetToPositioned()), $creationLocationd_0dea112b090073317d4: C1493 || CT.C1493});
    }
    [_handleAnimationUpdate](status) {
      if (dart.equals(status, animation$.AnimationStatus.completed) || dart.equals(status, animation$.AnimationStatus.dismissed)) {
        this[_proxyAnimation].parent = null;
        if (!(this.overlayEntry != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 539, 14, "overlayEntry != null");
        this.overlayEntry.remove();
        this.overlayEntry = null;
        this.manifest.fromHero.endFlight({keepPlaceholder: dart.equals(status, animation$.AnimationStatus.completed)});
        this.manifest.toHero.endFlight({keepPlaceholder: dart.equals(status, animation$.AnimationStatus.dismissed)});
        this.onFlightEnded(this);
      }
    }
    start(initialManifest) {
      if (!!dart.test(this[_aborted])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 555, 12, "!_aborted");
      if (!dart.test(dart.fn(() => {
        let initial = initialManifest.animation;
        if (!(initial != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 558, 14, "initial != null");
        let type = initialManifest.type;
        if (!(type != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 560, 14, "type != null");
        switch (type) {
          case C1453 || CT.C1453:
          {
            return initial.value === 1.0 && dart.test(initialManifest.isUserGestureTransition) ? dart.equals(initial.status, animation$.AnimationStatus.completed) : dart.equals(initial.status, animation$.AnimationStatus.reverse);
          }
          case C1452 || CT.C1452:
          {
            return initial.value === 0.0 && dart.equals(initial.status, animation$.AnimationStatus.forward);
          }
        }
        return null;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 556, 12, "() {\r\n      final Animation<double> initial = initialManifest.animation;\r\n      assert(initial != null);\r\n      final HeroFlightDirection type = initialManifest.type;\r\n      assert(type != null);\r\n      switch (type) {\r\n        case HeroFlightDirection.pop:\r\n          return initial.value == 1.0 && initialManifest.isUserGestureTransition\r\n              // During user gesture transitions, the animation controller isn't\r\n              // driving the reverse transition, but should still be in a previously\r\n              // completed stage with the initial value at 1.0.\r\n              ? initial.status == AnimationStatus.completed\r\n              : initial.status == AnimationStatus.reverse;\r\n        case HeroFlightDirection.push:\r\n          return initial.value == 0.0 && initial.status == AnimationStatus.forward;\r\n      }\r\n      return null;\r\n    }()");
      this.manifest = initialManifest;
      if (dart.equals(this.manifest.type, heroes.HeroFlightDirection.pop))
        this[_proxyAnimation].parent = new animations.ReverseAnimation.new(this.manifest.animation);
      else
        this[_proxyAnimation].parent = this.manifest.animation;
      this.manifest.fromHero.startFlight({shouldIncludedChildInPlaceholder: dart.equals(this.manifest.type, heroes.HeroFlightDirection.push)});
      this.manifest.toHero.startFlight();
      this.heroRectTween = this[_doCreateRectTween](heroes._boundingBoxFor(this.manifest.fromHero.context, this.manifest.fromRoute.subtreeContext), heroes._boundingBoxFor(this.manifest.toHero.context, this.manifest.toRoute.subtreeContext));
      this.overlayEntry = new overlay$.OverlayEntry.new({builder: dart.bind(this, _buildOverlay)});
      this.manifest.overlay.insert(this.overlayEntry);
    }
    divert(newManifest) {
      if (!dart.equals(this.manifest.tag, newManifest.tag)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 597, 12, "manifest.tag == newManifest.tag");
      if (dart.equals(this.manifest.type, heroes.HeroFlightDirection.push) && dart.equals(newManifest.type, heroes.HeroFlightDirection.pop)) {
        if (!dart.equals(newManifest.animation.status, animation$.AnimationStatus.reverse)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 600, 14, "newManifest.animation.status == AnimationStatus.reverse");
        if (!dart.equals(this.manifest.fromHero, newManifest.toHero)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 601, 14, "manifest.fromHero == newManifest.toHero");
        if (!dart.equals(this.manifest.toHero, newManifest.fromHero)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 602, 14, "manifest.toHero == newManifest.fromHero");
        if (!dart.equals(this.manifest.fromRoute, newManifest.toRoute)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 603, 14, "manifest.fromRoute == newManifest.toRoute");
        if (!dart.equals(this.manifest.toRoute, newManifest.fromRoute)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 604, 14, "manifest.toRoute == newManifest.fromRoute");
        this[_proxyAnimation].parent = new animations.ReverseAnimation.new(newManifest.animation);
        this.heroRectTween = new (ReverseTweenOfRect()).new(this.heroRectTween);
      } else if (dart.equals(this.manifest.type, heroes.HeroFlightDirection.pop) && dart.equals(newManifest.type, heroes.HeroFlightDirection.push)) {
        if (!dart.equals(newManifest.animation.status, animation$.AnimationStatus.forward)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 615, 14, "newManifest.animation.status == AnimationStatus.forward");
        if (!dart.equals(this.manifest.toHero, newManifest.fromHero)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 616, 14, "manifest.toHero == newManifest.fromHero");
        if (!dart.equals(this.manifest.toRoute, newManifest.fromRoute)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 617, 14, "manifest.toRoute == newManifest.fromRoute");
        this[_proxyAnimation].parent = newManifest.animation.drive(core.double, new (TweenOfdouble()).new({begin: this.manifest.animation.value, end: 1.0}));
        if (!dart.equals(this.manifest.fromHero, newManifest.toHero)) {
          this.manifest.fromHero.endFlight({keepPlaceholder: true});
          newManifest.toHero.startFlight();
          this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.end, heroes._boundingBoxFor(newManifest.toHero.context, newManifest.toRoute.subtreeContext));
        } else {
          this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.end, this.heroRectTween.begin);
        }
      } else {
        if (!!dart.equals(this.manifest.fromHero, newManifest.fromHero)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 640, 14, "manifest.fromHero != newManifest.fromHero");
        if (!!dart.equals(this.manifest.toHero, newManifest.toHero)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 641, 14, "manifest.toHero != newManifest.toHero");
        this.heroRectTween = this[_doCreateRectTween](this.heroRectTween.evaluate(this[_proxyAnimation]), heroes._boundingBoxFor(newManifest.toHero.context, newManifest.toRoute.subtreeContext));
        this.shuttle = null;
        if (dart.equals(newManifest.type, heroes.HeroFlightDirection.pop))
          this[_proxyAnimation].parent = new animations.ReverseAnimation.new(newManifest.animation);
        else
          this[_proxyAnimation].parent = newManifest.animation;
        this.manifest.fromHero.endFlight({keepPlaceholder: true});
        this.manifest.toHero.endFlight({keepPlaceholder: true});
        newManifest.fromHero.startFlight({shouldIncludedChildInPlaceholder: dart.equals(newManifest.type, heroes.HeroFlightDirection.push)});
        newManifest.toHero.startFlight();
        this.overlayEntry.markNeedsBuild();
      }
      this[_aborted] = false;
      this.manifest = newManifest;
    }
    abort() {
      this[_aborted] = true;
    }
    toString() {
      let from = this.manifest.fromRoute.settings;
      let to = this.manifest.toRoute.settings;
      let tag = this.manifest.tag;
      return "HeroFlight(for: " + dart.str(tag) + ", from: " + dart.str(from) + ", to: " + dart.str(to) + " " + dart.str(this[_proxyAnimation].parent) + ")";
    }
  };
  (heroes._HeroFlight.new = function(onFlightEnded) {
    let t36;
    this.heroRectTween = null;
    this.shuttle = null;
    this[_heroOpacity] = animations.kAlwaysCompleteAnimation;
    this[_proxyAnimation] = null;
    this.manifest = null;
    this.overlayEntry = null;
    this[_aborted] = false;
    this.onFlightEnded = onFlightEnded;
    this[_proxyAnimation] = (t36 = new animations.ProxyAnimation.new(), t36.addStatusListener(dart.bind(this, _handleAnimationUpdate)), t36);
  }).prototype = heroes._HeroFlight.prototype;
  dart.addTypeTests(heroes._HeroFlight);
  dart.setMethodSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getMethods(heroes._HeroFlight.__proto__),
    [_doCreateRectTween]: dart.fnType(tween.Tween$(ui.Rect), [ui.Rect, ui.Rect]),
    [_buildOverlay]: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_handleAnimationUpdate]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    start: dart.fnType(dart.void, [heroes._HeroFlightManifest]),
    divert: dart.fnType(dart.void, [heroes._HeroFlightManifest]),
    abort: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(heroes._HeroFlight, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes._HeroFlight, () => ({
    __proto__: dart.getFields(heroes._HeroFlight.__proto__),
    onFlightEnded: dart.finalFieldType(dart.fnType(dart.void, [heroes._HeroFlight])),
    heroRectTween: dart.fieldType(tween.Tween$(ui.Rect)),
    shuttle: dart.fieldType(framework.Widget),
    [_heroOpacity]: dart.fieldType(animation$.Animation$(core.double)),
    [_proxyAnimation]: dart.fieldType(animations.ProxyAnimation),
    manifest: dart.fieldType(heroes._HeroFlightManifest),
    overlayEntry: dart.fieldType(overlay$.OverlayEntry),
    [_aborted]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(heroes._HeroFlight, ['toString']);
  dart.defineLazy(heroes._HeroFlight, {
    /*heroes._HeroFlight._reverseTween*/get _reverseTween() {
      return new (TweenOfdouble()).new({begin: 1.0, end: 0.0});
    }
  });
  var _flights = dart.privateName(heroes, "_flights");
  var _maybeStartHeroTransition = dart.privateName(heroes, "_maybeStartHeroTransition");
  var _startHeroTransition = dart.privateName(heroes, "_startHeroTransition");
  var _handleFlightEnded = dart.privateName(heroes, "_handleFlightEnded");
  var createRectTween$0 = dart.privateName(heroes, "HeroController.createRectTween");
  heroes.HeroController = class HeroController extends navigator$.NavigatorObserver {
    get createRectTween() {
      return this[createRectTween$0];
    }
    set createRectTween(value) {
      super.createRectTween = value;
    }
    didPush(route, previousRoute) {
      if (!(this.navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 705, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 706, 12, "route != null");
      this[_maybeStartHeroTransition](previousRoute, route, heroes.HeroFlightDirection.push, false);
    }
    didPop(route, previousRoute) {
      if (!(this.navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 712, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 713, 12, "route != null");
      if (!dart.test(this.navigator.userGestureInProgress)) this[_maybeStartHeroTransition](route, previousRoute, heroes.HeroFlightDirection.pop, false);
    }
    didReplace(opts) {
      let t36;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      if (!(this.navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 722, 12, "navigator != null");
      if (dart.equals((t36 = newRoute, t36 == null ? null : t36.isCurrent), true)) {
        this[_maybeStartHeroTransition](oldRoute, newRoute, heroes.HeroFlightDirection.push, false);
      }
    }
    didStartUserGesture(route, previousRoute) {
      if (!(this.navigator != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 731, 12, "navigator != null");
      if (!(route != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 732, 12, "route != null");
      this[_maybeStartHeroTransition](route, previousRoute, heroes.HeroFlightDirection.pop, true);
    }
    didStopUserGesture() {
      if (dart.test(this.navigator.userGestureInProgress)) return;
      function isInvalidFlight(flight) {
        return dart.test(flight.manifest.isUserGestureTransition) && dart.equals(flight.manifest.type, heroes.HeroFlightDirection.pop) && dart.test(flight[_proxyAnimation].isDismissed);
      }
      dart.fn(isInvalidFlight, _HeroFlightTobool());
      let invalidFlights = this[_flights][$values][$where](isInvalidFlight)[$toList]({growable: false});
      for (let flight of invalidFlights) {
        flight[_handleAnimationUpdate](animation$.AnimationStatus.dismissed);
      }
    }
    [_maybeStartHeroTransition](fromRoute, toRoute, flightType, isUserGestureTransition) {
      if (!dart.equals(toRoute, fromRoute) && pages.PageRoute.is(toRoute) && pages.PageRoute.is(fromRoute)) {
        let from = fromRoute;
        let to = toRoute;
        let animation = dart.equals(flightType, heroes.HeroFlightDirection.push) ? to.animation : from.animation;
        switch (flightType) {
          case C1453 || CT.C1453:
          {
            if (animation.value === 0.0) {
              return;
            }
            break;
          }
          case C1452 || CT.C1452:
          {
            if (animation.value === 1.0) {
              return;
            }
            break;
          }
        }
        if (dart.test(isUserGestureTransition) && dart.equals(flightType, heroes.HeroFlightDirection.pop) && dart.test(to.maintainState)) {
          this[_startHeroTransition](from, to, animation, flightType, isUserGestureTransition);
        } else {
          to.offstage = to.animation.value === 0.0;
          binding$5.WidgetsBinding.instance.addPostFrameCallback(dart.fn(value => {
            this[_startHeroTransition](from, to, animation, flightType, isUserGestureTransition);
          }, DurationToNull()));
        }
      }
    }
    [_startHeroTransition](from, to, animation, flightType, isUserGestureTransition) {
      let t36, t36$, t36$0;
      if (this.navigator == null || from.subtreeContext == null || to.subtreeContext == null) {
        to.offstage = false;
        return;
      }
      let navigatorRect = heroes._boundingBoxFor(this.navigator.context);
      let fromHeroes = heroes.Hero._allHeroesFor(from.subtreeContext, isUserGestureTransition, this.navigator);
      let toHeroes = heroes.Hero._allHeroesFor(to.subtreeContext, isUserGestureTransition, this.navigator);
      to.offstage = false;
      for (let tag of fromHeroes[$keys]) {
        if (toHeroes[$_get](tag) != null) {
          let fromShuttleBuilder = fromHeroes[$_get](tag).widget.flightShuttleBuilder;
          let toShuttleBuilder = toHeroes[$_get](tag).widget.flightShuttleBuilder;
          let isDiverted = this[_flights][$_get](tag) != null;
          let manifest = new heroes._HeroFlightManifest.new({type: flightType, overlay: this.navigator.overlay, navigatorRect: navigatorRect, fromRoute: from, toRoute: to, fromHero: fromHeroes[$_get](tag), toHero: toHeroes[$_get](tag), createRectTween: this.createRectTween, shuttleBuilder: (t36$ = (t36 = toShuttleBuilder, t36 == null ? fromShuttleBuilder : t36), t36$ == null ? heroes.HeroController._defaultHeroFlightShuttleBuilder : t36$), isUserGestureTransition: isUserGestureTransition, isDiverted: isDiverted});
          if (isDiverted)
            this[_flights][$_get](tag).divert(manifest);
          else
            this[_flights][$_set](tag, (t36$0 = new heroes._HeroFlight.new(dart.bind(this, _handleFlightEnded)), t36$0.start(manifest), t36$0));
        } else if (this[_flights][$_get](tag) != null) {
          this[_flights][$_get](tag).abort();
        }
      }
      for (let tag of toHeroes[$keys]) {
        if (fromHeroes[$_get](tag) == null) toHeroes[$_get](tag).ensurePlaceholderIsHidden();
      }
    }
    [_handleFlightEnded](flight) {
      this[_flights][$remove](flight.manifest.tag);
    }
  };
  (heroes.HeroController.new = function(opts) {
    let createRectTween = opts && 'createRectTween' in opts ? opts.createRectTween : null;
    this[_flights] = new (LinkedMapOfObject$_HeroFlight()).new();
    this[createRectTween$0] = createRectTween;
    heroes.HeroController.__proto__.new.call(this);
    ;
  }).prototype = heroes.HeroController.prototype;
  dart.addTypeTests(heroes.HeroController);
  dart.setMethodSignature(heroes.HeroController, () => ({
    __proto__: dart.getMethods(heroes.HeroController.__proto__),
    [_maybeStartHeroTransition]: dart.fnType(dart.void, [navigator$.Route, navigator$.Route, heroes.HeroFlightDirection, core.bool]),
    [_startHeroTransition]: dart.fnType(dart.void, [pages.PageRoute, pages.PageRoute, animation$.Animation$(core.double), heroes.HeroFlightDirection, core.bool]),
    [_handleFlightEnded]: dart.fnType(dart.void, [heroes._HeroFlight])
  }));
  dart.setLibraryUri(heroes.HeroController, "package:flutter/src/widgets/heroes.dart");
  dart.setFieldSignature(heroes.HeroController, () => ({
    __proto__: dart.getFields(heroes.HeroController.__proto__),
    createRectTween: dart.finalFieldType(dart.fnType(tween.Tween$(ui.Rect), [ui.Rect, ui.Rect])),
    [_flights]: dart.finalFieldType(core.Map$(core.Object, heroes._HeroFlight))
  }));
  dart.defineLazy(heroes.HeroController, {
    /*heroes.HeroController._defaultHeroFlightShuttleBuilder*/get _defaultHeroFlightShuttleBuilder() {
      return dart.fn((flightContext, animation, flightDirection, fromHeroContext, toHeroContext) => {
        let toHero = heroes.Hero.as(toHeroContext.widget);
        return toHero.child;
      }, BuildContextAndAnimationOfdoubleAndHeroFlightDirection__ToWidget());
    }
  });
  heroes._boundingBoxFor = function _boundingBoxFor(context, ancestorContext = null) {
    let t36;
    let box = box$.RenderBox.as(context.findRenderObject());
    if (!(box != null && dart.test(box.hasSize))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/heroes.dart", 78, 10, "box != null && box.hasSize");
    return matrix_utils.MatrixUtils.transformRect(box.getTransformTo((t36 = ancestorContext, t36 == null ? null : t36.findRenderObject())), ui.Offset.zero['&'](box.size));
  };
  var _name$30 = dart.privateName(dismissible, "_name");
  var C1498;
  var C1499;
  var C1500;
  var C1501;
  var C1502;
  var C1503;
  var C1504;
  dismissible.DismissDirection = class DismissDirection extends core.Object {
    toString() {
      return this[_name$30];
    }
  };
  (dismissible.DismissDirection.new = function(index, _name) {
    this.index = index;
    this[_name$30] = _name;
    ;
  }).prototype = dismissible.DismissDirection.prototype;
  dart.addTypeTests(dismissible.DismissDirection);
  dart.setLibraryUri(dismissible.DismissDirection, "package:flutter/src/widgets/dismissible.dart");
  dart.setFieldSignature(dismissible.DismissDirection, () => ({
    __proto__: dart.getFields(dismissible.DismissDirection.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$30]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(dismissible.DismissDirection, ['toString']);
  dismissible.DismissDirection.vertical = C1498 || CT.C1498;
  dismissible.DismissDirection.horizontal = C1499 || CT.C1499;
  dismissible.DismissDirection.endToStart = C1500 || CT.C1500;
  dismissible.DismissDirection.startToEnd = C1501 || CT.C1501;
  dismissible.DismissDirection.up = C1502 || CT.C1502;
  dismissible.DismissDirection.down = C1503 || CT.C1503;
  dismissible.DismissDirection.values = C1504 || CT.C1504;
  var C1505;
  var child$53 = dart.privateName(dismissible, "Dismissible.child");
  var background$ = dart.privateName(dismissible, "Dismissible.background");
  var secondaryBackground$ = dart.privateName(dismissible, "Dismissible.secondaryBackground");
  var confirmDismiss$ = dart.privateName(dismissible, "Dismissible.confirmDismiss");
  var onResize$ = dart.privateName(dismissible, "Dismissible.onResize");
  var onDismissed$ = dart.privateName(dismissible, "Dismissible.onDismissed");
  var direction$5 = dart.privateName(dismissible, "Dismissible.direction");
  var resizeDuration$ = dart.privateName(dismissible, "Dismissible.resizeDuration");
  var dismissThresholds$ = dart.privateName(dismissible, "Dismissible.dismissThresholds");
  var movementDuration$ = dart.privateName(dismissible, "Dismissible.movementDuration");
  var crossAxisEndOffset$ = dart.privateName(dismissible, "Dismissible.crossAxisEndOffset");
  var dragStartBehavior$7 = dart.privateName(dismissible, "Dismissible.dragStartBehavior");
  dismissible.Dismissible = class Dismissible extends framework.StatefulWidget {
    get child() {
      return this[child$53];
    }
    set child(value) {
      super.child = value;
    }
    get background() {
      return this[background$];
    }
    set background(value) {
      super.background = value;
    }
    get secondaryBackground() {
      return this[secondaryBackground$];
    }
    set secondaryBackground(value) {
      super.secondaryBackground = value;
    }
    get confirmDismiss() {
      return this[confirmDismiss$];
    }
    set confirmDismiss(value) {
      super.confirmDismiss = value;
    }
    get onResize() {
      return this[onResize$];
    }
    set onResize(value) {
      super.onResize = value;
    }
    get onDismissed() {
      return this[onDismissed$];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get direction() {
      return this[direction$5];
    }
    set direction(value) {
      super.direction = value;
    }
    get resizeDuration() {
      return this[resizeDuration$];
    }
    set resizeDuration(value) {
      super.resizeDuration = value;
    }
    get dismissThresholds() {
      return this[dismissThresholds$];
    }
    set dismissThresholds(value) {
      super.dismissThresholds = value;
    }
    get movementDuration() {
      return this[movementDuration$];
    }
    set movementDuration(value) {
      super.movementDuration = value;
    }
    get crossAxisEndOffset() {
      return this[crossAxisEndOffset$];
    }
    set crossAxisEndOffset(value) {
      super.crossAxisEndOffset = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$7];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    createState() {
      return new dismissible._DismissibleState.new();
    }
  };
  (dismissible.Dismissible.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let secondaryBackground = opts && 'secondaryBackground' in opts ? opts.secondaryBackground : null;
    let confirmDismiss = opts && 'confirmDismiss' in opts ? opts.confirmDismiss : null;
    let onResize = opts && 'onResize' in opts ? opts.onResize : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let direction = opts && 'direction' in opts ? opts.direction : C1499 || CT.C1499;
    let resizeDuration = opts && 'resizeDuration' in opts ? opts.resizeDuration : C666 || CT.C666;
    let dismissThresholds = opts && 'dismissThresholds' in opts ? opts.dismissThresholds : C1505 || CT.C1505;
    let movementDuration = opts && 'movementDuration' in opts ? opts.movementDuration : C710 || CT.C710;
    let crossAxisEndOffset = opts && 'crossAxisEndOffset' in opts ? opts.crossAxisEndOffset : 0;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$53] = child;
    this[background$] = background;
    this[secondaryBackground$] = secondaryBackground;
    this[confirmDismiss$] = confirmDismiss;
    this[onResize$] = onResize;
    this[onDismissed$] = onDismissed;
    this[direction$5] = direction;
    this[resizeDuration$] = resizeDuration;
    this[dismissThresholds$] = dismissThresholds;
    this[movementDuration$] = movementDuration;
    this[crossAxisEndOffset$] = crossAxisEndOffset;
    this[dragStartBehavior$7] = dragStartBehavior;
    if (!(key != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 97, 15, "key != null");
    if (!(secondaryBackground == null || background != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 98, 15, "secondaryBackground == null || background != null");
    if (!(dragStartBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 99, 15, "dragStartBehavior != null");
    dismissible.Dismissible.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dismissible.Dismissible.prototype;
  dart.addTypeTests(dismissible.Dismissible);
  dart.setMethodSignature(dismissible.Dismissible, () => ({
    __proto__: dart.getMethods(dismissible.Dismissible.__proto__),
    createState: dart.fnType(dismissible._DismissibleState, [])
  }));
  dart.setLibraryUri(dismissible.Dismissible, "package:flutter/src/widgets/dismissible.dart");
  dart.setFieldSignature(dismissible.Dismissible, () => ({
    __proto__: dart.getFields(dismissible.Dismissible.__proto__),
    child: dart.finalFieldType(framework.Widget),
    background: dart.finalFieldType(framework.Widget),
    secondaryBackground: dart.finalFieldType(framework.Widget),
    confirmDismiss: dart.finalFieldType(dart.fnType(async.Future$(core.bool), [dismissible.DismissDirection])),
    onResize: dart.finalFieldType(dart.fnType(dart.void, [])),
    onDismissed: dart.finalFieldType(dart.fnType(dart.void, [dismissible.DismissDirection])),
    direction: dart.finalFieldType(dismissible.DismissDirection),
    resizeDuration: dart.finalFieldType(core.Duration),
    dismissThresholds: dart.finalFieldType(core.Map$(dismissible.DismissDirection, core.double)),
    movementDuration: dart.finalFieldType(core.Duration),
    crossAxisEndOffset: dart.finalFieldType(core.double),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  dismissible._DismissibleClipper = class _DismissibleClipper extends proxy_box.CustomClipper$(ui.Rect) {
    getClip(size) {
      if (!(this.axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 205, 12, "axis != null");
      switch (this.axis) {
        case C78 || CT.C78:
        {
          let offset = dart.notNull(this.moveAnimation.value.dx) * dart.notNull(size.width);
          if (offset < 0) return new ui.Rect.fromLTRB(dart.notNull(size.width) + offset, 0.0, size.width, size.height);
          return new ui.Rect.fromLTRB(0.0, 0.0, offset, size.height);
        }
        case C77 || CT.C77:
        {
          let offset = dart.notNull(this.moveAnimation.value.dy) * dart.notNull(size.height);
          if (offset < 0) return new ui.Rect.fromLTRB(0.0, dart.notNull(size.height) + offset, size.width, size.height);
          return new ui.Rect.fromLTRB(0.0, 0.0, size.width, offset);
        }
      }
      return null;
    }
    getApproximateClipRect(size) {
      return this.getClip(size);
    }
    shouldReclip(oldClipper) {
      dismissible._DismissibleClipper._check(oldClipper);
      return !dart.equals(oldClipper.axis, this.axis) || !dart.equals(oldClipper.moveAnimation.value, this.moveAnimation.value);
    }
  };
  (dismissible._DismissibleClipper.new = function(opts) {
    let axis = opts && 'axis' in opts ? opts.axis : null;
    let moveAnimation = opts && 'moveAnimation' in opts ? opts.moveAnimation : null;
    this.axis = axis;
    this.moveAnimation = moveAnimation;
    if (!(axis != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 196, 15, "axis != null");
    if (!(moveAnimation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 197, 15, "moveAnimation != null");
    dismissible._DismissibleClipper.__proto__.new.call(this, {reclip: moveAnimation});
    ;
  }).prototype = dismissible._DismissibleClipper.prototype;
  dart.addTypeTests(dismissible._DismissibleClipper);
  dart.setMethodSignature(dismissible._DismissibleClipper, () => ({
    __proto__: dart.getMethods(dismissible._DismissibleClipper.__proto__),
    getClip: dart.fnType(ui.Rect, [ui.Size]),
    shouldReclip: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(dismissible._DismissibleClipper, "package:flutter/src/widgets/dismissible.dart");
  dart.setFieldSignature(dismissible._DismissibleClipper, () => ({
    __proto__: dart.getFields(dismissible._DismissibleClipper.__proto__),
    axis: dart.finalFieldType(basic_types$.Axis),
    moveAnimation: dart.finalFieldType(animation$.Animation$(ui.Offset))
  }));
  var C1506;
  var C1507;
  var C1508;
  var C1509;
  dismissible._FlingGestureKind = class _FlingGestureKind extends core.Object {
    toString() {
      return this[_name$30];
    }
  };
  (dismissible._FlingGestureKind.new = function(index, _name) {
    this.index = index;
    this[_name$30] = _name;
    ;
  }).prototype = dismissible._FlingGestureKind.prototype;
  dart.addTypeTests(dismissible._FlingGestureKind);
  dart.setLibraryUri(dismissible._FlingGestureKind, "package:flutter/src/widgets/dismissible.dart");
  dart.setFieldSignature(dismissible._FlingGestureKind, () => ({
    __proto__: dart.getFields(dismissible._FlingGestureKind.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$30]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(dismissible._FlingGestureKind, ['toString']);
  dismissible._FlingGestureKind.none = C1506 || CT.C1506;
  dismissible._FlingGestureKind.forward = C1507 || CT.C1507;
  dismissible._FlingGestureKind.reverse = C1508 || CT.C1508;
  dismissible._FlingGestureKind.values = C1509 || CT.C1509;
  var _moveController = dart.privateName(dismissible, "_moveController");
  var _moveAnimation = dart.privateName(dismissible, "_moveAnimation");
  var _resizeController = dart.privateName(dismissible, "_resizeController");
  var _resizeAnimation = dart.privateName(dismissible, "_resizeAnimation");
  var _dragExtent = dart.privateName(dismissible, "_dragExtent");
  var _dragUnderway = dart.privateName(dismissible, "_dragUnderway");
  var _sizePriorToCollapse = dart.privateName(dismissible, "_sizePriorToCollapse");
  var _handleDismissStatusChanged = dart.privateName(dismissible, "_handleDismissStatusChanged");
  var _updateMoveAnimation = dart.privateName(dismissible, "_updateMoveAnimation");
  var _directionIsXAxis = dart.privateName(dismissible, "_directionIsXAxis");
  var _extentToDirection = dart.privateName(dismissible, "_extentToDirection");
  var _dismissDirection = dart.privateName(dismissible, "_dismissDirection");
  var _isActive = dart.privateName(dismissible, "_isActive");
  var _overallDragAxisExtent = dart.privateName(dismissible, "_overallDragAxisExtent");
  var _handleDragStart$0 = dart.privateName(dismissible, "_handleDragStart");
  var _handleDragUpdate$0 = dart.privateName(dismissible, "_handleDragUpdate");
  var _describeFlingGesture = dart.privateName(dismissible, "_describeFlingGesture");
  var _confirmStartResizeAnimation = dart.privateName(dismissible, "_confirmStartResizeAnimation");
  var _startResizeAnimation = dart.privateName(dismissible, "_startResizeAnimation");
  var _handleDragEnd$0 = dart.privateName(dismissible, "_handleDragEnd");
  var _handleResizeProgressChanged = dart.privateName(dismissible, "_handleResizeProgressChanged");
  var C1512;
  var C1513;
  var C1514;
  var C1511;
  var C1510;
  var C1517;
  var C1518;
  var C1519;
  var C1516;
  var C1515;
  var C1522;
  var C1521;
  var C1520;
  var C1525;
  var C1526;
  var C1524;
  var C1523;
  var C1529;
  var C1528;
  var C1527;
  var C1532;
  var C1531;
  var C1530;
  var C1535;
  var C1536;
  var C1537;
  var C1538;
  var C1539;
  var C1540;
  var C1541;
  var C1542;
  var C1543;
  var C1534;
  var C1533;
  const State_TickerProviderStateMixin$36$4 = class State_TickerProviderStateMixin extends framework.State$(dismissible.Dismissible) {};
  (State_TickerProviderStateMixin$36$4.new = function() {
    ticker_provider.TickerProviderStateMixin$(dismissible.Dismissible)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$4.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$4.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$4, ticker_provider.TickerProviderStateMixin$(dismissible.Dismissible));
  const State_AutomaticKeepAliveClientMixin$36$ = class State_AutomaticKeepAliveClientMixin extends State_TickerProviderStateMixin$36$4 {};
  (State_AutomaticKeepAliveClientMixin$36$.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(dismissible.Dismissible)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36$.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36$.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36$, automatic_keep_alive.AutomaticKeepAliveClientMixin$(dismissible.Dismissible));
  dismissible._DismissibleState = class _DismissibleState extends State_AutomaticKeepAliveClientMixin$36$ {
    initState() {
      let t36;
      super.initState();
      this[_moveController] = (t36 = new animation_controller.AnimationController.new({duration: this.widget.movementDuration, vsync: this}), t36.addStatusListener(dart.bind(this, _handleDismissStatusChanged)), t36);
      this[_updateMoveAnimation]();
    }
    get wantKeepAlive() {
      let t36, t36$;
      return dart.equals((t36 = this[_moveController], t36 == null ? null : t36.isAnimating), true) || dart.equals((t36$ = this[_resizeController], t36$ == null ? null : t36$.isAnimating), true);
    }
    dispose() {
      let t36;
      this[_moveController].dispose();
      t36 = this[_resizeController];
      t36 == null ? null : t36.dispose();
      super.dispose();
    }
    get [_directionIsXAxis]() {
      return dart.equals(this.widget.direction, dismissible.DismissDirection.horizontal) || dart.equals(this.widget.direction, dismissible.DismissDirection.endToStart) || dart.equals(this.widget.direction, dismissible.DismissDirection.startToEnd);
    }
    [_extentToDirection](extent) {
      if (extent === 0.0) return null;
      if (dart.test(this[_directionIsXAxis])) {
        switch (basic.Directionality.of(this.context)) {
          case C20 || CT.C20:
          {
            return dart.notNull(extent) < 0 ? dismissible.DismissDirection.startToEnd : dismissible.DismissDirection.endToStart;
          }
          case C21 || CT.C21:
          {
            return dart.notNull(extent) > 0 ? dismissible.DismissDirection.startToEnd : dismissible.DismissDirection.endToStart;
          }
        }
        if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 278, 14, "false");
        return null;
      }
      return dart.notNull(extent) > 0 ? dismissible.DismissDirection.down : dismissible.DismissDirection.up;
    }
    get [_dismissDirection]() {
      return this[_extentToDirection](this[_dragExtent]);
    }
    get [_isActive]() {
      return dart.test(this[_dragUnderway]) || dart.test(this[_moveController].isAnimating);
    }
    get [_overallDragAxisExtent]() {
      let size = this.context.size;
      return dart.test(this[_directionIsXAxis]) ? size.width : size.height;
    }
    [_handleDragStart$0](details) {
      this[_dragUnderway] = true;
      if (dart.test(this[_moveController].isAnimating)) {
        this[_dragExtent] = dart.notNull(this[_moveController].value) * dart.notNull(this[_overallDragAxisExtent]) * this[_dragExtent][$sign];
        this[_moveController].stop();
      } else {
        this[_dragExtent] = 0.0;
        this[_moveController].value = 0.0;
      }
      this.setState(dart.fn(() => {
        this[_updateMoveAnimation]();
      }, VoidToNull()));
    }
    [_handleDragUpdate$0](details) {
      if (!dart.test(this[_isActive]) || dart.test(this[_moveController].isAnimating)) return;
      let delta = details.primaryDelta;
      let oldDragExtent = this[_dragExtent];
      switch (this.widget.direction) {
        case C1499 || CT.C1499:
        case C1498 || CT.C1498:
        {
          this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
          break;
        }
        case C1502 || CT.C1502:
        {
          if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) < 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
          break;
        }
        case C1503 || CT.C1503:
        {
          if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) > 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
          break;
        }
        case C1500 || CT.C1500:
        {
          switch (basic.Directionality.of(this.context)) {
            case C20 || CT.C20:
            {
              if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) > 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
              break;
            }
            case C21 || CT.C21:
            {
              if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) < 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
              break;
            }
          }
          break;
        }
        case C1501 || CT.C1501:
        {
          switch (basic.Directionality.of(this.context)) {
            case C20 || CT.C20:
            {
              if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) < 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
              break;
            }
            case C21 || CT.C21:
            {
              if (dart.notNull(this[_dragExtent]) + dart.notNull(delta) > 0) this[_dragExtent] = dart.notNull(this[_dragExtent]) + dart.notNull(delta);
              break;
            }
          }
          break;
        }
      }
      if (oldDragExtent[$sign] !== this[_dragExtent][$sign]) {
        this.setState(dart.fn(() => {
          this[_updateMoveAnimation]();
        }, VoidToNull()));
      }
      if (!dart.test(this[_moveController].isAnimating)) {
        this[_moveController].value = this[_dragExtent][$abs]() / dart.notNull(this[_overallDragAxisExtent]);
      }
    }
    [_updateMoveAnimation]() {
      let end = this[_dragExtent][$sign];
      this[_moveAnimation] = this[_moveController].drive(ui.Offset, new (TweenOfOffset()).new({begin: ui.Offset.zero, end: dart.test(this[_directionIsXAxis]) ? new ui.Offset.new(end, this.widget.crossAxisEndOffset) : new ui.Offset.new(this.widget.crossAxisEndOffset, end)}));
    }
    [_describeFlingGesture](velocity) {
      if (!(this.widget.direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 380, 12, "widget.direction != null");
      if (this[_dragExtent] === 0.0) {
        return dismissible._FlingGestureKind.none;
      }
      let vx = velocity.pixelsPerSecond.dx;
      let vy = velocity.pixelsPerSecond.dy;
      let flingDirection = null;
      if (dart.test(this[_directionIsXAxis])) {
        if (vx[$abs]() - vy[$abs]() < 400 || vx[$abs]() < 700) return dismissible._FlingGestureKind.none;
        if (!(vx !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 396, 14, "vx != 0.0");
        flingDirection = this[_extentToDirection](vx);
      } else {
        if (vy[$abs]() - vx[$abs]() < 400 || vy[$abs]() < 700) return dismissible._FlingGestureKind.none;
        if (!(vy !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 401, 14, "vy != 0.0");
        flingDirection = this[_extentToDirection](vy);
      }
      if (!(this[_dismissDirection] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 404, 12, "_dismissDirection != null");
      if (dart.equals(flingDirection, this[_dismissDirection])) return dismissible._FlingGestureKind.forward;
      return dismissible._FlingGestureKind.reverse;
    }
    [_handleDragEnd$0](details) {
      return async.async(dart.void, (function* _handleDragEnd() {
        let t36, t36$;
        if (!dart.test(this[_isActive]) || dart.test(this[_moveController].isAnimating)) return;
        this[_dragUnderway] = false;
        if (dart.test(this[_moveController].isCompleted) && dart.equals(yield this[_confirmStartResizeAnimation](), true)) {
          this[_startResizeAnimation]();
          return;
        }
        let flingVelocity = dart.test(this[_directionIsXAxis]) ? details.velocity.pixelsPerSecond.dx : details.velocity.pixelsPerSecond.dy;
        switch (this[_describeFlingGesture](details.velocity)) {
          case C1507 || CT.C1507:
          {
            if (!(this[_dragExtent] !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 421, 16, "_dragExtent != 0.0");
            if (!!dart.test(this[_moveController].isDismissed)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 422, 16, "!_moveController.isDismissed");
            if (dart.notNull((t36 = this.widget.dismissThresholds[$_get](this[_dismissDirection]), t36 == null ? 0.4 : t36)) >= 1.0) {
              this[_moveController].reverse();
              break;
            }
            this[_dragExtent] = flingVelocity[$sign];
            this[_moveController].fling({velocity: flingVelocity[$abs]() * 0.0033333333333333335});
            break;
          }
          case C1508 || CT.C1508:
          {
            if (!(this[_dragExtent] !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 431, 16, "_dragExtent != 0.0");
            if (!!dart.test(this[_moveController].isDismissed)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 432, 16, "!_moveController.isDismissed");
            this[_dragExtent] = flingVelocity[$sign];
            this[_moveController].fling({velocity: -flingVelocity[$abs]() * 0.0033333333333333335});
            break;
          }
          case C1506 || CT.C1506:
          {
            if (!dart.test(this[_moveController].isDismissed)) {
              if (dart.notNull(this[_moveController].value) > dart.notNull((t36$ = this.widget.dismissThresholds[$_get](this[_dismissDirection]), t36$ == null ? 0.4 : t36$))) {
                this[_moveController].forward();
              } else {
                this[_moveController].reverse();
              }
            }
            break;
          }
        }
      }).bind(this));
    }
    [_handleDismissStatusChanged](status) {
      return async.async(dart.void, (function* _handleDismissStatusChanged() {
        if (dart.equals(status, animation$.AnimationStatus.completed) && !dart.test(this[_dragUnderway])) {
          if (dart.equals(yield this[_confirmStartResizeAnimation](), true))
            this[_startResizeAnimation]();
          else
            this[_moveController].reverse();
        }
        this.updateKeepAlive();
      }).bind(this));
    }
    [_confirmStartResizeAnimation]() {
      return async.async(core.bool, (function* _confirmStartResizeAnimation() {
        if (this.widget.confirmDismiss != null) {
          let direction = this[_dismissDirection];
          if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 461, 14, "direction != null");
          return this.widget.confirmDismiss(direction);
        }
        return true;
      }).bind(this));
    }
    [_startResizeAnimation]() {
      let t36;
      if (!(this[_moveController] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 468, 12, "_moveController != null");
      if (!dart.test(this[_moveController].isCompleted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 469, 12, "_moveController.isCompleted");
      if (!(this[_resizeController] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 470, 12, "_resizeController == null");
      if (!(this[_sizePriorToCollapse] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 471, 12, "_sizePriorToCollapse == null");
      if (this.widget.resizeDuration == null) {
        if (this.widget.onDismissed != null) {
          let direction = this[_dismissDirection];
          if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 475, 16, "direction != null");
          this.widget.onDismissed(direction);
        }
      } else {
        this[_resizeController] = (t36 = new animation_controller.AnimationController.new({duration: this.widget.resizeDuration, vsync: this}), t36.addListener(dart.bind(this, _handleResizeProgressChanged)), t36.addStatusListener(dart.fn(status => this.updateKeepAlive(), AnimationStatusTovoid())), t36);
        this[_resizeController].forward();
        this.setState(dart.fn(() => {
          this[_sizePriorToCollapse] = this.context.size;
          this[_resizeAnimation] = this[_resizeController].drive(core.double, new tween.CurveTween.new({curve: dismissible._kResizeTimeCurve})).drive(core.double, new (TweenOfdouble()).new({begin: 1.0, end: 0.0}));
        }, VoidToNull()));
      }
    }
    [_handleResizeProgressChanged]() {
      if (dart.test(this[_resizeController].isCompleted)) {
        if (this.widget.onDismissed != null) {
          let direction = this[_dismissDirection];
          if (!(direction != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 503, 16, "direction != null");
          this.widget.onDismissed(direction);
        }
      } else {
        if (this.widget.onResize != null) this.widget.onResize();
      }
    }
    build(context) {
      super.build(context);
      if (!(!dart.test(this[_directionIsXAxis]) || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 516, 12, "!_directionIsXAxis || debugCheckHasDirectionality(context)");
      let background = this.widget.background;
      if (this.widget.secondaryBackground != null) {
        let direction = this[_dismissDirection];
        if (dart.equals(direction, dismissible.DismissDirection.endToStart) || dart.equals(direction, dismissible.DismissDirection.up)) background = this.widget.secondaryBackground;
      }
      if (this[_resizeAnimation] != null) {
        if (!dart.test(dart.fn(() => {
          if (!dart.equals(this[_resizeAnimation].status, animation$.AnimationStatus.forward)) {
            if (!dart.equals(this[_resizeAnimation].status, animation$.AnimationStatus.completed)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 529, 18, "_resizeAnimation.status == AnimationStatus.completed");
            dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("A dismissed Dismissible widget is still part of the tree."), new assertions.ErrorHint.new("Make sure to implement the onDismissed handler and to immediately remove the Dismissible " + "widget from the application once that handler has fired.")])));
          }
          return true;
        }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/dismissible.dart", 527, 14, "() {\r\n        if (_resizeAnimation.status != AnimationStatus.forward) {\r\n          assert(_resizeAnimation.status == AnimationStatus.completed);\r\n          throw FlutterError.fromParts(<DiagnosticsNode>[\r\n            ErrorSummary('A dismissed Dismissible widget is still part of the tree.'),\r\n            ErrorHint(\r\n              'Make sure to implement the onDismissed handler and to immediately remove the Dismissible '\r\n              'widget from the application once that handler has fired.'\r\n            )\r\n          ]);\r\n        }\r\n        return true;\r\n      }()");
        return new transitions.SizeTransition.new({sizeFactor: this[_resizeAnimation], axis: dart.test(this[_directionIsXAxis]) ? basic_types$.Axis.vertical : basic_types$.Axis.horizontal, child: new basic.SizedBox.new({width: this[_sizePriorToCollapse].width, height: this[_sizePriorToCollapse].height, child: background, $creationLocationd_0dea112b090073317d4: C1510 || CT.C1510}), $creationLocationd_0dea112b090073317d4: C1515 || CT.C1515});
      }
      let content = new transitions.SlideTransition.new({position: this[_moveAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1520 || CT.C1520});
      if (background != null) {
        content = new basic.Stack.new({children: (() => {
            let t36 = JSArrayOfWidget().of([]);
            if (!dart.test(this[_moveAnimation].isDismissed)) t36[$add](new basic.Positioned.fill({child: new basic.ClipRect.new({clipper: new dismissible._DismissibleClipper.new({axis: dart.test(this[_directionIsXAxis]) ? basic_types$.Axis.horizontal : basic_types$.Axis.vertical, moveAnimation: this[_moveAnimation]}), child: background, $creationLocationd_0dea112b090073317d4: C1523 || CT.C1523}), $creationLocationd_0dea112b090073317d4: C1527 || CT.C1527}));
            t36[$add](content);
            return t36;
          })(), $creationLocationd_0dea112b090073317d4: C1530 || CT.C1530});
      }
      return new gesture_detector.GestureDetector.new({onHorizontalDragStart: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragStart$0) : null, onHorizontalDragUpdate: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragUpdate$0) : null, onHorizontalDragEnd: dart.test(this[_directionIsXAxis]) ? dart.bind(this, _handleDragEnd$0) : null, onVerticalDragStart: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragStart$0), onVerticalDragUpdate: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragUpdate$0), onVerticalDragEnd: dart.test(this[_directionIsXAxis]) ? null : dart.bind(this, _handleDragEnd$0), behavior: proxy_box.HitTestBehavior.opaque, child: content, dragStartBehavior: this.widget.dragStartBehavior, $creationLocationd_0dea112b090073317d4: C1533 || CT.C1533});
    }
  };
  (dismissible._DismissibleState.new = function() {
    this[_moveController] = null;
    this[_moveAnimation] = null;
    this[_resizeController] = null;
    this[_resizeAnimation] = null;
    this[_dragExtent] = 0.0;
    this[_dragUnderway] = false;
    this[_sizePriorToCollapse] = null;
    dismissible._DismissibleState.__proto__.new.call(this);
    ;
  }).prototype = dismissible._DismissibleState.prototype;
  dart.addTypeTests(dismissible._DismissibleState);
  dart.setMethodSignature(dismissible._DismissibleState, () => ({
    __proto__: dart.getMethods(dismissible._DismissibleState.__proto__),
    [_extentToDirection]: dart.fnType(dismissible.DismissDirection, [core.double]),
    [_handleDragStart$0]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate$0]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_updateMoveAnimation]: dart.fnType(dart.void, []),
    [_describeFlingGesture]: dart.fnType(dismissible._FlingGestureKind, [velocity_tracker.Velocity]),
    [_handleDragEnd$0]: dart.fnType(async.Future$(dart.void), [drag_details.DragEndDetails]),
    [_handleDismissStatusChanged]: dart.fnType(async.Future$(dart.void), [animation$.AnimationStatus]),
    [_confirmStartResizeAnimation]: dart.fnType(async.Future$(core.bool), []),
    [_startResizeAnimation]: dart.fnType(dart.void, []),
    [_handleResizeProgressChanged]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(dismissible._DismissibleState, () => ({
    __proto__: dart.getGetters(dismissible._DismissibleState.__proto__),
    wantKeepAlive: core.bool,
    [_directionIsXAxis]: core.bool,
    [_dismissDirection]: dismissible.DismissDirection,
    [_isActive]: core.bool,
    [_overallDragAxisExtent]: core.double
  }));
  dart.setLibraryUri(dismissible._DismissibleState, "package:flutter/src/widgets/dismissible.dart");
  dart.setFieldSignature(dismissible._DismissibleState, () => ({
    __proto__: dart.getFields(dismissible._DismissibleState.__proto__),
    [_moveController]: dart.fieldType(animation_controller.AnimationController),
    [_moveAnimation]: dart.fieldType(animation$.Animation$(ui.Offset)),
    [_resizeController]: dart.fieldType(animation_controller.AnimationController),
    [_resizeAnimation]: dart.fieldType(animation$.Animation$(core.double)),
    [_dragExtent]: dart.fieldType(core.double),
    [_dragUnderway]: dart.fieldType(core.bool),
    [_sizePriorToCollapse]: dart.fieldType(ui.Size)
  }));
  var Interval_curve = dart.privateName(curves, "Interval.curve");
  var Interval_end = dart.privateName(curves, "Interval.end");
  var Interval_begin = dart.privateName(curves, "Interval.begin");
  var C1544;
  dart.defineLazy(dismissible, {
    /*dismissible._kResizeTimeCurve*/get _kResizeTimeCurve() {
      return C1544 || CT.C1544;
    },
    /*dismissible._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 700;
    },
    /*dismissible._kMinFlingVelocityDelta*/get _kMinFlingVelocityDelta() {
      return 400;
    },
    /*dismissible._kFlingVelocityScale*/get _kFlingVelocityScale() {
      return 0.0033333333333333335;
    },
    /*dismissible._kDismissThreshold*/get _kDismissThreshold() {
      return 0.4;
    }
  });
  animated_list._ActiveItem = class _ActiveItem extends core.Object {
    compareTo(other) {
      animated_list._ActiveItem._check(other);
      return dart.notNull(this.itemIndex) - dart.notNull(other.itemIndex);
    }
  };
  (animated_list._ActiveItem.incoming = function(controller, itemIndex) {
    this.controller = controller;
    this.itemIndex = itemIndex;
    this.removedItemBuilder = null;
    ;
  }).prototype = animated_list._ActiveItem.prototype;
  (animated_list._ActiveItem.outgoing = function(controller, itemIndex, removedItemBuilder) {
    this.controller = controller;
    this.itemIndex = itemIndex;
    this.removedItemBuilder = removedItemBuilder;
    ;
  }).prototype = animated_list._ActiveItem.prototype;
  (animated_list._ActiveItem.index = function(itemIndex) {
    this.itemIndex = itemIndex;
    this.controller = null;
    this.removedItemBuilder = null;
    ;
  }).prototype = animated_list._ActiveItem.prototype;
  dart.addTypeTests(animated_list._ActiveItem);
  animated_list._ActiveItem[dart.implements] = () => [core.Comparable$(animated_list._ActiveItem)];
  dart.setMethodSignature(animated_list._ActiveItem, () => ({
    __proto__: dart.getMethods(animated_list._ActiveItem.__proto__),
    compareTo: dart.fnType(core.int, [core.Object]),
    [$compareTo]: dart.fnType(core.int, [core.Object])
  }));
  dart.setLibraryUri(animated_list._ActiveItem, "package:flutter/src/widgets/animated_list.dart");
  dart.setFieldSignature(animated_list._ActiveItem, () => ({
    __proto__: dart.getFields(animated_list._ActiveItem.__proto__),
    controller: dart.finalFieldType(animation_controller.AnimationController),
    removedItemBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)])),
    itemIndex: dart.fieldType(core.int)
  }));
  dart.defineExtensionMethods(animated_list._ActiveItem, ['compareTo']);
  var itemBuilder$ = dart.privateName(animated_list, "AnimatedList.itemBuilder");
  var initialItemCount$ = dart.privateName(animated_list, "AnimatedList.initialItemCount");
  var scrollDirection$2 = dart.privateName(animated_list, "AnimatedList.scrollDirection");
  var reverse$3 = dart.privateName(animated_list, "AnimatedList.reverse");
  var controller$5 = dart.privateName(animated_list, "AnimatedList.controller");
  var primary$1 = dart.privateName(animated_list, "AnimatedList.primary");
  var physics$4 = dart.privateName(animated_list, "AnimatedList.physics");
  var shrinkWrap$0 = dart.privateName(animated_list, "AnimatedList.shrinkWrap");
  var padding$7 = dart.privateName(animated_list, "AnimatedList.padding");
  animated_list.AnimatedList = class AnimatedList extends framework.StatefulWidget {
    get itemBuilder() {
      return this[itemBuilder$];
    }
    set itemBuilder(value) {
      super.itemBuilder = value;
    }
    get initialItemCount() {
      return this[initialItemCount$];
    }
    set initialItemCount(value) {
      super.initialItemCount = value;
    }
    get scrollDirection() {
      return this[scrollDirection$2];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$3];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get controller() {
      return this[controller$5];
    }
    set controller(value) {
      super.controller = value;
    }
    get primary() {
      return this[primary$1];
    }
    set primary(value) {
      super.primary = value;
    }
    get physics() {
      return this[physics$4];
    }
    set physics(value) {
      super.physics = value;
    }
    get shrinkWrap() {
      return this[shrinkWrap$0];
    }
    set shrinkWrap(value) {
      super.shrinkWrap = value;
    }
    get padding() {
      return this[padding$7];
    }
    set padding(value) {
      super.padding = value;
    }
    static of(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 389, 12, "context != null");
      if (!(nullOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 390, 12, "nullOk != null");
      let result = context.findAncestorStateOfType(animated_list.AnimatedListState);
      if (dart.test(nullOk) || result != null) return result;
      dart.throw(new assertions.FlutterError.fromParts(JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("AnimatedList.of() called with a context that does not contain an AnimatedList."), new assertions.ErrorDescription.new("No AnimatedList ancestor could be found starting from the context that was passed to AnimatedList.of()."), new assertions.ErrorHint.new("This can happen when the context provided is from the same StatefulWidget that " + "built the AnimatedList. Please see the AnimatedList documentation for examples " + "of how to refer to an AnimatedListState object:" + "  https://api.flutter.dev/flutter/widgets/AnimatedListState-class.html"), context.describeElement("The context used was")])));
    }
    createState() {
      return new animated_list.AnimatedListState.new();
    }
  };
  (animated_list.AnimatedList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let initialItemCount = opts && 'initialItemCount' in opts ? opts.initialItemCount : 0;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemBuilder$] = itemBuilder;
    this[initialItemCount$] = initialItemCount;
    this[scrollDirection$2] = scrollDirection;
    this[reverse$3] = reverse;
    this[controller$5] = controller;
    this[primary$1] = primary;
    this[physics$4] = physics;
    this[shrinkWrap$0] = shrinkWrap;
    this[padding$7] = padding;
    if (!(itemBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 282, 15, "itemBuilder != null");
    if (!(initialItemCount != null && dart.notNull(initialItemCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 283, 15, "initialItemCount != null && initialItemCount >= 0");
    animated_list.AnimatedList.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = animated_list.AnimatedList.prototype;
  dart.addTypeTests(animated_list.AnimatedList);
  dart.setMethodSignature(animated_list.AnimatedList, () => ({
    __proto__: dart.getMethods(animated_list.AnimatedList.__proto__),
    createState: dart.fnType(animated_list.AnimatedListState, [])
  }));
  dart.setLibraryUri(animated_list.AnimatedList, "package:flutter/src/widgets/animated_list.dart");
  dart.setFieldSignature(animated_list.AnimatedList, () => ({
    __proto__: dart.getFields(animated_list.AnimatedList.__proto__),
    itemBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int, animation$.Animation$(core.double)])),
    initialItemCount: dart.finalFieldType(core.int),
    scrollDirection: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    primary: dart.finalFieldType(core.bool),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    shrinkWrap: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry)
  }));
  var _sliverAnimatedListKey = dart.privateName(animated_list, "_sliverAnimatedListKey");
  var C1547;
  var C1548;
  var C1549;
  var C1546;
  var C1545;
  var C1552;
  var C1553;
  var C1551;
  var C1550;
  var C1556;
  var C1557;
  var C1558;
  var C1559;
  var C1560;
  var C1561;
  var C1562;
  var C1555;
  var C1554;
  const State_TickerProviderStateMixin$36$5 = class State_TickerProviderStateMixin extends framework.State$(animated_list.AnimatedList) {};
  (State_TickerProviderStateMixin$36$5.new = function() {
    ticker_provider.TickerProviderStateMixin$(animated_list.AnimatedList)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$5.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$5.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$5, ticker_provider.TickerProviderStateMixin$(animated_list.AnimatedList));
  animated_list.AnimatedListState = class AnimatedListState extends State_TickerProviderStateMixin$36$5 {
    insertItem(index, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : C666 || CT.C666;
      this[_sliverAnimatedListKey].currentState.insertItem(index, {duration: duration});
    }
    removeItem(index, builder, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : C666 || CT.C666;
      this[_sliverAnimatedListKey].currentState.removeItem(index, builder, {duration: duration});
    }
    build(context) {
      let t37;
      return new scroll_view.CustomScrollView.new({scrollDirection: this.widget.scrollDirection, reverse: this.widget.reverse, controller: this.widget.controller, primary: this.widget.primary, physics: this.widget.physics, shrinkWrap: this.widget.shrinkWrap, slivers: JSArrayOfWidget().of([new basic.SliverPadding.new({padding: (t37 = this.widget.padding, t37 == null ? C290 || CT.C290 : t37), sliver: new animated_list.SliverAnimatedList.new({key: this[_sliverAnimatedListKey], itemBuilder: this.widget.itemBuilder, initialItemCount: this.widget.initialItemCount, $creationLocationd_0dea112b090073317d4: C1545 || CT.C1545}), $creationLocationd_0dea112b090073317d4: C1550 || CT.C1550})]), $creationLocationd_0dea112b090073317d4: C1554 || CT.C1554});
    }
  };
  (animated_list.AnimatedListState.new = function() {
    this[_sliverAnimatedListKey] = GlobalKeyOfSliverAnimatedListState().new();
    animated_list.AnimatedListState.__proto__.new.call(this);
    ;
  }).prototype = animated_list.AnimatedListState.prototype;
  dart.addTypeTests(animated_list.AnimatedListState);
  dart.setMethodSignature(animated_list.AnimatedListState, () => ({
    __proto__: dart.getMethods(animated_list.AnimatedListState.__proto__),
    insertItem: dart.fnType(dart.void, [core.int], {duration: core.Duration}, {}),
    removeItem: dart.fnType(dart.void, [core.int, dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)])], {duration: core.Duration}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(animated_list.AnimatedListState, "package:flutter/src/widgets/animated_list.dart");
  dart.setFieldSignature(animated_list.AnimatedListState, () => ({
    __proto__: dart.getFields(animated_list.AnimatedListState.__proto__),
    [_sliverAnimatedListKey]: dart.finalFieldType(framework.GlobalKey$(animated_list.SliverAnimatedListState))
  }));
  var itemBuilder$0 = dart.privateName(animated_list, "SliverAnimatedList.itemBuilder");
  var initialItemCount$0 = dart.privateName(animated_list, "SliverAnimatedList.initialItemCount");
  animated_list.SliverAnimatedList = class SliverAnimatedList extends framework.StatefulWidget {
    get itemBuilder() {
      return this[itemBuilder$0];
    }
    set itemBuilder(value) {
      super.itemBuilder = value;
    }
    get initialItemCount() {
      return this[initialItemCount$0];
    }
    set initialItemCount(value) {
      super.initialItemCount = value;
    }
    createState() {
      return new animated_list.SliverAnimatedListState.new();
    }
    static of(context, opts) {
      let nullOk = opts && 'nullOk' in opts ? opts.nullOk : false;
      if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 775, 12, "context != null");
      if (!(nullOk != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 776, 12, "nullOk != null");
      let result = context.findAncestorStateOfType(animated_list.SliverAnimatedListState);
      if (dart.test(nullOk) || result != null) return result;
      dart.throw(assertions.FlutterError.new("SliverAnimatedList.of() called with a context that does not contain a SliverAnimatedList.\n" + "No SliverAnimatedListState ancestor could be found starting from the " + "context that was passed to SliverAnimatedListState.of(). This can " + "happen when the context provided is from the same StatefulWidget that " + "built the AnimatedList. Please see the SliverAnimatedList documentation " + "for examples of how to refer to an AnimatedListState object: " + "https://docs.flutter.io/flutter/widgets/SliverAnimatedListState-class.html \n" + "The context used was:\n" + "  " + dart.str(context)));
    }
  };
  (animated_list.SliverAnimatedList.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let initialItemCount = opts && 'initialItemCount' in opts ? opts.initialItemCount : 0;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemBuilder$0] = itemBuilder;
    this[initialItemCount$0] = initialItemCount;
    if (!(itemBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 740, 15, "itemBuilder != null");
    if (!(initialItemCount != null && dart.notNull(initialItemCount) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 741, 15, "initialItemCount != null && initialItemCount >= 0");
    animated_list.SliverAnimatedList.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = animated_list.SliverAnimatedList.prototype;
  dart.addTypeTests(animated_list.SliverAnimatedList);
  dart.setMethodSignature(animated_list.SliverAnimatedList, () => ({
    __proto__: dart.getMethods(animated_list.SliverAnimatedList.__proto__),
    createState: dart.fnType(animated_list.SliverAnimatedListState, [])
  }));
  dart.setLibraryUri(animated_list.SliverAnimatedList, "package:flutter/src/widgets/animated_list.dart");
  dart.setFieldSignature(animated_list.SliverAnimatedList, () => ({
    __proto__: dart.getFields(animated_list.SliverAnimatedList.__proto__),
    itemBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int, animation$.Animation$(core.double)])),
    initialItemCount: dart.finalFieldType(core.int)
  }));
  var _incomingItems = dart.privateName(animated_list, "_incomingItems");
  var _outgoingItems = dart.privateName(animated_list, "_outgoingItems");
  var _itemsCount = dart.privateName(animated_list, "_itemsCount");
  var _removeActiveItemAt = dart.privateName(animated_list, "_removeActiveItemAt");
  var _activeItemAt = dart.privateName(animated_list, "_activeItemAt");
  var _indexToItemIndex = dart.privateName(animated_list, "_indexToItemIndex");
  var _itemIndexToIndex = dart.privateName(animated_list, "_itemIndexToIndex");
  var _itemBuilder = dart.privateName(animated_list, "_itemBuilder");
  var _createDelegate = dart.privateName(animated_list, "_createDelegate");
  var C1565;
  var C1564;
  var C1563;
  const State_TickerProviderStateMixin$36$6 = class State_TickerProviderStateMixin extends framework.State$(animated_list.SliverAnimatedList) {};
  (State_TickerProviderStateMixin$36$6.new = function() {
    ticker_provider.TickerProviderStateMixin$(animated_list.SliverAnimatedList)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$6.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$6.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$6, ticker_provider.TickerProviderStateMixin$(animated_list.SliverAnimatedList));
  animated_list.SliverAnimatedListState = class SliverAnimatedListState extends State_TickerProviderStateMixin$36$6 {
    initState() {
      super.initState();
      this[_itemsCount] = this.widget.initialItemCount;
    }
    dispose() {
      for (let item of this[_incomingItems][$followedBy](this[_outgoingItems])) {
        item.controller.dispose();
      }
      super.dispose();
    }
    [_removeActiveItemAt](items, itemIndex) {
      let i = collections.binarySearch(animated_list._ActiveItem, items, new animated_list._ActiveItem.index(itemIndex));
      return i === -1 ? null : items[$removeAt](i);
    }
    [_activeItemAt](items, itemIndex) {
      let i = collections.binarySearch(animated_list._ActiveItem, items, new animated_list._ActiveItem.index(itemIndex));
      return i === -1 ? null : items[$_get](i);
    }
    [_indexToItemIndex](index) {
      let itemIndex = index;
      for (let item of this[_outgoingItems]) {
        if (dart.notNull(item.itemIndex) <= dart.notNull(itemIndex))
          itemIndex = dart.notNull(itemIndex) + 1;
        else
          break;
      }
      return itemIndex;
    }
    [_itemIndexToIndex](itemIndex) {
      let index = itemIndex;
      for (let item of this[_outgoingItems]) {
        if (!(item.itemIndex != itemIndex)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 867, 14, "item.itemIndex != itemIndex");
        if (dart.notNull(item.itemIndex) < dart.notNull(itemIndex))
          index = dart.notNull(index) - 1;
        else
          break;
      }
      return index;
    }
    [_createDelegate]() {
      return new sliver$.SliverChildBuilderDelegate.new(dart.bind(this, _itemBuilder), {childCount: this[_itemsCount]});
    }
    insertItem(index, opts) {
      let t37, t37$;
      let duration = opts && 'duration' in opts ? opts.duration : C666 || CT.C666;
      if (!(index != null && dart.notNull(index) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 887, 12, "index != null && index >= 0");
      if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 888, 12, "duration != null");
      let itemIndex = this[_indexToItemIndex](index);
      if (!(dart.notNull(itemIndex) >= 0 && dart.notNull(itemIndex) <= dart.notNull(this[_itemsCount]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 891, 12, "itemIndex >= 0 && itemIndex <= _itemsCount");
      for (let item of this[_incomingItems]) {
        if (dart.notNull(item.itemIndex) >= dart.notNull(itemIndex)) {
          t37 = item;
          t37.itemIndex = dart.notNull(t37.itemIndex) + 1;
        }
      }
      for (let item of this[_outgoingItems]) {
        if (dart.notNull(item.itemIndex) >= dart.notNull(itemIndex)) {
          t37$ = item;
          t37$.itemIndex = dart.notNull(t37$.itemIndex) + 1;
        }
      }
      let controller = new animation_controller.AnimationController.new({duration: duration, vsync: this});
      let incomingItem = new animated_list._ActiveItem.incoming(controller, itemIndex);
      this.setState(dart.fn(() => {
        let t37;
        t37 = this[_incomingItems];
        t37[$add](incomingItem);
        t37[$sort]();
        t37;
        this[_itemsCount] = dart.notNull(this[_itemsCount]) + 1;
      }, VoidToNull()));
      controller.forward().then(dart.void, dart.fn(_ => {
        this[_removeActiveItemAt](this[_incomingItems], incomingItem.itemIndex).controller.dispose();
      }, voidToNull()));
    }
    removeItem(index, builder, opts) {
      let t37, t37$;
      let duration = opts && 'duration' in opts ? opts.duration : C666 || CT.C666;
      if (!(index != null && dart.notNull(index) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 936, 12, "index != null && index >= 0");
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 937, 12, "builder != null");
      if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 938, 12, "duration != null");
      let itemIndex = this[_indexToItemIndex](index);
      if (!(dart.notNull(itemIndex) >= 0 && dart.notNull(itemIndex) < dart.notNull(this[_itemsCount]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 941, 12, "itemIndex >= 0 && itemIndex < _itemsCount");
      if (!(this[_activeItemAt](this[_outgoingItems], itemIndex) == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_list.dart", 942, 12, "_activeItemAt(_outgoingItems, itemIndex) == null");
      let incomingItem = this[_removeActiveItemAt](this[_incomingItems], itemIndex);
      let controller = (t37$ = (t37 = incomingItem, t37 == null ? null : t37.controller), t37$ == null ? new animation_controller.AnimationController.new({duration: duration, value: 1.0, vsync: this}) : t37$);
      let outgoingItem = new animated_list._ActiveItem.outgoing(controller, itemIndex, builder);
      this.setState(dart.fn(() => {
        let t37;
        t37 = this[_outgoingItems];
        t37[$add](outgoingItem);
        t37[$sort]();
        t37;
      }, VoidToNull()));
      controller.reverse().then(dart.void, dart.fn(value => {
        let t37, t37$;
        this[_removeActiveItemAt](this[_outgoingItems], outgoingItem.itemIndex).controller.dispose();
        for (let item of this[_incomingItems]) {
          if (dart.notNull(item.itemIndex) > dart.notNull(outgoingItem.itemIndex)) {
            t37 = item;
            t37.itemIndex = dart.notNull(t37.itemIndex) - 1;
          }
        }
        for (let item of this[_outgoingItems]) {
          if (dart.notNull(item.itemIndex) > dart.notNull(outgoingItem.itemIndex)) {
            t37$ = item;
            t37$.itemIndex = dart.notNull(t37$.itemIndex) - 1;
          }
        }
        this.setState(dart.fn(() => this[_itemsCount] = dart.notNull(this[_itemsCount]) - 1, VoidToint()));
      }, voidToNull()));
    }
    [_itemBuilder](context, itemIndex) {
      let t37, t37$, t37$0;
      let outgoingItem = this[_activeItemAt](this[_outgoingItems], itemIndex);
      if (outgoingItem != null) {
        return outgoingItem.removedItemBuilder(context, outgoingItem.controller.view);
      }
      let incomingItem = this[_activeItemAt](this[_incomingItems], itemIndex);
      let animation = (t37$0 = (t37$ = (t37 = incomingItem, t37 == null ? null : t37.controller), t37$ == null ? null : t37$.view), t37$0 == null ? animations.kAlwaysCompleteAnimation : t37$0);
      return this.widget.itemBuilder(context, this[_itemIndexToIndex](itemIndex), animation);
    }
    build(context) {
      return new sliver$.SliverList.new({delegate: this[_createDelegate](), $creationLocationd_0dea112b090073317d4: C1563 || CT.C1563});
    }
  };
  (animated_list.SliverAnimatedListState.new = function() {
    this[_incomingItems] = JSArrayOf_ActiveItem().of([]);
    this[_outgoingItems] = JSArrayOf_ActiveItem().of([]);
    this[_itemsCount] = 0;
    animated_list.SliverAnimatedListState.__proto__.new.call(this);
    ;
  }).prototype = animated_list.SliverAnimatedListState.prototype;
  dart.addTypeTests(animated_list.SliverAnimatedListState);
  dart.setMethodSignature(animated_list.SliverAnimatedListState, () => ({
    __proto__: dart.getMethods(animated_list.SliverAnimatedListState.__proto__),
    [_removeActiveItemAt]: dart.fnType(animated_list._ActiveItem, [core.List$(animated_list._ActiveItem), core.int]),
    [_activeItemAt]: dart.fnType(animated_list._ActiveItem, [core.List$(animated_list._ActiveItem), core.int]),
    [_indexToItemIndex]: dart.fnType(core.int, [core.int]),
    [_itemIndexToIndex]: dart.fnType(core.int, [core.int]),
    [_createDelegate]: dart.fnType(sliver$.SliverChildDelegate, []),
    insertItem: dart.fnType(dart.void, [core.int], {duration: core.Duration}, {}),
    removeItem: dart.fnType(dart.void, [core.int, dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)])], {duration: core.Duration}, {}),
    [_itemBuilder]: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(animated_list.SliverAnimatedListState, "package:flutter/src/widgets/animated_list.dart");
  dart.setFieldSignature(animated_list.SliverAnimatedListState, () => ({
    __proto__: dart.getFields(animated_list.SliverAnimatedListState.__proto__),
    [_incomingItems]: dart.finalFieldType(core.List$(animated_list._ActiveItem)),
    [_outgoingItems]: dart.finalFieldType(core.List$(animated_list._ActiveItem)),
    [_itemsCount]: dart.fieldType(core.int)
  }));
  dart.defineLazy(animated_list, {
    /*animated_list._kDuration*/get _kDuration() {
      return C666 || CT.C666;
    }
  });
  var C1568;
  var C1569;
  var C1570;
  var C1567;
  var C1566;
  var C1573;
  var C1572;
  var C1571;
  var C1574;
  var C1577;
  var C1578;
  var C1576;
  var C1575;
  var data$2 = dart.privateName(icon_theme, "IconTheme.data");
  icon_theme.IconTheme = class IconTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[data$2];
    }
    set data(value) {
      super.data = value;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new basic.Builder.new({builder: dart.fn(context => new icon_theme.IconTheme.new({key: key, data: icon_theme.IconTheme._getInheritedIconThemeData(context).merge(data), child: child, $creationLocationd_0dea112b090073317d4: C1566 || CT.C1566}), BuildContextToIconTheme()), $creationLocationd_0dea112b090073317d4: C1571 || CT.C1571});
    }
    static of(context) {
      let t37, t37$, t37$0;
      let iconThemeData = icon_theme.IconTheme._getInheritedIconThemeData(context).resolve(context);
      return dart.test(iconThemeData.isConcrete) ? iconThemeData : iconThemeData.copyWith({size: (t37 = iconThemeData.size, t37 == null ? (C1574 || CT.C1574).size : t37), color: (t37$ = iconThemeData.color, t37$ == null ? (C1574 || CT.C1574).color : t37$), opacity: (t37$0 = iconThemeData.opacity, t37$0 == null ? (C1574 || CT.C1574).opacity : t37$0)});
    }
    static _getInheritedIconThemeData(context) {
      let t37, t37$;
      let iconTheme = context.dependOnInheritedWidgetOfExactType(icon_theme.IconTheme);
      t37$ = (t37 = iconTheme, t37 == null ? null : t37.data);
      return t37$ == null ? C1574 || CT.C1574 : t37$;
    }
    updateShouldNotify(oldWidget) {
      icon_theme.IconTheme._check(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
    wrap(context, child) {
      let iconTheme = context.findAncestorWidgetOfExactType(icon_theme.IconTheme);
      return this === iconTheme ? child : new icon_theme.IconTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C1575 || CT.C1575});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      this.data.debugFillProperties(properties);
    }
  };
  (icon_theme.IconTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[data$2] = data;
    if (!(data != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_theme.dart", 24, 15, "data != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon_theme.dart", 25, 15, "child != null");
    icon_theme.IconTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_theme.IconTheme.prototype;
  dart.addTypeTests(icon_theme.IconTheme);
  dart.setMethodSignature(icon_theme.IconTheme, () => ({
    __proto__: dart.getMethods(icon_theme.IconTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object]),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])
  }));
  dart.setLibraryUri(icon_theme.IconTheme, "package:flutter/src/widgets/icon_theme.dart");
  dart.setFieldSignature(icon_theme.IconTheme, () => ({
    __proto__: dart.getFields(icon_theme.IconTheme.__proto__),
    data: dart.finalFieldType(icon_theme_data.IconThemeData)
  }));
  var _buildWithConstraints = dart.privateName(orientation_builder, "_buildWithConstraints");
  var C1581;
  var C1580;
  var C1579;
  var builder$10 = dart.privateName(orientation_builder, "OrientationBuilder.builder");
  orientation_builder.OrientationBuilder = class OrientationBuilder extends framework.StatelessWidget {
    get builder() {
      return this[builder$10];
    }
    set builder(value) {
      super.builder = value;
    }
    [_buildWithConstraints](context, constraints) {
      let orientation = dart.notNull(constraints.maxWidth) > dart.notNull(constraints.maxHeight) ? media_query.Orientation.landscape : media_query.Orientation.portrait;
      return this.builder(context, orientation);
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.bind(this, _buildWithConstraints), $creationLocationd_0dea112b090073317d4: C1579 || CT.C1579});
    }
  };
  (orientation_builder.OrientationBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$10] = builder;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/orientation_builder.dart", 34, 15, "builder != null");
    orientation_builder.OrientationBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = orientation_builder.OrientationBuilder.prototype;
  dart.addTypeTests(orientation_builder.OrientationBuilder);
  dart.setMethodSignature(orientation_builder.OrientationBuilder, () => ({
    __proto__: dart.getMethods(orientation_builder.OrientationBuilder.__proto__),
    [_buildWithConstraints]: dart.fnType(framework.Widget, [framework.BuildContext, box$.BoxConstraints]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(orientation_builder.OrientationBuilder, "package:flutter/src/widgets/orientation_builder.dart");
  dart.setFieldSignature(orientation_builder.OrientationBuilder, () => ({
    __proto__: dart.getFields(orientation_builder.OrientationBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, media_query.Orientation]))
  }));
  size_changed_layout_notifier.SizeChangedLayoutNotification = class SizeChangedLayoutNotification extends notification_listener.LayoutChangedNotification {};
  (size_changed_layout_notifier.SizeChangedLayoutNotification.new = function() {
    size_changed_layout_notifier.SizeChangedLayoutNotification.__proto__.new.call(this);
    ;
  }).prototype = size_changed_layout_notifier.SizeChangedLayoutNotification.prototype;
  dart.addTypeTests(size_changed_layout_notifier.SizeChangedLayoutNotification);
  dart.setLibraryUri(size_changed_layout_notifier.SizeChangedLayoutNotification, "package:flutter/src/widgets/size_changed_layout_notifier.dart");
  size_changed_layout_notifier.SizeChangedLayoutNotifier = class SizeChangedLayoutNotifier extends framework.SingleChildRenderObjectWidget {
    createRenderObject(context) {
      return new size_changed_layout_notifier._RenderSizeChangedWithCallback.new({onLayoutChangedCallback: dart.fn(() => {
          new size_changed_layout_notifier.SizeChangedLayoutNotification.new().dispatch(context);
        }, VoidToNull())});
    }
  };
  (size_changed_layout_notifier.SizeChangedLayoutNotifier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    size_changed_layout_notifier.SizeChangedLayoutNotifier.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = size_changed_layout_notifier.SizeChangedLayoutNotifier.prototype;
  dart.addTypeTests(size_changed_layout_notifier.SizeChangedLayoutNotifier);
  dart.setMethodSignature(size_changed_layout_notifier.SizeChangedLayoutNotifier, () => ({
    __proto__: dart.getMethods(size_changed_layout_notifier.SizeChangedLayoutNotifier.__proto__),
    createRenderObject: dart.fnType(size_changed_layout_notifier._RenderSizeChangedWithCallback, [framework.BuildContext])
  }));
  dart.setLibraryUri(size_changed_layout_notifier.SizeChangedLayoutNotifier, "package:flutter/src/widgets/size_changed_layout_notifier.dart");
  var _oldSize = dart.privateName(size_changed_layout_notifier, "_oldSize");
  size_changed_layout_notifier._RenderSizeChangedWithCallback = class _RenderSizeChangedWithCallback extends proxy_box.RenderProxyBox {
    performLayout() {
      super.performLayout();
      if (this[_oldSize] != null && !dart.equals(this.size, this[_oldSize])) this.onLayoutChangedCallback();
      this[_oldSize] = this.size;
    }
  };
  (size_changed_layout_notifier._RenderSizeChangedWithCallback.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let onLayoutChangedCallback = opts && 'onLayoutChangedCallback' in opts ? opts.onLayoutChangedCallback : null;
    this[_oldSize] = null;
    this.onLayoutChangedCallback = onLayoutChangedCallback;
    if (!(onLayoutChangedCallback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/size_changed_layout_notifier.dart", 74, 15, "onLayoutChangedCallback != null");
    size_changed_layout_notifier._RenderSizeChangedWithCallback.__proto__.new.call(this, child);
    ;
  }).prototype = size_changed_layout_notifier._RenderSizeChangedWithCallback.prototype;
  dart.addTypeTests(size_changed_layout_notifier._RenderSizeChangedWithCallback);
  dart.setLibraryUri(size_changed_layout_notifier._RenderSizeChangedWithCallback, "package:flutter/src/widgets/size_changed_layout_notifier.dart");
  dart.setFieldSignature(size_changed_layout_notifier._RenderSizeChangedWithCallback, () => ({
    __proto__: dart.getFields(size_changed_layout_notifier._RenderSizeChangedWithCallback.__proto__),
    onLayoutChangedCallback: dart.finalFieldType(dart.fnType(dart.void, [])),
    [_oldSize]: dart.fieldType(ui.Size)
  }));
  var C1583;
  var C1582;
  var C1586;
  var C1587;
  var C1585;
  var C1584;
  var flex$1 = dart.privateName(spacer, "Spacer.flex");
  spacer.Spacer = class Spacer extends framework.StatelessWidget {
    get flex() {
      return this[flex$1];
    }
    set flex(value) {
      super.flex = value;
    }
    build(context) {
      return new basic.Expanded.new({flex: this.flex, child: C1582 || CT.C1582, $creationLocationd_0dea112b090073317d4: C1584 || CT.C1584});
    }
  };
  (spacer.Spacer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let flex = opts && 'flex' in opts ? opts.flex : 1;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[flex$1] = flex;
    if (!(flex != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/spacer.dart", 48, 14, "flex != null");
    if (!(dart.notNull(flex) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/spacer.dart", 49, 14, "flex > 0");
    spacer.Spacer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = spacer.Spacer.prototype;
  dart.addTypeTests(spacer.Spacer);
  dart.setMethodSignature(spacer.Spacer, () => ({
    __proto__: dart.getMethods(spacer.Spacer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(spacer.Spacer, "package:flutter/src/widgets/spacer.dart");
  dart.setFieldSignature(spacer.Spacer, () => ({
    __proto__: dart.getFields(spacer.Spacer.__proto__),
    flex: dart.finalFieldType(core.int)
  }));
  animated_switcher._ChildEntry = class _ChildEntry extends core.Object {
    toString() {
      return "Entry#" + dart.str(diagnostics$.shortHash(this)) + "(" + dart.str(this.widgetChild) + ")";
    }
  };
  (animated_switcher._ChildEntry.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let widgetChild = opts && 'widgetChild' in opts ? opts.widgetChild : null;
    this.controller = controller;
    this.animation = animation;
    this.transition = transition;
    this.widgetChild = widgetChild;
    if (!(animation != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 23, 15, "animation != null");
    if (!(transition != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 24, 15, "transition != null");
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 25, 15, "controller != null");
    ;
  }).prototype = animated_switcher._ChildEntry.prototype;
  dart.addTypeTests(animated_switcher._ChildEntry);
  dart.setLibraryUri(animated_switcher._ChildEntry, "package:flutter/src/widgets/animated_switcher.dart");
  dart.setFieldSignature(animated_switcher._ChildEntry, () => ({
    __proto__: dart.getFields(animated_switcher._ChildEntry.__proto__),
    controller: dart.finalFieldType(animation_controller.AnimationController),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    transition: dart.fieldType(framework.Widget),
    widgetChild: dart.fieldType(framework.Widget)
  }));
  dart.defineExtensionMethods(animated_switcher._ChildEntry, ['toString']);
  var C1588;
  var C1589;
  var C1592;
  var C1593;
  var C1591;
  var C1590;
  var C1596;
  var C1597;
  var C1595;
  var C1594;
  var child$54 = dart.privateName(animated_switcher, "AnimatedSwitcher.child");
  var duration$2 = dart.privateName(animated_switcher, "AnimatedSwitcher.duration");
  var reverseDuration$1 = dart.privateName(animated_switcher, "AnimatedSwitcher.reverseDuration");
  var switchInCurve$ = dart.privateName(animated_switcher, "AnimatedSwitcher.switchInCurve");
  var switchOutCurve$ = dart.privateName(animated_switcher, "AnimatedSwitcher.switchOutCurve");
  var transitionBuilder$ = dart.privateName(animated_switcher, "AnimatedSwitcher.transitionBuilder");
  var layoutBuilder$0 = dart.privateName(animated_switcher, "AnimatedSwitcher.layoutBuilder");
  animated_switcher.AnimatedSwitcher = class AnimatedSwitcher extends framework.StatefulWidget {
    get child() {
      return this[child$54];
    }
    set child(value) {
      super.child = value;
    }
    get duration() {
      return this[duration$2];
    }
    set duration(value) {
      super.duration = value;
    }
    get reverseDuration() {
      return this[reverseDuration$1];
    }
    set reverseDuration(value) {
      super.reverseDuration = value;
    }
    get switchInCurve() {
      return this[switchInCurve$];
    }
    set switchInCurve(value) {
      super.switchInCurve = value;
    }
    get switchOutCurve() {
      return this[switchOutCurve$];
    }
    set switchOutCurve(value) {
      super.switchOutCurve = value;
    }
    get transitionBuilder() {
      return this[transitionBuilder$];
    }
    set transitionBuilder(value) {
      super.transitionBuilder = value;
    }
    get layoutBuilder() {
      return this[layoutBuilder$0];
    }
    set layoutBuilder(value) {
      super.layoutBuilder = value;
    }
    createState() {
      return new animated_switcher._AnimatedSwitcherState.new();
    }
    static defaultTransitionBuilder(child, animation) {
      return new transitions.FadeTransition.new({opacity: animation, child: child, $creationLocationd_0dea112b090073317d4: C1590 || CT.C1590});
    }
    static defaultLayoutBuilder(currentChild, previousChildren) {
      return new basic.Stack.new({children: (() => {
          let t37 = JSArrayOfWidget().of([]);
          for (let t38 of previousChildren)
            t37[$add](t38);
          if (currentChild != null) t37[$add](currentChild);
          return t37;
        })(), alignment: alignment$.Alignment.center, $creationLocationd_0dea112b090073317d4: C1594 || CT.C1594});
    }
    debugFillProperties(properties) {
      let t39;
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.IntProperty.new("duration", this.duration.inMilliseconds, {unit: "ms"}));
      properties.add(new diagnostics$.IntProperty.new("reverseDuration", (t39 = this.reverseDuration, t39 == null ? null : t39.inMilliseconds), {unit: "ms", defaultValue: null}));
    }
  };
  (animated_switcher.AnimatedSwitcher.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let reverseDuration = opts && 'reverseDuration' in opts ? opts.reverseDuration : null;
    let switchInCurve = opts && 'switchInCurve' in opts ? opts.switchInCurve : C1186 || CT.C1186;
    let switchOutCurve = opts && 'switchOutCurve' in opts ? opts.switchOutCurve : C1186 || CT.C1186;
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : C1588 || CT.C1588;
    let layoutBuilder = opts && 'layoutBuilder' in opts ? opts.layoutBuilder : C1589 || CT.C1589;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$54] = child;
    this[duration$2] = duration;
    this[reverseDuration$1] = reverseDuration;
    this[switchInCurve$] = switchInCurve;
    this[switchOutCurve$] = switchOutCurve;
    this[transitionBuilder$] = transitionBuilder;
    this[layoutBuilder$0] = layoutBuilder;
    if (!(duration != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 162, 15, "duration != null");
    if (!(switchInCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 163, 15, "switchInCurve != null");
    if (!(switchOutCurve != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 164, 15, "switchOutCurve != null");
    if (!(transitionBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 165, 15, "transitionBuilder != null");
    if (!(layoutBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 166, 15, "layoutBuilder != null");
    animated_switcher.AnimatedSwitcher.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = animated_switcher.AnimatedSwitcher.prototype;
  dart.addTypeTests(animated_switcher.AnimatedSwitcher);
  dart.setMethodSignature(animated_switcher.AnimatedSwitcher, () => ({
    __proto__: dart.getMethods(animated_switcher.AnimatedSwitcher.__proto__),
    createState: dart.fnType(animated_switcher._AnimatedSwitcherState, [])
  }));
  dart.setLibraryUri(animated_switcher.AnimatedSwitcher, "package:flutter/src/widgets/animated_switcher.dart");
  dart.setFieldSignature(animated_switcher.AnimatedSwitcher, () => ({
    __proto__: dart.getFields(animated_switcher.AnimatedSwitcher.__proto__),
    child: dart.finalFieldType(framework.Widget),
    duration: dart.finalFieldType(core.Duration),
    reverseDuration: dart.finalFieldType(core.Duration),
    switchInCurve: dart.finalFieldType(curves.Curve),
    switchOutCurve: dart.finalFieldType(curves.Curve),
    transitionBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.Widget, animation$.Animation$(core.double)])),
    layoutBuilder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.Widget, core.List$(framework.Widget)]))
  }));
  var _currentEntry = dart.privateName(animated_switcher, "_currentEntry");
  var _outgoingEntries = dart.privateName(animated_switcher, "_outgoingEntries");
  var _outgoingWidgets = dart.privateName(animated_switcher, "_outgoingWidgets");
  var _childNumber = dart.privateName(animated_switcher, "_childNumber");
  var _addEntryForNewChild = dart.privateName(animated_switcher, "_addEntryForNewChild");
  var _updateTransitionForEntry = dart.privateName(animated_switcher, "_updateTransitionForEntry");
  var _markChildWidgetCacheAsDirty = dart.privateName(animated_switcher, "_markChildWidgetCacheAsDirty");
  var _newEntry = dart.privateName(animated_switcher, "_newEntry");
  var C1600;
  var C1601;
  var C1599;
  var C1598;
  var C1604;
  var C1605;
  var C1603;
  var C1602;
  var _rebuildOutgoingWidgetsIfNeeded = dart.privateName(animated_switcher, "_rebuildOutgoingWidgetsIfNeeded");
  const State_TickerProviderStateMixin$36$7 = class State_TickerProviderStateMixin extends framework.State$(animated_switcher.AnimatedSwitcher) {};
  (State_TickerProviderStateMixin$36$7.new = function() {
    ticker_provider.TickerProviderStateMixin$(animated_switcher.AnimatedSwitcher)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$7.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$7.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$7, ticker_provider.TickerProviderStateMixin$(animated_switcher.AnimatedSwitcher));
  animated_switcher._AnimatedSwitcherState = class _AnimatedSwitcherState extends State_TickerProviderStateMixin$36$7 {
    initState() {
      super.initState();
      this[_addEntryForNewChild]({animate: false});
    }
    didUpdateWidget(oldWidget) {
      animated_switcher.AnimatedSwitcher._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.transitionBuilder, oldWidget.transitionBuilder)) {
        this[_outgoingEntries][$forEach](dart.bind(this, _updateTransitionForEntry));
        if (this[_currentEntry] != null) this[_updateTransitionForEntry](this[_currentEntry]);
        this[_markChildWidgetCacheAsDirty]();
      }
      let hasNewChild = this.widget.child != null;
      let hasOldChild = this[_currentEntry] != null;
      if (!hasNewChild[$_equals](hasOldChild) || hasNewChild && !dart.test(framework.Widget.canUpdate(this.widget.child, this[_currentEntry].widgetChild))) {
        this[_childNumber] = dart.notNull(this[_childNumber]) + 1;
        this[_addEntryForNewChild]({animate: true});
      } else if (this[_currentEntry] != null) {
        if (!(hasOldChild && hasNewChild)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 331, 14, "hasOldChild && hasNewChild");
        if (!dart.test(framework.Widget.canUpdate(this.widget.child, this[_currentEntry].widgetChild))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 332, 14, "Widget.canUpdate(widget.child, _currentEntry.widgetChild)");
        this[_currentEntry].widgetChild = this.widget.child;
        this[_updateTransitionForEntry](this[_currentEntry]);
        this[_markChildWidgetCacheAsDirty]();
      }
    }
    [_addEntryForNewChild](opts) {
      let animate = opts && 'animate' in opts ? opts.animate : null;
      if (!(dart.test(animate) || this[_currentEntry] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 344, 12, "animate || _currentEntry == null");
      if (this[_currentEntry] != null) {
        if (!dart.test(animate)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 346, 14, "animate");
        if (!!dart.test(this[_outgoingEntries].contains(this[_currentEntry]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 347, 14, "!_outgoingEntries.contains(_currentEntry)");
        this[_outgoingEntries].add(this[_currentEntry]);
        this[_currentEntry].controller.reverse();
        this[_markChildWidgetCacheAsDirty]();
        this[_currentEntry] = null;
      }
      if (this.widget.child == null) return;
      let controller = new animation_controller.AnimationController.new({duration: this.widget.duration, reverseDuration: this.widget.reverseDuration, vsync: this});
      let animation = new animations.CurvedAnimation.new({parent: controller, curve: this.widget.switchInCurve, reverseCurve: this.widget.switchOutCurve});
      this[_currentEntry] = this[_newEntry]({child: this.widget.child, controller: controller, animation: animation, builder: this.widget.transitionBuilder});
      if (dart.test(animate)) {
        controller.forward();
      } else {
        if (!dart.test(this[_outgoingEntries][$isEmpty])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 374, 14, "_outgoingEntries.isEmpty");
        controller.value = 1.0;
      }
    }
    [_newEntry](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let entry = new animated_switcher._ChildEntry.new({widgetChild: child, transition: basic.KeyedSubtree.wrap(builder(child, animation), this[_childNumber], {$creationLocationd_0dea112b090073317d4: C1598 || CT.C1598}), animation: animation, controller: controller});
      animation.addStatusListener(dart.fn(status => {
        if (dart.equals(status, animation$.AnimationStatus.dismissed)) {
          this.setState(dart.fn(() => {
            if (!dart.test(this.mounted)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 394, 18, "mounted");
            if (!dart.test(this[_outgoingEntries].contains(entry))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 395, 18, "_outgoingEntries.contains(entry)");
            this[_outgoingEntries].remove(entry);
            this[_markChildWidgetCacheAsDirty]();
          }, VoidToNull()));
          controller.dispose();
        }
      }, AnimationStatusToNull()));
      return entry;
    }
    [_markChildWidgetCacheAsDirty]() {
      this[_outgoingWidgets] = null;
    }
    [_updateTransitionForEntry](entry) {
      entry.transition = new basic.KeyedSubtree.new({key: entry.transition.key, child: this.widget.transitionBuilder(entry.widgetChild, entry.animation), $creationLocationd_0dea112b090073317d4: C1602 || CT.C1602});
    }
    [_rebuildOutgoingWidgetsIfNeeded]() {
      this[_outgoingWidgets] == null ? this[_outgoingWidgets] = ListOfWidget().unmodifiable(this[_outgoingEntries][$map](framework.Widget, dart.fn(entry => entry.transition, _ChildEntryToWidget()))) : null;
      if (!(this[_outgoingEntries][$length] == this[_outgoingWidgets][$length])) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 420, 12, "_outgoingEntries.length == _outgoingWidgets.length");
      if (!(dart.test(this[_outgoingEntries][$isEmpty]) || dart.equals(this[_outgoingEntries][$last].transition, this[_outgoingWidgets][$last]))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/animated_switcher.dart", 421, 12, "_outgoingEntries.isEmpty || _outgoingEntries.last.transition == _outgoingWidgets.last");
    }
    dispose() {
      if (this[_currentEntry] != null) this[_currentEntry].controller.dispose();
      for (let entry of this[_outgoingEntries])
        entry.controller.dispose();
      super.dispose();
    }
    build(context) {
      let t39;
      this[_rebuildOutgoingWidgetsIfNeeded]();
      return this.widget.layoutBuilder((t39 = this[_currentEntry], t39 == null ? null : t39.transition), this[_outgoingWidgets]);
    }
  };
  (animated_switcher._AnimatedSwitcherState.new = function() {
    this[_currentEntry] = null;
    this[_outgoingEntries] = LinkedHashSetOf_ChildEntry().new();
    this[_outgoingWidgets] = C27 || CT.C27;
    this[_childNumber] = 0;
    animated_switcher._AnimatedSwitcherState.__proto__.new.call(this);
    ;
  }).prototype = animated_switcher._AnimatedSwitcherState.prototype;
  dart.addTypeTests(animated_switcher._AnimatedSwitcherState);
  dart.setMethodSignature(animated_switcher._AnimatedSwitcherState, () => ({
    __proto__: dart.getMethods(animated_switcher._AnimatedSwitcherState.__proto__),
    [_addEntryForNewChild]: dart.fnType(dart.void, [], {animate: core.bool}, {}),
    [_newEntry]: dart.fnType(animated_switcher._ChildEntry, [], {animation: animation$.Animation$(core.double), builder: dart.fnType(framework.Widget, [framework.Widget, animation$.Animation$(core.double)]), child: framework.Widget, controller: animation_controller.AnimationController}, {}),
    [_markChildWidgetCacheAsDirty]: dart.fnType(dart.void, []),
    [_updateTransitionForEntry]: dart.fnType(dart.void, [animated_switcher._ChildEntry]),
    [_rebuildOutgoingWidgetsIfNeeded]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(animated_switcher._AnimatedSwitcherState, "package:flutter/src/widgets/animated_switcher.dart");
  dart.setFieldSignature(animated_switcher._AnimatedSwitcherState, () => ({
    __proto__: dart.getFields(animated_switcher._AnimatedSwitcherState.__proto__),
    [_currentEntry]: dart.fieldType(animated_switcher._ChildEntry),
    [_outgoingEntries]: dart.finalFieldType(core.Set$(animated_switcher._ChildEntry)),
    [_outgoingWidgets]: dart.fieldType(core.List$(framework.Widget)),
    [_childNumber]: dart.fieldType(core.int)
  }));
  var child$55 = dart.privateName(will_pop_scope, "WillPopScope.child");
  var onWillPop$ = dart.privateName(will_pop_scope, "WillPopScope.onWillPop");
  will_pop_scope.WillPopScope = class WillPopScope extends framework.StatefulWidget {
    get child() {
      return this[child$55];
    }
    set child(value) {
      super.child = value;
    }
    get onWillPop() {
      return this[onWillPop$];
    }
    set onWillPop(value) {
      super.onWillPop = value;
    }
    createState() {
      return new will_pop_scope._WillPopScopeState.new();
    }
  };
  (will_pop_scope.WillPopScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$55] = child;
    this[onWillPop$] = onWillPop;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/will_pop_scope.dart", 25, 15, "child != null");
    will_pop_scope.WillPopScope.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = will_pop_scope.WillPopScope.prototype;
  dart.addTypeTests(will_pop_scope.WillPopScope);
  dart.setMethodSignature(will_pop_scope.WillPopScope, () => ({
    __proto__: dart.getMethods(will_pop_scope.WillPopScope.__proto__),
    createState: dart.fnType(will_pop_scope._WillPopScopeState, [])
  }));
  dart.setLibraryUri(will_pop_scope.WillPopScope, "package:flutter/src/widgets/will_pop_scope.dart");
  dart.setFieldSignature(will_pop_scope.WillPopScope, () => ({
    __proto__: dart.getFields(will_pop_scope.WillPopScope.__proto__),
    child: dart.finalFieldType(framework.Widget),
    onWillPop: dart.finalFieldType(dart.fnType(async.Future$(core.bool), []))
  }));
  var _route = dart.privateName(will_pop_scope, "_route");
  will_pop_scope._WillPopScopeState = class _WillPopScopeState extends framework.State$(will_pop_scope.WillPopScope) {
    didChangeDependencies() {
      let t39, t39$;
      super.didChangeDependencies();
      if (this.widget.onWillPop != null) {
        t39 = this[_route];
        t39 == null ? null : t39.removeScopedWillPopCallback(this.widget.onWillPop);
      }
      this[_route] = routes.ModalRoute.of(core.Object, this.context);
      if (this.widget.onWillPop != null) {
        t39$ = this[_route];
        t39$ == null ? null : t39$.addScopedWillPopCallback(this.widget.onWillPop);
      }
    }
    didUpdateWidget(oldWidget) {
      will_pop_scope.WillPopScope._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this[_route], routes.ModalRoute.of(core.Object, this.context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/will_pop_scope.dart", 59, 12, "_route == ModalRoute.of(context)");
      if (!dart.equals(this.widget.onWillPop, oldWidget.onWillPop) && this[_route] != null) {
        if (oldWidget.onWillPop != null) this[_route].removeScopedWillPopCallback(oldWidget.onWillPop);
        if (this.widget.onWillPop != null) this[_route].addScopedWillPopCallback(this.widget.onWillPop);
      }
    }
    dispose() {
      let t39;
      if (this.widget.onWillPop != null) {
        t39 = this[_route];
        t39 == null ? null : t39.removeScopedWillPopCallback(this.widget.onWillPop);
      }
      super.dispose();
    }
    build(context) {
      return this.widget.child;
    }
  };
  (will_pop_scope._WillPopScopeState.new = function() {
    this[_route] = null;
    will_pop_scope._WillPopScopeState.__proto__.new.call(this);
    ;
  }).prototype = will_pop_scope._WillPopScopeState.prototype;
  dart.addTypeTests(will_pop_scope._WillPopScopeState);
  dart.setMethodSignature(will_pop_scope._WillPopScopeState, () => ({
    __proto__: dart.getMethods(will_pop_scope._WillPopScopeState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(will_pop_scope._WillPopScopeState, "package:flutter/src/widgets/will_pop_scope.dart");
  dart.setFieldSignature(will_pop_scope._WillPopScopeState, () => ({
    __proto__: dart.getFields(will_pop_scope._WillPopScopeState.__proto__),
    [_route]: dart.fieldType(routes.ModalRoute)
  }));
  sliver_persistent_header$.SliverPersistentHeaderDelegate = class SliverPersistentHeaderDelegate extends core.Object {
    get snapConfiguration() {
      return null;
    }
    get stretchConfiguration() {
      return null;
    }
  };
  (sliver_persistent_header$.SliverPersistentHeaderDelegate.new = function() {
    ;
  }).prototype = sliver_persistent_header$.SliverPersistentHeaderDelegate.prototype;
  dart.addTypeTests(sliver_persistent_header$.SliverPersistentHeaderDelegate);
  dart.setGetterSignature(sliver_persistent_header$.SliverPersistentHeaderDelegate, () => ({
    __proto__: dart.getGetters(sliver_persistent_header$.SliverPersistentHeaderDelegate.__proto__),
    snapConfiguration: sliver_persistent_header.FloatingHeaderSnapConfiguration,
    stretchConfiguration: sliver_persistent_header.OverScrollHeaderStretchConfiguration
  }));
  dart.setLibraryUri(sliver_persistent_header$.SliverPersistentHeaderDelegate, "package:flutter/src/widgets/sliver_persistent_header.dart");
  var C1608;
  var C1607;
  var C1606;
  var C1611;
  var C1610;
  var C1609;
  var C1614;
  var C1613;
  var C1612;
  var C1617;
  var C1616;
  var C1615;
  var delegate$5 = dart.privateName(sliver_persistent_header$, "SliverPersistentHeader.delegate");
  var pinned$ = dart.privateName(sliver_persistent_header$, "SliverPersistentHeader.pinned");
  var floating$ = dart.privateName(sliver_persistent_header$, "SliverPersistentHeader.floating");
  sliver_persistent_header$.SliverPersistentHeader = class SliverPersistentHeader extends framework.StatelessWidget {
    get delegate() {
      return this[delegate$5];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get pinned() {
      return this[pinned$];
    }
    set pinned(value) {
      super.pinned = value;
    }
    get floating() {
      return this[floating$];
    }
    set floating(value) {
      super.floating = value;
    }
    build(context) {
      if (dart.test(this.floating) && dart.test(this.pinned)) return new sliver_persistent_header$._SliverFloatingPinnedPersistentHeader.new({delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C1606 || CT.C1606});
      if (dart.test(this.pinned)) return new sliver_persistent_header$._SliverPinnedPersistentHeader.new({delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C1609 || CT.C1609});
      if (dart.test(this.floating)) return new sliver_persistent_header$._SliverFloatingPersistentHeader.new({delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C1612 || CT.C1612});
      return new sliver_persistent_header$._SliverScrollingPersistentHeader.new({delegate: this.delegate, $creationLocationd_0dea112b090073317d4: C1615 || CT.C1615});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverPersistentHeaderDelegate()).new("delegate", this.delegate));
      let flags = (() => {
        let t39 = JSArrayOfString().of([]);
        if (dart.test(this.pinned)) t39[$add]("pinned");
        if (dart.test(this.floating)) t39[$add]("floating");
        return t39;
      })();
      if (dart.test(flags[$isEmpty])) flags[$add]("normal");
      properties.add(new (IterablePropertyOfString()).new("mode", flags));
    }
  };
  (sliver_persistent_header$.SliverPersistentHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let pinned = opts && 'pinned' in opts ? opts.pinned : false;
    let floating = opts && 'floating' in opts ? opts.floating : false;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$5] = delegate;
    this[pinned$] = pinned;
    this[floating$] = floating;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 112, 15, "delegate != null");
    if (!(pinned != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 113, 15, "pinned != null");
    if (!(floating != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 114, 15, "floating != null");
    sliver_persistent_header$.SliverPersistentHeader.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$.SliverPersistentHeader.prototype;
  dart.addTypeTests(sliver_persistent_header$.SliverPersistentHeader);
  dart.setMethodSignature(sliver_persistent_header$.SliverPersistentHeader, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$.SliverPersistentHeader.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_persistent_header$.SliverPersistentHeader, "package:flutter/src/widgets/sliver_persistent_header.dart");
  dart.setFieldSignature(sliver_persistent_header$.SliverPersistentHeader, () => ({
    __proto__: dart.getFields(sliver_persistent_header$.SliverPersistentHeader.__proto__),
    delegate: dart.finalFieldType(sliver_persistent_header$.SliverPersistentHeaderDelegate),
    pinned: dart.finalFieldType(core.bool),
    floating: dart.finalFieldType(core.bool)
  }));
  var _element$ = dart.privateName(sliver_persistent_header$, "_element");
  var _build$ = dart.privateName(sliver_persistent_header$, "_build");
  sliver_persistent_header$._SliverPersistentHeaderElement = class _SliverPersistentHeaderElement extends framework.RenderObjectElement {
    get widget() {
      return sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.as(super.widget);
    }
    get renderObject() {
      return sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin.as(super.renderObject);
    }
    mount(parent, newSlot) {
      super.mount(parent, newSlot);
      this.renderObject[_element$] = this;
    }
    unmount() {
      super.unmount();
      this.renderObject[_element$] = null;
    }
    update(newWidget) {
      sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget._check(newWidget);
      let oldWidget = this.widget;
      super.update(newWidget);
      let newDelegate = newWidget.delegate;
      let oldDelegate = oldWidget.delegate;
      if (!dart.equals(newDelegate, oldDelegate) && (!dart.equals(dart.runtimeType(newDelegate), dart.runtimeType(oldDelegate)) || dart.test(newDelegate.shouldRebuild(oldDelegate)))) this.renderObject.triggerRebuild();
    }
    performRebuild() {
      super.performRebuild();
      this.renderObject.triggerRebuild();
    }
    [_build$](shrinkOffset, overlapsContent) {
      this.owner.buildScope(this, dart.fn(() => {
        this.child = this.updateChild(this.child, this.widget.delegate.build(this, shrinkOffset, overlapsContent), null);
      }, VoidToNull()));
    }
    forgetChild(child) {
      if (!dart.equals(child, this.child)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 231, 12, "child == this.child");
      this.child = null;
      super.forgetChild(child);
    }
    insertChildRenderObject(child, slot) {
      box$.RenderBox._check(child);
      if (!dart.test(this.renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 238, 12, "renderObject.debugValidateChild(child)");
      this.renderObject.child = child;
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 244, 12, "false");
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      this.renderObject.child = null;
    }
    visitChildren(visitor) {
      if (this.child != null) visitor(this.child);
    }
  };
  (sliver_persistent_header$._SliverPersistentHeaderElement.new = function(widget) {
    this.child = null;
    sliver_persistent_header$._SliverPersistentHeaderElement.__proto__.new.call(this, widget);
    ;
  }).prototype = sliver_persistent_header$._SliverPersistentHeaderElement.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverPersistentHeaderElement);
  dart.setMethodSignature(sliver_persistent_header$._SliverPersistentHeaderElement, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverPersistentHeaderElement.__proto__),
    [_build$]: dart.fnType(dart.void, [core.double, core.bool]),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(sliver_persistent_header$._SliverPersistentHeaderElement, () => ({
    __proto__: dart.getGetters(sliver_persistent_header$._SliverPersistentHeaderElement.__proto__),
    widget: sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget,
    renderObject: sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverPersistentHeaderElement, "package:flutter/src/widgets/sliver_persistent_header.dart");
  dart.setFieldSignature(sliver_persistent_header$._SliverPersistentHeaderElement, () => ({
    __proto__: dart.getFields(sliver_persistent_header$._SliverPersistentHeaderElement.__proto__),
    child: dart.fieldType(framework.Element)
  }));
  var delegate$6 = dart.privateName(sliver_persistent_header$, "_SliverPersistentHeaderRenderObjectWidget.delegate");
  sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget = class _SliverPersistentHeaderRenderObjectWidget extends framework.RenderObjectWidget {
    get delegate() {
      return this[delegate$6];
    }
    set delegate(value) {
      super.delegate = value;
    }
    createElement() {
      return new sliver_persistent_header$._SliverPersistentHeaderElement.new(this);
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfSliverPersistentHeaderDelegate()).new("delegate", this.delegate));
    }
  };
  (sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[delegate$6] = delegate;
    if (!(delegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 263, 15, "delegate != null");
    sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget);
  dart.setMethodSignature(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.__proto__),
    createElement: dart.fnType(sliver_persistent_header$._SliverPersistentHeaderElement, [])
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget, "package:flutter/src/widgets/sliver_persistent_header.dart");
  dart.setFieldSignature(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget, () => ({
    __proto__: dart.getFields(sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget.__proto__),
    delegate: dart.finalFieldType(sliver_persistent_header$.SliverPersistentHeaderDelegate)
  }));
  sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin = class _RenderSliverPersistentHeaderForWidgetsMixin extends sliver_persistent_header.RenderSliverPersistentHeader {};
  sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinOn] = RenderSliverPersistentHeader => class _RenderSliverPersistentHeaderForWidgetsMixin extends RenderSliverPersistentHeader {
    get minExtent() {
      return this[_element$].widget.delegate.minExtent;
    }
    get maxExtent() {
      return this[_element$].widget.delegate.maxExtent;
    }
    updateChild(shrinkOffset, overlapsContent) {
      if (!(this[_element$] != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/sliver_persistent_header.dart", 297, 12, "_element != null");
      this[_element$][_build$](shrinkOffset, overlapsContent);
    }
    triggerRebuild() {
      this.markNeedsLayout();
    }
  };
  (sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinNew] = function() {
    this[_element$] = null;
  }).prototype = sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin.prototype;
  dart.addTypeTests(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin);
  sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.implements] = () => [sliver_persistent_header.RenderSliverPersistentHeader];
  dart.setMethodSignature(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin.__proto__),
    triggerRebuild: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, () => ({
    __proto__: dart.getGetters(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin.__proto__),
    minExtent: core.double,
    maxExtent: core.double
  }));
  dart.setLibraryUri(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, "package:flutter/src/widgets/sliver_persistent_header.dart");
  dart.setFieldSignature(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, () => ({
    __proto__: dart.getFields(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin.__proto__),
    [_element$]: dart.fieldType(sliver_persistent_header$._SliverPersistentHeaderElement)
  }));
  sliver_persistent_header$._SliverScrollingPersistentHeader = class _SliverScrollingPersistentHeader extends sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets.new({stretchConfiguration: this.delegate.stretchConfiguration});
    }
  };
  (sliver_persistent_header$._SliverScrollingPersistentHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_persistent_header$._SliverScrollingPersistentHeader.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$._SliverScrollingPersistentHeader.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverScrollingPersistentHeader);
  dart.setMethodSignature(sliver_persistent_header$._SliverScrollingPersistentHeader, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverScrollingPersistentHeader.__proto__),
    createRenderObject: dart.fnType(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverScrollingPersistentHeader, "package:flutter/src/widgets/sliver_persistent_header.dart");
  const RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 = class RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin extends sliver_persistent_header.RenderSliverScrollingPersistentHeader {};
  (RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.new = function(opts) {
    sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinNew].call(this);
    RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.__proto__.new.call(this, opts);
  }).prototype = RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.prototype;
  dart.applyMixin(RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36, sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin);
  sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets = class _RenderSliverScrollingPersistentHeaderForWidgets extends RenderSliverScrollingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 {};
  (sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets.__proto__.new.call(this, {child: child, stretchConfiguration: stretchConfiguration});
    ;
  }).prototype = sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets.prototype;
  dart.addTypeTests(sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets);
  dart.setLibraryUri(sliver_persistent_header$._RenderSliverScrollingPersistentHeaderForWidgets, "package:flutter/src/widgets/sliver_persistent_header.dart");
  sliver_persistent_header$._SliverPinnedPersistentHeader = class _SliverPinnedPersistentHeader extends sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets.new({stretchConfiguration: this.delegate.stretchConfiguration});
    }
  };
  (sliver_persistent_header$._SliverPinnedPersistentHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_persistent_header$._SliverPinnedPersistentHeader.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$._SliverPinnedPersistentHeader.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverPinnedPersistentHeader);
  dart.setMethodSignature(sliver_persistent_header$._SliverPinnedPersistentHeader, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverPinnedPersistentHeader.__proto__),
    createRenderObject: dart.fnType(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverPinnedPersistentHeader, "package:flutter/src/widgets/sliver_persistent_header.dart");
  const RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 = class RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin extends sliver_persistent_header.RenderSliverPinnedPersistentHeader {};
  (RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.new = function(opts) {
    sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinNew].call(this);
    RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.__proto__.new.call(this, opts);
  }).prototype = RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.prototype;
  dart.applyMixin(RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36, sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin);
  sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets = class _RenderSliverPinnedPersistentHeaderForWidgets extends RenderSliverPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 {};
  (sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets.__proto__.new.call(this, {child: child, stretchConfiguration: stretchConfiguration});
    ;
  }).prototype = sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets.prototype;
  dart.addTypeTests(sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets);
  dart.setLibraryUri(sliver_persistent_header$._RenderSliverPinnedPersistentHeaderForWidgets, "package:flutter/src/widgets/sliver_persistent_header.dart");
  sliver_persistent_header$._SliverFloatingPersistentHeader = class _SliverFloatingPersistentHeader extends sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets.new({snapConfiguration: this.delegate.snapConfiguration, stretchConfiguration: this.delegate.stretchConfiguration});
    }
    updateRenderObject(context, renderObject) {
      sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets._check(renderObject);
      renderObject.snapConfiguration = this.delegate.snapConfiguration;
      renderObject.stretchConfiguration = this.delegate.stretchConfiguration;
    }
  };
  (sliver_persistent_header$._SliverFloatingPersistentHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_persistent_header$._SliverFloatingPersistentHeader.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$._SliverFloatingPersistentHeader.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverFloatingPersistentHeader);
  dart.setMethodSignature(sliver_persistent_header$._SliverFloatingPersistentHeader, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverFloatingPersistentHeader.__proto__),
    createRenderObject: dart.fnType(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverFloatingPersistentHeader, "package:flutter/src/widgets/sliver_persistent_header.dart");
  const RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 = class RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin extends sliver_persistent_header.RenderSliverFloatingPinnedPersistentHeader {};
  (RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.new = function(opts) {
    sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinNew].call(this);
    RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.__proto__.new.call(this, opts);
  }).prototype = RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.prototype;
  dart.applyMixin(RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36, sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin);
  sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets = class _RenderSliverFloatingPinnedPersistentHeaderForWidgets extends RenderSliverFloatingPinnedPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 {};
  (sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets.__proto__.new.call(this, {child: child, snapConfiguration: snapConfiguration, stretchConfiguration: stretchConfiguration});
    ;
  }).prototype = sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets.prototype;
  dart.addTypeTests(sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets);
  dart.setLibraryUri(sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets, "package:flutter/src/widgets/sliver_persistent_header.dart");
  sliver_persistent_header$._SliverFloatingPinnedPersistentHeader = class _SliverFloatingPinnedPersistentHeader extends sliver_persistent_header$._SliverPersistentHeaderRenderObjectWidget {
    createRenderObject(context) {
      return new sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets.new({snapConfiguration: this.delegate.snapConfiguration, stretchConfiguration: this.delegate.stretchConfiguration});
    }
    updateRenderObject(context, renderObject) {
      sliver_persistent_header$._RenderSliverFloatingPinnedPersistentHeaderForWidgets._check(renderObject);
      renderObject.snapConfiguration = this.delegate.snapConfiguration;
      renderObject.stretchConfiguration = this.delegate.stretchConfiguration;
    }
  };
  (sliver_persistent_header$._SliverFloatingPinnedPersistentHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    sliver_persistent_header$._SliverFloatingPinnedPersistentHeader.__proto__.new.call(this, {key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = sliver_persistent_header$._SliverFloatingPinnedPersistentHeader.prototype;
  dart.addTypeTests(sliver_persistent_header$._SliverFloatingPinnedPersistentHeader);
  dart.setMethodSignature(sliver_persistent_header$._SliverFloatingPinnedPersistentHeader, () => ({
    __proto__: dart.getMethods(sliver_persistent_header$._SliverFloatingPinnedPersistentHeader.__proto__),
    createRenderObject: dart.fnType(sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_persistent_header$._SliverFloatingPinnedPersistentHeader, "package:flutter/src/widgets/sliver_persistent_header.dart");
  const RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 = class RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin extends sliver_persistent_header.RenderSliverFloatingPersistentHeader {};
  (RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.new = function(opts) {
    sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin[dart.mixinNew].call(this);
    RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.__proto__.new.call(this, opts);
  }).prototype = RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36.prototype;
  dart.applyMixin(RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36, sliver_persistent_header$._RenderSliverPersistentHeaderForWidgetsMixin);
  sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets = class _RenderSliverFloatingPersistentHeaderForWidgets extends RenderSliverFloatingPersistentHeader__RenderSliverPersistentHeaderForWidgetsMixin$36 {};
  (sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets.__proto__.new.call(this, {child: child, snapConfiguration: snapConfiguration, stretchConfiguration: stretchConfiguration});
    ;
  }).prototype = sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets.prototype;
  dart.addTypeTests(sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets);
  dart.setLibraryUri(sliver_persistent_header$._RenderSliverFloatingPersistentHeaderForWidgets, "package:flutter/src/widgets/sliver_persistent_header.dart");
  var C1620;
  var C1621;
  var C1619;
  var C1618;
  var C1624;
  var C1625;
  var C1623;
  var C1622;
  var C1628;
  var C1629;
  var C1630;
  var C1631;
  var C1632;
  var C1633;
  var C1634;
  var C1627;
  var C1626;
  var C1637;
  var C1638;
  var C1636;
  var C1635;
  var image$3 = dart.privateName(image_icon, "ImageIcon.image");
  var size$4 = dart.privateName(image_icon, "ImageIcon.size");
  var color$11 = dart.privateName(image_icon, "ImageIcon.color");
  var semanticLabel$0 = dart.privateName(image_icon, "ImageIcon.semanticLabel");
  image_icon.ImageIcon = class ImageIcon extends framework.StatelessWidget {
    get image() {
      return this[image$3];
    }
    set image(value) {
      super.image = value;
    }
    get size() {
      return this[size$4];
    }
    set size(value) {
      super.size = value;
    }
    get color() {
      return this[color$11];
    }
    set color(value) {
      super.color = value;
    }
    get semanticLabel() {
      return this[semanticLabel$0];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    build(context) {
      let t40, t40$;
      let iconTheme = icon_theme.IconTheme.of(context);
      let iconSize = (t40 = this.size, t40 == null ? iconTheme.size : t40);
      if (this.image == null) return new basic.Semantics.new({label: this.semanticLabel, child: new basic.SizedBox.new({width: iconSize, height: iconSize, $creationLocationd_0dea112b090073317d4: C1618 || CT.C1618}), $creationLocationd_0dea112b090073317d4: C1622 || CT.C1622});
      let iconOpacity = iconTheme.opacity;
      let iconColor = (t40$ = this.color, t40$ == null ? iconTheme.color : t40$);
      if (iconOpacity != null && iconOpacity !== 1.0) iconColor = iconColor.withOpacity(dart.notNull(iconColor.opacity) * dart.notNull(iconOpacity));
      return new basic.Semantics.new({label: this.semanticLabel, child: new image$.Image.new({image: this.image, width: iconSize, height: iconSize, color: iconColor, fit: box_fit.BoxFit.scaleDown, alignment: alignment$.Alignment.center, excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C1626 || CT.C1626}), $creationLocationd_0dea112b090073317d4: C1635 || CT.C1635});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfImageProvider()).new("image", this.image, {ifNull: "<empty>", showName: false}));
      properties.add(new diagnostics$.DoubleProperty.new("size", this.size, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
    }
  };
  (image_icon.ImageIcon.new = function(image, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[image$3] = image;
    this[size$4] = size;
    this[color$11] = color;
    this[semanticLabel$0] = semanticLabel;
    image_icon.ImageIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = image_icon.ImageIcon.prototype;
  dart.addTypeTests(image_icon.ImageIcon);
  dart.setMethodSignature(image_icon.ImageIcon, () => ({
    __proto__: dart.getMethods(image_icon.ImageIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(image_icon.ImageIcon, "package:flutter/src/widgets/image_icon.dart");
  dart.setFieldSignature(image_icon.ImageIcon, () => ({
    __proto__: dart.getFields(image_icon.ImageIcon.__proto__),
    image: dart.finalFieldType(image_provider.ImageProvider),
    size: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    semanticLabel: dart.finalFieldType(core.String)
  }));
  var C1641;
  var C1642;
  var C1640;
  var C1639;
  var C1645;
  var C1646;
  var C1644;
  var C1643;
  var C1649;
  var C1650;
  var C1651;
  var C1648;
  var C1647;
  var C1654;
  var C1655;
  var C1656;
  var C1657;
  var C1653;
  var C1652;
  var C1660;
  var C1659;
  var C1658;
  var C1663;
  var C1664;
  var C1665;
  var C1662;
  var C1661;
  var C1668;
  var C1667;
  var C1666;
  var C1671;
  var C1672;
  var C1670;
  var C1669;
  var icon$1 = dart.privateName(icon$, "Icon.icon");
  var size$5 = dart.privateName(icon$, "Icon.size");
  var color$12 = dart.privateName(icon$, "Icon.color");
  var semanticLabel$1 = dart.privateName(icon$, "Icon.semanticLabel");
  var textDirection$12 = dart.privateName(icon$, "Icon.textDirection");
  icon$.Icon = class Icon extends framework.StatelessWidget {
    get icon() {
      return this[icon$1];
    }
    set icon(value) {
      super.icon = value;
    }
    get size() {
      return this[size$5];
    }
    set size(value) {
      super.size = value;
    }
    get color() {
      return this[color$12];
    }
    set color(value) {
      super.color = value;
    }
    get semanticLabel() {
      return this[semanticLabel$1];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    get textDirection() {
      return this[textDirection$12];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    build(context) {
      let t40, t40$, t40$0, t40$1;
      if (!(this.textDirection != null || dart.test(debug$0.debugCheckHasDirectionality(context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/icon.dart", 156, 12, "this.textDirection != null || debugCheckHasDirectionality(context)");
      let textDirection = (t40 = this.textDirection, t40 == null ? basic.Directionality.of(context) : t40);
      let iconTheme = icon_theme.IconTheme.of(context);
      let iconSize = (t40$ = this.size, t40$ == null ? iconTheme.size : t40$);
      if (this.icon == null) {
        return new basic.Semantics.new({label: this.semanticLabel, child: new basic.SizedBox.new({width: iconSize, height: iconSize, $creationLocationd_0dea112b090073317d4: C1639 || CT.C1639}), $creationLocationd_0dea112b090073317d4: C1643 || CT.C1643});
      }
      let iconOpacity = iconTheme.opacity;
      let iconColor = (t40$0 = this.color, t40$0 == null ? iconTheme.color : t40$0);
      if (iconOpacity !== 1.0) iconColor = iconColor.withOpacity(dart.notNull(iconColor.opacity) * dart.notNull(iconOpacity));
      let iconWidget = new basic.RichText.new({overflow: paragraph.TextOverflow.visible, textDirection: textDirection, text: new text_span.TextSpan.new({text: core.String.fromCharCode(this.icon.codePoint), style: new text_style.TextStyle.new({inherit: false, color: iconColor, fontSize: iconSize, fontFamily: this.icon.fontFamily, package: this.icon.fontPackage})}), $creationLocationd_0dea112b090073317d4: C1647 || CT.C1647});
      if (dart.test(this.icon.matchTextDirection)) {
        switch (textDirection) {
          case C20 || CT.C20:
          {
            iconWidget = new basic.Transform.new({transform: (t40$1 = vector_math_64.Matrix4.identity(), t40$1.scale(-1.0, 1.0, 1.0), t40$1), alignment: alignment$.Alignment.center, transformHitTests: false, child: iconWidget, $creationLocationd_0dea112b090073317d4: C1652 || CT.C1652});
            break;
          }
          case C21 || CT.C21:
          {
            break;
          }
        }
      }
      return new basic.Semantics.new({label: this.semanticLabel, child: new basic.ExcludeSemantics.new({child: new basic.SizedBox.new({width: iconSize, height: iconSize, child: new basic.Center.new({child: iconWidget, $creationLocationd_0dea112b090073317d4: C1658 || CT.C1658}), $creationLocationd_0dea112b090073317d4: C1661 || CT.C1661}), $creationLocationd_0dea112b090073317d4: C1666 || CT.C1666}), $creationLocationd_0dea112b090073317d4: C1669 || CT.C1669});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new icon_data.IconDataProperty.new("icon", this.icon, {ifNull: "<empty>", showName: false}));
      properties.add(new diagnostics$.DoubleProperty.new("size", this.size, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
    }
  };
  (icon$.Icon.new = function(icon, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[icon$1] = icon;
    this[size$5] = size;
    this[color$12] = color;
    this[semanticLabel$1] = semanticLabel;
    this[textDirection$12] = textDirection;
    icon$.Icon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon$.Icon.prototype;
  dart.addTypeTests(icon$.Icon);
  dart.setMethodSignature(icon$.Icon, () => ({
    __proto__: dart.getMethods(icon$.Icon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(icon$.Icon, "package:flutter/src/widgets/icon.dart");
  dart.setFieldSignature(icon$.Icon, () => ({
    __proto__: dart.getFields(icon$.Icon.__proto__),
    icon: dart.finalFieldType(icon_data.IconData),
    size: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    semanticLabel: dart.finalFieldType(core.String),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  var _name$31 = dart.privateName(drag_target, "_name");
  var C1673;
  var C1674;
  var C1675;
  drag_target.DragAnchor = class DragAnchor extends core.Object {
    toString() {
      return this[_name$31];
    }
  };
  (drag_target.DragAnchor.new = function(index, _name) {
    this.index = index;
    this[_name$31] = _name;
    ;
  }).prototype = drag_target.DragAnchor.prototype;
  dart.addTypeTests(drag_target.DragAnchor);
  dart.setLibraryUri(drag_target.DragAnchor, "package:flutter/src/widgets/drag_target.dart");
  dart.setFieldSignature(drag_target.DragAnchor, () => ({
    __proto__: dart.getFields(drag_target.DragAnchor.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$31]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(drag_target.DragAnchor, ['toString']);
  drag_target.DragAnchor.child = C1673 || CT.C1673;
  drag_target.DragAnchor.pointer = C1674 || CT.C1674;
  drag_target.DragAnchor.values = C1675 || CT.C1675;
  const _is_Draggable_default = Symbol('_is_Draggable_default');
  var data$3 = dart.privateName(drag_target, "Draggable.data");
  var axis$0 = dart.privateName(drag_target, "Draggable.axis");
  var child$56 = dart.privateName(drag_target, "Draggable.child");
  var childWhenDragging$ = dart.privateName(drag_target, "Draggable.childWhenDragging");
  var feedback$ = dart.privateName(drag_target, "Draggable.feedback");
  var feedbackOffset$ = dart.privateName(drag_target, "Draggable.feedbackOffset");
  var dragAnchor$ = dart.privateName(drag_target, "Draggable.dragAnchor");
  var ignoringFeedbackSemantics$ = dart.privateName(drag_target, "Draggable.ignoringFeedbackSemantics");
  var affinity$ = dart.privateName(drag_target, "Draggable.affinity");
  var maxSimultaneousDrags$ = dart.privateName(drag_target, "Draggable.maxSimultaneousDrags");
  var onDragStarted$ = dart.privateName(drag_target, "Draggable.onDragStarted");
  var onDraggableCanceled$ = dart.privateName(drag_target, "Draggable.onDraggableCanceled");
  var onDragCompleted$ = dart.privateName(drag_target, "Draggable.onDragCompleted");
  var onDragEnd$ = dart.privateName(drag_target, "Draggable.onDragEnd");
  drag_target.Draggable$ = dart.generic(T => {
    var _DraggableStateOfT = () => (_DraggableStateOfT = dart.constFn(drag_target._DraggableState$(T)))();
    class Draggable extends framework.StatefulWidget {
      get data() {
        return this[data$3];
      }
      set data(value) {
        super.data = value;
      }
      get axis() {
        return this[axis$0];
      }
      set axis(value) {
        super.axis = value;
      }
      get child() {
        return this[child$56];
      }
      set child(value) {
        super.child = value;
      }
      get childWhenDragging() {
        return this[childWhenDragging$];
      }
      set childWhenDragging(value) {
        super.childWhenDragging = value;
      }
      get feedback() {
        return this[feedback$];
      }
      set feedback(value) {
        super.feedback = value;
      }
      get feedbackOffset() {
        return this[feedbackOffset$];
      }
      set feedbackOffset(value) {
        super.feedbackOffset = value;
      }
      get dragAnchor() {
        return this[dragAnchor$];
      }
      set dragAnchor(value) {
        super.dragAnchor = value;
      }
      get ignoringFeedbackSemantics() {
        return this[ignoringFeedbackSemantics$];
      }
      set ignoringFeedbackSemantics(value) {
        super.ignoringFeedbackSemantics = value;
      }
      get affinity() {
        return this[affinity$];
      }
      set affinity(value) {
        super.affinity = value;
      }
      get maxSimultaneousDrags() {
        return this[maxSimultaneousDrags$];
      }
      set maxSimultaneousDrags(value) {
        super.maxSimultaneousDrags = value;
      }
      get onDragStarted() {
        return this[onDragStarted$];
      }
      set onDragStarted(value) {
        super.onDragStarted = value;
      }
      get onDraggableCanceled() {
        return this[onDraggableCanceled$];
      }
      set onDraggableCanceled(value) {
        super.onDraggableCanceled = value;
      }
      get onDragCompleted() {
        return this[onDragCompleted$];
      }
      set onDragCompleted(value) {
        super.onDragCompleted = value;
      }
      get onDragEnd() {
        return this[onDragEnd$];
      }
      set onDragEnd(value) {
        super.onDragEnd = value;
      }
      createRecognizer(onStart) {
        let t40, t40$, t40$0;
        switch (this.affinity) {
          case C78 || CT.C78:
          {
            t40 = new multidrag.HorizontalMultiDragGestureRecognizer.new();
            t40.onStart = onStart;
            return t40;
          }
          case C77 || CT.C77:
          {
            t40$ = new multidrag.VerticalMultiDragGestureRecognizer.new();
            t40$.onStart = onStart;
            return t40$;
          }
        }
        t40$0 = new multidrag.ImmediateMultiDragGestureRecognizer.new();
        t40$0.onStart = onStart;
        return t40$0;
      }
      createState() {
        return new (_DraggableStateOfT()).new();
      }
    }
    (Draggable.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let feedback = opts && 'feedback' in opts ? opts.feedback : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let axis = opts && 'axis' in opts ? opts.axis : null;
      let childWhenDragging = opts && 'childWhenDragging' in opts ? opts.childWhenDragging : null;
      let feedbackOffset = opts && 'feedbackOffset' in opts ? opts.feedbackOffset : C141 || CT.C141;
      let dragAnchor = opts && 'dragAnchor' in opts ? opts.dragAnchor : C1673 || CT.C1673;
      let affinity = opts && 'affinity' in opts ? opts.affinity : null;
      let maxSimultaneousDrags = opts && 'maxSimultaneousDrags' in opts ? opts.maxSimultaneousDrags : null;
      let onDragStarted = opts && 'onDragStarted' in opts ? opts.onDragStarted : null;
      let onDraggableCanceled = opts && 'onDraggableCanceled' in opts ? opts.onDraggableCanceled : null;
      let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
      let onDragCompleted = opts && 'onDragCompleted' in opts ? opts.onDragCompleted : null;
      let ignoringFeedbackSemantics = opts && 'ignoringFeedbackSemantics' in opts ? opts.ignoringFeedbackSemantics : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[child$56] = child;
      this[feedback$] = feedback;
      this[data$3] = data;
      this[axis$0] = axis;
      this[childWhenDragging$] = childWhenDragging;
      this[feedbackOffset$] = feedbackOffset;
      this[dragAnchor$] = dragAnchor;
      this[affinity$] = affinity;
      this[maxSimultaneousDrags$] = maxSimultaneousDrags;
      this[onDragStarted$] = onDragStarted;
      this[onDraggableCanceled$] = onDraggableCanceled;
      this[onDragEnd$] = onDragEnd;
      this[onDragCompleted$] = onDragCompleted;
      this[ignoringFeedbackSemantics$] = ignoringFeedbackSemantics;
      if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 117, 15, "child != null");
      if (!(feedback != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 118, 15, "feedback != null");
      if (!(ignoringFeedbackSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 119, 15, "ignoringFeedbackSemantics != null");
      if (!(maxSimultaneousDrags == null || dart.notNull(maxSimultaneousDrags) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 120, 15, "maxSimultaneousDrags == null || maxSimultaneousDrags >= 0");
      Draggable.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = Draggable.prototype;
    dart.addTypeTests(Draggable);
    Draggable.prototype[_is_Draggable_default] = true;
    dart.setMethodSignature(Draggable, () => ({
      __proto__: dart.getMethods(Draggable.__proto__),
      createRecognizer: dart.fnType(multidrag.MultiDragGestureRecognizer$(multidrag.MultiDragPointerState), [dart.fnType(drag.Drag, [ui.Offset])]),
      createState: dart.fnType(drag_target._DraggableState$(T), [])
    }));
    dart.setLibraryUri(Draggable, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(Draggable, () => ({
      __proto__: dart.getFields(Draggable.__proto__),
      data: dart.finalFieldType(T),
      axis: dart.finalFieldType(basic_types$.Axis),
      child: dart.finalFieldType(framework.Widget),
      childWhenDragging: dart.finalFieldType(framework.Widget),
      feedback: dart.finalFieldType(framework.Widget),
      feedbackOffset: dart.finalFieldType(ui.Offset),
      dragAnchor: dart.finalFieldType(drag_target.DragAnchor),
      ignoringFeedbackSemantics: dart.finalFieldType(core.bool),
      affinity: dart.finalFieldType(basic_types$.Axis),
      maxSimultaneousDrags: dart.finalFieldType(core.int),
      onDragStarted: dart.finalFieldType(dart.fnType(dart.void, [])),
      onDraggableCanceled: dart.finalFieldType(dart.fnType(dart.void, [velocity_tracker.Velocity, ui.Offset])),
      onDragCompleted: dart.finalFieldType(dart.fnType(dart.void, [])),
      onDragEnd: dart.finalFieldType(dart.fnType(dart.void, [drag_target.DraggableDetails]))
    }));
    return Draggable;
  });
  drag_target.Draggable = drag_target.Draggable$();
  dart.addTypeTests(drag_target.Draggable, _is_Draggable_default);
  const _is_LongPressDraggable_default = Symbol('_is_LongPressDraggable_default');
  var hapticFeedbackOnStart$ = dart.privateName(drag_target, "LongPressDraggable.hapticFeedbackOnStart");
  drag_target.LongPressDraggable$ = dart.generic(T => {
    class LongPressDraggable extends drag_target.Draggable$(T) {
      get hapticFeedbackOnStart() {
        return this[hapticFeedbackOnStart$];
      }
      set hapticFeedbackOnStart(value) {
        super.hapticFeedbackOnStart = value;
      }
      createRecognizer(onStart) {
        let t40;
        t40 = new multidrag.DelayedMultiDragGestureRecognizer.new();
        t40.onStart = dart.fn(position => {
          let result = onStart(position);
          if (result != null && dart.test(this.hapticFeedbackOnStart)) haptic_feedback.HapticFeedback.selectionClick();
          return result;
        }, OffsetToDrag());
        return t40;
      }
    }
    (LongPressDraggable.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let feedback = opts && 'feedback' in opts ? opts.feedback : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let axis = opts && 'axis' in opts ? opts.axis : null;
      let childWhenDragging = opts && 'childWhenDragging' in opts ? opts.childWhenDragging : null;
      let feedbackOffset = opts && 'feedbackOffset' in opts ? opts.feedbackOffset : C141 || CT.C141;
      let dragAnchor = opts && 'dragAnchor' in opts ? opts.dragAnchor : C1673 || CT.C1673;
      let maxSimultaneousDrags = opts && 'maxSimultaneousDrags' in opts ? opts.maxSimultaneousDrags : null;
      let onDragStarted = opts && 'onDragStarted' in opts ? opts.onDragStarted : null;
      let onDraggableCanceled = opts && 'onDraggableCanceled' in opts ? opts.onDraggableCanceled : null;
      let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
      let onDragCompleted = opts && 'onDragCompleted' in opts ? opts.onDragCompleted : null;
      let hapticFeedbackOnStart = opts && 'hapticFeedbackOnStart' in opts ? opts.hapticFeedbackOnStart : true;
      let ignoringFeedbackSemantics = opts && 'ignoringFeedbackSemantics' in opts ? opts.ignoringFeedbackSemantics : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[hapticFeedbackOnStart$] = hapticFeedbackOnStart;
      LongPressDraggable.__proto__.new.call(this, {key: key, child: child, feedback: feedback, data: data, axis: axis, childWhenDragging: childWhenDragging, feedbackOffset: feedbackOffset, dragAnchor: dragAnchor, maxSimultaneousDrags: maxSimultaneousDrags, onDragStarted: onDragStarted, onDraggableCanceled: onDraggableCanceled, onDragEnd: onDragEnd, onDragCompleted: onDragCompleted, ignoringFeedbackSemantics: ignoringFeedbackSemantics, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = LongPressDraggable.prototype;
    dart.addTypeTests(LongPressDraggable);
    LongPressDraggable.prototype[_is_LongPressDraggable_default] = true;
    dart.setMethodSignature(LongPressDraggable, () => ({
      __proto__: dart.getMethods(LongPressDraggable.__proto__),
      createRecognizer: dart.fnType(multidrag.DelayedMultiDragGestureRecognizer, [dart.fnType(drag.Drag, [ui.Offset])])
    }));
    dart.setLibraryUri(LongPressDraggable, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(LongPressDraggable, () => ({
      __proto__: dart.getFields(LongPressDraggable.__proto__),
      hapticFeedbackOnStart: dart.finalFieldType(core.bool)
    }));
    return LongPressDraggable;
  });
  drag_target.LongPressDraggable = drag_target.LongPressDraggable$();
  dart.addTypeTests(drag_target.LongPressDraggable, _is_LongPressDraggable_default);
  var _recognizer = dart.privateName(drag_target, "_recognizer");
  var _activeCount = dart.privateName(drag_target, "_activeCount");
  var _startDrag = dart.privateName(drag_target, "_startDrag");
  var _disposeRecognizerIfInactive = dart.privateName(drag_target, "_disposeRecognizerIfInactive");
  var _routePointer = dart.privateName(drag_target, "_routePointer");
  var C1678;
  var C1679;
  var C1677;
  var C1676;
  const _is__DraggableState_default = Symbol('_is__DraggableState_default');
  drag_target._DraggableState$ = dart.generic(T => {
    var _DragAvatarOfT = () => (_DragAvatarOfT = dart.constFn(drag_target._DragAvatar$(T)))();
    class _DraggableState extends framework.State$(drag_target.Draggable$(T)) {
      initState() {
        super.initState();
        this[_recognizer] = this.widget.createRecognizer(dart.bind(this, _startDrag));
      }
      dispose() {
        this[_disposeRecognizerIfInactive]();
        super.dispose();
      }
      [_disposeRecognizerIfInactive]() {
        if (dart.notNull(this[_activeCount]) > 0) return;
        this[_recognizer].dispose();
        this[_recognizer] = null;
      }
      [_routePointer](event) {
        if (this.widget.maxSimultaneousDrags != null && dart.notNull(this[_activeCount]) >= dart.notNull(this.widget.maxSimultaneousDrags)) return;
        this[_recognizer].addPointer(event);
      }
      [_startDrag](position) {
        if (this.widget.maxSimultaneousDrags != null && dart.notNull(this[_activeCount]) >= dart.notNull(this.widget.maxSimultaneousDrags)) return null;
        let dragStartPoint = null;
        switch (this.widget.dragAnchor) {
          case C1673 || CT.C1673:
          {
            let renderObject = box$.RenderBox.as(this.context.findRenderObject());
            dragStartPoint = renderObject.globalToLocal(position);
            break;
          }
          case C1674 || CT.C1674:
          {
            dragStartPoint = ui.Offset.zero;
            break;
          }
        }
        this.setState(dart.fn(() => {
          this[_activeCount] = dart.notNull(this[_activeCount]) + 1;
        }, VoidToNull()));
        let avatar = new (_DragAvatarOfT()).new({overlayState: overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}), data: this.widget.data, axis: this.widget.axis, initialPosition: position, dragStartPoint: dragStartPoint, feedback: this.widget.feedback, feedbackOffset: this.widget.feedbackOffset, ignoringFeedbackSemantics: this.widget.ignoringFeedbackSemantics, onDragEnd: dart.fn((velocity, offset, wasAccepted) => {
            if (dart.test(this.mounted)) {
              this.setState(dart.fn(() => {
                this[_activeCount] = dart.notNull(this[_activeCount]) - 1;
              }, VoidToNull()));
            } else {
              this[_activeCount] = dart.notNull(this[_activeCount]) - 1;
              this[_disposeRecognizerIfInactive]();
            }
            if (dart.test(this.mounted) && this.widget.onDragEnd != null) {
              this.widget.onDragEnd(new drag_target.DraggableDetails.new({wasAccepted: wasAccepted, velocity: velocity, offset: offset}));
            }
            if (dart.test(wasAccepted) && this.widget.onDragCompleted != null) this.widget.onDragCompleted();
            if (!dart.test(wasAccepted) && this.widget.onDraggableCanceled != null) this.widget.onDraggableCanceled(velocity, offset);
          }, VelocityAndOffsetAndboolToNull())});
        if (this.widget.onDragStarted != null) this.widget.onDragStarted();
        return avatar;
      }
      build(context) {
        if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 419, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
        let canDrag = this.widget.maxSimultaneousDrags == null || dart.notNull(this[_activeCount]) < dart.notNull(this.widget.maxSimultaneousDrags);
        let showChild = this[_activeCount] === 0 || this.widget.childWhenDragging == null;
        return new basic.Listener.new({onPointerDown: canDrag ? dart.bind(this, _routePointer) : null, child: showChild ? this.widget.child : this.widget.childWhenDragging, $creationLocationd_0dea112b090073317d4: C1676 || CT.C1676});
      }
    }
    (_DraggableState.new = function() {
      this[_recognizer] = null;
      this[_activeCount] = 0;
      _DraggableState.__proto__.new.call(this);
      ;
    }).prototype = _DraggableState.prototype;
    dart.addTypeTests(_DraggableState);
    _DraggableState.prototype[_is__DraggableState_default] = true;
    dart.setMethodSignature(_DraggableState, () => ({
      __proto__: dart.getMethods(_DraggableState.__proto__),
      [_disposeRecognizerIfInactive]: dart.fnType(dart.void, []),
      [_routePointer]: dart.fnType(dart.void, [events.PointerDownEvent]),
      [_startDrag]: dart.fnType(drag_target._DragAvatar$(T), [ui.Offset]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_DraggableState, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(_DraggableState, () => ({
      __proto__: dart.getFields(_DraggableState.__proto__),
      [_recognizer]: dart.fieldType(recognizer.GestureRecognizer),
      [_activeCount]: dart.fieldType(core.int)
    }));
    return _DraggableState;
  });
  drag_target._DraggableState = drag_target._DraggableState$();
  dart.addTypeTests(drag_target._DraggableState, _is__DraggableState_default);
  var wasAccepted$ = dart.privateName(drag_target, "DraggableDetails.wasAccepted");
  var velocity$1 = dart.privateName(drag_target, "DraggableDetails.velocity");
  var offset$4 = dart.privateName(drag_target, "DraggableDetails.offset");
  drag_target.DraggableDetails = class DraggableDetails extends core.Object {
    get wasAccepted() {
      return this[wasAccepted$];
    }
    set wasAccepted(value) {
      super.wasAccepted = value;
    }
    get velocity() {
      return this[velocity$1];
    }
    set velocity(value) {
      super.velocity = value;
    }
    get offset() {
      return this[offset$4];
    }
    set offset(value) {
      super.offset = value;
    }
  };
  (drag_target.DraggableDetails.new = function(opts) {
    let wasAccepted = opts && 'wasAccepted' in opts ? opts.wasAccepted : false;
    let velocity = opts && 'velocity' in opts ? opts.velocity : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    this[wasAccepted$] = wasAccepted;
    this[velocity$1] = velocity;
    this[offset$4] = offset;
    if (!(velocity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 447, 15, "velocity != null");
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 448, 15, "offset != null");
    ;
  }).prototype = drag_target.DraggableDetails.prototype;
  dart.addTypeTests(drag_target.DraggableDetails);
  dart.setLibraryUri(drag_target.DraggableDetails, "package:flutter/src/widgets/drag_target.dart");
  dart.setFieldSignature(drag_target.DraggableDetails, () => ({
    __proto__: dart.getFields(drag_target.DraggableDetails.__proto__),
    wasAccepted: dart.finalFieldType(core.bool),
    velocity: dart.finalFieldType(velocity_tracker.Velocity),
    offset: dart.finalFieldType(ui.Offset)
  }));
  const _is_DragTarget_default = Symbol('_is_DragTarget_default');
  var builder$11 = dart.privateName(drag_target, "DragTarget.builder");
  var onWillAccept$ = dart.privateName(drag_target, "DragTarget.onWillAccept");
  var onAccept$ = dart.privateName(drag_target, "DragTarget.onAccept");
  var onLeave$ = dart.privateName(drag_target, "DragTarget.onLeave");
  drag_target.DragTarget$ = dart.generic(T => {
    var _DragTargetStateOfT = () => (_DragTargetStateOfT = dart.constFn(drag_target._DragTargetState$(T)))();
    class DragTarget extends framework.StatefulWidget {
      get builder() {
        return this[builder$11];
      }
      set builder(value) {
        super.builder = value;
      }
      get onWillAccept() {
        return this[onWillAccept$];
      }
      set onWillAccept(value) {
        super.onWillAccept = value;
      }
      get onAccept() {
        return this[onAccept$];
      }
      set onAccept(value) {
        super.onAccept = value;
      }
      get onLeave() {
        return this[onLeave$];
      }
      set onLeave(value) {
        super.onLeave = value;
      }
      createState() {
        return new (_DragTargetStateOfT()).new();
      }
    }
    (DragTarget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let onWillAccept = opts && 'onWillAccept' in opts ? opts.onWillAccept : null;
      let onAccept = opts && 'onAccept' in opts ? opts.onAccept : null;
      let onLeave = opts && 'onLeave' in opts ? opts.onLeave : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[builder$11] = builder;
      this[onWillAccept$] = onWillAccept;
      this[onAccept$] = onAccept;
      this[onLeave$] = onLeave;
      DragTarget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = DragTarget.prototype;
    dart.addTypeTests(DragTarget);
    DragTarget.prototype[_is_DragTarget_default] = true;
    dart.setMethodSignature(DragTarget, () => ({
      __proto__: dart.getMethods(DragTarget.__proto__),
      createState: dart.fnType(drag_target._DragTargetState$(T), [])
    }));
    dart.setLibraryUri(DragTarget, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(DragTarget, () => ({
      __proto__: dart.getFields(DragTarget.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.List$(T), core.List])),
      onWillAccept: dart.finalFieldType(dart.fnType(core.bool, [T])),
      onAccept: dart.finalFieldType(dart.fnType(dart.void, [T])),
      onLeave: dart.finalFieldType(dart.fnType(dart.void, [core.Object]))
    }));
    return DragTarget;
  });
  drag_target.DragTarget = drag_target.DragTarget$();
  dart.addTypeTests(drag_target.DragTarget, _is_DragTarget_default);
  var _candidateAvatars = dart.privateName(drag_target, "_candidateAvatars");
  var _rejectedAvatars = dart.privateName(drag_target, "_rejectedAvatars");
  var C1682;
  var C1683;
  var C1684;
  var C1681;
  var C1680;
  const _is__DragTargetState_default = Symbol('_is__DragTargetState_default');
  drag_target._DragTargetState$ = dart.generic(T => {
    var _DragAvatarOfT = () => (_DragAvatarOfT = dart.constFn(drag_target._DragAvatar$(T)))();
    var JSArrayOf_DragAvatarOfT = () => (JSArrayOf_DragAvatarOfT = dart.constFn(_interceptors.JSArray$(_DragAvatarOfT())))();
    var TTobool = () => (TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var TTovoid = () => (TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var ListOfT = () => (ListOfT = dart.constFn(core.List$(T)))();
    var BuildContextAndListOfTAndListToWidget = () => (BuildContextAndListOfTAndListToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, ListOfT(), core.List])))();
    class _DragTargetState extends framework.State$(drag_target.DragTarget$(T)) {
      didEnter(avatar) {
        if (!!dart.test(this[_candidateAvatars][$contains](avatar))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 520, 12, "!_candidateAvatars.contains(avatar)");
        if (!!dart.test(this[_rejectedAvatars][$contains](avatar))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 521, 12, "!_rejectedAvatars.contains(avatar)");
        if (_DragAvatarOfT().is(avatar) && (TTobool()._check(this.widget.onWillAccept) == null || dart.test(TTobool()._check(this.widget.onWillAccept)(avatar.data)))) {
          this.setState(dart.fn(() => {
            this[_candidateAvatars][$add](avatar);
          }, VoidToNull()));
          return true;
        } else {
          this.setState(dart.fn(() => {
            this[_rejectedAvatars][$add](avatar);
          }, VoidToNull()));
          return false;
        }
      }
      didLeave(avatar) {
        if (!(dart.test(this[_candidateAvatars][$contains](avatar)) || dart.test(this[_rejectedAvatars][$contains](avatar)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 536, 12, "_candidateAvatars.contains(avatar) || _rejectedAvatars.contains(avatar)");
        if (!dart.test(this.mounted)) return;
        this.setState(dart.fn(() => {
          this[_candidateAvatars][$remove](avatar);
          this[_rejectedAvatars][$remove](avatar);
        }, VoidToNull()));
        if (this.widget.onLeave != null) this.widget.onLeave(avatar.data);
      }
      didDrop(avatar) {
        if (!dart.test(this[_candidateAvatars][$contains](avatar))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 548, 12, "_candidateAvatars.contains(avatar)");
        if (!dart.test(this.mounted)) return;
        this.setState(dart.fn(() => {
          this[_candidateAvatars][$remove](avatar);
        }, VoidToNull()));
        if (TTovoid()._check(this.widget.onAccept) != null) TTovoid()._check(this.widget.onAccept)(T.as(avatar.data));
      }
      build(context) {
        if (!(BuildContextAndListOfTAndListToWidget()._check(this.widget.builder) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 560, 12, "widget.builder != null");
        return new basic.MetaData.new({metaData: this, behavior: proxy_box.HitTestBehavior.translucent, child: BuildContextAndListOfTAndListToWidget()._check(this.widget.builder)(context, drag_target._mapAvatarsToData(T, this[_candidateAvatars]), drag_target._mapAvatarsToData(core.Object, this[_rejectedAvatars])), $creationLocationd_0dea112b090073317d4: C1680 || CT.C1680});
      }
    }
    (_DragTargetState.new = function() {
      this[_candidateAvatars] = JSArrayOf_DragAvatarOfT().of([]);
      this[_rejectedAvatars] = JSArrayOf_DragAvatarOfObject().of([]);
      _DragTargetState.__proto__.new.call(this);
      ;
    }).prototype = _DragTargetState.prototype;
    dart.addTypeTests(_DragTargetState);
    _DragTargetState.prototype[_is__DragTargetState_default] = true;
    dart.setMethodSignature(_DragTargetState, () => ({
      __proto__: dart.getMethods(_DragTargetState.__proto__),
      didEnter: dart.fnType(core.bool, [drag_target._DragAvatar$(core.Object)]),
      didLeave: dart.fnType(dart.void, [drag_target._DragAvatar$(core.Object)]),
      didDrop: dart.fnType(dart.void, [drag_target._DragAvatar$(core.Object)]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_DragTargetState, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(_DragTargetState, () => ({
      __proto__: dart.getFields(_DragTargetState.__proto__),
      [_candidateAvatars]: dart.finalFieldType(core.List$(drag_target._DragAvatar$(T))),
      [_rejectedAvatars]: dart.finalFieldType(core.List$(drag_target._DragAvatar$(core.Object)))
    }));
    return _DragTargetState;
  });
  drag_target._DragTargetState = drag_target._DragTargetState$();
  dart.addTypeTests(drag_target._DragTargetState, _is__DragTargetState_default);
  var C1685;
  var C1686;
  var C1687;
  drag_target._DragEndKind = class _DragEndKind extends core.Object {
    toString() {
      return this[_name$31];
    }
  };
  (drag_target._DragEndKind.new = function(index, _name) {
    this.index = index;
    this[_name$31] = _name;
    ;
  }).prototype = drag_target._DragEndKind.prototype;
  dart.addTypeTests(drag_target._DragEndKind);
  dart.setLibraryUri(drag_target._DragEndKind, "package:flutter/src/widgets/drag_target.dart");
  dart.setFieldSignature(drag_target._DragEndKind, () => ({
    __proto__: dart.getFields(drag_target._DragEndKind.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$31]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(drag_target._DragEndKind, ['toString']);
  drag_target._DragEndKind.dropped = C1685 || CT.C1685;
  drag_target._DragEndKind.canceled = C1686 || CT.C1686;
  drag_target._DragEndKind.values = C1687 || CT.C1687;
  var _activeTarget = dart.privateName(drag_target, "_activeTarget");
  var _enteredTargets = dart.privateName(drag_target, "_enteredTargets");
  var _position$ = dart.privateName(drag_target, "_position");
  var _lastOffset = dart.privateName(drag_target, "_lastOffset");
  var _entry = dart.privateName(drag_target, "_entry");
  var _build$0 = dart.privateName(drag_target, "_build");
  var _restrictAxis = dart.privateName(drag_target, "_restrictAxis");
  var _restrictVelocityAxis = dart.privateName(drag_target, "_restrictVelocityAxis");
  var _getDragTargets = dart.privateName(drag_target, "_getDragTargets");
  var _leaveAllEntered = dart.privateName(drag_target, "_leaveAllEntered");
  var C1690;
  var C1691;
  var C1689;
  var C1688;
  var C1694;
  var C1695;
  var C1696;
  var C1693;
  var C1692;
  const _is__DragAvatar_default = Symbol('_is__DragAvatar_default');
  drag_target._DragAvatar$ = dart.generic(T => {
    var _DragTargetStateOfT = () => (_DragTargetStateOfT = dart.constFn(drag_target._DragTargetState$(T)))();
    var JSArrayOf_DragTargetStateOfT = () => (JSArrayOf_DragTargetStateOfT = dart.constFn(_interceptors.JSArray$(_DragTargetStateOfT())))();
    var _DragTargetStateOfTTobool = () => (_DragTargetStateOfTTobool = dart.constFn(dart.fnType(core.bool, [_DragTargetStateOfT()])))();
    var SyncIterableOf_DragTargetStateOfT = () => (SyncIterableOf_DragTargetStateOfT = dart.constFn(_js_helper.SyncIterable$(_DragTargetStateOfT())))();
    class _DragAvatar extends drag.Drag {
      update(details) {
        this[_position$] = this[_position$]['+'](this[_restrictAxis](details.delta));
        this.updateDrag(this[_position$]);
      }
      end(details) {
        this.finishDrag(drag_target._DragEndKind.dropped, this[_restrictVelocityAxis](details.velocity));
      }
      cancel() {
        this.finishDrag(drag_target._DragEndKind.canceled);
      }
      updateDrag(globalPosition) {
        this[_lastOffset] = globalPosition['-'](this.dragStartPoint);
        this[_entry].markNeedsBuild();
        let result = new hit_test.HitTestResult.new();
        binding$5.WidgetsBinding.instance.hitTest(result, globalPosition['+'](this.feedbackOffset));
        let targets = this[_getDragTargets](result.path)[$toList]();
        let listsMatch = false;
        if (dart.notNull(targets[$length]) >= dart.notNull(this[_enteredTargets][$length]) && dart.test(this[_enteredTargets][$isNotEmpty])) {
          listsMatch = true;
          let iterator = targets[$iterator];
          for (let i = 0; i < dart.notNull(this[_enteredTargets][$length]); i = i + 1) {
            iterator.moveNext();
            if (!dart.equals(iterator.current, this[_enteredTargets][$_get](i))) {
              listsMatch = false;
              break;
            }
          }
        }
        if (listsMatch) return;
        this[_leaveAllEntered]();
        let newTarget = targets[$firstWhere](dart.fn(target => {
          this[_enteredTargets][$add](target);
          return target.didEnter(this);
        }, _DragTargetStateOfTTobool()), {orElse: dart.fn(() => null, VoidToNull())});
        this[_activeTarget] = newTarget;
      }
      [_getDragTargets](path) {
        return new (SyncIterableOf_DragTargetStateOfT()).new(function* _getDragTargets() {
          for (let entry of path) {
            let target = entry.target;
            if (proxy_box.RenderMetaData.is(target)) {
              let metaData = target.metaData;
              if (_DragTargetStateOfT().is(metaData)) yield metaData;
            }
          }
        });
      }
      [_leaveAllEntered]() {
        for (let i = 0; i < dart.notNull(this[_enteredTargets][$length]); i = i + 1)
          this[_enteredTargets][$_get](i).didLeave(this);
        this[_enteredTargets][$clear]();
      }
      finishDrag(endKind, velocity = null) {
        let t40;
        let wasAccepted = false;
        if (dart.equals(endKind, drag_target._DragEndKind.dropped) && this[_activeTarget] != null) {
          this[_activeTarget].didDrop(this);
          wasAccepted = true;
          this[_enteredTargets][$remove](this[_activeTarget]);
        }
        this[_leaveAllEntered]();
        this[_activeTarget] = null;
        this[_entry].remove();
        this[_entry] = null;
        if (this.onDragEnd != null) this.onDragEnd((t40 = velocity, t40 == null ? velocity_tracker.Velocity.zero : t40), this[_lastOffset], wasAccepted);
      }
      [_build$0](context) {
        let box = box$.RenderBox.as(this.overlayState.context.findRenderObject());
        let overlayTopLeft = box.localToGlobal(ui.Offset.zero);
        return new basic.Positioned.new({left: dart.notNull(this[_lastOffset].dx) - dart.notNull(overlayTopLeft.dx), top: dart.notNull(this[_lastOffset].dy) - dart.notNull(overlayTopLeft.dy), child: new basic.IgnorePointer.new({child: this.feedback, ignoringSemantics: this.ignoringFeedbackSemantics, $creationLocationd_0dea112b090073317d4: C1688 || CT.C1688}), $creationLocationd_0dea112b090073317d4: C1692 || CT.C1692});
      }
      [_restrictVelocityAxis](velocity) {
        if (this.axis == null) {
          return velocity;
        }
        return new velocity_tracker.Velocity.new({pixelsPerSecond: this[_restrictAxis](velocity.pixelsPerSecond)});
      }
      [_restrictAxis](offset) {
        if (this.axis == null) {
          return offset;
        }
        if (dart.equals(this.axis, basic_types$.Axis.horizontal)) {
          return new ui.Offset.new(offset.dx, 0.0);
        }
        return new ui.Offset.new(0.0, offset.dy);
      }
    }
    (_DragAvatar.new = function(opts) {
      let overlayState = opts && 'overlayState' in opts ? opts.overlayState : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let axis = opts && 'axis' in opts ? opts.axis : null;
      let initialPosition = opts && 'initialPosition' in opts ? opts.initialPosition : null;
      let dragStartPoint = opts && 'dragStartPoint' in opts ? opts.dragStartPoint : C141 || CT.C141;
      let feedback = opts && 'feedback' in opts ? opts.feedback : null;
      let feedbackOffset = opts && 'feedbackOffset' in opts ? opts.feedbackOffset : C141 || CT.C141;
      let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
      let ignoringFeedbackSemantics = opts && 'ignoringFeedbackSemantics' in opts ? opts.ignoringFeedbackSemantics : null;
      this[_activeTarget] = null;
      this[_enteredTargets] = JSArrayOf_DragTargetStateOfT().of([]);
      this[_position$] = null;
      this[_lastOffset] = null;
      this[_entry] = null;
      this.overlayState = overlayState;
      this.data = data;
      this.axis = axis;
      this.dragStartPoint = dragStartPoint;
      this.feedback = feedback;
      this.feedbackOffset = feedbackOffset;
      this.onDragEnd = onDragEnd;
      this.ignoringFeedbackSemantics = ignoringFeedbackSemantics;
      if (!(overlayState != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 587, 15, "overlayState != null");
      if (!(ignoringFeedbackSemantics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 588, 15, "ignoringFeedbackSemantics != null");
      if (!(dragStartPoint != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 589, 15, "dragStartPoint != null");
      if (!(feedbackOffset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/drag_target.dart", 590, 15, "feedbackOffset != null");
      this[_entry] = new overlay$.OverlayEntry.new({builder: dart.bind(this, _build$0)});
      this.overlayState.insert(this[_entry]);
      this[_position$] = initialPosition;
      this.updateDrag(initialPosition);
    }).prototype = _DragAvatar.prototype;
    dart.addTypeTests(_DragAvatar);
    _DragAvatar.prototype[_is__DragAvatar_default] = true;
    dart.setMethodSignature(_DragAvatar, () => ({
      __proto__: dart.getMethods(_DragAvatar.__proto__),
      updateDrag: dart.fnType(dart.void, [ui.Offset]),
      [_getDragTargets]: dart.fnType(core.Iterable$(drag_target._DragTargetState$(T)), [core.Iterable$(hit_test.HitTestEntry)]),
      [_leaveAllEntered]: dart.fnType(dart.void, []),
      finishDrag: dart.fnType(dart.void, [drag_target._DragEndKind], [velocity_tracker.Velocity]),
      [_build$0]: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_restrictVelocityAxis]: dart.fnType(velocity_tracker.Velocity, [velocity_tracker.Velocity]),
      [_restrictAxis]: dart.fnType(ui.Offset, [ui.Offset])
    }));
    dart.setLibraryUri(_DragAvatar, "package:flutter/src/widgets/drag_target.dart");
    dart.setFieldSignature(_DragAvatar, () => ({
      __proto__: dart.getFields(_DragAvatar.__proto__),
      data: dart.finalFieldType(T),
      axis: dart.finalFieldType(basic_types$.Axis),
      dragStartPoint: dart.finalFieldType(ui.Offset),
      feedback: dart.finalFieldType(framework.Widget),
      feedbackOffset: dart.finalFieldType(ui.Offset),
      onDragEnd: dart.finalFieldType(dart.fnType(dart.void, [velocity_tracker.Velocity, ui.Offset, core.bool])),
      overlayState: dart.finalFieldType(overlay$.OverlayState),
      ignoringFeedbackSemantics: dart.finalFieldType(core.bool),
      [_activeTarget]: dart.fieldType(drag_target._DragTargetState$(T)),
      [_enteredTargets]: dart.finalFieldType(core.List$(drag_target._DragTargetState$(T))),
      [_position$]: dart.fieldType(ui.Offset),
      [_lastOffset]: dart.fieldType(ui.Offset),
      [_entry]: dart.fieldType(overlay$.OverlayEntry)
    }));
    return _DragAvatar;
  });
  drag_target._DragAvatar = drag_target._DragAvatar$();
  dart.addTypeTests(drag_target._DragAvatar, _is__DragAvatar_default);
  drag_target._mapAvatarsToData = function _mapAvatarsToData(T, avatars) {
    return avatars[$map](T, dart.fn(avatar => avatar.data, dart.fnType(T, [drag_target._DragAvatar$(T)])))[$toList]();
  };
  var _formState = dart.privateName(form, "_formState");
  var child$57 = dart.privateName(form, "Form.child");
  var autovalidate$ = dart.privateName(form, "Form.autovalidate");
  var onWillPop$0 = dart.privateName(form, "Form.onWillPop");
  var onChanged$0 = dart.privateName(form, "Form.onChanged");
  form.Form = class Form extends framework.StatefulWidget {
    get child() {
      return this[child$57];
    }
    set child(value) {
      super.child = value;
    }
    get autovalidate() {
      return this[autovalidate$];
    }
    set autovalidate(value) {
      super.autovalidate = value;
    }
    get onWillPop() {
      return this[onWillPop$0];
    }
    set onWillPop(value) {
      super.onWillPop = value;
    }
    get onChanged() {
      return this[onChanged$0];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    static of(context) {
      let t40;
      let scope = context.dependOnInheritedWidgetOfExactType(form._FormScope);
      t40 = scope;
      return t40 == null ? null : t40[_formState];
    }
    createState() {
      return new form.FormState.new();
    }
  };
  (form.Form.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let autovalidate = opts && 'autovalidate' in opts ? opts.autovalidate : false;
    let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$57] = child;
    this[autovalidate$] = autovalidate;
    this[onWillPop$0] = onWillPop;
    this[onChanged$0] = onChanged;
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/form.dart", 82, 15, "child != null");
    form.Form.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = form.Form.prototype;
  dart.addTypeTests(form.Form);
  dart.setMethodSignature(form.Form, () => ({
    __proto__: dart.getMethods(form.Form.__proto__),
    createState: dart.fnType(form.FormState, [])
  }));
  dart.setLibraryUri(form.Form, "package:flutter/src/widgets/form.dart");
  dart.setFieldSignature(form.Form, () => ({
    __proto__: dart.getFields(form.Form.__proto__),
    child: dart.finalFieldType(framework.Widget),
    autovalidate: dart.finalFieldType(core.bool),
    onWillPop: dart.finalFieldType(dart.fnType(async.Future$(core.bool), [])),
    onChanged: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  var _generation = dart.privateName(form, "_generation");
  var _fields = dart.privateName(form, "_fields");
  var _forceRebuild$ = dart.privateName(form, "_forceRebuild");
  var _fieldDidChange = dart.privateName(form, "_fieldDidChange");
  var _register$ = dart.privateName(form, "_register");
  var _unregister$ = dart.privateName(form, "_unregister");
  var _validate = dart.privateName(form, "_validate");
  var C1699;
  var C1700;
  var C1701;
  var C1698;
  var C1697;
  var C1704;
  var C1703;
  var C1702;
  form.FormState = class FormState extends framework.State$(form.Form) {
    [_fieldDidChange]() {
      if (this.widget.onChanged != null) this.widget.onChanged();
      this[_forceRebuild$]();
    }
    [_forceRebuild$]() {
      this.setState(dart.fn(() => {
        this[_generation] = dart.notNull(this[_generation]) + 1;
      }, VoidToNull()));
    }
    [_register$](field) {
      this[_fields].add(field);
    }
    [_unregister$](field) {
      this[_fields].remove(field);
    }
    build(context) {
      if (dart.test(this.widget.autovalidate)) this[_validate]();
      return new will_pop_scope.WillPopScope.new({onWillPop: this.widget.onWillPop, child: new form._FormScope.new({formState: this, generation: this[_generation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C1697 || CT.C1697}), $creationLocationd_0dea112b090073317d4: C1702 || CT.C1702});
    }
    save() {
      for (let field of this[_fields])
        field.save();
    }
    reset() {
      for (let field of this[_fields])
        field.reset();
      this[_fieldDidChange]();
    }
    validate() {
      this[_forceRebuild$]();
      return this[_validate]();
    }
    [_validate]() {
      let hasError = false;
      for (let field of this[_fields])
        hasError = !dart.test(field.validate()) || hasError;
      return !hasError;
    }
  };
  (form.FormState.new = function() {
    this[_generation] = 0;
    this[_fields] = LinkedHashSetOfFormFieldState().new();
    form.FormState.__proto__.new.call(this);
    ;
  }).prototype = form.FormState.prototype;
  dart.addTypeTests(form.FormState);
  dart.setMethodSignature(form.FormState, () => ({
    __proto__: dart.getMethods(form.FormState.__proto__),
    [_fieldDidChange]: dart.fnType(dart.void, []),
    [_forceRebuild$]: dart.fnType(dart.void, []),
    [_register$]: dart.fnType(dart.void, [form.FormFieldState]),
    [_unregister$]: dart.fnType(dart.void, [form.FormFieldState]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    save: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, []),
    validate: dart.fnType(core.bool, []),
    [_validate]: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(form.FormState, "package:flutter/src/widgets/form.dart");
  dart.setFieldSignature(form.FormState, () => ({
    __proto__: dart.getFields(form.FormState.__proto__),
    [_generation]: dart.fieldType(core.int),
    [_fields]: dart.finalFieldType(core.Set$(form.FormFieldState))
  }));
  var _formState$ = dart.privateName(form, "_FormScope._formState");
  var _generation$ = dart.privateName(form, "_FormScope._generation");
  form._FormScope = class _FormScope extends framework.InheritedWidget {
    get [_formState]() {
      return this[_formState$];
    }
    set [_formState](value) {
      super[_formState] = value;
    }
    get [_generation]() {
      return this[_generation$];
    }
    set [_generation](value) {
      super[_generation] = value;
    }
    get form() {
      return this[_formState].widget;
    }
    updateShouldNotify(old) {
      form._FormScope._check(old);
      return this[_generation] != old[_generation];
    }
  };
  (form._FormScope.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let formState = opts && 'formState' in opts ? opts.formState : null;
    let generation = opts && 'generation' in opts ? opts.generation : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[_formState$] = formState;
    this[_generation$] = generation;
    form._FormScope.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = form._FormScope.prototype;
  dart.addTypeTests(form._FormScope);
  dart.setMethodSignature(form._FormScope, () => ({
    __proto__: dart.getMethods(form._FormScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(form._FormScope, () => ({
    __proto__: dart.getGetters(form._FormScope.__proto__),
    form: form.Form
  }));
  dart.setLibraryUri(form._FormScope, "package:flutter/src/widgets/form.dart");
  dart.setFieldSignature(form._FormScope, () => ({
    __proto__: dart.getFields(form._FormScope.__proto__),
    [_formState]: dart.finalFieldType(form.FormState),
    [_generation]: dart.finalFieldType(core.int)
  }));
  const _is_FormField_default = Symbol('_is_FormField_default');
  var onSaved$ = dart.privateName(form, "FormField.onSaved");
  var validator$ = dart.privateName(form, "FormField.validator");
  var builder$12 = dart.privateName(form, "FormField.builder");
  var initialValue$ = dart.privateName(form, "FormField.initialValue");
  var autovalidate$0 = dart.privateName(form, "FormField.autovalidate");
  var enabled$2 = dart.privateName(form, "FormField.enabled");
  form.FormField$ = dart.generic(T => {
    var FormFieldStateOfT = () => (FormFieldStateOfT = dart.constFn(form.FormFieldState$(T)))();
    class FormField extends framework.StatefulWidget {
      get onSaved() {
        return this[onSaved$];
      }
      set onSaved(value) {
        super.onSaved = value;
      }
      get validator() {
        return this[validator$];
      }
      set validator(value) {
        super.validator = value;
      }
      get builder() {
        return this[builder$12];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialValue() {
        return this[initialValue$];
      }
      set initialValue(value) {
        super.initialValue = value;
      }
      get autovalidate() {
        return this[autovalidate$0];
      }
      set autovalidate(value) {
        super.autovalidate = value;
      }
      get enabled() {
        return this[enabled$2];
      }
      set enabled(value) {
        super.enabled = value;
      }
      createState() {
        return new (FormFieldStateOfT()).new();
      }
    }
    (FormField.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
      let validator = opts && 'validator' in opts ? opts.validator : null;
      let initialValue = opts && 'initialValue' in opts ? opts.initialValue : null;
      let autovalidate = opts && 'autovalidate' in opts ? opts.autovalidate : false;
      let enabled = opts && 'enabled' in opts ? opts.enabled : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[builder$12] = builder;
      this[onSaved$] = onSaved;
      this[validator$] = validator;
      this[initialValue$] = initialValue;
      this[autovalidate$0] = autovalidate;
      this[enabled$2] = enabled;
      if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/form.dart", 288, 15, "builder != null");
      FormField.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = FormField.prototype;
    dart.addTypeTests(FormField);
    FormField.prototype[_is_FormField_default] = true;
    dart.setMethodSignature(FormField, () => ({
      __proto__: dart.getMethods(FormField.__proto__),
      createState: dart.fnType(form.FormFieldState$(T), [])
    }));
    dart.setLibraryUri(FormField, "package:flutter/src/widgets/form.dart");
    dart.setFieldSignature(FormField, () => ({
      __proto__: dart.getFields(FormField.__proto__),
      onSaved: dart.finalFieldType(dart.fnType(dart.void, [T])),
      validator: dart.finalFieldType(dart.fnType(core.String, [T])),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [form.FormFieldState$(T)])),
      initialValue: dart.finalFieldType(T),
      autovalidate: dart.finalFieldType(core.bool),
      enabled: dart.finalFieldType(core.bool)
    }));
    return FormField;
  });
  form.FormField = form.FormField$();
  dart.addTypeTests(form.FormField, _is_FormField_default);
  var _value$0 = dart.privateName(form, "_value");
  var _errorText = dart.privateName(form, "_errorText");
  const _is_FormFieldState_default = Symbol('_is_FormFieldState_default');
  form.FormFieldState$ = dart.generic(T => {
    var TTovoid = () => (TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var TToString = () => (TToString = dart.constFn(dart.fnType(core.String, [T])))();
    var FormFieldStateOfT = () => (FormFieldStateOfT = dart.constFn(form.FormFieldState$(T)))();
    var FormFieldStateOfTToWidget = () => (FormFieldStateOfTToWidget = dart.constFn(dart.fnType(framework.Widget, [FormFieldStateOfT()])))();
    class FormFieldState extends framework.State$(form.FormField$(T)) {
      get value() {
        return this[_value$0];
      }
      get errorText() {
        return this[_errorText];
      }
      get hasError() {
        return this[_errorText] != null;
      }
      save() {
        if (TTovoid()._check(this.widget.onSaved) != null) TTovoid()._check(this.widget.onSaved)(this.value);
      }
      reset() {
        this.setState(dart.fn(() => {
          this[_value$0] = this.widget.initialValue;
          this[_errorText] = null;
        }, VoidToNull()));
      }
      validate() {
        this.setState(dart.fn(() => {
          this[_validate]();
        }, VoidToNull()));
        return !dart.test(this.hasError);
      }
      [_validate]() {
        if (TToString()._check(this.widget.validator) != null) this[_errorText] = TToString()._check(this.widget.validator)(this[_value$0]);
      }
      didChange(value) {
        let t40;
        T._check(value);
        this.setState(dart.fn(() => {
          this[_value$0] = value;
        }, VoidToNull()));
        t40 = form.Form.of(this.context);
        t40 == null ? null : t40[_fieldDidChange]();
      }
      setValue(value) {
        T._check(value);
        this[_value$0] = value;
      }
      initState() {
        super.initState();
        this[_value$0] = this.widget.initialValue;
      }
      deactivate() {
        let t40;
        t40 = form.Form.of(this.context);
        t40 == null ? null : t40[_unregister$](this);
        super.deactivate();
      }
      build(context) {
        let t40;
        if (dart.test(this.widget.autovalidate) && dart.test(this.widget.enabled)) this[_validate]();
        t40 = form.Form.of(context);
        t40 == null ? null : t40[_register$](this);
        return FormFieldStateOfTToWidget()._check(this.widget.builder)(this);
      }
    }
    (FormFieldState.new = function() {
      this[_value$0] = null;
      this[_errorText] = null;
      FormFieldState.__proto__.new.call(this);
      ;
    }).prototype = FormFieldState.prototype;
    dart.addTypeTests(FormFieldState);
    FormFieldState.prototype[_is_FormFieldState_default] = true;
    dart.setMethodSignature(FormFieldState, () => ({
      __proto__: dart.getMethods(FormFieldState.__proto__),
      save: dart.fnType(dart.void, []),
      reset: dart.fnType(dart.void, []),
      validate: dart.fnType(core.bool, []),
      [_validate]: dart.fnType(dart.void, []),
      didChange: dart.fnType(dart.void, [core.Object]),
      setValue: dart.fnType(dart.void, [core.Object]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(FormFieldState, () => ({
      __proto__: dart.getGetters(FormFieldState.__proto__),
      value: T,
      errorText: core.String,
      hasError: core.bool
    }));
    dart.setLibraryUri(FormFieldState, "package:flutter/src/widgets/form.dart");
    dart.setFieldSignature(FormFieldState, () => ({
      __proto__: dart.getFields(FormFieldState.__proto__),
      [_value$0]: dart.fieldType(T),
      [_errorText]: dart.fieldType(core.String)
    }));
    return FormFieldState;
  });
  form.FormFieldState = form.FormFieldState$();
  dart.addTypeTests(form.FormFieldState, _is_FormFieldState_default);
  var C1707;
  var C1708;
  var C1709;
  var C1710;
  var C1711;
  var C1712;
  var C1706;
  var C1705;
  var C1715;
  var C1716;
  var C1714;
  var C1713;
  var left$1 = dart.privateName(safe_area, "SafeArea.left");
  var top$3 = dart.privateName(safe_area, "SafeArea.top");
  var right$1 = dart.privateName(safe_area, "SafeArea.right");
  var bottom$3 = dart.privateName(safe_area, "SafeArea.bottom");
  var minimum$ = dart.privateName(safe_area, "SafeArea.minimum");
  var maintainBottomViewPadding$ = dart.privateName(safe_area, "SafeArea.maintainBottomViewPadding");
  var child$58 = dart.privateName(safe_area, "SafeArea.child");
  safe_area.SafeArea = class SafeArea extends framework.StatelessWidget {
    get left() {
      return this[left$1];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$3];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$1];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$3];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get minimum() {
      return this[minimum$];
    }
    set minimum(value) {
      super.minimum = value;
    }
    get maintainBottomViewPadding() {
      return this[maintainBottomViewPadding$];
    }
    set maintainBottomViewPadding(value) {
      super.maintainBottomViewPadding = value;
    }
    get child() {
      return this[child$58];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMediaQuery(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 96, 12, "debugCheckHasMediaQuery(context)");
      let data = media_query.MediaQuery.of(context);
      let padding = data.padding;
      if (data.padding.bottom === 0.0 && data.viewInsets.bottom !== 0.0 && dart.test(this.maintainBottomViewPadding)) padding = padding.copyWith({bottom: data.viewPadding.bottom});
      return new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({left: math.max(core.double, dart.test(this.left) ? padding.left : 0.0, this.minimum.left), top: math.max(core.double, dart.test(this.top) ? padding.top : 0.0, this.minimum.top), right: math.max(core.double, dart.test(this.right) ? padding.right : 0.0, this.minimum.right), bottom: math.max(core.double, dart.test(this.bottom) ? padding.bottom : 0.0, this.minimum.bottom)}), child: media_query.MediaQuery.removePadding({context: context, removeLeft: this.left, removeTop: this.top, removeRight: this.right, removeBottom: this.bottom, child: this.child, $creationLocationd_0dea112b090073317d4: C1705 || CT.C1705}), $creationLocationd_0dea112b090073317d4: C1713 || CT.C1713});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("left", {value: this.left, ifTrue: "avoid left padding"}));
      properties.add(new diagnostics$.FlagProperty.new("top", {value: this.left, ifTrue: "avoid top padding"}));
      properties.add(new diagnostics$.FlagProperty.new("right", {value: this.left, ifTrue: "avoid right padding"}));
      properties.add(new diagnostics$.FlagProperty.new("bottom", {value: this.left, ifTrue: "avoid bottom padding"}));
    }
  };
  (safe_area.SafeArea.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : true;
    let top = opts && 'top' in opts ? opts.top : true;
    let right = opts && 'right' in opts ? opts.right : true;
    let bottom = opts && 'bottom' in opts ? opts.bottom : true;
    let minimum = opts && 'minimum' in opts ? opts.minimum : C290 || CT.C290;
    let maintainBottomViewPadding = opts && 'maintainBottomViewPadding' in opts ? opts.maintainBottomViewPadding : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$1] = left;
    this[top$3] = top;
    this[right$1] = right;
    this[bottom$3] = bottom;
    this[minimum$] = minimum;
    this[maintainBottomViewPadding$] = maintainBottomViewPadding;
    this[child$58] = child;
    if (!(left != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 50, 15, "left != null");
    if (!(top != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 51, 15, "top != null");
    if (!(right != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 52, 15, "right != null");
    if (!(bottom != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 53, 15, "bottom != null");
    safe_area.SafeArea.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = safe_area.SafeArea.prototype;
  dart.addTypeTests(safe_area.SafeArea);
  dart.setMethodSignature(safe_area.SafeArea, () => ({
    __proto__: dart.getMethods(safe_area.SafeArea.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(safe_area.SafeArea, "package:flutter/src/widgets/safe_area.dart");
  dart.setFieldSignature(safe_area.SafeArea, () => ({
    __proto__: dart.getFields(safe_area.SafeArea.__proto__),
    left: dart.finalFieldType(core.bool),
    top: dart.finalFieldType(core.bool),
    right: dart.finalFieldType(core.bool),
    bottom: dart.finalFieldType(core.bool),
    minimum: dart.finalFieldType(edge_insets.EdgeInsets),
    maintainBottomViewPadding: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(framework.Widget)
  }));
  var C1719;
  var C1720;
  var C1721;
  var C1722;
  var C1723;
  var C1724;
  var C1718;
  var C1717;
  var C1727;
  var C1728;
  var C1726;
  var C1725;
  var left$2 = dart.privateName(safe_area, "SliverSafeArea.left");
  var top$4 = dart.privateName(safe_area, "SliverSafeArea.top");
  var right$2 = dart.privateName(safe_area, "SliverSafeArea.right");
  var bottom$4 = dart.privateName(safe_area, "SliverSafeArea.bottom");
  var minimum$0 = dart.privateName(safe_area, "SliverSafeArea.minimum");
  var sliver$2 = dart.privateName(safe_area, "SliverSafeArea.sliver");
  safe_area.SliverSafeArea = class SliverSafeArea extends framework.StatelessWidget {
    get left() {
      return this[left$2];
    }
    set left(value) {
      super.left = value;
    }
    get top() {
      return this[top$4];
    }
    set top(value) {
      super.top = value;
    }
    get right() {
      return this[right$2];
    }
    set right(value) {
      super.right = value;
    }
    get bottom() {
      return this[bottom$4];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get minimum() {
      return this[minimum$0];
    }
    set minimum(value) {
      super.minimum = value;
    }
    get sliver() {
      return this[sliver$2];
    }
    set sliver(value) {
      super.sliver = value;
    }
    build(context) {
      if (!dart.test(debug$0.debugCheckHasMediaQuery(context))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 195, 12, "debugCheckHasMediaQuery(context)");
      let padding = media_query.MediaQuery.of(context).padding;
      return new basic.SliverPadding.new({padding: new edge_insets.EdgeInsets.only({left: math.max(core.double, dart.test(this.left) ? padding.left : 0.0, this.minimum.left), top: math.max(core.double, dart.test(this.top) ? padding.top : 0.0, this.minimum.top), right: math.max(core.double, dart.test(this.right) ? padding.right : 0.0, this.minimum.right), bottom: math.max(core.double, dart.test(this.bottom) ? padding.bottom : 0.0, this.minimum.bottom)}), sliver: media_query.MediaQuery.removePadding({context: context, removeLeft: this.left, removeTop: this.top, removeRight: this.right, removeBottom: this.bottom, child: this.sliver, $creationLocationd_0dea112b090073317d4: C1717 || CT.C1717}), $creationLocationd_0dea112b090073317d4: C1725 || CT.C1725});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics$.FlagProperty.new("left", {value: this.left, ifTrue: "avoid left padding"}));
      properties.add(new diagnostics$.FlagProperty.new("top", {value: this.left, ifTrue: "avoid top padding"}));
      properties.add(new diagnostics$.FlagProperty.new("right", {value: this.left, ifTrue: "avoid right padding"}));
      properties.add(new diagnostics$.FlagProperty.new("bottom", {value: this.left, ifTrue: "avoid bottom padding"}));
    }
  };
  (safe_area.SliverSafeArea.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let left = opts && 'left' in opts ? opts.left : true;
    let top = opts && 'top' in opts ? opts.top : true;
    let right = opts && 'right' in opts ? opts.right : true;
    let bottom = opts && 'bottom' in opts ? opts.bottom : true;
    let minimum = opts && 'minimum' in opts ? opts.minimum : C290 || CT.C290;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[left$2] = left;
    this[top$4] = top;
    this[right$2] = right;
    this[bottom$4] = bottom;
    this[minimum$0] = minimum;
    this[sliver$2] = sliver;
    if (!(left != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 163, 15, "left != null");
    if (!(top != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 164, 15, "top != null");
    if (!(right != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 165, 15, "right != null");
    if (!(bottom != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/safe_area.dart", 166, 15, "bottom != null");
    safe_area.SliverSafeArea.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = safe_area.SliverSafeArea.prototype;
  dart.addTypeTests(safe_area.SliverSafeArea);
  dart.setMethodSignature(safe_area.SliverSafeArea, () => ({
    __proto__: dart.getMethods(safe_area.SliverSafeArea.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(safe_area.SliverSafeArea, "package:flutter/src/widgets/safe_area.dart");
  dart.setFieldSignature(safe_area.SliverSafeArea, () => ({
    __proto__: dart.getFields(safe_area.SliverSafeArea.__proto__),
    left: dart.finalFieldType(core.bool),
    top: dart.finalFieldType(core.bool),
    right: dart.finalFieldType(core.bool),
    bottom: dart.finalFieldType(core.bool),
    minimum: dart.finalFieldType(edge_insets.EdgeInsets),
    sliver: dart.finalFieldType(framework.Widget)
  }));
  list_wheel_scroll_view.ListWheelChildDelegate = class ListWheelChildDelegate extends core.Object {
    trueIndexOf(index) {
      return index;
    }
  };
  (list_wheel_scroll_view.ListWheelChildDelegate.new = function() {
    ;
  }).prototype = list_wheel_scroll_view.ListWheelChildDelegate.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelChildDelegate);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelChildDelegate, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelChildDelegate.__proto__),
    trueIndexOf: dart.fnType(core.int, [core.int])
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelChildDelegate, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  var C1731;
  var C1732;
  var C1730;
  var C1729;
  var children$4 = dart.privateName(list_wheel_scroll_view, "ListWheelChildListDelegate.children");
  list_wheel_scroll_view.ListWheelChildListDelegate = class ListWheelChildListDelegate extends list_wheel_scroll_view.ListWheelChildDelegate {
    get children() {
      return this[children$4];
    }
    set children(value) {
      super.children = value;
    }
    get estimatedChildCount() {
      return this.children[$length];
    }
    build(context, index) {
      if (dart.notNull(index) < 0 || dart.notNull(index) >= dart.notNull(this.children[$length])) return null;
      return new basic.IndexedSemantics.new({child: this.children[$_get](index), index: index, $creationLocationd_0dea112b090073317d4: C1729 || CT.C1729});
    }
    shouldRebuild(oldDelegate) {
      list_wheel_scroll_view.ListWheelChildListDelegate._check(oldDelegate);
      return !dart.equals(this.children, oldDelegate.children);
    }
  };
  (list_wheel_scroll_view.ListWheelChildListDelegate.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    this[children$4] = children;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 85, 66, "children != null");
    ;
  }).prototype = list_wheel_scroll_view.ListWheelChildListDelegate.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelChildListDelegate);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelChildListDelegate, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelChildListDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(list_wheel_scroll_view.ListWheelChildListDelegate, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view.ListWheelChildListDelegate.__proto__),
    estimatedChildCount: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelChildListDelegate, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelChildListDelegate, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelChildListDelegate.__proto__),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  var C1735;
  var C1736;
  var C1734;
  var C1733;
  var children$5 = dart.privateName(list_wheel_scroll_view, "ListWheelChildLoopingListDelegate.children");
  list_wheel_scroll_view.ListWheelChildLoopingListDelegate = class ListWheelChildLoopingListDelegate extends list_wheel_scroll_view.ListWheelChildDelegate {
    get children() {
      return this[children$5];
    }
    set children(value) {
      super.children = value;
    }
    get estimatedChildCount() {
      return null;
    }
    trueIndexOf(index) {
      return index[$modulo](this.children[$length]);
    }
    build(context, index) {
      if (dart.test(this.children[$isEmpty])) return null;
      return new basic.IndexedSemantics.new({child: this.children[$_get](index[$modulo](this.children[$length])), index: index, $creationLocationd_0dea112b090073317d4: C1733 || CT.C1733});
    }
    shouldRebuild(oldDelegate) {
      list_wheel_scroll_view.ListWheelChildLoopingListDelegate._check(oldDelegate);
      return !dart.equals(this.children, oldDelegate.children);
    }
  };
  (list_wheel_scroll_view.ListWheelChildLoopingListDelegate.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    this[children$5] = children;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 128, 73, "children != null");
    ;
  }).prototype = list_wheel_scroll_view.ListWheelChildLoopingListDelegate.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelChildLoopingListDelegate);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelChildLoopingListDelegate, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelChildLoopingListDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(list_wheel_scroll_view.ListWheelChildLoopingListDelegate, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view.ListWheelChildLoopingListDelegate.__proto__),
    estimatedChildCount: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelChildLoopingListDelegate, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelChildLoopingListDelegate, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelChildLoopingListDelegate.__proto__),
    children: dart.finalFieldType(core.List$(framework.Widget))
  }));
  var C1739;
  var C1740;
  var C1738;
  var C1737;
  var C1743;
  var C1744;
  var C1742;
  var C1741;
  var builder$13 = dart.privateName(list_wheel_scroll_view, "ListWheelChildBuilderDelegate.builder");
  var childCount$0 = dart.privateName(list_wheel_scroll_view, "ListWheelChildBuilderDelegate.childCount");
  list_wheel_scroll_view.ListWheelChildBuilderDelegate = class ListWheelChildBuilderDelegate extends list_wheel_scroll_view.ListWheelChildDelegate {
    get builder() {
      return this[builder$13];
    }
    set builder(value) {
      super.builder = value;
    }
    get childCount() {
      return this[childCount$0];
    }
    set childCount(value) {
      super.childCount = value;
    }
    get estimatedChildCount() {
      return this.childCount;
    }
    build(context, index) {
      if (this.childCount == null) {
        let child = this.builder(context, index);
        return child == null ? null : new basic.IndexedSemantics.new({child: child, index: index, $creationLocationd_0dea112b090073317d4: C1737 || CT.C1737});
      }
      if (dart.notNull(index) < 0 || dart.notNull(index) >= dart.notNull(this.childCount)) return null;
      return new basic.IndexedSemantics.new({child: this.builder(context, index), index: index, $creationLocationd_0dea112b090073317d4: C1741 || CT.C1741});
    }
    shouldRebuild(oldDelegate) {
      list_wheel_scroll_view.ListWheelChildBuilderDelegate._check(oldDelegate);
      return !dart.equals(this.builder, oldDelegate.builder) || this.childCount != oldDelegate.childCount;
    }
  };
  (list_wheel_scroll_view.ListWheelChildBuilderDelegate.new = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let childCount = opts && 'childCount' in opts ? opts.childCount : null;
    this[builder$13] = builder;
    this[childCount$0] = childCount;
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 164, 15, "builder != null");
    ;
  }).prototype = list_wheel_scroll_view.ListWheelChildBuilderDelegate.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelChildBuilderDelegate);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelChildBuilderDelegate, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelChildBuilderDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.int]),
    shouldRebuild: dart.fnType(core.bool, [core.Object])
  }));
  dart.setGetterSignature(list_wheel_scroll_view.ListWheelChildBuilderDelegate, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view.ListWheelChildBuilderDelegate.__proto__),
    estimatedChildCount: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelChildBuilderDelegate, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelChildBuilderDelegate, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelChildBuilderDelegate.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, core.int])),
    childCount: dart.finalFieldType(core.int)
  }));
  var initialItem$ = dart.privateName(list_wheel_scroll_view, "FixedExtentScrollController.initialItem");
  list_wheel_scroll_view.FixedExtentScrollController = class FixedExtentScrollController extends scroll_controller.ScrollController {
    get initialItem() {
      return this[initialItem$];
    }
    set initialItem(value) {
      super.initialItem = value;
    }
    get selectedItem() {
      if (!dart.test(this.positions[$isNotEmpty])) dart.assertFailed("FixedExtentScrollController.selectedItem cannot be accessed before a " + "scroll view is built with it.", "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 239, 7, "positions.isNotEmpty");
      if (!(this.positions[$length] === 1)) dart.assertFailed("The selectedItem property cannot be read when multiple scroll views are " + "attached to the same FixedExtentScrollController.", "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 244, 7, "positions.length == 1");
      let position = list_wheel_scroll_view._FixedExtentScrollPosition.as(this.position);
      return position.itemIndex;
    }
    animateToItem(itemIndex, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      return async.async(dart.void, (function* animateToItem() {
        if (!dart.test(this.hasClients)) {
          return;
        }
        yield async.Future.wait(dart.void, (() => {
          let t40 = JSArrayOfFutureOfvoid().of([]);
          for (let position of this.positions[$cast](list_wheel_scroll_view._FixedExtentScrollPosition))
            t40[$add](position.animateTo(dart.notNull(itemIndex) * dart.notNull(position.itemExtent), {duration: duration, curve: curve}));
          return t40;
        })());
      }).bind(this));
    }
    jumpToItem(itemIndex) {
      for (let position of this.positions[$cast](list_wheel_scroll_view._FixedExtentScrollPosition)) {
        position.jumpTo(dart.notNull(itemIndex) * dart.notNull(position.itemExtent));
      }
    }
    createScrollPosition(physics, context, oldPosition) {
      return new list_wheel_scroll_view._FixedExtentScrollPosition.new({physics: physics, context: context, initialItem: this.initialItem, oldPosition: oldPosition});
    }
  };
  (list_wheel_scroll_view.FixedExtentScrollController.new = function(opts) {
    let initialItem = opts && 'initialItem' in opts ? opts.initialItem : 0;
    this[initialItem$] = initialItem;
    if (!(initialItem != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 219, 15, "initialItem != null");
    list_wheel_scroll_view.FixedExtentScrollController.__proto__.new.call(this);
    ;
  }).prototype = list_wheel_scroll_view.FixedExtentScrollController.prototype;
  dart.addTypeTests(list_wheel_scroll_view.FixedExtentScrollController);
  dart.setMethodSignature(list_wheel_scroll_view.FixedExtentScrollController, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.FixedExtentScrollController.__proto__),
    animateToItem: dart.fnType(async.Future$(dart.void), [core.int], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpToItem: dart.fnType(dart.void, [core.int])
  }));
  dart.setGetterSignature(list_wheel_scroll_view.FixedExtentScrollController, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view.FixedExtentScrollController.__proto__),
    selectedItem: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view.FixedExtentScrollController, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.FixedExtentScrollController, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.FixedExtentScrollController.__proto__),
    initialItem: dart.finalFieldType(core.int)
  }));
  var itemIndex$ = dart.privateName(list_wheel_scroll_view, "FixedExtentMetrics.itemIndex");
  list_wheel_scroll_view.FixedExtentMetrics = class FixedExtentMetrics extends scroll_metrics.FixedScrollMetrics {
    get itemIndex() {
      return this[itemIndex$];
    }
    set itemIndex(value) {
      super.itemIndex = value;
    }
    copyWith(opts) {
      let t41, t41$, t41$0, t41$1, t41$2, t41$3;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let itemIndex = opts && 'itemIndex' in opts ? opts.itemIndex : null;
      return new list_wheel_scroll_view.FixedExtentMetrics.new({minScrollExtent: (t41 = minScrollExtent, t41 == null ? this.minScrollExtent : t41), maxScrollExtent: (t41$ = maxScrollExtent, t41$ == null ? this.maxScrollExtent : t41$), pixels: (t41$0 = pixels, t41$0 == null ? this.pixels : t41$0), viewportDimension: (t41$1 = viewportDimension, t41$1 == null ? this.viewportDimension : t41$1), axisDirection: (t41$2 = axisDirection, t41$2 == null ? this.axisDirection : t41$2), itemIndex: (t41$3 = itemIndex, t41$3 == null ? this.itemIndex : t41$3)});
    }
  };
  (list_wheel_scroll_view.FixedExtentMetrics.new = function(opts) {
    let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
    let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
    let pixels = opts && 'pixels' in opts ? opts.pixels : null;
    let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let itemIndex = opts && 'itemIndex' in opts ? opts.itemIndex : null;
    this[itemIndex$] = itemIndex;
    list_wheel_scroll_view.FixedExtentMetrics.__proto__.new.call(this, {minScrollExtent: minScrollExtent, maxScrollExtent: maxScrollExtent, pixels: pixels, viewportDimension: viewportDimension, axisDirection: axisDirection});
    ;
  }).prototype = list_wheel_scroll_view.FixedExtentMetrics.prototype;
  dart.addTypeTests(list_wheel_scroll_view.FixedExtentMetrics);
  dart.setMethodSignature(list_wheel_scroll_view.FixedExtentMetrics, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.FixedExtentMetrics.__proto__),
    copyWith: dart.fnType(list_wheel_scroll_view.FixedExtentMetrics, [], {axisDirection: basic_types$.AxisDirection, itemIndex: core.int, maxScrollExtent: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double}, {})
  }));
  dart.setLibraryUri(list_wheel_scroll_view.FixedExtentMetrics, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.FixedExtentMetrics, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.FixedExtentMetrics.__proto__),
    itemIndex: dart.finalFieldType(core.int)
  }));
  list_wheel_scroll_view._FixedExtentScrollPosition = class _FixedExtentScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    static _getItemExtentFromScrollContext(context) {
      let scrollable = list_wheel_scroll_view._FixedExtentScrollableState.as(context);
      return scrollable.itemExtent;
    }
    get itemExtent() {
      return list_wheel_scroll_view._FixedExtentScrollPosition._getItemExtentFromScrollContext(this.context);
    }
    get itemIndex() {
      return list_wheel_scroll_view._getItemFromOffset({offset: this.pixels, itemExtent: this.itemExtent, minScrollExtent: this.minScrollExtent, maxScrollExtent: this.maxScrollExtent});
    }
    copyWith(opts) {
      let t41, t41$, t41$0, t41$1, t41$2, t41$3;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let itemIndex = opts && 'itemIndex' in opts ? opts.itemIndex : null;
      return new list_wheel_scroll_view.FixedExtentMetrics.new({minScrollExtent: (t41 = minScrollExtent, t41 == null ? this.minScrollExtent : t41), maxScrollExtent: (t41$ = maxScrollExtent, t41$ == null ? this.maxScrollExtent : t41$), pixels: (t41$0 = pixels, t41$0 == null ? this.pixels : t41$0), viewportDimension: (t41$1 = viewportDimension, t41$1 == null ? this.viewportDimension : t41$1), axisDirection: (t41$2 = axisDirection, t41$2 == null ? this.axisDirection : t41$2), itemIndex: (t41$3 = itemIndex, t41$3 == null ? this.itemIndex : t41$3)});
    }
  };
  (list_wheel_scroll_view._FixedExtentScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialItem = opts && 'initialItem' in opts ? opts.initialItem : null;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    if (!list_wheel_scroll_view._FixedExtentScrollableState.is(context)) dart.assertFailed("FixedExtentScrollController can only be used with ListWheelScrollViews", "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 376, 10, "context is _FixedExtentScrollableState");
    list_wheel_scroll_view._FixedExtentScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: dart.notNull(list_wheel_scroll_view._FixedExtentScrollPosition._getItemExtentFromScrollContext(context)) * dart.notNull(initialItem), keepScrollOffset: keepScrollOffset, oldPosition: oldPosition, debugLabel: debugLabel});
    ;
  }).prototype = list_wheel_scroll_view._FixedExtentScrollPosition.prototype;
  dart.addTypeTests(list_wheel_scroll_view._FixedExtentScrollPosition);
  list_wheel_scroll_view._FixedExtentScrollPosition[dart.implements] = () => [list_wheel_scroll_view.FixedExtentMetrics];
  dart.setMethodSignature(list_wheel_scroll_view._FixedExtentScrollPosition, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view._FixedExtentScrollPosition.__proto__),
    copyWith: dart.fnType(list_wheel_scroll_view.FixedExtentMetrics, [], {axisDirection: basic_types$.AxisDirection, itemIndex: core.int, maxScrollExtent: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double}, {})
  }));
  dart.setGetterSignature(list_wheel_scroll_view._FixedExtentScrollPosition, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view._FixedExtentScrollPosition.__proto__),
    itemExtent: core.double,
    itemIndex: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view._FixedExtentScrollPosition, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  var itemExtent$1 = dart.privateName(list_wheel_scroll_view, "_FixedExtentScrollable.itemExtent");
  list_wheel_scroll_view._FixedExtentScrollable = class _FixedExtentScrollable extends scrollable$.Scrollable {
    get itemExtent() {
      return this[itemExtent$1];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    createState() {
      return new list_wheel_scroll_view._FixedExtentScrollableState.new();
    }
  };
  (list_wheel_scroll_view._FixedExtentScrollable.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let viewportBuilder = opts && 'viewportBuilder' in opts ? opts.viewportBuilder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[itemExtent$1] = itemExtent;
    list_wheel_scroll_view._FixedExtentScrollable.__proto__.new.call(this, {key: key, axisDirection: axisDirection, controller: controller, physics: physics, viewportBuilder: viewportBuilder, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_wheel_scroll_view._FixedExtentScrollable.prototype;
  dart.addTypeTests(list_wheel_scroll_view._FixedExtentScrollable);
  dart.setMethodSignature(list_wheel_scroll_view._FixedExtentScrollable, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view._FixedExtentScrollable.__proto__),
    createState: dart.fnType(list_wheel_scroll_view._FixedExtentScrollableState, [])
  }));
  dart.setLibraryUri(list_wheel_scroll_view._FixedExtentScrollable, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view._FixedExtentScrollable, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view._FixedExtentScrollable.__proto__),
    itemExtent: dart.finalFieldType(core.double)
  }));
  list_wheel_scroll_view._FixedExtentScrollableState = class _FixedExtentScrollableState extends scrollable$.ScrollableState {
    get itemExtent() {
      let actualWidget = list_wheel_scroll_view._FixedExtentScrollable.as(this.widget);
      return actualWidget.itemExtent;
    }
  };
  (list_wheel_scroll_view._FixedExtentScrollableState.new = function() {
    list_wheel_scroll_view._FixedExtentScrollableState.__proto__.new.call(this);
    ;
  }).prototype = list_wheel_scroll_view._FixedExtentScrollableState.prototype;
  dart.addTypeTests(list_wheel_scroll_view._FixedExtentScrollableState);
  dart.setGetterSignature(list_wheel_scroll_view._FixedExtentScrollableState, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view._FixedExtentScrollableState.__proto__),
    itemExtent: core.double
  }));
  dart.setLibraryUri(list_wheel_scroll_view._FixedExtentScrollableState, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  list_wheel_scroll_view.FixedExtentScrollPhysics = class FixedExtentScrollPhysics extends scroll_physics.ScrollPhysics {
    applyTo(ancestor) {
      return new list_wheel_scroll_view.FixedExtentScrollPhysics.new({parent: this.buildParent(ancestor)});
    }
    createBallisticSimulation(position, velocity) {
      let t41, t41$;
      if (!list_wheel_scroll_view._FixedExtentScrollPosition.is(position)) dart.assertFailed("FixedExtentScrollPhysics can only be used with Scrollables that uses " + "the FixedExtentScrollController", "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 481, 7, "position is _FixedExtentScrollPosition");
      let metrics = list_wheel_scroll_view._FixedExtentScrollPosition.as(position);
      if (dart.notNull(velocity) <= 0.0 && dart.notNull(metrics.pixels) <= dart.notNull(metrics.minScrollExtent) || dart.notNull(velocity) >= 0.0 && dart.notNull(metrics.pixels) >= dart.notNull(metrics.maxScrollExtent)) {
        return super.createBallisticSimulation(metrics, velocity);
      }
      let testFrictionSimulation = super.createBallisticSimulation(metrics, velocity);
      if (testFrictionSimulation != null && (testFrictionSimulation.x(1 / 0) == metrics.minScrollExtent || testFrictionSimulation.x(1 / 0) == metrics.maxScrollExtent)) {
        return super.createBallisticSimulation(metrics, velocity);
      }
      let settlingItemIndex = list_wheel_scroll_view._getItemFromOffset({offset: (t41$ = (t41 = testFrictionSimulation, t41 == null ? null : t41.x(1 / 0)), t41$ == null ? metrics.pixels : t41$), itemExtent: metrics.itemExtent, minScrollExtent: metrics.minScrollExtent, maxScrollExtent: metrics.maxScrollExtent});
      let settlingPixels = dart.notNull(settlingItemIndex) * dart.notNull(metrics.itemExtent);
      if (velocity[$abs]() < dart.notNull(this.tolerance.velocity) && (settlingPixels - dart.notNull(metrics.pixels))[$abs]() < dart.notNull(this.tolerance.distance)) {
        return null;
      }
      if (settlingItemIndex == metrics.itemIndex) {
        return new spring_simulation.SpringSimulation.new(this.spring, metrics.pixels, settlingPixels, velocity, {tolerance: this.tolerance});
      }
      return friction_simulation.FrictionSimulation.through(metrics.pixels, settlingPixels, velocity, dart.notNull(this.tolerance.velocity) * velocity[$sign]);
    }
  };
  (list_wheel_scroll_view.FixedExtentScrollPhysics.new = function(opts) {
    let parent = opts && 'parent' in opts ? opts.parent : null;
    list_wheel_scroll_view.FixedExtentScrollPhysics.__proto__.new.call(this, {parent: parent});
    ;
  }).prototype = list_wheel_scroll_view.FixedExtentScrollPhysics.prototype;
  dart.addTypeTests(list_wheel_scroll_view.FixedExtentScrollPhysics);
  dart.setMethodSignature(list_wheel_scroll_view.FixedExtentScrollPhysics, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.FixedExtentScrollPhysics.__proto__),
    applyTo: dart.fnType(list_wheel_scroll_view.FixedExtentScrollPhysics, [scroll_physics.ScrollPhysics])
  }));
  dart.setLibraryUri(list_wheel_scroll_view.FixedExtentScrollPhysics, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  var controller$6 = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.controller");
  var physics$5 = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.physics");
  var diameterRatio$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.diameterRatio");
  var perspective$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.perspective");
  var offAxisFraction$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.offAxisFraction");
  var useMagnifier$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.useMagnifier");
  var magnification$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.magnification");
  var overAndUnderCenterOpacity$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.overAndUnderCenterOpacity");
  var itemExtent$2 = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.itemExtent");
  var squeeze$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.squeeze");
  var onSelectedItemChanged$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.onSelectedItemChanged");
  var clipToSize$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.clipToSize");
  var renderChildrenOutsideViewport$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.renderChildrenOutsideViewport");
  var childDelegate$ = dart.privateName(list_wheel_scroll_view, "ListWheelScrollView.childDelegate");
  list_wheel_scroll_view.ListWheelScrollView = class ListWheelScrollView extends framework.StatefulWidget {
    get controller() {
      return this[controller$6];
    }
    set controller(value) {
      super.controller = value;
    }
    get physics() {
      return this[physics$5];
    }
    set physics(value) {
      super.physics = value;
    }
    get diameterRatio() {
      return this[diameterRatio$];
    }
    set diameterRatio(value) {
      super.diameterRatio = value;
    }
    get perspective() {
      return this[perspective$];
    }
    set perspective(value) {
      super.perspective = value;
    }
    get offAxisFraction() {
      return this[offAxisFraction$];
    }
    set offAxisFraction(value) {
      super.offAxisFraction = value;
    }
    get useMagnifier() {
      return this[useMagnifier$];
    }
    set useMagnifier(value) {
      super.useMagnifier = value;
    }
    get magnification() {
      return this[magnification$];
    }
    set magnification(value) {
      super.magnification = value;
    }
    get overAndUnderCenterOpacity() {
      return this[overAndUnderCenterOpacity$];
    }
    set overAndUnderCenterOpacity(value) {
      super.overAndUnderCenterOpacity = value;
    }
    get itemExtent() {
      return this[itemExtent$2];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    get squeeze() {
      return this[squeeze$];
    }
    set squeeze(value) {
      super.squeeze = value;
    }
    get onSelectedItemChanged() {
      return this[onSelectedItemChanged$];
    }
    set onSelectedItemChanged(value) {
      super.onSelectedItemChanged = value;
    }
    get clipToSize() {
      return this[clipToSize$];
    }
    set clipToSize(value) {
      super.clipToSize = value;
    }
    get renderChildrenOutsideViewport() {
      return this[renderChildrenOutsideViewport$];
    }
    set renderChildrenOutsideViewport(value) {
      super.renderChildrenOutsideViewport = value;
    }
    get childDelegate() {
      return this[childDelegate$];
    }
    set childDelegate(value) {
      super.childDelegate = value;
    }
    createState() {
      return new list_wheel_scroll_view._ListWheelScrollViewState.new();
    }
  };
  (list_wheel_scroll_view.ListWheelScrollView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let diameterRatio = opts && 'diameterRatio' in opts ? opts.diameterRatio : 2;
    let perspective = opts && 'perspective' in opts ? opts.perspective : 0.003;
    let offAxisFraction = opts && 'offAxisFraction' in opts ? opts.offAxisFraction : 0;
    let useMagnifier = opts && 'useMagnifier' in opts ? opts.useMagnifier : false;
    let magnification = opts && 'magnification' in opts ? opts.magnification : 1;
    let overAndUnderCenterOpacity = opts && 'overAndUnderCenterOpacity' in opts ? opts.overAndUnderCenterOpacity : 1;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let squeeze = opts && 'squeeze' in opts ? opts.squeeze : 1;
    let onSelectedItemChanged = opts && 'onSelectedItemChanged' in opts ? opts.onSelectedItemChanged : null;
    let clipToSize = opts && 'clipToSize' in opts ? opts.clipToSize : true;
    let renderChildrenOutsideViewport = opts && 'renderChildrenOutsideViewport' in opts ? opts.renderChildrenOutsideViewport : false;
    let children = opts && 'children' in opts ? opts.children : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$6] = controller;
    this[physics$5] = physics;
    this[diameterRatio$] = diameterRatio;
    this[perspective$] = perspective;
    this[offAxisFraction$] = offAxisFraction;
    this[useMagnifier$] = useMagnifier;
    this[magnification$] = magnification;
    this[overAndUnderCenterOpacity$] = overAndUnderCenterOpacity;
    this[itemExtent$2] = itemExtent;
    this[squeeze$] = squeeze;
    this[onSelectedItemChanged$] = onSelectedItemChanged;
    this[clipToSize$] = clipToSize;
    this[renderChildrenOutsideViewport$] = renderChildrenOutsideViewport;
    if (!(children != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 585, 15, "children != null");
    if (!(diameterRatio != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 586, 15, "diameterRatio != null");
    if (!(dart.notNull(diameterRatio) > 0.0)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 587, 15, "diameterRatio > 0.0");
    if (!(perspective != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 588, 15, "perspective != null");
    if (!(dart.notNull(perspective) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 589, 15, "perspective > 0");
    if (!(dart.notNull(perspective) <= 0.01)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 590, 15, "perspective <= 0.01");
    if (!(dart.notNull(magnification) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 591, 15, "magnification > 0");
    if (!(overAndUnderCenterOpacity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 592, 15, "overAndUnderCenterOpacity != null");
    if (!(dart.notNull(overAndUnderCenterOpacity) >= 0 && dart.notNull(overAndUnderCenterOpacity) <= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 593, 15, "overAndUnderCenterOpacity >= 0 && overAndUnderCenterOpacity <= 1");
    if (!(itemExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 594, 15, "itemExtent != null");
    if (!(dart.notNull(itemExtent) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 595, 15, "itemExtent > 0");
    if (!(squeeze != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 596, 15, "squeeze != null");
    if (!(dart.notNull(squeeze) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 597, 15, "squeeze > 0");
    if (!(clipToSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 598, 15, "clipToSize != null");
    if (!(renderChildrenOutsideViewport != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 599, 15, "renderChildrenOutsideViewport != null");
    if (!(!dart.test(renderChildrenOutsideViewport) || !dart.test(clipToSize))) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.clipToSizeAndRenderChildrenOutsideViewportConflict, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 601, 10, "!renderChildrenOutsideViewport || !clipToSize");
    this[childDelegate$] = new list_wheel_scroll_view.ListWheelChildListDelegate.new({children: children});
    list_wheel_scroll_view.ListWheelScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_wheel_scroll_view.ListWheelScrollView.prototype;
  (list_wheel_scroll_view.ListWheelScrollView.useDelegate = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let diameterRatio = opts && 'diameterRatio' in opts ? opts.diameterRatio : 2;
    let perspective = opts && 'perspective' in opts ? opts.perspective : 0.003;
    let offAxisFraction = opts && 'offAxisFraction' in opts ? opts.offAxisFraction : 0;
    let useMagnifier = opts && 'useMagnifier' in opts ? opts.useMagnifier : false;
    let magnification = opts && 'magnification' in opts ? opts.magnification : 1;
    let overAndUnderCenterOpacity = opts && 'overAndUnderCenterOpacity' in opts ? opts.overAndUnderCenterOpacity : 1;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let squeeze = opts && 'squeeze' in opts ? opts.squeeze : 1;
    let onSelectedItemChanged = opts && 'onSelectedItemChanged' in opts ? opts.onSelectedItemChanged : null;
    let clipToSize = opts && 'clipToSize' in opts ? opts.clipToSize : true;
    let renderChildrenOutsideViewport = opts && 'renderChildrenOutsideViewport' in opts ? opts.renderChildrenOutsideViewport : false;
    let childDelegate = opts && 'childDelegate' in opts ? opts.childDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$6] = controller;
    this[physics$5] = physics;
    this[diameterRatio$] = diameterRatio;
    this[perspective$] = perspective;
    this[offAxisFraction$] = offAxisFraction;
    this[useMagnifier$] = useMagnifier;
    this[magnification$] = magnification;
    this[overAndUnderCenterOpacity$] = overAndUnderCenterOpacity;
    this[itemExtent$2] = itemExtent;
    this[squeeze$] = squeeze;
    this[onSelectedItemChanged$] = onSelectedItemChanged;
    this[clipToSize$] = clipToSize;
    this[renderChildrenOutsideViewport$] = renderChildrenOutsideViewport;
    this[childDelegate$] = childDelegate;
    if (!(childDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 625, 15, "childDelegate != null");
    if (!(diameterRatio != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 626, 15, "diameterRatio != null");
    if (!(dart.notNull(diameterRatio) > 0.0)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 627, 15, "diameterRatio > 0.0");
    if (!(perspective != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 628, 15, "perspective != null");
    if (!(dart.notNull(perspective) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 629, 15, "perspective > 0");
    if (!(dart.notNull(perspective) <= 0.01)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 630, 15, "perspective <= 0.01");
    if (!(dart.notNull(magnification) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 631, 15, "magnification > 0");
    if (!(overAndUnderCenterOpacity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 632, 15, "overAndUnderCenterOpacity != null");
    if (!(dart.notNull(overAndUnderCenterOpacity) >= 0 && dart.notNull(overAndUnderCenterOpacity) <= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 633, 15, "overAndUnderCenterOpacity >= 0 && overAndUnderCenterOpacity <= 1");
    if (!(itemExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 634, 15, "itemExtent != null");
    if (!(dart.notNull(itemExtent) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 635, 15, "itemExtent > 0");
    if (!(squeeze != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 636, 15, "squeeze != null");
    if (!(dart.notNull(squeeze) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 637, 15, "squeeze > 0");
    if (!(clipToSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 638, 15, "clipToSize != null");
    if (!(renderChildrenOutsideViewport != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 639, 15, "renderChildrenOutsideViewport != null");
    if (!(!dart.test(renderChildrenOutsideViewport) || !dart.test(clipToSize))) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.clipToSizeAndRenderChildrenOutsideViewportConflict, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 641, 10, "!renderChildrenOutsideViewport || !clipToSize");
    list_wheel_scroll_view.ListWheelScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_wheel_scroll_view.ListWheelScrollView.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelScrollView);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelScrollView, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelScrollView.__proto__),
    createState: dart.fnType(list_wheel_scroll_view._ListWheelScrollViewState, [])
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelScrollView, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelScrollView, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelScrollView.__proto__),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    diameterRatio: dart.finalFieldType(core.double),
    perspective: dart.finalFieldType(core.double),
    offAxisFraction: dart.finalFieldType(core.double),
    useMagnifier: dart.finalFieldType(core.bool),
    magnification: dart.finalFieldType(core.double),
    overAndUnderCenterOpacity: dart.finalFieldType(core.double),
    itemExtent: dart.finalFieldType(core.double),
    squeeze: dart.finalFieldType(core.double),
    onSelectedItemChanged: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    clipToSize: dart.finalFieldType(core.bool),
    renderChildrenOutsideViewport: dart.finalFieldType(core.bool),
    childDelegate: dart.finalFieldType(list_wheel_scroll_view.ListWheelChildDelegate)
  }));
  var _lastReportedItemIndex = dart.privateName(list_wheel_scroll_view, "_lastReportedItemIndex");
  var C1747;
  var C1748;
  var C1749;
  var C1750;
  var C1751;
  var C1752;
  var C1753;
  var C1754;
  var C1755;
  var C1756;
  var C1757;
  var C1758;
  var C1746;
  var C1745;
  var C1761;
  var C1762;
  var C1763;
  var C1764;
  var C1760;
  var C1759;
  var C1767;
  var C1768;
  var C1766;
  var C1765;
  list_wheel_scroll_view._ListWheelScrollViewState = class _ListWheelScrollViewState extends framework.State$(list_wheel_scroll_view.ListWheelScrollView) {
    initState() {
      let t41;
      super.initState();
      this.scrollController = (t41 = this.widget.controller, t41 == null ? new list_wheel_scroll_view.FixedExtentScrollController.new() : t41);
      if (list_wheel_scroll_view.FixedExtentScrollController.is(this.widget.controller)) {
        let controller = list_wheel_scroll_view.FixedExtentScrollController.as(this.widget.controller);
        this[_lastReportedItemIndex] = controller.initialItem;
      }
    }
    didUpdateWidget(oldWidget) {
      list_wheel_scroll_view.ListWheelScrollView._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.controller != null && !dart.equals(this.widget.controller, this.scrollController)) {
        let oldScrollController = this.scrollController;
        binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(_ => {
          oldScrollController.dispose();
        }, DurationToNull()));
        this.scrollController = this.widget.controller;
      }
    }
    build(context) {
      return new (NotificationListenerOfScrollNotification()).new({onNotification: dart.fn(notification => {
          if (notification.depth === 0 && this.widget.onSelectedItemChanged != null && scroll_notification.ScrollUpdateNotification.is(notification) && list_wheel_scroll_view.FixedExtentMetrics.is(notification.metrics)) {
            let metrics = list_wheel_scroll_view.FixedExtentMetrics.as(notification.metrics);
            let currentItemIndex = metrics.itemIndex;
            if (currentItemIndex != this[_lastReportedItemIndex]) {
              this[_lastReportedItemIndex] = currentItemIndex;
              let trueIndex = this.widget.childDelegate.trueIndexOf(currentItemIndex);
              this.widget.onSelectedItemChanged(trueIndex);
            }
          }
          return false;
        }, ScrollNotificationTobool()), child: new list_wheel_scroll_view._FixedExtentScrollable.new({controller: this.scrollController, physics: this.widget.physics, itemExtent: this.widget.itemExtent, viewportBuilder: dart.fn((context, offset) => new list_wheel_scroll_view.ListWheelViewport.new({diameterRatio: this.widget.diameterRatio, perspective: this.widget.perspective, offAxisFraction: this.widget.offAxisFraction, useMagnifier: this.widget.useMagnifier, magnification: this.widget.magnification, overAndUnderCenterOpacity: this.widget.overAndUnderCenterOpacity, itemExtent: this.widget.itemExtent, squeeze: this.widget.squeeze, clipToSize: this.widget.clipToSize, renderChildrenOutsideViewport: this.widget.renderChildrenOutsideViewport, offset: offset, childDelegate: this.widget.childDelegate, $creationLocationd_0dea112b090073317d4: C1745 || CT.C1745}), BuildContextAndViewportOffsetToListWheelViewport()), $creationLocationd_0dea112b090073317d4: C1759 || CT.C1759}), $creationLocationd_0dea112b090073317d4: C1765 || CT.C1765});
    }
  };
  (list_wheel_scroll_view._ListWheelScrollViewState.new = function() {
    this[_lastReportedItemIndex] = 0;
    this.scrollController = null;
    list_wheel_scroll_view._ListWheelScrollViewState.__proto__.new.call(this);
    ;
  }).prototype = list_wheel_scroll_view._ListWheelScrollViewState.prototype;
  dart.addTypeTests(list_wheel_scroll_view._ListWheelScrollViewState);
  dart.setMethodSignature(list_wheel_scroll_view._ListWheelScrollViewState, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view._ListWheelScrollViewState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_wheel_scroll_view._ListWheelScrollViewState, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view._ListWheelScrollViewState, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view._ListWheelScrollViewState.__proto__),
    [_lastReportedItemIndex]: dart.fieldType(core.int),
    scrollController: dart.fieldType(scroll_controller.ScrollController)
  }));
  var _childWidgets$ = dart.privateName(list_wheel_scroll_view, "_childWidgets");
  var _childElements$ = dart.privateName(list_wheel_scroll_view, "_childElements");
  list_wheel_scroll_view.ListWheelElement = class ListWheelElement extends framework.RenderObjectElement {
    get widget() {
      return list_wheel_scroll_view.ListWheelViewport.as(super.widget);
    }
    get renderObject() {
      return list_wheel_viewport.RenderListWheelViewport.as(super.renderObject);
    }
    update(newWidget) {
      list_wheel_scroll_view.ListWheelViewport._check(newWidget);
      let oldWidget = this.widget;
      super.update(newWidget);
      let newDelegate = newWidget.childDelegate;
      let oldDelegate = oldWidget.childDelegate;
      if (!dart.equals(newDelegate, oldDelegate) && (!dart.equals(dart.runtimeType(newDelegate), dart.runtimeType(oldDelegate)) || dart.test(newDelegate.shouldRebuild(oldDelegate)))) this.performRebuild();
    }
    get childCount() {
      return this.widget.childDelegate.estimatedChildCount;
    }
    performRebuild() {
      this[_childWidgets$][$clear]();
      super.performRebuild();
      if (dart.test(this[_childElements$].isEmpty)) return;
      let firstIndex = this[_childElements$].firstKey();
      let lastIndex = this[_childElements$].lastKey();
      for (let index = firstIndex; dart.notNull(index) <= dart.notNull(lastIndex); index = dart.notNull(index) + 1) {
        let newChild = this.updateChild(this[_childElements$]._get(index), this.retrieveWidget(index), index);
        if (newChild != null) {
          this[_childElements$]._set(index, newChild);
        } else {
          this[_childElements$].remove(index);
        }
      }
    }
    retrieveWidget(index) {
      return this[_childWidgets$][$putIfAbsent](index, dart.fn(() => this.widget.childDelegate.build(this, index), VoidToWidget()));
    }
    childExistsAt(index) {
      return this.retrieveWidget(index) != null;
    }
    createChild(index, opts) {
      let after = opts && 'after' in opts ? opts.after : null;
      this.owner.buildScope(this, dart.fn(() => {
        let insertFirst = after == null;
        if (!(insertFirst || this[_childElements$]._get(dart.notNull(index) - 1) != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 858, 14, "insertFirst || _childElements[index - 1] != null");
        let newChild = this.updateChild(this[_childElements$]._get(index), this.retrieveWidget(index), index);
        if (newChild != null) {
          this[_childElements$]._set(index, newChild);
        } else {
          this[_childElements$].remove(index);
        }
      }, VoidToNull()));
    }
    removeChild(child) {
      let index = this.renderObject.indexOf(child);
      this.owner.buildScope(this, dart.fn(() => {
        if (!dart.test(this[_childElements$].containsKey(index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 873, 14, "_childElements.containsKey(index)");
        let result = this.updateChild(this[_childElements$]._get(index), null, index);
        if (!(result == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 875, 14, "result == null");
        this[_childElements$].remove(index);
        if (!!dart.test(this[_childElements$].containsKey(index))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 877, 14, "!_childElements.containsKey(index)");
      }, VoidToNull()));
    }
    updateChild(child, newWidget, newSlot) {
      let t41, t41$, t41$0, t41$1;
      let oldParentData = list_wheel_viewport.ListWheelParentData.as((t41$ = (t41 = child, t41 == null ? null : t41.renderObject), t41$ == null ? null : t41$.parentData));
      let newChild = super.updateChild(child, newWidget, newSlot);
      let newParentData = list_wheel_viewport.ListWheelParentData.as((t41$1 = (t41$0 = newChild, t41$0 == null ? null : t41$0.renderObject), t41$1 == null ? null : t41$1.parentData));
      if (newParentData != null) {
        newParentData.index = core.int.as(newSlot);
        if (oldParentData != null) newParentData.offset = oldParentData.offset;
      }
      return newChild;
    }
    insertChildRenderObject(child, slot) {
      let t41;
      object$.RenderObject._check(child);
      core.int._check(slot);
      let renderObject = this.renderObject;
      if (!dart.test(renderObject.debugValidateChild(child))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 898, 12, "renderObject.debugValidateChild(child)");
      renderObject.insert(box$.RenderBox.as(child), {after: box$.RenderBox.as((t41 = this[_childElements$]._get(dart.notNull(slot) - 1), t41 == null ? null : t41.renderObject))});
      if (!dart.equals(renderObject, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 900, 12, "renderObject == this.renderObject");
    }
    moveChildRenderObject(child, slot) {
      object$.RenderObject._check(child);
      let moveChildRenderObjectErrorMessage = "Currently we maintain the list in contiguous increasing order, so moving children around is not allowed.";
      if (!false) dart.assertFailed(moveChildRenderObjectErrorMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 908, 12, "false");
    }
    removeChildRenderObject(child) {
      object$.RenderObject._check(child);
      if (!dart.equals(child.parent, this.renderObject)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 913, 12, "child.parent == renderObject");
      this.renderObject.remove(box$.RenderBox.as(child));
    }
    visitChildren(visitor) {
      this[_childElements$].forEach(dart.fn((key, child) => {
        visitor(child);
      }, intAndElementToNull()));
    }
    forgetChild(child) {
      this[_childElements$].remove(child.slot);
      super.forgetChild(child);
    }
  };
  (list_wheel_scroll_view.ListWheelElement.new = function(widget) {
    this[_childWidgets$] = new (IdentityMapOfint$Widget()).new();
    this[_childElements$] = new (SplayTreeMapOfint$Element()).new();
    list_wheel_scroll_view.ListWheelElement.__proto__.new.call(this, widget);
    ;
  }).prototype = list_wheel_scroll_view.ListWheelElement.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelElement);
  list_wheel_scroll_view.ListWheelElement[dart.implements] = () => [list_wheel_viewport.ListWheelChildManager];
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelElement, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelElement.__proto__),
    retrieveWidget: dart.fnType(framework.Widget, [core.int]),
    childExistsAt: dart.fnType(core.bool, [core.int]),
    createChild: dart.fnType(dart.void, [core.int], {after: box$.RenderBox}, {}),
    removeChild: dart.fnType(dart.void, [box$.RenderBox]),
    insertChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    moveChildRenderObject: dart.fnType(dart.void, [core.Object, core.Object]),
    removeChildRenderObject: dart.fnType(dart.void, [core.Object])
  }));
  dart.setGetterSignature(list_wheel_scroll_view.ListWheelElement, () => ({
    __proto__: dart.getGetters(list_wheel_scroll_view.ListWheelElement.__proto__),
    widget: list_wheel_scroll_view.ListWheelViewport,
    renderObject: list_wheel_viewport.RenderListWheelViewport,
    childCount: core.int
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelElement, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelElement, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelElement.__proto__),
    [_childWidgets$]: dart.finalFieldType(core.Map$(core.int, framework.Widget)),
    [_childElements$]: dart.finalFieldType(collection.SplayTreeMap$(core.int, framework.Element))
  }));
  var diameterRatio$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.diameterRatio");
  var perspective$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.perspective");
  var offAxisFraction$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.offAxisFraction");
  var useMagnifier$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.useMagnifier");
  var magnification$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.magnification");
  var overAndUnderCenterOpacity$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.overAndUnderCenterOpacity");
  var itemExtent$3 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.itemExtent");
  var squeeze$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.squeeze");
  var clipToSize$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.clipToSize");
  var renderChildrenOutsideViewport$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.renderChildrenOutsideViewport");
  var offset$5 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.offset");
  var childDelegate$0 = dart.privateName(list_wheel_scroll_view, "ListWheelViewport.childDelegate");
  list_wheel_scroll_view.ListWheelViewport = class ListWheelViewport extends framework.RenderObjectWidget {
    get diameterRatio() {
      return this[diameterRatio$0];
    }
    set diameterRatio(value) {
      super.diameterRatio = value;
    }
    get perspective() {
      return this[perspective$0];
    }
    set perspective(value) {
      super.perspective = value;
    }
    get offAxisFraction() {
      return this[offAxisFraction$0];
    }
    set offAxisFraction(value) {
      super.offAxisFraction = value;
    }
    get useMagnifier() {
      return this[useMagnifier$0];
    }
    set useMagnifier(value) {
      super.useMagnifier = value;
    }
    get magnification() {
      return this[magnification$0];
    }
    set magnification(value) {
      super.magnification = value;
    }
    get overAndUnderCenterOpacity() {
      return this[overAndUnderCenterOpacity$0];
    }
    set overAndUnderCenterOpacity(value) {
      super.overAndUnderCenterOpacity = value;
    }
    get itemExtent() {
      return this[itemExtent$3];
    }
    set itemExtent(value) {
      super.itemExtent = value;
    }
    get squeeze() {
      return this[squeeze$0];
    }
    set squeeze(value) {
      super.squeeze = value;
    }
    get clipToSize() {
      return this[clipToSize$0];
    }
    set clipToSize(value) {
      super.clipToSize = value;
    }
    get renderChildrenOutsideViewport() {
      return this[renderChildrenOutsideViewport$0];
    }
    set renderChildrenOutsideViewport(value) {
      super.renderChildrenOutsideViewport = value;
    }
    get offset() {
      return this[offset$5];
    }
    set offset(value) {
      super.offset = value;
    }
    get childDelegate() {
      return this[childDelegate$0];
    }
    set childDelegate(value) {
      super.childDelegate = value;
    }
    createElement() {
      return new list_wheel_scroll_view.ListWheelElement.new(this);
    }
    createRenderObject(context) {
      let childManager = list_wheel_scroll_view.ListWheelElement.as(context);
      return new list_wheel_viewport.RenderListWheelViewport.new({childManager: childManager, offset: this.offset, diameterRatio: this.diameterRatio, perspective: this.perspective, offAxisFraction: this.offAxisFraction, useMagnifier: this.useMagnifier, magnification: this.magnification, overAndUnderCenterOpacity: this.overAndUnderCenterOpacity, itemExtent: this.itemExtent, squeeze: this.squeeze, clipToSize: this.clipToSize, renderChildrenOutsideViewport: this.renderChildrenOutsideViewport});
    }
    updateRenderObject(context, renderObject) {
      let t41;
      list_wheel_viewport.RenderListWheelViewport._check(renderObject);
      t41 = renderObject;
      t41.offset = this.offset;
      t41.diameterRatio = this.diameterRatio;
      t41.perspective = this.perspective;
      t41.offAxisFraction = this.offAxisFraction;
      t41.useMagnifier = this.useMagnifier;
      t41.magnification = this.magnification;
      t41.overAndUnderCenterOpacity = this.overAndUnderCenterOpacity;
      t41.itemExtent = this.itemExtent;
      t41.squeeze = this.squeeze;
      t41.clipToSize = this.clipToSize;
      t41.renderChildrenOutsideViewport = this.renderChildrenOutsideViewport;
      t41;
    }
  };
  (list_wheel_scroll_view.ListWheelViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let diameterRatio = opts && 'diameterRatio' in opts ? opts.diameterRatio : 2;
    let perspective = opts && 'perspective' in opts ? opts.perspective : 0.003;
    let offAxisFraction = opts && 'offAxisFraction' in opts ? opts.offAxisFraction : 0;
    let useMagnifier = opts && 'useMagnifier' in opts ? opts.useMagnifier : false;
    let magnification = opts && 'magnification' in opts ? opts.magnification : 1;
    let overAndUnderCenterOpacity = opts && 'overAndUnderCenterOpacity' in opts ? opts.overAndUnderCenterOpacity : 1;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let squeeze = opts && 'squeeze' in opts ? opts.squeeze : 1;
    let clipToSize = opts && 'clipToSize' in opts ? opts.clipToSize : true;
    let renderChildrenOutsideViewport = opts && 'renderChildrenOutsideViewport' in opts ? opts.renderChildrenOutsideViewport : false;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let childDelegate = opts && 'childDelegate' in opts ? opts.childDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[diameterRatio$0] = diameterRatio;
    this[perspective$0] = perspective;
    this[offAxisFraction$0] = offAxisFraction;
    this[useMagnifier$0] = useMagnifier;
    this[magnification$0] = magnification;
    this[overAndUnderCenterOpacity$0] = overAndUnderCenterOpacity;
    this[itemExtent$3] = itemExtent;
    this[squeeze$0] = squeeze;
    this[clipToSize$0] = clipToSize;
    this[renderChildrenOutsideViewport$0] = renderChildrenOutsideViewport;
    this[offset$5] = offset;
    this[childDelegate$0] = childDelegate;
    if (!(childDelegate != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 973, 15, "childDelegate != null");
    if (!(offset != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 974, 15, "offset != null");
    if (!(diameterRatio != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 975, 15, "diameterRatio != null");
    if (!(dart.notNull(diameterRatio) > 0)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.diameterRatioZeroMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 976, 15, "diameterRatio > 0");
    if (!(perspective != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 977, 15, "perspective != null");
    if (!(dart.notNull(perspective) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 978, 15, "perspective > 0");
    if (!(dart.notNull(perspective) <= 0.01)) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.perspectiveTooHighMessage, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 979, 15, "perspective <= 0.01");
    if (!(overAndUnderCenterOpacity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 980, 15, "overAndUnderCenterOpacity != null");
    if (!(dart.notNull(overAndUnderCenterOpacity) >= 0 && dart.notNull(overAndUnderCenterOpacity) <= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 981, 15, "overAndUnderCenterOpacity >= 0 && overAndUnderCenterOpacity <= 1");
    if (!(itemExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 982, 15, "itemExtent != null");
    if (!(dart.notNull(itemExtent) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 983, 15, "itemExtent > 0");
    if (!(squeeze != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 984, 15, "squeeze != null");
    if (!(dart.notNull(squeeze) > 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 985, 15, "squeeze > 0");
    if (!(clipToSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 986, 15, "clipToSize != null");
    if (!(renderChildrenOutsideViewport != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 987, 15, "renderChildrenOutsideViewport != null");
    if (!(!dart.test(renderChildrenOutsideViewport) || !dart.test(clipToSize))) dart.assertFailed(list_wheel_viewport.RenderListWheelViewport.clipToSizeAndRenderChildrenOutsideViewportConflict, "org-dartlang-app:///packages/flutter/src/widgets/list_wheel_scroll_view.dart", 989, 10, "!renderChildrenOutsideViewport || !clipToSize");
    list_wheel_scroll_view.ListWheelViewport.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_wheel_scroll_view.ListWheelViewport.prototype;
  dart.addTypeTests(list_wheel_scroll_view.ListWheelViewport);
  dart.setMethodSignature(list_wheel_scroll_view.ListWheelViewport, () => ({
    __proto__: dart.getMethods(list_wheel_scroll_view.ListWheelViewport.__proto__),
    createElement: dart.fnType(list_wheel_scroll_view.ListWheelElement, []),
    createRenderObject: dart.fnType(list_wheel_viewport.RenderListWheelViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(list_wheel_scroll_view.ListWheelViewport, "package:flutter/src/widgets/list_wheel_scroll_view.dart");
  dart.setFieldSignature(list_wheel_scroll_view.ListWheelViewport, () => ({
    __proto__: dart.getFields(list_wheel_scroll_view.ListWheelViewport.__proto__),
    diameterRatio: dart.finalFieldType(core.double),
    perspective: dart.finalFieldType(core.double),
    offAxisFraction: dart.finalFieldType(core.double),
    useMagnifier: dart.finalFieldType(core.bool),
    magnification: dart.finalFieldType(core.double),
    overAndUnderCenterOpacity: dart.finalFieldType(core.double),
    itemExtent: dart.finalFieldType(core.double),
    squeeze: dart.finalFieldType(core.double),
    clipToSize: dart.finalFieldType(core.bool),
    renderChildrenOutsideViewport: dart.finalFieldType(core.bool),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    childDelegate: dart.finalFieldType(list_wheel_scroll_view.ListWheelChildDelegate)
  }));
  list_wheel_scroll_view._getItemFromOffset = function _getItemFromOffset(opts) {
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
    let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
    let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
    return (dart.notNull(list_wheel_scroll_view._clipOffsetToScrollableRange(offset, minScrollExtent, maxScrollExtent)) / dart.notNull(itemExtent))[$round]();
  };
  list_wheel_scroll_view._clipOffsetToScrollableRange = function _clipOffsetToScrollableRange(offset, minScrollExtent, maxScrollExtent) {
    return math.min(core.double, math.max(core.double, offset, minScrollExtent), maxScrollExtent);
  };
  var color$13 = dart.privateName(placeholder, "_PlaceholderPainter.color");
  var strokeWidth$ = dart.privateName(placeholder, "_PlaceholderPainter.strokeWidth");
  placeholder._PlaceholderPainter = class _PlaceholderPainter extends custom_paint.CustomPainter {
    get color() {
      return this[color$13];
    }
    set color(value) {
      super.color = value;
    }
    get strokeWidth() {
      return this[strokeWidth$];
    }
    set strokeWidth(value) {
      super.strokeWidth = value;
    }
    paint(canvas, size) {
      let t41, t41$;
      let paint = (t41 = ui.Paint.new(), t41.color = this.color, t41.style = ui.PaintingStyle.stroke, t41.strokeWidth = this.strokeWidth, t41);
      let rect = ui.Offset.zero['&'](size);
      let path = (t41$ = ui.Path.new(), t41$.addRect(rect), t41$.addPolygon(JSArrayOfOffset().of([rect.topRight, rect.bottomLeft]), false), t41$.addPolygon(JSArrayOfOffset().of([rect.topLeft, rect.bottomRight]), false), t41$);
      canvas.drawPath(path, paint);
    }
    shouldRepaint(oldPainter) {
      placeholder._PlaceholderPainter._check(oldPainter);
      return !dart.equals(oldPainter.color, this.color) || oldPainter.strokeWidth != this.strokeWidth;
    }
    hitTest(position) {
      return false;
    }
  };
  (placeholder._PlaceholderPainter.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : null;
    this[color$13] = color;
    this[strokeWidth$] = strokeWidth;
    placeholder._PlaceholderPainter.__proto__.new.call(this);
    ;
  }).prototype = placeholder._PlaceholderPainter.prototype;
  dart.addTypeTests(placeholder._PlaceholderPainter);
  dart.setMethodSignature(placeholder._PlaceholderPainter, () => ({
    __proto__: dart.getMethods(placeholder._PlaceholderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(placeholder._PlaceholderPainter, "package:flutter/src/widgets/placeholder.dart");
  dart.setFieldSignature(placeholder._PlaceholderPainter, () => ({
    __proto__: dart.getFields(placeholder._PlaceholderPainter.__proto__),
    color: dart.finalFieldType(ui.Color),
    strokeWidth: dart.finalFieldType(core.double)
  }));
  var C1769;
  var C1772;
  var C1773;
  var C1771;
  var C1770;
  var C1776;
  var C1777;
  var C1778;
  var C1775;
  var C1774;
  var color$14 = dart.privateName(placeholder, "Placeholder.color");
  var strokeWidth$0 = dart.privateName(placeholder, "Placeholder.strokeWidth");
  var fallbackWidth$ = dart.privateName(placeholder, "Placeholder.fallbackWidth");
  var fallbackHeight$ = dart.privateName(placeholder, "Placeholder.fallbackHeight");
  placeholder.Placeholder = class Placeholder extends framework.StatelessWidget {
    get color() {
      return this[color$14];
    }
    set color(value) {
      super.color = value;
    }
    get strokeWidth() {
      return this[strokeWidth$0];
    }
    set strokeWidth(value) {
      super.strokeWidth = value;
    }
    get fallbackWidth() {
      return this[fallbackWidth$];
    }
    set fallbackWidth(value) {
      super.fallbackWidth = value;
    }
    get fallbackHeight() {
      return this[fallbackHeight$];
    }
    set fallbackHeight(value) {
      super.fallbackHeight = value;
    }
    build(context) {
      return new basic.LimitedBox.new({maxWidth: this.fallbackWidth, maxHeight: this.fallbackHeight, child: new basic.CustomPaint.new({size: ui.Size.infinite, foregroundPainter: new placeholder._PlaceholderPainter.new({color: this.color, strokeWidth: this.strokeWidth}), $creationLocationd_0dea112b090073317d4: C1770 || CT.C1770}), $creationLocationd_0dea112b090073317d4: C1774 || CT.C1774});
    }
  };
  (placeholder.Placeholder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : C1769 || CT.C1769;
    let strokeWidth = opts && 'strokeWidth' in opts ? opts.strokeWidth : 2;
    let fallbackWidth = opts && 'fallbackWidth' in opts ? opts.fallbackWidth : 400;
    let fallbackHeight = opts && 'fallbackHeight' in opts ? opts.fallbackHeight : 400;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$14] = color;
    this[strokeWidth$0] = strokeWidth;
    this[fallbackWidth$] = fallbackWidth;
    this[fallbackHeight$] = fallbackHeight;
    placeholder.Placeholder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = placeholder.Placeholder.prototype;
  dart.addTypeTests(placeholder.Placeholder);
  dart.setMethodSignature(placeholder.Placeholder, () => ({
    __proto__: dart.getMethods(placeholder.Placeholder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(placeholder.Placeholder, "package:flutter/src/widgets/placeholder.dart");
  dart.setFieldSignature(placeholder.Placeholder, () => ({
    __proto__: dart.getFields(placeholder.Placeholder.__proto__),
    color: dart.finalFieldType(ui.Color),
    strokeWidth: dart.finalFieldType(core.double),
    fallbackWidth: dart.finalFieldType(core.double),
    fallbackHeight: dart.finalFieldType(core.double)
  }));
  var color$15 = dart.privateName(grid_paper, "_GridPaperPainter.color");
  var interval$ = dart.privateName(grid_paper, "_GridPaperPainter.interval");
  var divisions$ = dart.privateName(grid_paper, "_GridPaperPainter.divisions");
  var subdivisions$ = dart.privateName(grid_paper, "_GridPaperPainter.subdivisions");
  grid_paper._GridPaperPainter = class _GridPaperPainter extends custom_paint.CustomPainter {
    get color() {
      return this[color$15];
    }
    set color(value) {
      super.color = value;
    }
    get interval() {
      return this[interval$];
    }
    set interval(value) {
      super.interval = value;
    }
    get divisions() {
      return this[divisions$];
    }
    set divisions(value) {
      super.divisions = value;
    }
    get subdivisions() {
      return this[subdivisions$];
    }
    set subdivisions(value) {
      super.subdivisions = value;
    }
    paint(canvas, size) {
      let t41;
      let linePaint = (t41 = ui.Paint.new(), t41.color = this.color, t41);
      let allDivisions = (dart.notNull(this.divisions) * dart.notNull(this.subdivisions))[$toDouble]();
      for (let x = 0.0; x <= dart.notNull(size.width); x = x + dart.notNull(this.interval) / allDivisions) {
        linePaint.strokeWidth = x[$modulo](this.interval) === 0.0 ? 1.0 : x[$modulo](dart.notNull(this.interval) / dart.notNull(this.subdivisions)) === 0.0 ? 0.5 : 0.25;
        canvas.drawLine(new ui.Offset.new(x, 0.0), new ui.Offset.new(x, size.height), linePaint);
      }
      for (let y = 0.0; y <= dart.notNull(size.height); y = y + dart.notNull(this.interval) / allDivisions) {
        linePaint.strokeWidth = y[$modulo](this.interval) === 0.0 ? 1.0 : y[$modulo](dart.notNull(this.interval) / dart.notNull(this.subdivisions)) === 0.0 ? 0.5 : 0.25;
        canvas.drawLine(new ui.Offset.new(0.0, y), new ui.Offset.new(size.width, y), linePaint);
      }
    }
    shouldRepaint(oldPainter) {
      grid_paper._GridPaperPainter._check(oldPainter);
      return !dart.equals(oldPainter.color, this.color) || oldPainter.interval != this.interval || oldPainter.divisions != this.divisions || oldPainter.subdivisions != this.subdivisions;
    }
    hitTest(position) {
      return false;
    }
  };
  (grid_paper._GridPaperPainter.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let interval = opts && 'interval' in opts ? opts.interval : null;
    let divisions = opts && 'divisions' in opts ? opts.divisions : null;
    let subdivisions = opts && 'subdivisions' in opts ? opts.subdivisions : null;
    this[color$15] = color;
    this[interval$] = interval;
    this[divisions$] = divisions;
    this[subdivisions$] = subdivisions;
    grid_paper._GridPaperPainter.__proto__.new.call(this);
    ;
  }).prototype = grid_paper._GridPaperPainter.prototype;
  dart.addTypeTests(grid_paper._GridPaperPainter);
  dart.setMethodSignature(grid_paper._GridPaperPainter, () => ({
    __proto__: dart.getMethods(grid_paper._GridPaperPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(grid_paper._GridPaperPainter, "package:flutter/src/widgets/grid_paper.dart");
  dart.setFieldSignature(grid_paper._GridPaperPainter, () => ({
    __proto__: dart.getFields(grid_paper._GridPaperPainter.__proto__),
    color: dart.finalFieldType(ui.Color),
    interval: dart.finalFieldType(core.double),
    divisions: dart.finalFieldType(core.int),
    subdivisions: dart.finalFieldType(core.int)
  }));
  var C1779;
  var C1782;
  var C1783;
  var C1781;
  var C1780;
  var color$16 = dart.privateName(grid_paper, "GridPaper.color");
  var interval$0 = dart.privateName(grid_paper, "GridPaper.interval");
  var divisions$0 = dart.privateName(grid_paper, "GridPaper.divisions");
  var subdivisions$0 = dart.privateName(grid_paper, "GridPaper.subdivisions");
  var child$59 = dart.privateName(grid_paper, "GridPaper.child");
  grid_paper.GridPaper = class GridPaper extends framework.StatelessWidget {
    get color() {
      return this[color$16];
    }
    set color(value) {
      super.color = value;
    }
    get interval() {
      return this[interval$0];
    }
    set interval(value) {
      super.interval = value;
    }
    get divisions() {
      return this[divisions$0];
    }
    set divisions(value) {
      super.divisions = value;
    }
    get subdivisions() {
      return this[subdivisions$0];
    }
    set subdivisions(value) {
      super.subdivisions = value;
    }
    get child() {
      return this[child$59];
    }
    set child(value) {
      super.child = value;
    }
    build(context) {
      return new basic.CustomPaint.new({foregroundPainter: new grid_paper._GridPaperPainter.new({color: this.color, interval: this.interval, divisions: this.divisions, subdivisions: this.subdivisions}), child: this.child, $creationLocationd_0dea112b090073317d4: C1780 || CT.C1780});
    }
  };
  (grid_paper.GridPaper.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : C1779 || CT.C1779;
    let interval = opts && 'interval' in opts ? opts.interval : 100;
    let divisions = opts && 'divisions' in opts ? opts.divisions : 2;
    let subdivisions = opts && 'subdivisions' in opts ? opts.subdivisions : 5;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[color$16] = color;
    this[interval$0] = interval;
    this[divisions$0] = divisions;
    this[subdivisions$0] = subdivisions;
    this[child$59] = child;
    if (!(dart.notNull(divisions) > 0)) dart.assertFailed("The \"divisions\" property must be greater than zero. If there were no divisions, the grid paper would not paint anything.", "org-dartlang-app:///packages/flutter/src/widgets/grid_paper.dart", 67, 15, "divisions > 0");
    if (!(dart.notNull(subdivisions) > 0)) dart.assertFailed("The \"subdivisions\" property must be greater than zero. If there were no subdivisions, the grid paper would not paint anything.", "org-dartlang-app:///packages/flutter/src/widgets/grid_paper.dart", 68, 15, "subdivisions > 0");
    grid_paper.GridPaper.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = grid_paper.GridPaper.prototype;
  dart.addTypeTests(grid_paper.GridPaper);
  dart.setMethodSignature(grid_paper.GridPaper, () => ({
    __proto__: dart.getMethods(grid_paper.GridPaper.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(grid_paper.GridPaper, "package:flutter/src/widgets/grid_paper.dart");
  dart.setFieldSignature(grid_paper.GridPaper, () => ({
    __proto__: dart.getFields(grid_paper.GridPaper.__proto__),
    color: dart.finalFieldType(ui.Color),
    interval: dart.finalFieldType(core.double),
    divisions: dart.finalFieldType(core.int),
    subdivisions: dart.finalFieldType(core.int),
    child: dart.finalFieldType(framework.Widget)
  }));
  var _absorberHandle = dart.privateName(nested_scroll_view, "_absorberHandle");
  var C1786;
  var C1787;
  var C1785;
  var C1784;
  var C1790;
  var C1789;
  var C1788;
  var _buildSlivers = dart.privateName(nested_scroll_view, "_buildSlivers");
  var controller$7 = dart.privateName(nested_scroll_view, "NestedScrollView.controller");
  var scrollDirection$3 = dart.privateName(nested_scroll_view, "NestedScrollView.scrollDirection");
  var reverse$4 = dart.privateName(nested_scroll_view, "NestedScrollView.reverse");
  var physics$6 = dart.privateName(nested_scroll_view, "NestedScrollView.physics");
  var headerSliverBuilder$ = dart.privateName(nested_scroll_view, "NestedScrollView.headerSliverBuilder");
  var body$ = dart.privateName(nested_scroll_view, "NestedScrollView.body");
  var dragStartBehavior$8 = dart.privateName(nested_scroll_view, "NestedScrollView.dragStartBehavior");
  nested_scroll_view.NestedScrollView = class NestedScrollView extends framework.StatefulWidget {
    get controller() {
      return this[controller$7];
    }
    set controller(value) {
      super.controller = value;
    }
    get scrollDirection() {
      return this[scrollDirection$3];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$4];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get physics() {
      return this[physics$6];
    }
    set physics(value) {
      super.physics = value;
    }
    get headerSliverBuilder() {
      return this[headerSliverBuilder$];
    }
    set headerSliverBuilder(value) {
      super.headerSliverBuilder = value;
    }
    get body() {
      return this[body$];
    }
    set body(value) {
      super.body = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$8];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    static sliverOverlapAbsorberHandleFor(context) {
      let target = context.dependOnInheritedWidgetOfExactType(nested_scroll_view._InheritedNestedScrollView);
      if (!(target != null)) dart.assertFailed("NestedScrollView.sliverOverlapAbsorberHandleFor must be called with a context that contains a NestedScrollView.", "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 274, 7, "target != null");
      return target.state[_absorberHandle];
    }
    [_buildSlivers](context, innerController, bodyIsScrolled) {
      return (() => {
        let t41 = JSArrayOfWidget().of([]);
        for (let t42 of this.headerSliverBuilder(context, bodyIsScrolled))
          t41[$add](t42);
        t41[$add](new sliver_fill$.SliverFillRemaining.new({child: new primary_scroll_controller.PrimaryScrollController.new({controller: innerController, child: this.body, $creationLocationd_0dea112b090073317d4: C1784 || CT.C1784}), $creationLocationd_0dea112b090073317d4: C1788 || CT.C1788}));
        return t41;
      })();
    }
    createState() {
      return new nested_scroll_view.NestedScrollViewState.new();
    }
  };
  (nested_scroll_view.NestedScrollView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C77 || CT.C77;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let headerSliverBuilder = opts && 'headerSliverBuilder' in opts ? opts.headerSliverBuilder : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$7] = controller;
    this[scrollDirection$3] = scrollDirection;
    this[reverse$4] = reverse;
    this[physics$6] = physics;
    this[headerSliverBuilder$] = headerSliverBuilder;
    this[body$] = body;
    this[dragStartBehavior$8] = dragStartBehavior;
    if (!(scrollDirection != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 196, 15, "scrollDirection != null");
    if (!(reverse != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 197, 15, "reverse != null");
    if (!(headerSliverBuilder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 198, 15, "headerSliverBuilder != null");
    if (!(body != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 199, 15, "body != null");
    nested_scroll_view.NestedScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view.NestedScrollView.prototype;
  dart.addTypeTests(nested_scroll_view.NestedScrollView);
  dart.setMethodSignature(nested_scroll_view.NestedScrollView, () => ({
    __proto__: dart.getMethods(nested_scroll_view.NestedScrollView.__proto__),
    [_buildSlivers]: dart.fnType(core.List$(framework.Widget), [framework.BuildContext, scroll_controller.ScrollController, core.bool]),
    createState: dart.fnType(nested_scroll_view.NestedScrollViewState, [])
  }));
  dart.setLibraryUri(nested_scroll_view.NestedScrollView, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.NestedScrollView, () => ({
    __proto__: dart.getFields(nested_scroll_view.NestedScrollView.__proto__),
    controller: dart.finalFieldType(scroll_controller.ScrollController),
    scrollDirection: dart.finalFieldType(basic_types$.Axis),
    reverse: dart.finalFieldType(core.bool),
    physics: dart.finalFieldType(scroll_physics.ScrollPhysics),
    headerSliverBuilder: dart.finalFieldType(dart.fnType(core.List$(framework.Widget), [framework.BuildContext, core.bool])),
    body: dart.finalFieldType(framework.Widget),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior)
  }));
  var _coordinator = dart.privateName(nested_scroll_view, "_coordinator");
  var _lastHasScrolledBody = dart.privateName(nested_scroll_view, "_lastHasScrolledBody");
  var _innerController = dart.privateName(nested_scroll_view, "_innerController");
  var _outerController = dart.privateName(nested_scroll_view, "_outerController");
  var _handleHasScrolledBodyChanged = dart.privateName(nested_scroll_view, "_handleHasScrolledBodyChanged");
  var C1793;
  var C1794;
  var C1795;
  var C1796;
  var C1797;
  var C1798;
  var C1799;
  var C1792;
  var C1791;
  var C1802;
  var C1801;
  var C1800;
  var C1805;
  var C1806;
  var C1804;
  var C1803;
  nested_scroll_view.NestedScrollViewState = class NestedScrollViewState extends framework.State$(nested_scroll_view.NestedScrollView) {
    get innerController() {
      return this[_coordinator][_innerController];
    }
    get outerController() {
      return this[_coordinator][_outerController];
    }
    initState() {
      super.initState();
      this[_coordinator] = new nested_scroll_view._NestedScrollCoordinator.new(this, this.widget.controller, dart.bind(this, _handleHasScrolledBodyChanged));
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[_coordinator].setParent(this.widget.controller);
    }
    didUpdateWidget(oldWidget) {
      nested_scroll_view.NestedScrollView._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(oldWidget.controller, this.widget.controller)) this[_coordinator].setParent(this.widget.controller);
    }
    dispose() {
      this[_coordinator].dispose();
      this[_coordinator] = null;
      super.dispose();
    }
    [_handleHasScrolledBodyChanged]() {
      if (!dart.test(this.mounted)) return;
      let newHasScrolledBody = this[_coordinator].hasScrolledBody;
      if (!dart.equals(this[_lastHasScrolledBody], newHasScrolledBody)) {
        this.setState(dart.fn(() => {
        }, VoidToNull()));
      }
    }
    build(context) {
      return new nested_scroll_view._InheritedNestedScrollView.new({state: this, child: new basic.Builder.new({builder: dart.fn(context => {
            this[_lastHasScrolledBody] = this[_coordinator].hasScrolledBody;
            return new nested_scroll_view._NestedScrollViewCustomScrollView.new({dragStartBehavior: this.widget.dragStartBehavior, scrollDirection: this.widget.scrollDirection, reverse: this.widget.reverse, physics: this.widget.physics != null ? this.widget.physics.applyTo(C923 || CT.C923) : C923 || CT.C923, controller: this[_coordinator][_outerController], slivers: this.widget[_buildSlivers](context, this[_coordinator][_innerController], this[_lastHasScrolledBody]), handle: this[_absorberHandle], $creationLocationd_0dea112b090073317d4: C1791 || CT.C1791});
          }, BuildContextTo_NestedScrollViewCustomScrollView()), $creationLocationd_0dea112b090073317d4: C1800 || CT.C1800}), $creationLocationd_0dea112b090073317d4: C1803 || CT.C1803});
    }
  };
  (nested_scroll_view.NestedScrollViewState.new = function() {
    this[_absorberHandle] = new nested_scroll_view.SliverOverlapAbsorberHandle.new();
    this[_coordinator] = null;
    this[_lastHasScrolledBody] = null;
    nested_scroll_view.NestedScrollViewState.__proto__.new.call(this);
    ;
  }).prototype = nested_scroll_view.NestedScrollViewState.prototype;
  dart.addTypeTests(nested_scroll_view.NestedScrollViewState);
  dart.setMethodSignature(nested_scroll_view.NestedScrollViewState, () => ({
    __proto__: dart.getMethods(nested_scroll_view.NestedScrollViewState.__proto__),
    [_handleHasScrolledBodyChanged]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested_scroll_view.NestedScrollViewState, () => ({
    __proto__: dart.getGetters(nested_scroll_view.NestedScrollViewState.__proto__),
    innerController: scroll_controller.ScrollController,
    outerController: scroll_controller.ScrollController
  }));
  dart.setLibraryUri(nested_scroll_view.NestedScrollViewState, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.NestedScrollViewState, () => ({
    __proto__: dart.getFields(nested_scroll_view.NestedScrollViewState.__proto__),
    [_absorberHandle]: dart.finalFieldType(nested_scroll_view.SliverOverlapAbsorberHandle),
    [_coordinator]: dart.fieldType(nested_scroll_view._NestedScrollCoordinator),
    [_lastHasScrolledBody]: dart.fieldType(core.bool)
  }));
  var C1809;
  var C1810;
  var C1811;
  var C1812;
  var C1808;
  var C1807;
  var handle$0 = dart.privateName(nested_scroll_view, "_NestedScrollViewCustomScrollView.handle");
  nested_scroll_view._NestedScrollViewCustomScrollView = class _NestedScrollViewCustomScrollView extends scroll_view.CustomScrollView {
    get handle() {
      return this[handle$0];
    }
    set handle(value) {
      super.handle = value;
    }
    buildViewport(context, offset, axisDirection, slivers) {
      if (!!dart.test(this.shrinkWrap)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 474, 12, "!shrinkWrap");
      return new nested_scroll_view.NestedScrollViewViewport.new({axisDirection: axisDirection, offset: offset, slivers: slivers, handle: this.handle, $creationLocationd_0dea112b090073317d4: C1807 || CT.C1807});
    }
  };
  (nested_scroll_view._NestedScrollViewCustomScrollView.new = function(opts) {
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let slivers = opts && 'slivers' in opts ? opts.slivers : null;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C73 || CT.C73;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[handle$0] = handle;
    nested_scroll_view._NestedScrollViewCustomScrollView.__proto__.new.call(this, {scrollDirection: scrollDirection, reverse: reverse, physics: physics, controller: controller, slivers: slivers, dragStartBehavior: dragStartBehavior, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view._NestedScrollViewCustomScrollView.prototype;
  dart.addTypeTests(nested_scroll_view._NestedScrollViewCustomScrollView);
  dart.setLibraryUri(nested_scroll_view._NestedScrollViewCustomScrollView, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedScrollViewCustomScrollView, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedScrollViewCustomScrollView.__proto__),
    handle: dart.finalFieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var state$ = dart.privateName(nested_scroll_view, "_InheritedNestedScrollView.state");
  nested_scroll_view._InheritedNestedScrollView = class _InheritedNestedScrollView extends framework.InheritedWidget {
    get state() {
      return this[state$];
    }
    set state(value) {
      super.state = value;
    }
    updateShouldNotify(old) {
      nested_scroll_view._InheritedNestedScrollView._check(old);
      return !dart.equals(this.state, old.state);
    }
  };
  (nested_scroll_view._InheritedNestedScrollView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let state = opts && 'state' in opts ? opts.state : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[state$] = state;
    if (!(state != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 489, 15, "state != null");
    if (!(child != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 490, 15, "child != null");
    nested_scroll_view._InheritedNestedScrollView.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view._InheritedNestedScrollView.prototype;
  dart.addTypeTests(nested_scroll_view._InheritedNestedScrollView);
  dart.setMethodSignature(nested_scroll_view._InheritedNestedScrollView, () => ({
    __proto__: dart.getMethods(nested_scroll_view._InheritedNestedScrollView.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(nested_scroll_view._InheritedNestedScrollView, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._InheritedNestedScrollView, () => ({
    __proto__: dart.getFields(nested_scroll_view._InheritedNestedScrollView.__proto__),
    state: dart.finalFieldType(nested_scroll_view.NestedScrollViewState)
  }));
  nested_scroll_view._NestedScrollMetrics = class _NestedScrollMetrics extends scroll_metrics.FixedScrollMetrics {
    copyWith(opts) {
      let t43, t43$, t43$0, t43$1, t43$2, t43$3, t43$4, t43$5;
      let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
      let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
      let pixels = opts && 'pixels' in opts ? opts.pixels : null;
      let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let minRange = opts && 'minRange' in opts ? opts.minRange : null;
      let maxRange = opts && 'maxRange' in opts ? opts.maxRange : null;
      let correctionOffset = opts && 'correctionOffset' in opts ? opts.correctionOffset : null;
      return new nested_scroll_view._NestedScrollMetrics.new({minScrollExtent: (t43 = minScrollExtent, t43 == null ? this.minScrollExtent : t43), maxScrollExtent: (t43$ = maxScrollExtent, t43$ == null ? this.maxScrollExtent : t43$), pixels: (t43$0 = pixels, t43$0 == null ? this.pixels : t43$0), viewportDimension: (t43$1 = viewportDimension, t43$1 == null ? this.viewportDimension : t43$1), axisDirection: (t43$2 = axisDirection, t43$2 == null ? this.axisDirection : t43$2), minRange: (t43$3 = minRange, t43$3 == null ? this.minRange : t43$3), maxRange: (t43$4 = maxRange, t43$4 == null ? this.maxRange : t43$4), correctionOffset: (t43$5 = correctionOffset, t43$5 == null ? this.correctionOffset : t43$5)});
    }
  };
  (nested_scroll_view._NestedScrollMetrics.new = function(opts) {
    let minScrollExtent = opts && 'minScrollExtent' in opts ? opts.minScrollExtent : null;
    let maxScrollExtent = opts && 'maxScrollExtent' in opts ? opts.maxScrollExtent : null;
    let pixels = opts && 'pixels' in opts ? opts.pixels : null;
    let viewportDimension = opts && 'viewportDimension' in opts ? opts.viewportDimension : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let minRange = opts && 'minRange' in opts ? opts.minRange : null;
    let maxRange = opts && 'maxRange' in opts ? opts.maxRange : null;
    let correctionOffset = opts && 'correctionOffset' in opts ? opts.correctionOffset : null;
    this.minRange = minRange;
    this.maxRange = maxRange;
    this.correctionOffset = correctionOffset;
    nested_scroll_view._NestedScrollMetrics.__proto__.new.call(this, {minScrollExtent: minScrollExtent, maxScrollExtent: maxScrollExtent, pixels: pixels, viewportDimension: viewportDimension, axisDirection: axisDirection});
    ;
  }).prototype = nested_scroll_view._NestedScrollMetrics.prototype;
  dart.addTypeTests(nested_scroll_view._NestedScrollMetrics);
  dart.setMethodSignature(nested_scroll_view._NestedScrollMetrics, () => ({
    __proto__: dart.getMethods(nested_scroll_view._NestedScrollMetrics.__proto__),
    copyWith: dart.fnType(nested_scroll_view._NestedScrollMetrics, [], {axisDirection: basic_types$.AxisDirection, correctionOffset: core.double, maxRange: core.double, maxScrollExtent: core.double, minRange: core.double, minScrollExtent: core.double, pixels: core.double, viewportDimension: core.double}, {})
  }));
  dart.setLibraryUri(nested_scroll_view._NestedScrollMetrics, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedScrollMetrics, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedScrollMetrics.__proto__),
    minRange: dart.finalFieldType(core.double),
    maxRange: dart.finalFieldType(core.double),
    correctionOffset: dart.finalFieldType(core.double)
  }));
  var _userScrollDirection$ = dart.privateName(nested_scroll_view, "_userScrollDirection");
  var _currentDrag$ = dart.privateName(nested_scroll_view, "_currentDrag");
  var _state$1 = dart.privateName(nested_scroll_view, "_state");
  var _parent$0 = dart.privateName(nested_scroll_view, "_parent");
  var _onHasScrolledBodyChanged$ = dart.privateName(nested_scroll_view, "_onHasScrolledBodyChanged");
  var _outerPosition = dart.privateName(nested_scroll_view, "_outerPosition");
  var _innerPositions = dart.privateName(nested_scroll_view, "_innerPositions");
  var C1813;
  var _getMetrics = dart.privateName(nested_scroll_view, "_getMetrics");
  nested_scroll_view._NestedScrollCoordinator = class _NestedScrollCoordinator extends core.Object {
    get [_outerPosition]() {
      if (!dart.test(this[_outerController].hasClients)) return null;
      return this[_outerController].nestedPositions[$single];
    }
    get [_innerPositions]() {
      return this[_innerController].nestedPositions;
    }
    get canScrollBody() {
      let outer = this[_outerPosition];
      if (outer == null) return true;
      return dart.test(outer.haveDimensions) && outer.extentAfter === 0.0;
    }
    get hasScrolledBody() {
      for (let position of this[_innerPositions]) {
        if (!(position.minScrollExtent != null && position.pixels != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 590, 14, "position.minScrollExtent != null && position.pixels != null");
        if (dart.notNull(position.pixels) > dart.notNull(position.minScrollExtent)) {
          return true;
        }
      }
      return false;
    }
    updateShadow() {
      if (this[_onHasScrolledBodyChanged$] != null) this[_onHasScrolledBodyChanged$]();
    }
    get userScrollDirection() {
      return this[_userScrollDirection$];
    }
    updateUserScrollDirection(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 607, 12, "value != null");
      if (dart.equals(this.userScrollDirection, value)) return;
      this[_userScrollDirection$] = value;
      this[_outerPosition].didUpdateScrollDirection(value);
      for (let position of this[_innerPositions])
        position.didUpdateScrollDirection(value);
    }
    beginActivity(newOuterActivity, innerActivityGetter) {
      let t43;
      this[_outerPosition].beginActivity(newOuterActivity);
      let scrolling = newOuterActivity.isScrolling;
      for (let position of this[_innerPositions]) {
        let newInnerActivity = innerActivityGetter(position);
        position.beginActivity(newInnerActivity);
        scrolling = dart.test(scrolling) && dart.test(newInnerActivity.isScrolling);
      }
      t43 = this[_currentDrag$];
      t43 == null ? null : t43.dispose();
      this[_currentDrag$] = null;
      if (!dart.test(scrolling)) this.updateUserScrollDirection(viewport_offset.ScrollDirection.idle);
    }
    get axisDirection() {
      return this[_outerPosition].axisDirection;
    }
    static _createIdleScrollActivity(position) {
      return new scroll_activity.IdleScrollActivity.new(position);
    }
    goIdle() {
      this.beginActivity(nested_scroll_view._NestedScrollCoordinator._createIdleScrollActivity(this[_outerPosition]), C1813 || CT.C1813);
    }
    goBallistic(velocity) {
      this.beginActivity(this.createOuterBallisticScrollActivity(velocity), dart.fn(position => this.createInnerBallisticScrollActivity(position, velocity), _NestedScrollPositionToScrollActivity()));
    }
    createOuterBallisticScrollActivity(velocity) {
      let innerPosition = null;
      if (velocity !== 0.0) {
        for (let position of this[_innerPositions]) {
          if (innerPosition != null) {
            if (dart.notNull(velocity) > 0.0) {
              if (dart.notNull(innerPosition.pixels) < dart.notNull(position.pixels)) continue;
            } else {
              if (!(dart.notNull(velocity) < 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 680, 20, "velocity < 0.0");
              if (dart.notNull(innerPosition.pixels) > dart.notNull(position.pixels)) continue;
            }
          }
          innerPosition = position;
        }
      }
      if (innerPosition == null) {
        return this[_outerPosition].createBallisticScrollActivity(this[_outerPosition].physics.createBallisticSimulation(this[_outerPosition], velocity), {mode: nested_scroll_view._NestedBallisticScrollActivityMode.independent});
      }
      let metrics = this[_getMetrics](innerPosition, velocity);
      return this[_outerPosition].createBallisticScrollActivity(this[_outerPosition].physics.createBallisticSimulation(metrics, velocity), {mode: nested_scroll_view._NestedBallisticScrollActivityMode.outer, metrics: metrics});
    }
    createInnerBallisticScrollActivity(position, velocity) {
      return position.createBallisticScrollActivity(position.physics.createBallisticSimulation(velocity === 0 ? position : this[_getMetrics](position, velocity), velocity), {mode: nested_scroll_view._NestedBallisticScrollActivityMode.inner});
    }
    [_getMetrics](innerPosition, velocity) {
      if (!(innerPosition != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 723, 12, "innerPosition != null");
      let pixels = null;
      let minRange = null;
      let maxRange = null;
      let correctionOffset = null;
      let extra = null;
      if (innerPosition.pixels == innerPosition.minScrollExtent) {
        pixels = this[_outerPosition].pixels[$clamp](this[_outerPosition].minScrollExtent, this[_outerPosition].maxScrollExtent);
        minRange = this[_outerPosition].minScrollExtent;
        maxRange = this[_outerPosition].maxScrollExtent;
        if (!(dart.notNull(minRange) <= dart.notNull(maxRange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 732, 14, "minRange <= maxRange");
        correctionOffset = 0.0;
        extra = 0.0;
      } else {
        if (!(innerPosition.pixels != innerPosition.minScrollExtent)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 736, 14, "innerPosition.pixels != innerPosition.minScrollExtent");
        if (dart.notNull(innerPosition.pixels) < dart.notNull(innerPosition.minScrollExtent)) {
          pixels = dart.notNull(innerPosition.pixels) - dart.notNull(innerPosition.minScrollExtent) + dart.notNull(this[_outerPosition].minScrollExtent);
        } else {
          if (!(dart.notNull(innerPosition.pixels) > dart.notNull(innerPosition.minScrollExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 740, 16, "innerPosition.pixels > innerPosition.minScrollExtent");
          pixels = dart.notNull(innerPosition.pixels) - dart.notNull(innerPosition.minScrollExtent) + dart.notNull(this[_outerPosition].maxScrollExtent);
        }
        if (dart.notNull(velocity) > 0.0 && dart.notNull(innerPosition.pixels) > dart.notNull(innerPosition.minScrollExtent)) {
          extra = dart.notNull(this[_outerPosition].maxScrollExtent) - dart.notNull(this[_outerPosition].pixels);
          if (!(dart.notNull(extra) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 747, 16, "extra >= 0.0");
          minRange = pixels;
          maxRange = dart.notNull(pixels) + dart.notNull(extra);
          if (!(dart.notNull(minRange) <= dart.notNull(maxRange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 750, 16, "minRange <= maxRange");
          correctionOffset = dart.notNull(this[_outerPosition].pixels) - dart.notNull(pixels);
        } else if (dart.notNull(velocity) < 0.0 && dart.notNull(innerPosition.pixels) < dart.notNull(innerPosition.minScrollExtent)) {
          extra = dart.notNull(this[_outerPosition].pixels) - dart.notNull(this[_outerPosition].minScrollExtent);
          if (!(dart.notNull(extra) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 756, 16, "extra >= 0.0");
          minRange = dart.notNull(pixels) - dart.notNull(extra);
          maxRange = pixels;
          if (!(dart.notNull(minRange) <= dart.notNull(maxRange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 759, 16, "minRange <= maxRange");
          correctionOffset = dart.notNull(this[_outerPosition].pixels) - dart.notNull(pixels);
        } else {
          if (dart.notNull(velocity) > 0.0) {
            extra = dart.notNull(this[_outerPosition].minScrollExtent) - dart.notNull(this[_outerPosition].pixels);
          } else {
            if (!(dart.notNull(velocity) < 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 770, 18, "velocity < 0.0");
            extra = dart.notNull(this[_outerPosition].pixels) - (dart.notNull(this[_outerPosition].maxScrollExtent) - dart.notNull(this[_outerPosition].minScrollExtent));
          }
          if (!(dart.notNull(extra) <= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 774, 16, "extra <= 0.0");
          minRange = this[_outerPosition].minScrollExtent;
          maxRange = dart.notNull(this[_outerPosition].maxScrollExtent) + dart.notNull(extra);
          if (!(dart.notNull(minRange) <= dart.notNull(maxRange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 777, 16, "minRange <= maxRange");
          correctionOffset = 0.0;
        }
      }
      return new nested_scroll_view._NestedScrollMetrics.new({minScrollExtent: this[_outerPosition].minScrollExtent, maxScrollExtent: dart.notNull(this[_outerPosition].maxScrollExtent) + dart.notNull(innerPosition.maxScrollExtent) - dart.notNull(innerPosition.minScrollExtent) + dart.notNull(extra), pixels: pixels, viewportDimension: this[_outerPosition].viewportDimension, axisDirection: this[_outerPosition].axisDirection, minRange: minRange, maxRange: maxRange, correctionOffset: correctionOffset});
    }
    unnestOffset(value, source) {
      if (dart.equals(source, this[_outerPosition])) return value[$clamp](this[_outerPosition].minScrollExtent, this[_outerPosition].maxScrollExtent);
      if (dart.notNull(value) < dart.notNull(source.minScrollExtent)) return dart.notNull(value) - dart.notNull(source.minScrollExtent) + dart.notNull(this[_outerPosition].minScrollExtent);
      return dart.notNull(value) - dart.notNull(source.minScrollExtent) + dart.notNull(this[_outerPosition].maxScrollExtent);
    }
    nestOffset(value, target) {
      if (dart.equals(target, this[_outerPosition])) return value[$clamp](this[_outerPosition].minScrollExtent, this[_outerPosition].maxScrollExtent);
      if (dart.notNull(value) < dart.notNull(this[_outerPosition].minScrollExtent)) return dart.notNull(value) - dart.notNull(this[_outerPosition].minScrollExtent) + dart.notNull(target.minScrollExtent);
      if (dart.notNull(value) > dart.notNull(this[_outerPosition].maxScrollExtent)) return dart.notNull(value) - dart.notNull(this[_outerPosition].maxScrollExtent) + dart.notNull(target.minScrollExtent);
      return target.minScrollExtent;
    }
    updateCanDrag() {
      if (!dart.test(this[_outerPosition].haveDimensions)) return;
      let maxInnerExtent = 0.0;
      for (let position of this[_innerPositions]) {
        if (!dart.test(position.haveDimensions)) return;
        maxInnerExtent = math.max(core.double, maxInnerExtent, dart.notNull(position.maxScrollExtent) - dart.notNull(position.minScrollExtent));
      }
      this[_outerPosition].updateCanDrag(maxInnerExtent);
    }
    animateTo(to, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      return async.async(dart.void, (function* animateTo() {
        let outerActivity = this[_outerPosition].createDrivenScrollActivity(this.nestOffset(to, this[_outerPosition]), duration, curve);
        let resultFutures = JSArrayOfFutureOfvoid().of([outerActivity.done]);
        this.beginActivity(outerActivity, dart.fn(position => {
          let innerActivity = position.createDrivenScrollActivity(this.nestOffset(to, position), duration, curve);
          resultFutures[$add](innerActivity.done);
          return innerActivity;
        }, _NestedScrollPositionToDrivenScrollActivity()));
        yield async.Future.wait(dart.void, resultFutures);
      }).bind(this));
    }
    jumpTo(to) {
      this.goIdle();
      this[_outerPosition].localJumpTo(this.nestOffset(to, this[_outerPosition]));
      for (let position of this[_innerPositions])
        position.localJumpTo(this.nestOffset(to, position));
      this.goBallistic(0.0);
    }
    setPixels(newPixels) {
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 868, 12, "false");
      return 0.0;
    }
    hold(holdCancelCallback) {
      this.beginActivity(new scroll_activity.HoldScrollActivity.new({delegate: this[_outerPosition], onHoldCanceled: holdCancelCallback}), dart.fn(position => new scroll_activity.HoldScrollActivity.new({delegate: position}), _NestedScrollPositionToHoldScrollActivity()));
      return this;
    }
    cancel() {
      this.goBallistic(0.0);
    }
    drag(details, dragCancelCallback) {
      let drag = new scroll_activity.ScrollDragController.new({delegate: this, details: details, onDragCanceled: dragCancelCallback});
      this.beginActivity(new scroll_activity.DragScrollActivity.new(this[_outerPosition], drag), dart.fn(position => new scroll_activity.DragScrollActivity.new(position, drag), _NestedScrollPositionToDragScrollActivity()));
      if (!(this[_currentDrag$] == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 898, 12, "_currentDrag == null");
      this[_currentDrag$] = drag;
      return drag;
    }
    applyUserOffset(delta) {
      this.updateUserScrollDirection(dart.notNull(delta) > 0.0 ? viewport_offset.ScrollDirection.forward : viewport_offset.ScrollDirection.reverse);
      if (!(delta !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 908, 12, "delta != 0.0");
      if (dart.test(this[_innerPositions][$isEmpty])) {
        this[_outerPosition].applyFullDragUpdate(delta);
      } else if (dart.notNull(delta) < 0.0) {
        let innerDelta = this[_outerPosition].applyClampedDragUpdate(delta);
        if (innerDelta !== 0.0) {
          for (let position of this[_innerPositions])
            position.applyFullDragUpdate(innerDelta);
        }
      } else {
        let outerDelta = 0.0;
        let overscrolls = JSArrayOfdouble().of([]);
        let innerPositions = this[_innerPositions][$toList]();
        for (let position of innerPositions) {
          let overscroll = position.applyClampedDragUpdate(delta);
          outerDelta = math.max(core.double, outerDelta, overscroll);
          overscrolls[$add](overscroll);
        }
        if (outerDelta !== 0.0) outerDelta = outerDelta - dart.notNull(this[_outerPosition].applyClampedDragUpdate(outerDelta));
        for (let i = 0; i < dart.notNull(innerPositions[$length]); i = i + 1) {
          let remainingDelta = dart.notNull(overscrolls[$_get](i)) - outerDelta;
          if (remainingDelta > 0.0) innerPositions[$_get](i).applyFullDragUpdate(remainingDelta);
        }
      }
    }
    setParent(value) {
      this[_parent$0] = value;
      this.updateParent();
    }
    updateParent() {
      let t44, t43;
      t43 = this[_outerPosition];
      t43 == null ? null : t43.setParent((t44 = this[_parent$0], t44 == null ? primary_scroll_controller.PrimaryScrollController.of(this[_state$1].context) : t44));
    }
    dispose() {
      let t43;
      t43 = this[_currentDrag$];
      t43 == null ? null : t43.dispose();
      this[_currentDrag$] = null;
      this[_outerController].dispose();
      this[_innerController].dispose();
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "_NestedScrollCoordinator")) + "(outer=" + dart.str(this[_outerController]) + "; inner=" + dart.str(this[_innerController]) + ")";
    }
  };
  (nested_scroll_view._NestedScrollCoordinator.new = function(_state, _parent, _onHasScrolledBodyChanged) {
    let t43, t43$;
    this[_outerController] = null;
    this[_innerController] = null;
    this[_userScrollDirection$] = viewport_offset.ScrollDirection.idle;
    this[_currentDrag$] = null;
    this[_state$1] = _state;
    this[_parent$0] = _parent;
    this[_onHasScrolledBodyChanged$] = _onHasScrolledBodyChanged;
    let initialScrollOffset = (t43$ = (t43 = this[_parent$0], t43 == null ? null : t43.initialScrollOffset), t43$ == null ? 0.0 : t43$);
    this[_outerController] = new nested_scroll_view._NestedScrollController.new(this, {initialScrollOffset: initialScrollOffset, debugLabel: "outer"});
    this[_innerController] = new nested_scroll_view._NestedScrollController.new(this, {initialScrollOffset: 0.0, debugLabel: "inner"});
  }).prototype = nested_scroll_view._NestedScrollCoordinator.prototype;
  dart.addTypeTests(nested_scroll_view._NestedScrollCoordinator);
  nested_scroll_view._NestedScrollCoordinator[dart.implements] = () => [scroll_activity.ScrollActivityDelegate, scroll_activity.ScrollHoldController];
  dart.setMethodSignature(nested_scroll_view._NestedScrollCoordinator, () => ({
    __proto__: dart.getMethods(nested_scroll_view._NestedScrollCoordinator.__proto__),
    updateShadow: dart.fnType(dart.void, []),
    updateUserScrollDirection: dart.fnType(dart.void, [viewport_offset.ScrollDirection]),
    beginActivity: dart.fnType(dart.void, [scroll_activity.ScrollActivity, dart.fnType(scroll_activity.ScrollActivity, [nested_scroll_view._NestedScrollPosition])]),
    goIdle: dart.fnType(dart.void, []),
    goBallistic: dart.fnType(dart.void, [core.double]),
    createOuterBallisticScrollActivity: dart.fnType(scroll_activity.ScrollActivity, [core.double]),
    createInnerBallisticScrollActivity: dart.fnType(scroll_activity.ScrollActivity, [nested_scroll_view._NestedScrollPosition, core.double]),
    [_getMetrics]: dart.fnType(nested_scroll_view._NestedScrollMetrics, [nested_scroll_view._NestedScrollPosition, core.double]),
    unnestOffset: dart.fnType(core.double, [core.double, nested_scroll_view._NestedScrollPosition]),
    nestOffset: dart.fnType(core.double, [core.double, nested_scroll_view._NestedScrollPosition]),
    updateCanDrag: dart.fnType(dart.void, []),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    setPixels: dart.fnType(core.double, [core.double]),
    hold: dart.fnType(scroll_activity.ScrollHoldController, [dart.fnType(dart.void, [])]),
    cancel: dart.fnType(dart.void, []),
    drag: dart.fnType(drag.Drag, [drag_details.DragStartDetails, dart.fnType(dart.void, [])]),
    applyUserOffset: dart.fnType(dart.void, [core.double]),
    setParent: dart.fnType(dart.void, [scroll_controller.ScrollController]),
    updateParent: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(nested_scroll_view._NestedScrollCoordinator, () => ({
    __proto__: dart.getGetters(nested_scroll_view._NestedScrollCoordinator.__proto__),
    [_outerPosition]: nested_scroll_view._NestedScrollPosition,
    [_innerPositions]: core.Iterable$(nested_scroll_view._NestedScrollPosition),
    canScrollBody: core.bool,
    hasScrolledBody: core.bool,
    userScrollDirection: viewport_offset.ScrollDirection,
    axisDirection: basic_types$.AxisDirection
  }));
  dart.setLibraryUri(nested_scroll_view._NestedScrollCoordinator, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedScrollCoordinator, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedScrollCoordinator.__proto__),
    [_state$1]: dart.finalFieldType(nested_scroll_view.NestedScrollViewState),
    [_parent$0]: dart.fieldType(scroll_controller.ScrollController),
    [_onHasScrolledBodyChanged$]: dart.finalFieldType(dart.fnType(dart.void, [])),
    [_outerController]: dart.fieldType(nested_scroll_view._NestedScrollController),
    [_innerController]: dart.fieldType(nested_scroll_view._NestedScrollController),
    [_userScrollDirection$]: dart.fieldType(viewport_offset.ScrollDirection),
    [_currentDrag$]: dart.fieldType(scroll_activity.ScrollDragController)
  }));
  dart.defineExtensionMethods(nested_scroll_view._NestedScrollCoordinator, ['toString']);
  var _scheduleUpdateShadow = dart.privateName(nested_scroll_view, "_scheduleUpdateShadow");
  nested_scroll_view._NestedScrollController = class _NestedScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      return new nested_scroll_view._NestedScrollPosition.new({coordinator: this.coordinator, physics: physics, context: context, initialPixels: this.initialScrollOffset, oldPosition: oldPosition, debugLabel: this.debugLabel});
    }
    attach(position) {
      if (!nested_scroll_view._NestedScrollPosition.is(position)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 997, 12, "position is _NestedScrollPosition");
      super.attach(position);
      this.coordinator.updateParent();
      this.coordinator.updateCanDrag();
      position.addListener(dart.bind(this, _scheduleUpdateShadow));
      this[_scheduleUpdateShadow]();
    }
    detach(position) {
      if (!nested_scroll_view._NestedScrollPosition.is(position)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1007, 12, "position is _NestedScrollPosition");
      position.removeListener(dart.bind(this, _scheduleUpdateShadow));
      super.detach(position);
      this[_scheduleUpdateShadow]();
    }
    [_scheduleUpdateShadow]() {
      binding$3.SchedulerBinding.instance.addPostFrameCallback(dart.fn(timeStamp => {
        this.coordinator.updateShadow();
      }, DurationToNull()));
    }
    get nestedPositions() {
      return new (SyncIterableOf_NestedScrollPosition()).new((function* nestedPositions() {
        yield* core.Iterable.castFrom(scroll_position.ScrollPosition, nested_scroll_view._NestedScrollPosition, this.positions);
      }).bind(this));
    }
  };
  (nested_scroll_view._NestedScrollController.new = function(coordinator, opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this.coordinator = coordinator;
    nested_scroll_view._NestedScrollController.__proto__.new.call(this, {initialScrollOffset: initialScrollOffset, debugLabel: debugLabel});
    ;
  }).prototype = nested_scroll_view._NestedScrollController.prototype;
  dart.addTypeTests(nested_scroll_view._NestedScrollController);
  dart.setMethodSignature(nested_scroll_view._NestedScrollController, () => ({
    __proto__: dart.getMethods(nested_scroll_view._NestedScrollController.__proto__),
    [_scheduleUpdateShadow]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(nested_scroll_view._NestedScrollController, () => ({
    __proto__: dart.getGetters(nested_scroll_view._NestedScrollController.__proto__),
    nestedPositions: core.Iterable$(nested_scroll_view._NestedScrollPosition)
  }));
  dart.setLibraryUri(nested_scroll_view._NestedScrollController, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedScrollController, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedScrollController.__proto__),
    coordinator: dart.finalFieldType(nested_scroll_view._NestedScrollCoordinator)
  }));
  var _name$32 = dart.privateName(nested_scroll_view, "_name");
  var C1814;
  var C1815;
  var C1816;
  nested_scroll_view._NestedScrollPosition = class _NestedScrollPosition extends scroll_position.ScrollPosition {
    get vsync() {
      return this.context.vsync;
    }
    setParent(value) {
      let t43, t43$;
      t43 = this[_parent$0];
      t43 == null ? null : t43.detach(this);
      this[_parent$0] = value;
      t43$ = this[_parent$0];
      t43$ == null ? null : t43$.attach(this);
    }
    get axisDirection() {
      return this.context.axisDirection;
    }
    absorb(other) {
      super.absorb(other);
      this.activity.updateDelegate(this);
    }
    restoreScrollOffset() {
      if (dart.test(this.coordinator.canScrollBody)) super.restoreScrollOffset();
    }
    applyClampedDragUpdate(delta) {
      if (!(delta !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1090, 12, "delta != 0.0");
      let min = dart.notNull(delta) < 0.0 ? -(1 / 0) : math.min(core.double, this.minScrollExtent, this.pixels);
      let max = dart.notNull(delta) > 0.0 ? 1 / 0 : math.max(core.double, this.maxScrollExtent, this.pixels);
      let oldPixels = this.pixels;
      let newPixels = (dart.notNull(this.pixels) - dart.notNull(delta))[$clamp](min, max);
      let clampedDelta = newPixels - dart.notNull(this.pixels);
      if (clampedDelta === 0.0) return delta;
      let overscroll = this.physics.applyBoundaryConditions(this, newPixels);
      let actualNewPixels = newPixels - dart.notNull(overscroll);
      let offset = actualNewPixels - dart.notNull(oldPixels);
      if (offset !== 0.0) {
        this.forcePixels(actualNewPixels);
        this.didUpdateScrollPositionBy(offset);
      }
      return dart.notNull(delta) + offset;
    }
    applyFullDragUpdate(delta) {
      if (!(delta !== 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1132, 12, "delta != 0.0");
      let oldPixels = this.pixels;
      let newPixels = dart.notNull(this.pixels) - dart.notNull(this.physics.applyPhysicsToUserOffset(this, delta));
      if (oldPixels === newPixels) return 0.0;
      let overscroll = this.physics.applyBoundaryConditions(this, newPixels);
      let actualNewPixels = newPixels - dart.notNull(overscroll);
      if (actualNewPixels !== oldPixels) {
        this.forcePixels(actualNewPixels);
        this.didUpdateScrollPositionBy(actualNewPixels - dart.notNull(oldPixels));
      }
      if (overscroll !== 0.0) {
        this.didOverscrollBy(overscroll);
        return overscroll;
      }
      return 0.0;
    }
    get userScrollDirection() {
      return this.coordinator.userScrollDirection;
    }
    createDrivenScrollActivity(to, duration, curve) {
      return new scroll_activity.DrivenScrollActivity.new(this, {from: this.pixels, to: to, duration: duration, curve: curve, vsync: this.vsync});
    }
    applyUserOffset(delta) {
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1171, 12, "false");
      return 0.0;
    }
    goIdle() {
      this.beginActivity(new scroll_activity.IdleScrollActivity.new(this));
    }
    goBallistic(velocity) {
      let simulation = null;
      if (velocity !== 0.0 || dart.test(this.outOfRange)) simulation = this.physics.createBallisticSimulation(this, velocity);
      this.beginActivity(this.createBallisticScrollActivity(simulation, {mode: nested_scroll_view._NestedBallisticScrollActivityMode.independent}));
    }
    createBallisticScrollActivity(simulation, opts) {
      let mode = opts && 'mode' in opts ? opts.mode : null;
      let metrics = opts && 'metrics' in opts ? opts.metrics : null;
      if (simulation == null) return new scroll_activity.IdleScrollActivity.new(this);
      if (!(mode != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1201, 12, "mode != null");
      switch (mode) {
        case C1814 || CT.C1814:
        {
          if (!(metrics != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1204, 16, "metrics != null");
          if (metrics.minRange == metrics.maxRange) return new scroll_activity.IdleScrollActivity.new(this);
          return new nested_scroll_view._NestedOuterBallisticScrollActivity.new(this.coordinator, this, metrics, simulation, this.context.vsync);
        }
        case C1815 || CT.C1815:
        {
          return new nested_scroll_view._NestedInnerBallisticScrollActivity.new(this.coordinator, this, simulation, this.context.vsync);
        }
        case C1816 || CT.C1816:
        {
          return new scroll_activity.BallisticScrollActivity.new(this, simulation, this.context.vsync);
        }
      }
      return null;
    }
    animateTo(to, opts) {
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      return this.coordinator.animateTo(this.coordinator.unnestOffset(to, this), {duration: duration, curve: curve});
    }
    jumpTo(value) {
      return this.coordinator.jumpTo(this.coordinator.unnestOffset(value, this));
    }
    jumpToWithoutSettling(value) {
      if (!false) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1247, 12, "false");
    }
    localJumpTo(value) {
      if (this.pixels != value) {
        let oldPixels = this.pixels;
        this.forcePixels(value);
        this.didStartScroll();
        this.didUpdateScrollPositionBy(dart.notNull(this.pixels) - dart.notNull(oldPixels));
        this.didEndScroll();
      }
    }
    applyNewDimensions() {
      super.applyNewDimensions();
      this.coordinator.updateCanDrag();
    }
    updateCanDrag(totalExtent) {
      this.context.setCanDrag(dart.notNull(totalExtent) > dart.notNull(this.viewportDimension) - dart.notNull(this.maxScrollExtent) || this.minScrollExtent != this.maxScrollExtent);
    }
    hold(holdCancelCallback) {
      return this.coordinator.hold(holdCancelCallback);
    }
    drag(details, dragCancelCallback) {
      return this.coordinator.drag(details, dragCancelCallback);
    }
    dispose() {
      let t43;
      t43 = this[_parent$0];
      t43 == null ? null : t43.detach(this);
      super.dispose();
    }
  };
  (nested_scroll_view._NestedScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialPixels = opts && 'initialPixels' in opts ? opts.initialPixels : 0;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let coordinator = opts && 'coordinator' in opts ? opts.coordinator : null;
    this[_parent$0] = null;
    this.coordinator = coordinator;
    nested_scroll_view._NestedScrollPosition.__proto__.new.call(this, {physics: physics, context: context, oldPosition: oldPosition, debugLabel: debugLabel});
    if (this.pixels == null && initialPixels != null) this.correctPixels(initialPixels);
    if (this.activity == null) this.goIdle();
    if (!(this.activity != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1054, 12, "activity != null");
    this.saveScrollOffset();
  }).prototype = nested_scroll_view._NestedScrollPosition.prototype;
  dart.addTypeTests(nested_scroll_view._NestedScrollPosition);
  nested_scroll_view._NestedScrollPosition[dart.implements] = () => [scroll_activity.ScrollActivityDelegate];
  dart.setMethodSignature(nested_scroll_view._NestedScrollPosition, () => ({
    __proto__: dart.getMethods(nested_scroll_view._NestedScrollPosition.__proto__),
    setParent: dart.fnType(dart.void, [scroll_controller.ScrollController]),
    applyClampedDragUpdate: dart.fnType(core.double, [core.double]),
    applyFullDragUpdate: dart.fnType(core.double, [core.double]),
    createDrivenScrollActivity: dart.fnType(scroll_activity.DrivenScrollActivity, [core.double, core.Duration, curves.Curve]),
    applyUserOffset: dart.fnType(core.double, [core.double]),
    goIdle: dart.fnType(dart.void, []),
    goBallistic: dart.fnType(dart.void, [core.double]),
    createBallisticScrollActivity: dart.fnType(scroll_activity.ScrollActivity, [simulation.Simulation], {metrics: nested_scroll_view._NestedScrollMetrics, mode: nested_scroll_view._NestedBallisticScrollActivityMode}, {}),
    animateTo: dart.fnType(async.Future$(dart.void), [core.double], {curve: curves.Curve, duration: core.Duration}, {}),
    jumpTo: dart.fnType(dart.void, [core.double]),
    jumpToWithoutSettling: dart.fnType(dart.void, [core.double]),
    localJumpTo: dart.fnType(dart.void, [core.double]),
    updateCanDrag: dart.fnType(dart.void, [core.double]),
    hold: dart.fnType(scroll_activity.ScrollHoldController, [dart.fnType(dart.void, [])]),
    drag: dart.fnType(drag.Drag, [drag_details.DragStartDetails, dart.fnType(dart.void, [])])
  }));
  dart.setGetterSignature(nested_scroll_view._NestedScrollPosition, () => ({
    __proto__: dart.getGetters(nested_scroll_view._NestedScrollPosition.__proto__),
    vsync: ticker.TickerProvider,
    axisDirection: basic_types$.AxisDirection,
    userScrollDirection: viewport_offset.ScrollDirection
  }));
  dart.setLibraryUri(nested_scroll_view._NestedScrollPosition, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedScrollPosition, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedScrollPosition.__proto__),
    coordinator: dart.finalFieldType(nested_scroll_view._NestedScrollCoordinator),
    [_parent$0]: dart.fieldType(scroll_controller.ScrollController)
  }));
  var C1817;
  nested_scroll_view._NestedBallisticScrollActivityMode = class _NestedBallisticScrollActivityMode extends core.Object {
    toString() {
      return this[_name$32];
    }
  };
  (nested_scroll_view._NestedBallisticScrollActivityMode.new = function(index, _name) {
    this.index = index;
    this[_name$32] = _name;
    ;
  }).prototype = nested_scroll_view._NestedBallisticScrollActivityMode.prototype;
  dart.addTypeTests(nested_scroll_view._NestedBallisticScrollActivityMode);
  dart.setLibraryUri(nested_scroll_view._NestedBallisticScrollActivityMode, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedBallisticScrollActivityMode, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedBallisticScrollActivityMode.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$32]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(nested_scroll_view._NestedBallisticScrollActivityMode, ['toString']);
  nested_scroll_view._NestedBallisticScrollActivityMode.outer = C1814 || CT.C1814;
  nested_scroll_view._NestedBallisticScrollActivityMode.inner = C1815 || CT.C1815;
  nested_scroll_view._NestedBallisticScrollActivityMode.independent = C1816 || CT.C1816;
  nested_scroll_view._NestedBallisticScrollActivityMode.values = C1817 || CT.C1817;
  nested_scroll_view._NestedInnerBallisticScrollActivity = class _NestedInnerBallisticScrollActivity extends scroll_activity.BallisticScrollActivity {
    get delegate() {
      return nested_scroll_view._NestedScrollPosition.as(super.delegate);
    }
    resetActivity() {
      this.delegate.beginActivity(this.coordinator.createInnerBallisticScrollActivity(this.delegate, this.velocity));
    }
    applyNewDimensions() {
      this.delegate.beginActivity(this.coordinator.createInnerBallisticScrollActivity(this.delegate, this.velocity));
    }
    applyMoveTo(value) {
      return super.applyMoveTo(this.coordinator.nestOffset(value, this.delegate));
    }
  };
  (nested_scroll_view._NestedInnerBallisticScrollActivity.new = function(coordinator, position, simulation, vsync) {
    this.coordinator = coordinator;
    nested_scroll_view._NestedInnerBallisticScrollActivity.__proto__.new.call(this, position, simulation, vsync);
    ;
  }).prototype = nested_scroll_view._NestedInnerBallisticScrollActivity.prototype;
  dart.addTypeTests(nested_scroll_view._NestedInnerBallisticScrollActivity);
  dart.setGetterSignature(nested_scroll_view._NestedInnerBallisticScrollActivity, () => ({
    __proto__: dart.getGetters(nested_scroll_view._NestedInnerBallisticScrollActivity.__proto__),
    delegate: nested_scroll_view._NestedScrollPosition
  }));
  dart.setLibraryUri(nested_scroll_view._NestedInnerBallisticScrollActivity, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedInnerBallisticScrollActivity, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedInnerBallisticScrollActivity.__proto__),
    coordinator: dart.finalFieldType(nested_scroll_view._NestedScrollCoordinator)
  }));
  nested_scroll_view._NestedOuterBallisticScrollActivity = class _NestedOuterBallisticScrollActivity extends scroll_activity.BallisticScrollActivity {
    get delegate() {
      return nested_scroll_view._NestedScrollPosition.as(super.delegate);
    }
    resetActivity() {
      this.delegate.beginActivity(this.coordinator.createOuterBallisticScrollActivity(this.velocity));
    }
    applyNewDimensions() {
      this.delegate.beginActivity(this.coordinator.createOuterBallisticScrollActivity(this.velocity));
    }
    applyMoveTo(value) {
      let done = false;
      if (dart.notNull(this.velocity) > 0.0) {
        if (dart.notNull(value) < dart.notNull(this.metrics.minRange)) return true;
        if (dart.notNull(value) > dart.notNull(this.metrics.maxRange)) {
          value = this.metrics.maxRange;
          done = true;
        }
      } else if (dart.notNull(this.velocity) < 0.0) {
        if (dart.notNull(value) > dart.notNull(this.metrics.maxRange)) return true;
        if (dart.notNull(value) < dart.notNull(this.metrics.minRange)) {
          value = this.metrics.minRange;
          done = true;
        }
      } else {
        value = value[$clamp](this.metrics.minRange, this.metrics.maxRange);
        done = true;
      }
      let result = super.applyMoveTo(dart.notNull(value) + dart.notNull(this.metrics.correctionOffset));
      if (!dart.test(result)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1377, 12, "result");
      return !done;
    }
    toString() {
      return dart.str(object.objectRuntimeType(this, "_NestedOuterBallisticScrollActivity")) + "(" + dart.str(this.metrics.minRange) + " .. " + dart.str(this.metrics.maxRange) + "; correcting by " + dart.str(this.metrics.correctionOffset) + ")";
    }
  };
  (nested_scroll_view._NestedOuterBallisticScrollActivity.new = function(coordinator, position, metrics, simulation, vsync) {
    this.coordinator = coordinator;
    this.metrics = metrics;
    if (!(metrics.minRange != metrics.maxRange)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1331, 14, "metrics.minRange != metrics.maxRange");
    if (!(dart.notNull(metrics.maxRange) > dart.notNull(metrics.minRange))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1332, 14, "metrics.maxRange > metrics.minRange");
    nested_scroll_view._NestedOuterBallisticScrollActivity.__proto__.new.call(this, position, simulation, vsync);
    ;
  }).prototype = nested_scroll_view._NestedOuterBallisticScrollActivity.prototype;
  dart.addTypeTests(nested_scroll_view._NestedOuterBallisticScrollActivity);
  dart.setGetterSignature(nested_scroll_view._NestedOuterBallisticScrollActivity, () => ({
    __proto__: dart.getGetters(nested_scroll_view._NestedOuterBallisticScrollActivity.__proto__),
    delegate: nested_scroll_view._NestedScrollPosition
  }));
  dart.setLibraryUri(nested_scroll_view._NestedOuterBallisticScrollActivity, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view._NestedOuterBallisticScrollActivity, () => ({
    __proto__: dart.getFields(nested_scroll_view._NestedOuterBallisticScrollActivity.__proto__),
    coordinator: dart.finalFieldType(nested_scroll_view._NestedScrollCoordinator),
    metrics: dart.finalFieldType(nested_scroll_view._NestedScrollMetrics)
  }));
  dart.defineExtensionMethods(nested_scroll_view._NestedOuterBallisticScrollActivity, ['toString']);
  var _writers = dart.privateName(nested_scroll_view, "_writers");
  var _layoutExtent = dart.privateName(nested_scroll_view, "_layoutExtent");
  var _scrollExtent = dart.privateName(nested_scroll_view, "_scrollExtent");
  var _setExtents = dart.privateName(nested_scroll_view, "_setExtents");
  var _markNeedsLayout = dart.privateName(nested_scroll_view, "_markNeedsLayout");
  nested_scroll_view.SliverOverlapAbsorberHandle = class SliverOverlapAbsorberHandle extends change_notifier.ChangeNotifier {
    get layoutExtent() {
      return this[_layoutExtent];
    }
    get scrollExtent() {
      return this[_scrollExtent];
    }
    [_setExtents](layoutValue, scrollValue) {
      if (!(this[_writers] === 1)) dart.assertFailed("Multiple RenderSliverOverlapAbsorbers have been provided the same SliverOverlapAbsorberHandle.", "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1448, 7, "_writers == 1");
      this[_layoutExtent] = layoutValue;
      this[_scrollExtent] = scrollValue;
    }
    [_markNeedsLayout]() {
      return this.notifyListeners();
    }
    toString() {
      let extra = null;
      switch (this[_writers]) {
        case 0:
        {
          extra = ", orphan";
          break;
        }
        case 1:
        {
          break;
        }
        default:
        {
          extra = ", " + dart.str(this[_writers]) + " WRITERS ASSIGNED";
          break;
        }
      }
      return dart.str(object.objectRuntimeType(this, "SliverOverlapAbsorberHandle")) + "(" + dart.str(this.layoutExtent) + dart.str(extra) + ")";
    }
  };
  (nested_scroll_view.SliverOverlapAbsorberHandle.new = function() {
    this[_writers] = 0;
    this[_layoutExtent] = null;
    this[_scrollExtent] = null;
    nested_scroll_view.SliverOverlapAbsorberHandle.__proto__.new.call(this);
    ;
  }).prototype = nested_scroll_view.SliverOverlapAbsorberHandle.prototype;
  dart.addTypeTests(nested_scroll_view.SliverOverlapAbsorberHandle);
  dart.setMethodSignature(nested_scroll_view.SliverOverlapAbsorberHandle, () => ({
    __proto__: dart.getMethods(nested_scroll_view.SliverOverlapAbsorberHandle.__proto__),
    [_setExtents]: dart.fnType(dart.void, [core.double, core.double]),
    [_markNeedsLayout]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(nested_scroll_view.SliverOverlapAbsorberHandle, () => ({
    __proto__: dart.getGetters(nested_scroll_view.SliverOverlapAbsorberHandle.__proto__),
    layoutExtent: core.double,
    scrollExtent: core.double
  }));
  dart.setLibraryUri(nested_scroll_view.SliverOverlapAbsorberHandle, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.SliverOverlapAbsorberHandle, () => ({
    __proto__: dart.getFields(nested_scroll_view.SliverOverlapAbsorberHandle.__proto__),
    [_writers]: dart.fieldType(core.int),
    [_layoutExtent]: dart.fieldType(core.double),
    [_scrollExtent]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(nested_scroll_view.SliverOverlapAbsorberHandle, ['toString']);
  var handle$1 = dart.privateName(nested_scroll_view, "SliverOverlapAbsorber.handle");
  nested_scroll_view.SliverOverlapAbsorber = class SliverOverlapAbsorber extends framework.SingleChildRenderObjectWidget {
    get handle() {
      return this[handle$1];
    }
    set handle(value) {
      super.handle = value;
    }
    createRenderObject(context) {
      return new nested_scroll_view.RenderSliverOverlapAbsorber.new({handle: this.handle});
    }
    updateRenderObject(context, renderObject) {
      let t43;
      nested_scroll_view.RenderSliverOverlapAbsorber._check(renderObject);
      t43 = renderObject;
      t43.handle = this.handle;
      t43;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.SliverOverlapAbsorber.new = function(opts) {
    let t43;
    let key = opts && 'key' in opts ? opts.key : null;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[handle$1] = handle;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1501, 15, "handle != null");
    if (!(child == null || sliver == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1503, 14, "child == null || sliver == null");
    nested_scroll_view.SliverOverlapAbsorber.__proto__.new.call(this, {key: key, child: (t43 = sliver, t43 == null ? child : t43), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view.SliverOverlapAbsorber.prototype;
  dart.addTypeTests(nested_scroll_view.SliverOverlapAbsorber);
  dart.setMethodSignature(nested_scroll_view.SliverOverlapAbsorber, () => ({
    __proto__: dart.getMethods(nested_scroll_view.SliverOverlapAbsorber.__proto__),
    createRenderObject: dart.fnType(nested_scroll_view.RenderSliverOverlapAbsorber, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested_scroll_view.SliverOverlapAbsorber, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.SliverOverlapAbsorber, () => ({
    __proto__: dart.getFields(nested_scroll_view.SliverOverlapAbsorber.__proto__),
    handle: dart.finalFieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var _handle = dart.privateName(nested_scroll_view, "_handle");
  var SliverGeometry_cacheExtent = dart.privateName(sliver, "SliverGeometry.cacheExtent");
  var SliverGeometry_scrollOffsetCorrection = dart.privateName(sliver, "SliverGeometry.scrollOffsetCorrection");
  var SliverGeometry_hasVisualOverflow = dart.privateName(sliver, "SliverGeometry.hasVisualOverflow");
  var SliverGeometry_visible = dart.privateName(sliver, "SliverGeometry.visible");
  var SliverGeometry_hitTestExtent = dart.privateName(sliver, "SliverGeometry.hitTestExtent");
  var SliverGeometry_maxScrollObstructionExtent = dart.privateName(sliver, "SliverGeometry.maxScrollObstructionExtent");
  var SliverGeometry_maxPaintExtent = dart.privateName(sliver, "SliverGeometry.maxPaintExtent");
  var SliverGeometry_layoutExtent = dart.privateName(sliver, "SliverGeometry.layoutExtent");
  var SliverGeometry_paintExtent = dart.privateName(sliver, "SliverGeometry.paintExtent");
  var SliverGeometry_paintOrigin = dart.privateName(sliver, "SliverGeometry.paintOrigin");
  var SliverGeometry_scrollExtent = dart.privateName(sliver, "SliverGeometry.scrollExtent");
  var C1818;
  const RenderSliver_RenderObjectWithChildMixin$36$ = class RenderSliver_RenderObjectWithChildMixin extends sliver.RenderSliver {};
  (RenderSliver_RenderObjectWithChildMixin$36$.new = function() {
    object$.RenderObjectWithChildMixin$(sliver.RenderSliver)[dart.mixinNew].call(this);
    RenderSliver_RenderObjectWithChildMixin$36$.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderObjectWithChildMixin$36$.prototype;
  dart.applyMixin(RenderSliver_RenderObjectWithChildMixin$36$, object$.RenderObjectWithChildMixin$(sliver.RenderSliver));
  nested_scroll_view.RenderSliverOverlapAbsorber = class RenderSliverOverlapAbsorber extends RenderSliver_RenderObjectWithChildMixin$36$ {
    get handle() {
      return this[_handle];
    }
    set handle(value) {
      let t43, t43$;
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1569, 12, "value != null");
      if (dart.equals(this.handle, value)) return;
      if (dart.test(this.attached)) {
        t43 = this.handle;
        t43[_writers] = dart.notNull(t43[_writers]) - 1;
        t43$ = value;
        t43$[_writers] = dart.notNull(t43$[_writers]) + 1;
        value[_setExtents](this.handle.layoutExtent, this.handle.scrollExtent);
      }
      this[_handle] = value;
    }
    attach(owner) {
      let t43;
      object$.PipelineOwner._check(owner);
      super.attach(owner);
      t43 = this.handle;
      t43[_writers] = dart.notNull(t43[_writers]) + 1;
    }
    detach() {
      let t43;
      t43 = this.handle;
      t43[_writers] = dart.notNull(t43[_writers]) - 1;
      super.detach();
    }
    performLayout() {
      if (!(this.handle[_writers] === 1)) dart.assertFailed("A SliverOverlapAbsorberHandle cannot be passed to multiple RenderSliverOverlapAbsorber objects at the same time.", "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1595, 7, "handle._writers == 1");
      if (this.child == null) {
        this.geometry = C1818 || CT.C1818;
        return;
      }
      this.child.layout(this.constraints, {parentUsesSize: true});
      let childLayoutGeometry = this.child.geometry;
      this.geometry = new sliver.SliverGeometry.new({scrollExtent: dart.notNull(childLayoutGeometry.scrollExtent) - dart.notNull(childLayoutGeometry.maxScrollObstructionExtent), paintExtent: childLayoutGeometry.paintExtent, paintOrigin: childLayoutGeometry.paintOrigin, layoutExtent: math.max(core.double, 0.0, dart.notNull(childLayoutGeometry.paintExtent) - dart.notNull(childLayoutGeometry.maxScrollObstructionExtent)), maxPaintExtent: childLayoutGeometry.maxPaintExtent, maxScrollObstructionExtent: childLayoutGeometry.maxScrollObstructionExtent, hitTestExtent: childLayoutGeometry.hitTestExtent, visible: childLayoutGeometry.visible, hasVisualOverflow: childLayoutGeometry.hasVisualOverflow, scrollOffsetCorrection: childLayoutGeometry.scrollOffsetCorrection});
      this.handle[_setExtents](childLayoutGeometry.maxScrollObstructionExtent, childLayoutGeometry.maxScrollObstructionExtent);
    }
    applyPaintTransform(child, transform) {
      object$.RenderObject._check(child);
    }
    hitTestChildren(result, opts) {
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      if (this.child != null) return this.child.hitTest(result, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition});
      return false;
    }
    paint(context, offset) {
      if (this.child != null) context.paintChild(this.child, offset);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.RenderSliverOverlapAbsorber.new = function(opts) {
    let t43;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1555, 15, "handle != null");
    if (!(child == null || sliver == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1557, 15, "child == null || sliver == null");
    this[_handle] = handle;
    nested_scroll_view.RenderSliverOverlapAbsorber.__proto__.new.call(this);
    this.child = (t43 = sliver, t43 == null ? child : t43);
  }).prototype = nested_scroll_view.RenderSliverOverlapAbsorber.prototype;
  dart.addTypeTests(nested_scroll_view.RenderSliverOverlapAbsorber);
  dart.setMethodSignature(nested_scroll_view.RenderSliverOverlapAbsorber, () => ({
    __proto__: dart.getMethods(nested_scroll_view.RenderSliverOverlapAbsorber.__proto__),
    performLayout: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(nested_scroll_view.RenderSliverOverlapAbsorber, () => ({
    __proto__: dart.getGetters(nested_scroll_view.RenderSliverOverlapAbsorber.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setSetterSignature(nested_scroll_view.RenderSliverOverlapAbsorber, () => ({
    __proto__: dart.getSetters(nested_scroll_view.RenderSliverOverlapAbsorber.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setLibraryUri(nested_scroll_view.RenderSliverOverlapAbsorber, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.RenderSliverOverlapAbsorber, () => ({
    __proto__: dart.getFields(nested_scroll_view.RenderSliverOverlapAbsorber.__proto__),
    [_handle]: dart.fieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var handle$2 = dart.privateName(nested_scroll_view, "SliverOverlapInjector.handle");
  nested_scroll_view.SliverOverlapInjector = class SliverOverlapInjector extends framework.SingleChildRenderObjectWidget {
    get handle() {
      return this[handle$2];
    }
    set handle(value) {
      super.handle = value;
    }
    createRenderObject(context) {
      return new nested_scroll_view.RenderSliverOverlapInjector.new({handle: this.handle});
    }
    updateRenderObject(context, renderObject) {
      let t43;
      nested_scroll_view.RenderSliverOverlapInjector._check(renderObject);
      t43 = renderObject;
      t43.handle = this.handle;
      t43;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.SliverOverlapInjector.new = function(opts) {
    let t43;
    let key = opts && 'key' in opts ? opts.key : null;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let sliver = opts && 'sliver' in opts ? opts.sliver : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[handle$2] = handle;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1676, 15, "handle != null");
    if (!(child == null || sliver == null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1678, 15, "child == null || sliver == null");
    nested_scroll_view.SliverOverlapInjector.__proto__.new.call(this, {key: key, child: (t43 = sliver, t43 == null ? child : t43), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view.SliverOverlapInjector.prototype;
  dart.addTypeTests(nested_scroll_view.SliverOverlapInjector);
  dart.setMethodSignature(nested_scroll_view.SliverOverlapInjector, () => ({
    __proto__: dart.getMethods(nested_scroll_view.SliverOverlapInjector.__proto__),
    createRenderObject: dart.fnType(nested_scroll_view.RenderSliverOverlapInjector, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested_scroll_view.SliverOverlapInjector, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.SliverOverlapInjector, () => ({
    __proto__: dart.getFields(nested_scroll_view.SliverOverlapInjector.__proto__),
    handle: dart.finalFieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var _currentLayoutExtent = dart.privateName(nested_scroll_view, "_currentLayoutExtent");
  var _currentMaxExtent = dart.privateName(nested_scroll_view, "_currentMaxExtent");
  var C1819;
  nested_scroll_view.RenderSliverOverlapInjector = class RenderSliverOverlapInjector extends sliver.RenderSliver {
    get handle() {
      return this[_handle];
    }
    set handle(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1735, 12, "value != null");
      if (dart.equals(this.handle, value)) return;
      if (dart.test(this.attached)) {
        this.handle.removeListener(dart.bind(this, 'markNeedsLayout'));
      }
      this[_handle] = value;
      if (dart.test(this.attached)) {
        this.handle.addListener(dart.bind(this, 'markNeedsLayout'));
        if (this.handle.layoutExtent != this[_currentLayoutExtent] || this.handle.scrollExtent != this[_currentMaxExtent]) this.markNeedsLayout();
      }
    }
    attach(owner) {
      object$.PipelineOwner._check(owner);
      super.attach(owner);
      this.handle.addListener(dart.bind(this, 'markNeedsLayout'));
      if (this.handle.layoutExtent != this[_currentLayoutExtent] || this.handle.scrollExtent != this[_currentMaxExtent]) this.markNeedsLayout();
    }
    detach() {
      this.handle.removeListener(dart.bind(this, 'markNeedsLayout'));
      super.detach();
    }
    performLayout() {
      this[_currentLayoutExtent] = this.handle.layoutExtent;
      this[_currentMaxExtent] = this.handle.layoutExtent;
      let clampedLayoutExtent = math.min(core.double, dart.notNull(this[_currentLayoutExtent]) - dart.notNull(this.constraints.scrollOffset), this.constraints.remainingPaintExtent);
      this.geometry = new sliver.SliverGeometry.new({scrollExtent: this[_currentLayoutExtent], paintExtent: math.max(core.double, 0.0, clampedLayoutExtent), maxPaintExtent: this[_currentMaxExtent]});
    }
    debugPaint(context, offset) {
      if (!dart.test(dart.fn(() => {
        let t43;
        if (dart.test(debug$.debugPaintSizeEnabled)) {
          let paint = (t43 = ui.Paint.new(), t43.color = C1819 || CT.C1819, t43.strokeWidth = 3.0, t43.style = ui.PaintingStyle.stroke, t43);
          let start = null;
          let end = null;
          let delta = null;
          switch (this.constraints.axis) {
            case C77 || CT.C77:
            {
              let x = dart.notNull(offset.dx) + dart.notNull(this.constraints.crossAxisExtent) / 2.0;
              start = new ui.Offset.new(x, offset.dy);
              end = new ui.Offset.new(x, dart.notNull(offset.dy) + dart.notNull(this.geometry.paintExtent));
              delta = new ui.Offset.new(dart.notNull(this.constraints.crossAxisExtent) / 5.0, 0.0);
              break;
            }
            case C78 || CT.C78:
            {
              let y = dart.notNull(offset.dy) + dart.notNull(this.constraints.crossAxisExtent) / 2.0;
              start = new ui.Offset.new(offset.dx, y);
              end = new ui.Offset.new(dart.notNull(offset.dy) + dart.notNull(this.geometry.paintExtent), y);
              delta = new ui.Offset.new(0.0, dart.notNull(this.constraints.crossAxisExtent) / 5.0);
              break;
            }
          }
          for (let index = -2; index <= 2; index = index + 1) {
            paint_utilities.paintZigZag(context.canvas, paint, start['-'](delta['*'](index[$toDouble]())), end['-'](delta['*'](index[$toDouble]())), 10, 10.0);
          }
        }
        return true;
      }, VoidTobool())())) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1782, 12, "() {\r\n      if (debugPaintSizeEnabled) {\r\n        final Paint paint = Paint()\r\n          ..color = const Color(0xFFCC9933)\r\n          ..strokeWidth = 3.0\r\n          ..style = PaintingStyle.stroke;\r\n        Offset start, end, delta;\r\n        switch (constraints.axis) {\r\n          case Axis.vertical:\r\n            final double x = offset.dx + constraints.crossAxisExtent / 2.0;\r\n            start = Offset(x, offset.dy);\r\n            end = Offset(x, offset.dy + geometry.paintExtent);\r\n            delta = Offset(constraints.crossAxisExtent / 5.0, 0.0);\r\n            break;\r\n          case Axis.horizontal:\r\n            final double y = offset.dy + constraints.crossAxisExtent / 2.0;\r\n            start = Offset(offset.dx, y);\r\n            end = Offset(offset.dy + geometry.paintExtent, y);\r\n            delta = Offset(0.0, constraints.crossAxisExtent / 5.0);\r\n            break;\r\n        }\r\n        for (int index = -2; index <= 2; index += 1) {\r\n          paintZigZag(\r\n            context.canvas,\r\n            paint,\r\n            start - delta * index.toDouble(),\r\n            end - delta * index.toDouble(),\r\n            10,\r\n            10.0,\r\n          );\r\n        }\r\n      }\r\n      return true;\r\n    }()");
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.RenderSliverOverlapInjector.new = function(opts) {
    let handle = opts && 'handle' in opts ? opts.handle : null;
    this[_currentLayoutExtent] = null;
    this[_currentMaxExtent] = null;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1721, 15, "handle != null");
    this[_handle] = handle;
    nested_scroll_view.RenderSliverOverlapInjector.__proto__.new.call(this);
    ;
  }).prototype = nested_scroll_view.RenderSliverOverlapInjector.prototype;
  dart.addTypeTests(nested_scroll_view.RenderSliverOverlapInjector);
  dart.setMethodSignature(nested_scroll_view.RenderSliverOverlapInjector, () => ({
    __proto__: dart.getMethods(nested_scroll_view.RenderSliverOverlapInjector.__proto__),
    performLayout: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(nested_scroll_view.RenderSliverOverlapInjector, () => ({
    __proto__: dart.getGetters(nested_scroll_view.RenderSliverOverlapInjector.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setSetterSignature(nested_scroll_view.RenderSliverOverlapInjector, () => ({
    __proto__: dart.getSetters(nested_scroll_view.RenderSliverOverlapInjector.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setLibraryUri(nested_scroll_view.RenderSliverOverlapInjector, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.RenderSliverOverlapInjector, () => ({
    __proto__: dart.getFields(nested_scroll_view.RenderSliverOverlapInjector.__proto__),
    [_currentLayoutExtent]: dart.fieldType(core.double),
    [_currentMaxExtent]: dart.fieldType(core.double),
    [_handle]: dart.fieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var handle$3 = dart.privateName(nested_scroll_view, "NestedScrollViewViewport.handle");
  nested_scroll_view.NestedScrollViewViewport = class NestedScrollViewViewport extends viewport.Viewport {
    get handle() {
      return this[handle$3];
    }
    set handle(value) {
      super.handle = value;
    }
    createRenderObject(context) {
      let t43;
      return new nested_scroll_view.RenderNestedScrollViewViewport.new({axisDirection: this.axisDirection, crossAxisDirection: (t43 = this.crossAxisDirection, t43 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t43), anchor: this.anchor, offset: this.offset, handle: this.handle});
    }
    updateRenderObject(context, renderObject) {
      let t44, t43;
      nested_scroll_view.RenderNestedScrollViewViewport._check(renderObject);
      t43 = renderObject;
      t43.axisDirection = this.axisDirection;
      t43.crossAxisDirection = (t44 = this.crossAxisDirection, t44 == null ? viewport.Viewport.getDefaultCrossAxisDirection(context, this.axisDirection) : t44);
      t43.anchor = this.anchor;
      t43.offset = this.offset;
      t43.handle = this.handle;
      t43;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.NestedScrollViewViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let center = opts && 'center' in opts ? opts.center : null;
    let slivers = opts && 'slivers' in opts ? opts.slivers : C27 || CT.C27;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[handle$3] = handle;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1842, 15, "handle != null");
    nested_scroll_view.NestedScrollViewViewport.__proto__.new.call(this, {key: key, axisDirection: axisDirection, crossAxisDirection: crossAxisDirection, anchor: anchor, offset: offset, center: center, slivers: slivers, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = nested_scroll_view.NestedScrollViewViewport.prototype;
  dart.addTypeTests(nested_scroll_view.NestedScrollViewViewport);
  dart.setMethodSignature(nested_scroll_view.NestedScrollViewViewport, () => ({
    __proto__: dart.getMethods(nested_scroll_view.NestedScrollViewViewport.__proto__),
    createRenderObject: dart.fnType(nested_scroll_view.RenderNestedScrollViewViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested_scroll_view.NestedScrollViewViewport, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.NestedScrollViewViewport, () => ({
    __proto__: dart.getFields(nested_scroll_view.NestedScrollViewViewport.__proto__),
    handle: dart.finalFieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  nested_scroll_view.RenderNestedScrollViewViewport = class RenderNestedScrollViewViewport extends viewport$.RenderViewport {
    get handle() {
      return this[_handle];
    }
    set handle(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1923, 12, "value != null");
      if (dart.equals(this.handle, value)) return;
      this[_handle] = value;
      this.handle[_markNeedsLayout]();
    }
    markNeedsLayout() {
      this.handle[_markNeedsLayout]();
      super.markNeedsLayout();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (DiagnosticsPropertyOfSliverOverlapAbsorberHandle()).new("handle", this.handle));
    }
  };
  (nested_scroll_view.RenderNestedScrollViewViewport.new = function(opts) {
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C72 || CT.C72;
    let crossAxisDirection = opts && 'crossAxisDirection' in opts ? opts.crossAxisDirection : null;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let anchor = opts && 'anchor' in opts ? opts.anchor : 0;
    let children = opts && 'children' in opts ? opts.children : null;
    let center = opts && 'center' in opts ? opts.center : null;
    let handle = opts && 'handle' in opts ? opts.handle : null;
    if (!(handle != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/nested_scroll_view.dart", 1907, 15, "handle != null");
    this[_handle] = handle;
    nested_scroll_view.RenderNestedScrollViewViewport.__proto__.new.call(this, {axisDirection: axisDirection, crossAxisDirection: crossAxisDirection, offset: offset, anchor: anchor, children: children, center: center});
    ;
  }).prototype = nested_scroll_view.RenderNestedScrollViewViewport.prototype;
  dart.addTypeTests(nested_scroll_view.RenderNestedScrollViewViewport);
  dart.setGetterSignature(nested_scroll_view.RenderNestedScrollViewViewport, () => ({
    __proto__: dart.getGetters(nested_scroll_view.RenderNestedScrollViewViewport.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setSetterSignature(nested_scroll_view.RenderNestedScrollViewViewport, () => ({
    __proto__: dart.getSetters(nested_scroll_view.RenderNestedScrollViewViewport.__proto__),
    handle: nested_scroll_view.SliverOverlapAbsorberHandle
  }));
  dart.setLibraryUri(nested_scroll_view.RenderNestedScrollViewViewport, "package:flutter/src/widgets/nested_scroll_view.dart");
  dart.setFieldSignature(nested_scroll_view.RenderNestedScrollViewViewport, () => ({
    __proto__: dart.getFields(nested_scroll_view.RenderNestedScrollViewViewport.__proto__),
    [_handle]: dart.fieldType(nested_scroll_view.SliverOverlapAbsorberHandle)
  }));
  var _name$33 = dart.privateName(platform_view, "_name");
  var C1820;
  var viewType$ = dart.privateName(platform_view$, "AndroidView.viewType");
  var onPlatformViewCreated$ = dart.privateName(platform_view$, "AndroidView.onPlatformViewCreated");
  var hitTestBehavior$ = dart.privateName(platform_view$, "AndroidView.hitTestBehavior");
  var layoutDirection$1 = dart.privateName(platform_view$, "AndroidView.layoutDirection");
  var gestureRecognizers$ = dart.privateName(platform_view$, "AndroidView.gestureRecognizers");
  var creationParams$ = dart.privateName(platform_view$, "AndroidView.creationParams");
  var creationParamsCodec$ = dart.privateName(platform_view$, "AndroidView.creationParamsCodec");
  platform_view$.AndroidView = class AndroidView extends framework.StatefulWidget {
    get viewType() {
      return this[viewType$];
    }
    set viewType(value) {
      super.viewType = value;
    }
    get onPlatformViewCreated() {
      return this[onPlatformViewCreated$];
    }
    set onPlatformViewCreated(value) {
      super.onPlatformViewCreated = value;
    }
    get hitTestBehavior() {
      return this[hitTestBehavior$];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get layoutDirection() {
      return this[layoutDirection$1];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    get creationParams() {
      return this[creationParams$];
    }
    set creationParams(value) {
      super.creationParams = value;
    }
    get creationParamsCodec() {
      return this[creationParamsCodec$];
    }
    set creationParamsCodec(value) {
      super.creationParamsCodec = value;
    }
    createState() {
      return new platform_view$._AndroidViewState.new();
    }
  };
  (platform_view$.AndroidView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let onPlatformViewCreated = opts && 'onPlatformViewCreated' in opts ? opts.onPlatformViewCreated : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : C1820 || CT.C1820;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewType$] = viewType;
    this[onPlatformViewCreated$] = onPlatformViewCreated;
    this[hitTestBehavior$] = hitTestBehavior;
    this[layoutDirection$1] = layoutDirection;
    this[gestureRecognizers$] = gestureRecognizers;
    this[creationParams$] = creationParams;
    this[creationParamsCodec$] = creationParamsCodec;
    if (!(viewType != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 74, 15, "viewType != null");
    if (!(hitTestBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 75, 15, "hitTestBehavior != null");
    if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 76, 15, "creationParams == null || creationParamsCodec != null");
    platform_view$.AndroidView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$.AndroidView.prototype;
  dart.addTypeTests(platform_view$.AndroidView);
  dart.setMethodSignature(platform_view$.AndroidView, () => ({
    __proto__: dart.getMethods(platform_view$.AndroidView.__proto__),
    createState: dart.fnType(framework.State$(platform_view$.AndroidView), [])
  }));
  dart.setLibraryUri(platform_view$.AndroidView, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.AndroidView, () => ({
    __proto__: dart.getFields(platform_view$.AndroidView.__proto__),
    viewType: dart.finalFieldType(core.String),
    onPlatformViewCreated: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    hitTestBehavior: dart.finalFieldType(platform_view.PlatformViewHitTestBehavior),
    layoutDirection: dart.finalFieldType(ui.TextDirection),
    gestureRecognizers: dart.finalFieldType(core.Set$(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer))),
    creationParams: dart.finalFieldType(dart.dynamic),
    creationParamsCodec: dart.finalFieldType(message_codec.MessageCodec)
  }));
  var viewType$0 = dart.privateName(platform_view$, "UiKitView.viewType");
  var onPlatformViewCreated$0 = dart.privateName(platform_view$, "UiKitView.onPlatformViewCreated");
  var hitTestBehavior$0 = dart.privateName(platform_view$, "UiKitView.hitTestBehavior");
  var layoutDirection$2 = dart.privateName(platform_view$, "UiKitView.layoutDirection");
  var creationParams$0 = dart.privateName(platform_view$, "UiKitView.creationParams");
  var creationParamsCodec$0 = dart.privateName(platform_view$, "UiKitView.creationParamsCodec");
  var gestureRecognizers$0 = dart.privateName(platform_view$, "UiKitView.gestureRecognizers");
  platform_view$.UiKitView = class UiKitView extends framework.StatefulWidget {
    get viewType() {
      return this[viewType$0];
    }
    set viewType(value) {
      super.viewType = value;
    }
    get onPlatformViewCreated() {
      return this[onPlatformViewCreated$0];
    }
    set onPlatformViewCreated(value) {
      super.onPlatformViewCreated = value;
    }
    get hitTestBehavior() {
      return this[hitTestBehavior$0];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get layoutDirection() {
      return this[layoutDirection$2];
    }
    set layoutDirection(value) {
      super.layoutDirection = value;
    }
    get creationParams() {
      return this[creationParams$0];
    }
    set creationParams(value) {
      super.creationParams = value;
    }
    get creationParamsCodec() {
      return this[creationParamsCodec$0];
    }
    set creationParamsCodec(value) {
      super.creationParamsCodec = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$0];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    createState() {
      return new platform_view$._UiKitViewState.new();
    }
  };
  (platform_view$.UiKitView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let onPlatformViewCreated = opts && 'onPlatformViewCreated' in opts ? opts.onPlatformViewCreated : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : C1820 || CT.C1820;
    let layoutDirection = opts && 'layoutDirection' in opts ? opts.layoutDirection : null;
    let creationParams = opts && 'creationParams' in opts ? opts.creationParams : null;
    let creationParamsCodec = opts && 'creationParamsCodec' in opts ? opts.creationParamsCodec : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewType$0] = viewType;
    this[onPlatformViewCreated$0] = onPlatformViewCreated;
    this[hitTestBehavior$0] = hitTestBehavior;
    this[layoutDirection$2] = layoutDirection;
    this[creationParams$0] = creationParams;
    this[creationParamsCodec$0] = creationParamsCodec;
    this[gestureRecognizers$0] = gestureRecognizers;
    if (!(viewType != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 221, 15, "viewType != null");
    if (!(hitTestBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 222, 15, "hitTestBehavior != null");
    if (!(creationParams == null || creationParamsCodec != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 223, 15, "creationParams == null || creationParamsCodec != null");
    platform_view$.UiKitView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$.UiKitView.prototype;
  dart.addTypeTests(platform_view$.UiKitView);
  dart.setMethodSignature(platform_view$.UiKitView, () => ({
    __proto__: dart.getMethods(platform_view$.UiKitView.__proto__),
    createState: dart.fnType(framework.State$(platform_view$.UiKitView), [])
  }));
  dart.setLibraryUri(platform_view$.UiKitView, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.UiKitView, () => ({
    __proto__: dart.getFields(platform_view$.UiKitView.__proto__),
    viewType: dart.finalFieldType(core.String),
    onPlatformViewCreated: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    hitTestBehavior: dart.finalFieldType(platform_view.PlatformViewHitTestBehavior),
    layoutDirection: dart.finalFieldType(ui.TextDirection),
    creationParams: dart.finalFieldType(dart.dynamic),
    creationParamsCodec: dart.finalFieldType(message_codec.MessageCodec),
    gestureRecognizers: dart.finalFieldType(core.Set$(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))
  }));
  var _createHtmlElementView = dart.privateName(platform_view$, "_createHtmlElementView");
  var C1821;
  var C1824;
  var C1825;
  var C1826;
  var C1823;
  var C1822;
  var C1829;
  var C1830;
  var C1831;
  var C1828;
  var C1827;
  var _initialize = dart.privateName(platform_view$, "_initialize");
  var viewType$1 = dart.privateName(platform_view$, "HtmlElementView.viewType");
  platform_view$.HtmlElementView = class HtmlElementView extends framework.StatelessWidget {
    get viewType() {
      return this[viewType$1];
    }
    set viewType(value) {
      super.viewType = value;
    }
    build(context) {
      return new platform_view$.PlatformViewLink.new({viewType: this.viewType, onCreatePlatformView: dart.bind(this, _createHtmlElementView), surfaceFactory: dart.fn((context, controller) => new platform_view$.PlatformViewSurface.new({controller: controller, gestureRecognizers: C1821 || CT.C1821, hitTestBehavior: platform_view.PlatformViewHitTestBehavior.opaque, $creationLocationd_0dea112b090073317d4: C1822 || CT.C1822}), BuildContextAndPlatformViewControllerToPlatformViewSurface()), $creationLocationd_0dea112b090073317d4: C1827 || CT.C1827});
    }
    [_createHtmlElementView](params) {
      let controller = new platform_view$._HtmlElementViewController.new(params.id, this.viewType);
      controller[_initialize]().then(core.Null, dart.fn(_ => {
        params.onPlatformViewCreated(params.id);
      }, voidToNull()));
      return controller;
    }
  };
  (platform_view$.HtmlElementView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewType$1] = viewType;
    if (!(viewType != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 341, 15, "viewType != null");
    if (!true) dart.assertFailed("HtmlElementView is only available on Flutter Web.", "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 342, 15, "kIsWeb");
    platform_view$.HtmlElementView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$.HtmlElementView.prototype;
  dart.addTypeTests(platform_view$.HtmlElementView);
  dart.setMethodSignature(platform_view$.HtmlElementView, () => ({
    __proto__: dart.getMethods(platform_view$.HtmlElementView.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_createHtmlElementView]: dart.fnType(platform_view$._HtmlElementViewController, [platform_view$.PlatformViewCreationParams])
  }));
  dart.setLibraryUri(platform_view$.HtmlElementView, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.HtmlElementView, () => ({
    __proto__: dart.getFields(platform_view$.HtmlElementView.__proto__),
    viewType: dart.finalFieldType(core.String)
  }));
  var _initialized = dart.privateName(platform_view$, "_initialized");
  var viewId$ = dart.privateName(platform_view$, "_HtmlElementViewController.viewId");
  platform_view$._HtmlElementViewController = class _HtmlElementViewController extends platform_views.PlatformViewController {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    [_initialize]() {
      return async.async(dart.void, (function* _initialize() {
        let args = new (IdentityMapOfString$dynamic()).from(["id", this.viewId, "viewType", this.viewType]);
        yield system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "create", args);
        this[_initialized] = true;
      }).bind(this));
    }
    clearFocus() {
    }
    dispatchPointerEvent(event) {
    }
    dispose() {
      if (dart.test(this[_initialized])) {
        system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "dispose", this.viewId);
      }
    }
  };
  (platform_view$._HtmlElementViewController.new = function(viewId, viewType) {
    this[_initialized] = false;
    this[viewId$] = viewId;
    this.viewType = viewType;
    ;
  }).prototype = platform_view$._HtmlElementViewController.prototype;
  dart.addTypeTests(platform_view$._HtmlElementViewController);
  dart.setMethodSignature(platform_view$._HtmlElementViewController, () => ({
    __proto__: dart.getMethods(platform_view$._HtmlElementViewController.__proto__),
    [_initialize]: dart.fnType(async.Future$(dart.void), []),
    clearFocus: dart.fnType(dart.void, []),
    dispatchPointerEvent: dart.fnType(dart.void, [events.PointerEvent]),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(platform_view$._HtmlElementViewController, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._HtmlElementViewController, () => ({
    __proto__: dart.getFields(platform_view$._HtmlElementViewController.__proto__),
    viewId: dart.finalFieldType(core.int),
    viewType: dart.finalFieldType(core.String),
    [_initialized]: dart.fieldType(core.bool)
  }));
  var _id = dart.privateName(platform_view$, "_id");
  var _controller$3 = dart.privateName(platform_view$, "_controller");
  var _layoutDirection = dart.privateName(platform_view$, "_layoutDirection");
  var _focusNode = dart.privateName(platform_view$, "_focusNode");
  var _onFocusChange = dart.privateName(platform_view$, "_onFocusChange");
  var C1834;
  var C1835;
  var C1836;
  var C1833;
  var C1832;
  var C1839;
  var C1840;
  var C1841;
  var C1838;
  var C1837;
  var _createNewAndroidView = dart.privateName(platform_view$, "_createNewAndroidView");
  var _initializeOnce = dart.privateName(platform_view$, "_initializeOnce");
  var _findLayoutDirection = dart.privateName(platform_view$, "_findLayoutDirection");
  platform_view$._AndroidViewState = class _AndroidViewState extends framework.State$(platform_view$.AndroidView) {
    build(context) {
      let t43;
      return new focus_scope.Focus.new({focusNode: this[_focusNode], onFocusChange: dart.bind(this, _onFocusChange), child: new platform_view$._AndroidPlatformView.new({controller: this[_controller$3], hitTestBehavior: this.widget.hitTestBehavior, gestureRecognizers: (t43 = this.widget.gestureRecognizers, t43 == null ? platform_view$._AndroidViewState._emptyRecognizersSet : t43), $creationLocationd_0dea112b090073317d4: C1832 || CT.C1832}), $creationLocationd_0dea112b090073317d4: C1837 || CT.C1837});
    }
    [_initializeOnce]() {
      if (dart.test(this[_initialized])) {
        return;
      }
      this[_initialized] = true;
      this[_createNewAndroidView]();
      this[_focusNode] = new focus_manager.FocusNode.new({debugLabel: "AndroidView(id: " + dart.str(this[_id]) + ")"});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      let newLayoutDirection = this[_findLayoutDirection]();
      let didChangeLayoutDirection = !dart.equals(this[_layoutDirection], newLayoutDirection);
      this[_layoutDirection] = newLayoutDirection;
      this[_initializeOnce]();
      if (didChangeLayoutDirection) {
        this[_controller$3].setLayoutDirection(this[_layoutDirection]);
      }
    }
    didUpdateWidget(oldWidget) {
      platform_view$.AndroidView._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      let newLayoutDirection = this[_findLayoutDirection]();
      let didChangeLayoutDirection = !dart.equals(this[_layoutDirection], newLayoutDirection);
      this[_layoutDirection] = newLayoutDirection;
      if (this.widget.viewType != oldWidget.viewType) {
        this[_controller$3].dispose();
        this[_createNewAndroidView]();
        return;
      }
      if (didChangeLayoutDirection) {
        this[_controller$3].setLayoutDirection(this[_layoutDirection]);
      }
    }
    [_findLayoutDirection]() {
      let t43;
      if (!(this.widget.layoutDirection != null || dart.test(debug$0.debugCheckHasDirectionality(this.context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 486, 12, "widget.layoutDirection != null || debugCheckHasDirectionality(context)");
      t43 = this.widget.layoutDirection;
      return t43 == null ? basic.Directionality.of(this.context) : t43;
    }
    dispose() {
      this[_controller$3].dispose();
      super.dispose();
    }
    [_createNewAndroidView]() {
      this[_id] = platform_views.platformViewsRegistry.getNextPlatformViewId();
      this[_controller$3] = platform_views.PlatformViewsService.initAndroidView({id: this[_id], viewType: this.widget.viewType, layoutDirection: this[_layoutDirection], creationParams: this.widget.creationParams, creationParamsCodec: this.widget.creationParamsCodec, onFocus: dart.fn(() => {
          this[_focusNode].requestFocus();
        }, VoidToNull())});
      if (this.widget.onPlatformViewCreated != null) {
        this[_controller$3].addOnPlatformViewCreatedListener(this.widget.onPlatformViewCreated);
      }
    }
    [_onFocusChange](isFocused) {
      if (!dart.test(this[_controller$3].isCreated)) {
        return;
      }
      if (!dart.test(isFocused)) {
        this[_controller$3].clearFocus().catchError(dart.fn(e => {
          if (message_codec.MissingPluginException.is(e)) {
            return;
          }
        }, dynamicToNull()));
        return;
      }
      system_channels.SystemChannels.textInput.invokeMethod(dart.void, "TextInput.setPlatformViewClient", this[_id]).catchError(dart.fn(e => {
        if (message_codec.MissingPluginException.is(e)) {
          return;
        }
      }, dynamicToNull()));
    }
  };
  (platform_view$._AndroidViewState.new = function() {
    this[_id] = null;
    this[_controller$3] = null;
    this[_layoutDirection] = null;
    this[_initialized] = false;
    this[_focusNode] = null;
    platform_view$._AndroidViewState.__proto__.new.call(this);
    ;
  }).prototype = platform_view$._AndroidViewState.prototype;
  dart.addTypeTests(platform_view$._AndroidViewState);
  dart.setMethodSignature(platform_view$._AndroidViewState, () => ({
    __proto__: dart.getMethods(platform_view$._AndroidViewState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_initializeOnce]: dart.fnType(dart.void, []),
    [_findLayoutDirection]: dart.fnType(ui.TextDirection, []),
    [_createNewAndroidView]: dart.fnType(dart.void, []),
    [_onFocusChange]: dart.fnType(dart.void, [core.bool])
  }));
  dart.setLibraryUri(platform_view$._AndroidViewState, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._AndroidViewState, () => ({
    __proto__: dart.getFields(platform_view$._AndroidViewState.__proto__),
    [_id]: dart.fieldType(core.int),
    [_controller$3]: dart.fieldType(platform_views.AndroidViewController),
    [_layoutDirection]: dart.fieldType(ui.TextDirection),
    [_initialized]: dart.fieldType(core.bool),
    [_focusNode]: dart.fieldType(focus_manager.FocusNode)
  }));
  dart.defineLazy(platform_view$._AndroidViewState, {
    /*platform_view$._AndroidViewState._emptyRecognizersSet*/get _emptyRecognizersSet() {
      return LinkedHashSetOfFactoryOfOneSequenceGestureRecognizer().new();
    }
  });
  var C1843;
  var C1842;
  var C1846;
  var C1847;
  var C1848;
  var C1845;
  var C1844;
  var _createNewUiKitView = dart.privateName(platform_view$, "_createNewUiKitView");
  platform_view$._UiKitViewState = class _UiKitViewState extends framework.State$(platform_view$.UiKitView) {
    build(context) {
      let t43;
      if (this[_controller$3] == null) {
        return C1842 || CT.C1842;
      }
      return new platform_view$._UiKitPlatformView.new({controller: this[_controller$3], hitTestBehavior: this.widget.hitTestBehavior, gestureRecognizers: (t43 = this.widget.gestureRecognizers, t43 == null ? platform_view$._UiKitViewState._emptyRecognizersSet : t43), $creationLocationd_0dea112b090073317d4: C1844 || CT.C1844});
    }
    [_initializeOnce]() {
      if (dart.test(this[_initialized])) {
        return;
      }
      this[_initialized] = true;
      this[_createNewUiKitView]();
    }
    didChangeDependencies() {
      let t43;
      super.didChangeDependencies();
      let newLayoutDirection = this[_findLayoutDirection]();
      let didChangeLayoutDirection = !dart.equals(this[_layoutDirection], newLayoutDirection);
      this[_layoutDirection] = newLayoutDirection;
      this[_initializeOnce]();
      if (didChangeLayoutDirection) {
        t43 = this[_controller$3];
        t43 == null ? null : t43.setLayoutDirection(this[_layoutDirection]);
      }
    }
    didUpdateWidget(oldWidget) {
      let t43, t43$;
      platform_view$.UiKitView._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      let newLayoutDirection = this[_findLayoutDirection]();
      let didChangeLayoutDirection = !dart.equals(this[_layoutDirection], newLayoutDirection);
      this[_layoutDirection] = newLayoutDirection;
      if (this.widget.viewType != oldWidget.viewType) {
        t43 = this[_controller$3];
        t43 == null ? null : t43.dispose();
        this[_createNewUiKitView]();
        return;
      }
      if (didChangeLayoutDirection) {
        t43$ = this[_controller$3];
        t43$ == null ? null : t43$.setLayoutDirection(this[_layoutDirection]);
      }
    }
    [_findLayoutDirection]() {
      let t43;
      if (!(this.widget.layoutDirection != null || dart.test(debug$0.debugCheckHasDirectionality(this.context)))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 611, 12, "widget.layoutDirection != null || debugCheckHasDirectionality(context)");
      t43 = this.widget.layoutDirection;
      return t43 == null ? basic.Directionality.of(this.context) : t43;
    }
    dispose() {
      let t43;
      t43 = this[_controller$3];
      t43 == null ? null : t43.dispose();
      super.dispose();
    }
    [_createNewUiKitView]() {
      return async.async(dart.void, (function* _createNewUiKitView() {
        let id = platform_views.platformViewsRegistry.getNextPlatformViewId();
        let controller = (yield platform_views.PlatformViewsService.initUiKitView({id: id, viewType: this.widget.viewType, layoutDirection: this[_layoutDirection], creationParams: this.widget.creationParams, creationParamsCodec: this.widget.creationParamsCodec}));
        if (!dart.test(this.mounted)) {
          controller.dispose();
          return;
        }
        if (this.widget.onPlatformViewCreated != null) {
          this.widget.onPlatformViewCreated(id);
        }
        this.setState(dart.fn(() => {
          this[_controller$3] = controller;
        }, VoidToNull()));
      }).bind(this));
    }
  };
  (platform_view$._UiKitViewState.new = function() {
    this[_controller$3] = null;
    this[_layoutDirection] = null;
    this[_initialized] = false;
    platform_view$._UiKitViewState.__proto__.new.call(this);
    ;
  }).prototype = platform_view$._UiKitViewState.prototype;
  dart.addTypeTests(platform_view$._UiKitViewState);
  dart.setMethodSignature(platform_view$._UiKitViewState, () => ({
    __proto__: dart.getMethods(platform_view$._UiKitViewState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_initializeOnce]: dart.fnType(dart.void, []),
    [_findLayoutDirection]: dart.fnType(ui.TextDirection, []),
    [_createNewUiKitView]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setLibraryUri(platform_view$._UiKitViewState, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._UiKitViewState, () => ({
    __proto__: dart.getFields(platform_view$._UiKitViewState.__proto__),
    [_controller$3]: dart.fieldType(platform_views.UiKitViewController),
    [_layoutDirection]: dart.fieldType(ui.TextDirection),
    [_initialized]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(platform_view$._UiKitViewState, {
    /*platform_view$._UiKitViewState._emptyRecognizersSet*/get _emptyRecognizersSet() {
      return LinkedHashSetOfFactoryOfOneSequenceGestureRecognizer().new();
    }
  });
  var controller$8 = dart.privateName(platform_view$, "_AndroidPlatformView.controller");
  var hitTestBehavior$1 = dart.privateName(platform_view$, "_AndroidPlatformView.hitTestBehavior");
  var gestureRecognizers$1 = dart.privateName(platform_view$, "_AndroidPlatformView.gestureRecognizers");
  platform_view$._AndroidPlatformView = class _AndroidPlatformView extends framework.LeafRenderObjectWidget {
    get controller() {
      return this[controller$8];
    }
    set controller(value) {
      super.controller = value;
    }
    get hitTestBehavior() {
      return this[hitTestBehavior$1];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$1];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    createRenderObject(context) {
      return new platform_view.RenderAndroidView.new({viewController: this.controller, hitTestBehavior: this.hitTestBehavior, gestureRecognizers: this.gestureRecognizers});
    }
    updateRenderObject(context, renderObject) {
      platform_view.RenderAndroidView._check(renderObject);
      renderObject.viewController = this.controller;
      renderObject.hitTestBehavior = this.hitTestBehavior;
      renderObject.updateGestureRecognizers(this.gestureRecognizers);
    }
  };
  (platform_view$._AndroidPlatformView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$8] = controller;
    this[hitTestBehavior$1] = hitTestBehavior;
    this[gestureRecognizers$1] = gestureRecognizers;
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 647, 15, "controller != null");
    if (!(hitTestBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 648, 15, "hitTestBehavior != null");
    if (!(gestureRecognizers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 649, 15, "gestureRecognizers != null");
    platform_view$._AndroidPlatformView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$._AndroidPlatformView.prototype;
  dart.addTypeTests(platform_view$._AndroidPlatformView);
  dart.setMethodSignature(platform_view$._AndroidPlatformView, () => ({
    __proto__: dart.getMethods(platform_view$._AndroidPlatformView.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(platform_view$._AndroidPlatformView, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._AndroidPlatformView, () => ({
    __proto__: dart.getFields(platform_view$._AndroidPlatformView.__proto__),
    controller: dart.finalFieldType(platform_views.AndroidViewController),
    hitTestBehavior: dart.finalFieldType(platform_view.PlatformViewHitTestBehavior),
    gestureRecognizers: dart.finalFieldType(core.Set$(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))
  }));
  var controller$9 = dart.privateName(platform_view$, "_UiKitPlatformView.controller");
  var hitTestBehavior$2 = dart.privateName(platform_view$, "_UiKitPlatformView.hitTestBehavior");
  var gestureRecognizers$2 = dart.privateName(platform_view$, "_UiKitPlatformView.gestureRecognizers");
  platform_view$._UiKitPlatformView = class _UiKitPlatformView extends framework.LeafRenderObjectWidget {
    get controller() {
      return this[controller$9];
    }
    set controller(value) {
      super.controller = value;
    }
    get hitTestBehavior() {
      return this[hitTestBehavior$2];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$2];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    createRenderObject(context) {
      return new platform_view.RenderUiKitView.new({viewController: this.controller, hitTestBehavior: this.hitTestBehavior, gestureRecognizers: this.gestureRecognizers});
    }
    updateRenderObject(context, renderObject) {
      platform_view.RenderUiKitView._check(renderObject);
      renderObject.viewController = this.controller;
      renderObject.hitTestBehavior = this.hitTestBehavior;
      renderObject.updateGestureRecognizers(this.gestureRecognizers);
    }
  };
  (platform_view$._UiKitPlatformView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$9] = controller;
    this[hitTestBehavior$2] = hitTestBehavior;
    this[gestureRecognizers$2] = gestureRecognizers;
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 678, 15, "controller != null");
    if (!(hitTestBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 679, 15, "hitTestBehavior != null");
    if (!(gestureRecognizers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 680, 15, "gestureRecognizers != null");
    platform_view$._UiKitPlatformView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$._UiKitPlatformView.prototype;
  dart.addTypeTests(platform_view$._UiKitPlatformView);
  dart.setMethodSignature(platform_view$._UiKitPlatformView, () => ({
    __proto__: dart.getMethods(platform_view$._UiKitPlatformView.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(platform_view$._UiKitPlatformView, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._UiKitPlatformView, () => ({
    __proto__: dart.getFields(platform_view$._UiKitPlatformView.__proto__),
    controller: dart.finalFieldType(platform_views.UiKitViewController),
    hitTestBehavior: dart.finalFieldType(platform_view.PlatformViewHitTestBehavior),
    gestureRecognizers: dart.finalFieldType(core.Set$(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))
  }));
  var id$0 = dart.privateName(platform_view$, "PlatformViewCreationParams.id");
  var viewType$2 = dart.privateName(platform_view$, "PlatformViewCreationParams.viewType");
  var onPlatformViewCreated$1 = dart.privateName(platform_view$, "PlatformViewCreationParams.onPlatformViewCreated");
  var onFocusChanged$ = dart.privateName(platform_view$, "PlatformViewCreationParams.onFocusChanged");
  platform_view$.PlatformViewCreationParams = class PlatformViewCreationParams extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    get viewType() {
      return this[viewType$2];
    }
    set viewType(value) {
      super.viewType = value;
    }
    get onPlatformViewCreated() {
      return this[onPlatformViewCreated$1];
    }
    set onPlatformViewCreated(value) {
      super.onPlatformViewCreated = value;
    }
    get onFocusChanged() {
      return this[onFocusChanged$];
    }
    set onFocusChanged(value) {
      super.onFocusChanged = value;
    }
  };
  (platform_view$.PlatformViewCreationParams.__ = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let onPlatformViewCreated = opts && 'onPlatformViewCreated' in opts ? opts.onPlatformViewCreated : null;
    let onFocusChanged = opts && 'onFocusChanged' in opts ? opts.onFocusChanged : null;
    this[id$0] = id;
    this[viewType$2] = viewType;
    this[onPlatformViewCreated$1] = onPlatformViewCreated;
    this[onFocusChanged$] = onFocusChanged;
    if (!(id != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 716, 15, "id != null");
    if (!(onPlatformViewCreated != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 717, 15, "onPlatformViewCreated != null");
    ;
  }).prototype = platform_view$.PlatformViewCreationParams.prototype;
  dart.addTypeTests(platform_view$.PlatformViewCreationParams);
  dart.setLibraryUri(platform_view$.PlatformViewCreationParams, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.PlatformViewCreationParams, () => ({
    __proto__: dart.getFields(platform_view$.PlatformViewCreationParams.__proto__),
    id: dart.finalFieldType(core.int),
    viewType: dart.finalFieldType(core.String),
    onPlatformViewCreated: dart.finalFieldType(dart.fnType(dart.void, [core.int])),
    onFocusChanged: dart.finalFieldType(dart.fnType(dart.void, [core.bool]))
  }));
  var _surfaceFactory = dart.privateName(platform_view$, "_surfaceFactory");
  var _onCreatePlatformView = dart.privateName(platform_view$, "_onCreatePlatformView");
  var _surfaceFactory$ = dart.privateName(platform_view$, "PlatformViewLink._surfaceFactory");
  var _onCreatePlatformView$ = dart.privateName(platform_view$, "PlatformViewLink._onCreatePlatformView");
  var viewType$3 = dart.privateName(platform_view$, "PlatformViewLink.viewType");
  platform_view$.PlatformViewLink = class PlatformViewLink extends framework.StatefulWidget {
    get [_surfaceFactory]() {
      return this[_surfaceFactory$];
    }
    set [_surfaceFactory](value) {
      super[_surfaceFactory] = value;
    }
    get [_onCreatePlatformView]() {
      return this[_onCreatePlatformView$];
    }
    set [_onCreatePlatformView](value) {
      super[_onCreatePlatformView] = value;
    }
    get viewType() {
      return this[viewType$3];
    }
    set viewType(value) {
      super.viewType = value;
    }
    createState() {
      return new platform_view$._PlatformViewLinkState.new();
    }
  };
  (platform_view$.PlatformViewLink.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let surfaceFactory = opts && 'surfaceFactory' in opts ? opts.surfaceFactory : null;
    let onCreatePlatformView = opts && 'onCreatePlatformView' in opts ? opts.onCreatePlatformView : null;
    let viewType = opts && 'viewType' in opts ? opts.viewType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[viewType$3] = viewType;
    if (!(surfaceFactory != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 803, 17, "surfaceFactory != null");
    if (!(onCreatePlatformView != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 804, 17, "onCreatePlatformView != null");
    if (!(viewType != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 805, 17, "viewType != null");
    this[_surfaceFactory$] = surfaceFactory;
    this[_onCreatePlatformView$] = onCreatePlatformView;
    platform_view$.PlatformViewLink.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$.PlatformViewLink.prototype;
  dart.addTypeTests(platform_view$.PlatformViewLink);
  dart.setMethodSignature(platform_view$.PlatformViewLink, () => ({
    __proto__: dart.getMethods(platform_view$.PlatformViewLink.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(platform_view$.PlatformViewLink, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.PlatformViewLink, () => ({
    __proto__: dart.getFields(platform_view$.PlatformViewLink.__proto__),
    [_surfaceFactory]: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, platform_views.PlatformViewController])),
    [_onCreatePlatformView]: dart.finalFieldType(dart.fnType(platform_views.PlatformViewController, [platform_view$.PlatformViewCreationParams])),
    viewType: dart.finalFieldType(core.String)
  }));
  var _platformViewCreated = dart.privateName(platform_view$, "_platformViewCreated");
  var _surface = dart.privateName(platform_view$, "_surface");
  var C1850;
  var C1849;
  var _handleFrameworkFocusChanged = dart.privateName(platform_view$, "_handleFrameworkFocusChanged");
  var C1853;
  var C1854;
  var C1855;
  var C1852;
  var C1851;
  var _onPlatformViewCreated = dart.privateName(platform_view$, "_onPlatformViewCreated");
  var _handlePlatformFocusChanged = dart.privateName(platform_view$, "_handlePlatformFocusChanged");
  platform_view$._PlatformViewLinkState = class _PlatformViewLinkState extends framework.State$(platform_view$.PlatformViewLink) {
    build(context) {
      if (!dart.test(this[_platformViewCreated])) {
        return C1849 || CT.C1849;
      }
      this[_surface] == null ? this[_surface] = this.widget[_surfaceFactory](context, this[_controller$3]) : null;
      return new focus_scope.Focus.new({focusNode: this[_focusNode], onFocusChange: dart.bind(this, _handleFrameworkFocusChanged), child: this[_surface], $creationLocationd_0dea112b090073317d4: C1851 || CT.C1851});
    }
    initState() {
      this[_focusNode] = new focus_manager.FocusNode.new({debugLabel: "PlatformView(id: " + dart.str(this[_id]) + ")"});
      this[_initialize]();
      super.initState();
    }
    didUpdateWidget(oldWidget) {
      let t43;
      platform_view$.PlatformViewLink._check(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.viewType != oldWidget.viewType) {
        t43 = this[_controller$3];
        t43 == null ? null : t43.dispose();
        this[_surface] = null;
        this[_platformViewCreated] = false;
        this[_initialize]();
      }
    }
    [_initialize]() {
      this[_id] = platform_views.platformViewsRegistry.getNextPlatformViewId();
      this[_controller$3] = this.widget[_onCreatePlatformView](new platform_view$.PlatformViewCreationParams.__({id: this[_id], viewType: this.widget.viewType, onPlatformViewCreated: dart.bind(this, _onPlatformViewCreated), onFocusChanged: dart.bind(this, _handlePlatformFocusChanged)}));
    }
    [_onPlatformViewCreated](id) {
      this.setState(dart.fn(() => {
        this[_platformViewCreated] = true;
      }, VoidToNull()));
    }
    [_handleFrameworkFocusChanged](isFocused) {
      let t43;
      if (!dart.test(isFocused)) {
        t43 = this[_controller$3];
        t43 == null ? null : t43.clearFocus();
      }
    }
    [_handlePlatformFocusChanged](isFocused) {
      if (dart.test(isFocused)) {
        this[_focusNode].requestFocus();
      }
    }
    dispose() {
      let t43;
      t43 = this[_controller$3];
      t43 == null ? null : t43.dispose();
      this[_controller$3] = null;
      super.dispose();
    }
  };
  (platform_view$._PlatformViewLinkState.new = function() {
    this[_id] = null;
    this[_controller$3] = null;
    this[_platformViewCreated] = false;
    this[_surface] = null;
    this[_focusNode] = null;
    platform_view$._PlatformViewLinkState.__proto__.new.call(this);
    ;
  }).prototype = platform_view$._PlatformViewLinkState.prototype;
  dart.addTypeTests(platform_view$._PlatformViewLinkState);
  dart.setMethodSignature(platform_view$._PlatformViewLinkState, () => ({
    __proto__: dart.getMethods(platform_view$._PlatformViewLinkState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_initialize]: dart.fnType(dart.void, []),
    [_onPlatformViewCreated]: dart.fnType(dart.void, [core.int]),
    [_handleFrameworkFocusChanged]: dart.fnType(dart.void, [core.bool]),
    [_handlePlatformFocusChanged]: dart.fnType(dart.void, [core.bool])
  }));
  dart.setLibraryUri(platform_view$._PlatformViewLinkState, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$._PlatformViewLinkState, () => ({
    __proto__: dart.getFields(platform_view$._PlatformViewLinkState.__proto__),
    [_id]: dart.fieldType(core.int),
    [_controller$3]: dart.fieldType(platform_views.PlatformViewController),
    [_platformViewCreated]: dart.fieldType(core.bool),
    [_surface]: dart.fieldType(framework.Widget),
    [_focusNode]: dart.fieldType(focus_manager.FocusNode)
  }));
  var controller$10 = dart.privateName(platform_view$, "PlatformViewSurface.controller");
  var gestureRecognizers$3 = dart.privateName(platform_view$, "PlatformViewSurface.gestureRecognizers");
  var hitTestBehavior$3 = dart.privateName(platform_view$, "PlatformViewSurface.hitTestBehavior");
  platform_view$.PlatformViewSurface = class PlatformViewSurface extends framework.LeafRenderObjectWidget {
    get controller() {
      return this[controller$10];
    }
    set controller(value) {
      super.controller = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$3];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    get hitTestBehavior() {
      return this[hitTestBehavior$3];
    }
    set hitTestBehavior(value) {
      super.hitTestBehavior = value;
    }
    createRenderObject(context) {
      return new platform_view.PlatformViewRenderBox.new({controller: this.controller, gestureRecognizers: this.gestureRecognizers, hitTestBehavior: this.hitTestBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t43;
      platform_view.PlatformViewRenderBox._check(renderObject);
      t43 = renderObject;
      t43.controller = this.controller;
      t43.hitTestBehavior = this.hitTestBehavior;
      t43.updateGestureRecognizers(this.gestureRecognizers);
      t43;
    }
  };
  (platform_view$.PlatformViewSurface.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let hitTestBehavior = opts && 'hitTestBehavior' in opts ? opts.hitTestBehavior : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$10] = controller;
    this[hitTestBehavior$3] = hitTestBehavior;
    this[gestureRecognizers$3] = gestureRecognizers;
    if (!(controller != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 929, 15, "controller != null");
    if (!(hitTestBehavior != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 930, 15, "hitTestBehavior != null");
    if (!(gestureRecognizers != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/platform_view.dart", 931, 15, "gestureRecognizers != null");
    platform_view$.PlatformViewSurface.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = platform_view$.PlatformViewSurface.prototype;
  dart.addTypeTests(platform_view$.PlatformViewSurface);
  dart.setMethodSignature(platform_view$.PlatformViewSurface, () => ({
    __proto__: dart.getMethods(platform_view$.PlatformViewSurface.__proto__),
    createRenderObject: dart.fnType(object$.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(platform_view$.PlatformViewSurface, "package:flutter/src/widgets/platform_view.dart");
  dart.setFieldSignature(platform_view$.PlatformViewSurface, () => ({
    __proto__: dart.getFields(platform_view$.PlatformViewSurface.__proto__),
    controller: dart.finalFieldType(platform_views.PlatformViewController),
    gestureRecognizers: dart.finalFieldType(core.Set$(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer))),
    hitTestBehavior: dart.finalFieldType(platform_view.PlatformViewHitTestBehavior)
  }));
  var initialChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.initialChildSize");
  var minChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.minChildSize");
  var maxChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.maxChildSize");
  var expand$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.expand");
  var builder$14 = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.builder");
  draggable_scrollable_sheet.DraggableScrollableSheet = class DraggableScrollableSheet extends framework.StatefulWidget {
    get initialChildSize() {
      return this[initialChildSize$];
    }
    set initialChildSize(value) {
      super.initialChildSize = value;
    }
    get minChildSize() {
      return this[minChildSize$];
    }
    set minChildSize(value) {
      super.minChildSize = value;
    }
    get maxChildSize() {
      return this[maxChildSize$];
    }
    set maxChildSize(value) {
      super.maxChildSize = value;
    }
    get expand() {
      return this[expand$];
    }
    set expand(value) {
      super.expand = value;
    }
    get builder() {
      return this[builder$14];
    }
    set builder(value) {
      super.builder = value;
    }
    createState() {
      return new draggable_scrollable_sheet._DraggableScrollableSheetState.new();
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialChildSize = opts && 'initialChildSize' in opts ? opts.initialChildSize : 0.5;
    let minChildSize = opts && 'minChildSize' in opts ? opts.minChildSize : 0.25;
    let maxChildSize = opts && 'maxChildSize' in opts ? opts.maxChildSize : 1;
    let expand = opts && 'expand' in opts ? opts.expand : true;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[initialChildSize$] = initialChildSize;
    this[minChildSize$] = minChildSize;
    this[maxChildSize$] = maxChildSize;
    this[expand$] = expand;
    this[builder$14] = builder;
    if (!(initialChildSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 108, 16, "initialChildSize != null");
    if (!(minChildSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 109, 16, "minChildSize != null");
    if (!(maxChildSize != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 110, 16, "maxChildSize != null");
    if (!(dart.notNull(minChildSize) >= 0.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 111, 16, "minChildSize >= 0.0");
    if (!(dart.notNull(maxChildSize) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 112, 16, "maxChildSize <= 1.0");
    if (!(dart.notNull(minChildSize) <= dart.notNull(initialChildSize))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 113, 16, "minChildSize <= initialChildSize");
    if (!(dart.notNull(initialChildSize) <= dart.notNull(maxChildSize))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 114, 16, "initialChildSize <= maxChildSize");
    if (!(expand != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 115, 16, "expand != null");
    if (!(builder != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 116, 16, "builder != null");
    draggable_scrollable_sheet.DraggableScrollableSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableSheet.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableSheet);
  dart.setMethodSignature(draggable_scrollable_sheet.DraggableScrollableSheet, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet.DraggableScrollableSheet.__proto__),
    createState: dart.fnType(draggable_scrollable_sheet._DraggableScrollableSheetState, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableSheet, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableSheet, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableSheet.__proto__),
    initialChildSize: dart.finalFieldType(core.double),
    minChildSize: dart.finalFieldType(core.double),
    maxChildSize: dart.finalFieldType(core.double),
    expand: dart.finalFieldType(core.bool),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, scroll_controller.ScrollController]))
  }));
  var extent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.extent");
  var minExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.minExtent");
  var maxExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.maxExtent");
  var initialExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.initialExtent");
  var context$3 = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.context");
  const Notification_ViewportNotificationMixin$36$ = class Notification_ViewportNotificationMixin extends notification_listener.Notification {};
  (Notification_ViewportNotificationMixin$36$.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    Notification_ViewportNotificationMixin$36$.__proto__.new.call(this);
  }).prototype = Notification_ViewportNotificationMixin$36$.prototype;
  dart.applyMixin(Notification_ViewportNotificationMixin$36$, scroll_notification.ViewportNotificationMixin);
  draggable_scrollable_sheet.DraggableScrollableNotification = class DraggableScrollableNotification extends Notification_ViewportNotificationMixin$36$ {
    get extent() {
      return this[extent$];
    }
    set extent(value) {
      super.extent = value;
    }
    get minExtent() {
      return this[minExtent$];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[maxExtent$];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get initialExtent() {
      return this[initialExtent$];
    }
    set initialExtent(value) {
      super.initialExtent = value;
    }
    get context() {
      return this[context$3];
    }
    set context(value) {
      super.context = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("minExtent: " + dart.str(this.minExtent) + ", extent: " + dart.str(this.extent) + ", maxExtent: " + dart.str(this.maxExtent) + ", initialExtent: " + dart.str(this.initialExtent));
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableNotification.new = function(opts) {
    let extent = opts && 'extent' in opts ? opts.extent : null;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let initialExtent = opts && 'initialExtent' in opts ? opts.initialExtent : null;
    let context = opts && 'context' in opts ? opts.context : null;
    this[extent$] = extent;
    this[minExtent$] = minExtent;
    this[maxExtent$] = maxExtent;
    this[initialExtent$] = initialExtent;
    this[context$3] = context;
    if (!(extent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 188, 15, "extent != null");
    if (!(initialExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 189, 15, "initialExtent != null");
    if (!(minExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 190, 15, "minExtent != null");
    if (!(maxExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 191, 15, "maxExtent != null");
    if (!(0.0 <= dart.notNull(minExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 192, 15, "0.0 <= minExtent");
    if (!(dart.notNull(maxExtent) <= 1.0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 193, 15, "maxExtent <= 1.0");
    if (!(dart.notNull(minExtent) <= dart.notNull(extent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 194, 15, "minExtent <= extent");
    if (!(dart.notNull(minExtent) <= dart.notNull(initialExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 195, 15, "minExtent <= initialExtent");
    if (!(dart.notNull(extent) <= dart.notNull(maxExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 196, 15, "extent <= maxExtent");
    if (!(dart.notNull(initialExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 197, 15, "initialExtent <= maxExtent");
    if (!(context != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 198, 15, "context != null");
    draggable_scrollable_sheet.DraggableScrollableNotification.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableNotification.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableNotification);
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableNotification, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableNotification, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableNotification.__proto__),
    extent: dart.finalFieldType(core.double),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    initialExtent: dart.finalFieldType(core.double),
    context: dart.finalFieldType(framework.BuildContext)
  }));
  var _currentExtent = dart.privateName(draggable_scrollable_sheet, "_currentExtent");
  draggable_scrollable_sheet._DraggableSheetExtent = class _DraggableSheetExtent extends core.Object {
    get isAtMin() {
      return dart.notNull(this.minExtent) >= dart.notNull(this[_currentExtent].value);
    }
    get isAtMax() {
      return dart.notNull(this.maxExtent) <= dart.notNull(this[_currentExtent].value);
    }
    set currentExtent(value) {
      if (!(value != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 263, 12, "value != null");
      this[_currentExtent].value = value[$clamp](this.minExtent, this.maxExtent);
    }
    get currentExtent() {
      return this[_currentExtent].value;
    }
    get additionalMinExtent() {
      return dart.test(this.isAtMin) ? 0.0 : 1.0;
    }
    get additionalMaxExtent() {
      return dart.test(this.isAtMax) ? 0.0 : 1.0;
    }
    addPixelDelta(delta, context) {
      if (this.availablePixels === 0) {
        return;
      }
      this.currentExtent = dart.notNull(this.currentExtent) + dart.notNull(delta) / dart.notNull(this.availablePixels) * dart.notNull(this.maxExtent);
      new draggable_scrollable_sheet.DraggableScrollableNotification.new({minExtent: this.minExtent, maxExtent: this.maxExtent, extent: this.currentExtent, initialExtent: this.initialExtent, context: context}).dispatch(context);
    }
  };
  (draggable_scrollable_sheet._DraggableSheetExtent.new = function(opts) {
    let t43;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let initialExtent = opts && 'initialExtent' in opts ? opts.initialExtent : null;
    let listener = opts && 'listener' in opts ? opts.listener : null;
    this.minExtent = minExtent;
    this.maxExtent = maxExtent;
    this.initialExtent = initialExtent;
    if (!(minExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 243, 15, "minExtent != null");
    if (!(maxExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 244, 15, "maxExtent != null");
    if (!(initialExtent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 245, 15, "initialExtent != null");
    if (!(dart.notNull(minExtent) >= 0)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 246, 15, "minExtent >= 0");
    if (!(dart.notNull(maxExtent) <= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 247, 15, "maxExtent <= 1");
    if (!(dart.notNull(minExtent) <= dart.notNull(initialExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 248, 15, "minExtent <= initialExtent");
    if (!(dart.notNull(initialExtent) <= dart.notNull(maxExtent))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 249, 15, "initialExtent <= maxExtent");
    this[_currentExtent] = (t43 = new (ValueNotifierOfdouble()).new(initialExtent), t43.addListener(listener), t43);
    this.availablePixels = 1 / 0;
    ;
  }).prototype = draggable_scrollable_sheet._DraggableSheetExtent.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableSheetExtent);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    addPixelDelta: dart.fnType(dart.void, [core.double, framework.BuildContext])
  }));
  dart.setGetterSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getGetters(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    isAtMin: core.bool,
    isAtMax: core.bool,
    currentExtent: core.double,
    additionalMinExtent: core.double,
    additionalMaxExtent: core.double
  }));
  dart.setSetterSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getSetters(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    currentExtent: core.double
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableSheetExtent, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    initialExtent: dart.finalFieldType(core.double),
    [_currentExtent]: dart.finalFieldType(change_notifier.ValueNotifier$(core.double)),
    availablePixels: dart.fieldType(core.double)
  }));
  var _scrollController$ = dart.privateName(draggable_scrollable_sheet, "_scrollController");
  var _extent = dart.privateName(draggable_scrollable_sheet, "_extent");
  var _setExtent = dart.privateName(draggable_scrollable_sheet, "_setExtent");
  var C1856;
  var C1859;
  var C1860;
  var C1861;
  var C1858;
  var C1857;
  var C1864;
  var C1863;
  var C1862;
  var C1867;
  var C1866;
  var C1865;
  draggable_scrollable_sheet._DraggableScrollableSheetState = class _DraggableScrollableSheetState extends framework.State$(draggable_scrollable_sheet.DraggableScrollableSheet) {
    initState() {
      super.initState();
      this[_extent] = new draggable_scrollable_sheet._DraggableSheetExtent.new({minExtent: this.widget.minChildSize, maxExtent: this.widget.maxChildSize, initialExtent: this.widget.initialChildSize, listener: dart.bind(this, _setExtent)});
      this[_scrollController$] = new draggable_scrollable_sheet._DraggableScrollableSheetScrollController.new({extent: this[_extent]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (dart.test(draggable_scrollable_sheet._InheritedResetNotifier.shouldReset(this.context))) {
        if (this[_scrollController$].offset !== 0.0) {
          this[_scrollController$].animateTo(0.0, {duration: C1856 || CT.C1856, curve: curves.Curves.linear});
        }
        this[_extent][_currentExtent].value = this[_extent].initialExtent;
      }
    }
    [_setExtent]() {
      this.setState(dart.fn(() => {
      }, VoidToNull()));
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          this[_extent].availablePixels = dart.notNull(this.widget.maxChildSize) * dart.notNull(constraints.biggest.height);
          let sheet = new basic.FractionallySizedBox.new({heightFactor: this[_extent].currentExtent, child: this.widget.builder(context, this[_scrollController$]), alignment: alignment$.Alignment.bottomCenter, $creationLocationd_0dea112b090073317d4: C1857 || CT.C1857});
          return dart.test(this.widget.expand) ? new basic.SizedBox.expand({child: sheet, $creationLocationd_0dea112b090073317d4: C1862 || CT.C1862}) : sheet;
        }, BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C1865 || CT.C1865});
    }
    dispose() {
      this[_scrollController$].dispose();
      super.dispose();
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetState.new = function() {
    this[_scrollController$] = null;
    this[_extent] = null;
    draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetState.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetState);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [_setExtent]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetState, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [_scrollController$]: dart.fieldType(draggable_scrollable_sheet._DraggableScrollableSheetScrollController),
    [_extent]: dart.fieldType(draggable_scrollable_sheet._DraggableSheetExtent)
  }));
  draggable_scrollable_sheet._DraggableScrollableSheetScrollController = class _DraggableScrollableSheetScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      return new draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, extent: this.extent});
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("extent: " + dart.str(this.extent));
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let extent = opts && 'extent' in opts ? opts.extent : null;
    this.extent = extent;
    if (!(extent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 370, 15, "extent != null");
    draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__.new.call(this, {debugLabel: debugLabel, initialScrollOffset: initialScrollOffset});
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetScrollController.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetScrollController);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__),
    createScrollPosition: dart.fnType(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, [scroll_physics.ScrollPhysics, scroll_context.ScrollContext, scroll_position.ScrollPosition])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__),
    extent: dart.finalFieldType(draggable_scrollable_sheet._DraggableSheetExtent)
  }));
  var _dragCancelCallback = dart.privateName(draggable_scrollable_sheet, "_dragCancelCallback");
  draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition = class _DraggableScrollableSheetScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    get listShouldScroll() {
      return dart.notNull(this.pixels) > 0.0;
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      return super.applyContentDimensions(dart.notNull(minScrollExtent) - dart.notNull(this.extent.additionalMinExtent), dart.notNull(maxScrollExtent) + dart.notNull(this.extent.additionalMaxExtent));
    }
    applyUserOffset(delta) {
      if (!dart.test(this.listShouldScroll) && (!(dart.test(this.extent.isAtMin) || dart.test(this.extent.isAtMax)) || dart.test(this.extent.isAtMin) && dart.notNull(delta) < 0 || dart.test(this.extent.isAtMax) && dart.notNull(delta) > 0)) {
        this.extent.addPixelDelta(-dart.notNull(delta), this.context.notificationContext);
      } else {
        super.applyUserOffset(delta);
      }
    }
    goBallistic(velocity) {
      let t43, t43$;
      if (velocity === 0.0 || dart.notNull(velocity) < 0.0 && dart.test(this.listShouldScroll) || dart.notNull(velocity) > 0.0 && dart.test(this.extent.isAtMax)) {
        super.goBallistic(velocity);
        return;
      }
      t43 = this[_dragCancelCallback];
      t43 == null ? null : t43();
      this[_dragCancelCallback] = null;
      let simulation = new scroll_simulation.ClampingScrollSimulation.new({position: this.extent.currentExtent, velocity: velocity, tolerance: this.physics.tolerance});
      let ballisticController = new animation_controller.AnimationController.unbounded({debugLabel: object.objectRuntimeType(this, "_DraggableScrollableSheetPosition"), vsync: this.context.vsync});
      let lastDelta = 0.0;
      const _tick = () => {
        let delta = dart.notNull(ballisticController.value) - dart.notNull(lastDelta);
        lastDelta = ballisticController.value;
        this.extent.addPixelDelta(delta, this.context.notificationContext);
        if (dart.notNull(velocity) > 0 && dart.test(this.extent.isAtMax) || dart.notNull(velocity) < 0 && dart.test(this.extent.isAtMin)) {
          velocity = dart.notNull(ballisticController.velocity) + dart.notNull(this.physics.tolerance.velocity) * ballisticController.velocity[$sign];
          super.goBallistic(velocity);
          ballisticController.stop();
        } else if (dart.test(ballisticController.isCompleted)) {
          super.goBallistic(0.0);
        }
      };
      dart.fn(_tick, VoidTovoid());
      t43$ = ballisticController;
      t43$.addListener(_tick);
      t43$.animateWith(simulation).whenCompleteOrCancel(dart.bind(ballisticController, 'dispose'));
      t43$;
    }
    drag(details, dragCancelCallback) {
      this[_dragCancelCallback] = dragCancelCallback;
      return super.drag(details, dragCancelCallback);
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialPixels = opts && 'initialPixels' in opts ? opts.initialPixels : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let extent = opts && 'extent' in opts ? opts.extent : null;
    this[_dragCancelCallback] = null;
    this.extent = extent;
    if (!(extent != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 421, 16, "extent != null");
    draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: initialPixels, keepScrollOffset: keepScrollOffset, oldPosition: oldPosition, debugLabel: debugLabel});
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition);
  dart.setGetterSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, () => ({
    __proto__: dart.getGetters(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__),
    listShouldScroll: core.bool
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__),
    [_dragCancelCallback]: dart.fieldType(dart.fnType(dart.void, [])),
    extent: dart.finalFieldType(draggable_scrollable_sheet._DraggableSheetExtent)
  }));
  var _notifier = dart.privateName(draggable_scrollable_sheet, "_notifier");
  var _sendReset = dart.privateName(draggable_scrollable_sheet, "_sendReset");
  var C1870;
  var C1871;
  var C1869;
  var C1868;
  var child$60 = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableActuator.child");
  draggable_scrollable_sheet.DraggableScrollableActuator = class DraggableScrollableActuator extends framework.StatelessWidget {
    get child() {
      return this[child$60];
    }
    set child(value) {
      super.child = value;
    }
    static reset(context) {
      let notifier = context.dependOnInheritedWidgetOfExactType(draggable_scrollable_sheet._InheritedResetNotifier);
      if (notifier == null) {
        return false;
      }
      return notifier[_sendReset]();
    }
    build(context) {
      return new draggable_scrollable_sheet._InheritedResetNotifier.new({child: this.child, notifier: this[_notifier], $creationLocationd_0dea112b090073317d4: C1868 || CT.C1868});
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableActuator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[_notifier] = new draggable_scrollable_sheet._ResetNotifier.new();
    this[child$60] = child;
    draggable_scrollable_sheet.DraggableScrollableActuator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableActuator.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableActuator);
  dart.setMethodSignature(draggable_scrollable_sheet.DraggableScrollableActuator, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet.DraggableScrollableActuator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableActuator, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableActuator, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableActuator.__proto__),
    child: dart.finalFieldType(framework.Widget),
    [_notifier]: dart.finalFieldType(draggable_scrollable_sheet._ResetNotifier)
  }));
  var _wasCalled = dart.privateName(draggable_scrollable_sheet, "_wasCalled");
  draggable_scrollable_sheet._ResetNotifier = class _ResetNotifier extends change_notifier.ChangeNotifier {
    sendReset() {
      if (!dart.test(this.hasListeners)) {
        return false;
      }
      this[_wasCalled] = true;
      this.notifyListeners();
      return true;
    }
  };
  (draggable_scrollable_sheet._ResetNotifier.new = function() {
    this[_wasCalled] = false;
    draggable_scrollable_sheet._ResetNotifier.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet._ResetNotifier.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._ResetNotifier);
  dart.setMethodSignature(draggable_scrollable_sheet._ResetNotifier, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._ResetNotifier.__proto__),
    sendReset: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._ResetNotifier, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.setFieldSignature(draggable_scrollable_sheet._ResetNotifier, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._ResetNotifier.__proto__),
    [_wasCalled]: dart.fieldType(core.bool)
  }));
  draggable_scrollable_sheet._InheritedResetNotifier = class _InheritedResetNotifier extends inherited_notifier.InheritedNotifier$(draggable_scrollable_sheet._ResetNotifier) {
    [_sendReset]() {
      return this.notifier.sendReset();
    }
    static shouldReset(context) {
      let widget = context.dependOnInheritedWidgetOfExactType(draggable_scrollable_sheet._InheritedResetNotifier);
      if (widget == null) {
        return false;
      }
      if (!draggable_scrollable_sheet._InheritedResetNotifier.is(widget)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter/src/widgets/draggable_scrollable_sheet.dart", 602, 12, "widget is _InheritedResetNotifier");
      let inheritedNotifier = draggable_scrollable_sheet._InheritedResetNotifier.as(widget);
      let wasCalled = inheritedNotifier.notifier[_wasCalled];
      inheritedNotifier.notifier[_wasCalled] = false;
      return wasCalled;
    }
  };
  (draggable_scrollable_sheet._InheritedResetNotifier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let notifier = opts && 'notifier' in opts ? opts.notifier : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    draggable_scrollable_sheet._InheritedResetNotifier.__proto__.new.call(this, {key: key, child: child, notifier: notifier, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet._InheritedResetNotifier.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._InheritedResetNotifier);
  dart.setMethodSignature(draggable_scrollable_sheet._InheritedResetNotifier, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._InheritedResetNotifier.__proto__),
    [_sendReset]: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._InheritedResetNotifier, "package:flutter/src/widgets/draggable_scrollable_sheet.dart");
  dart.trackLibraries("packages/flutter/src/widgets/actions", {
    "package:flutter/src/widgets/navigation_toolbar.dart": navigation_toolbar,
    "package:flutter/src/widgets/framework.dart": framework,
    "package:flutter/src/widgets/inherited_model.dart": inherited_model,
    "package:flutter/src/widgets/focus_manager.dart": focus_manager,
    "package:flutter/src/widgets/focus_traversal.dart": focus_traversal,
    "package:flutter/src/widgets/scrollable.dart": scrollable$,
    "package:flutter/src/widgets/viewport.dart": viewport,
    "package:flutter/src/widgets/basic.dart": basic,
    "package:flutter/src/widgets/widget_span.dart": widget_span,
    "package:flutter/src/widgets/localizations.dart": localizations,
    "package:flutter/src/widgets/container.dart": container,
    "package:flutter/src/widgets/image.dart": image$,
    "package:flutter/src/widgets/ticker_provider.dart": ticker_provider,
    "package:flutter/src/widgets/scroll_aware_image_provider.dart": scroll_aware_image_provider,
    "package:flutter/src/widgets/disposable_build_context.dart": disposable_build_context,
    "package:flutter/src/widgets/media_query.dart": media_query,
    "package:flutter/src/widgets/binding.dart": binding$5,
    "package:flutter/src/widgets/widget_inspector.dart": widget_inspector,
    "package:flutter/src/widgets/gesture_detector.dart": gesture_detector,
    "package:flutter/src/widgets/debug.dart": debug$0,
    "package:flutter/src/widgets/table.dart": table$,
    "package:flutter/src/widgets/app.dart": app,
    "package:flutter/src/widgets/title.dart": title$,
    "package:flutter/src/widgets/text.dart": text,
    "package:flutter/src/widgets/inherited_theme.dart": inherited_theme,
    "package:flutter/src/widgets/shortcuts.dart": shortcuts$,
    "package:flutter/src/widgets/inherited_notifier.dart": inherited_notifier,
    "package:flutter/src/widgets/focus_scope.dart": focus_scope,
    "package:flutter/src/widgets/actions.dart": actions$,
    "package:flutter/src/widgets/semantics_debugger.dart": semantics_debugger,
    "package:flutter/src/widgets/performance_overlay.dart": performance_overlay$,
    "package:flutter/src/widgets/pages.dart": pages,
    "package:flutter/src/widgets/routes.dart": routes,
    "package:flutter/src/widgets/transitions.dart": transitions,
    "package:flutter/src/widgets/page_storage.dart": page_storage,
    "package:flutter/src/widgets/overlay.dart": overlay$,
    "package:flutter/src/widgets/navigator.dart": navigator$,
    "package:flutter/src/widgets/route_notification_messages.dart": route_notification_messages,
    "package:flutter/src/widgets/modal_barrier.dart": modal_barrier,
    "package:flutter/src/widgets/banner.dart": banner,
    "package:flutter/src/widgets/scroll_position_with_single_context.dart": scroll_position_with_single_context,
    "package:flutter/src/widgets/scroll_position.dart": scroll_position,
    "package:flutter/src/widgets/scroll_activity.dart": scroll_activity,
    "package:flutter/src/widgets/scroll_notification.dart": scroll_notification,
    "package:flutter/src/widgets/scroll_metrics.dart": scroll_metrics,
    "package:flutter/src/widgets/notification_listener.dart": notification_listener,
    "package:flutter/src/widgets/scroll_physics.dart": scroll_physics,
    "package:flutter/src/widgets/scroll_simulation.dart": scroll_simulation,
    "package:flutter/src/widgets/overscroll_indicator.dart": overscroll_indicator,
    "package:flutter/src/widgets/scroll_context.dart": scroll_context,
    "package:flutter/src/widgets/scroll_controller.dart": scroll_controller,
    "package:flutter/src/widgets/scroll_configuration.dart": scroll_configuration,
    "package:flutter/src/widgets/editable_text.dart": editable_text,
    "package:flutter/src/widgets/text_selection.dart": text_selection,
    "package:flutter/src/widgets/visibility.dart": visibility,
    "package:flutter/src/widgets/sliver.dart": sliver$,
    "package:flutter/src/widgets/automatic_keep_alive.dart": automatic_keep_alive,
    "package:flutter/src/widgets/constants.dart": constants$,
    "package:flutter/src/widgets/sliver_fill.dart": sliver_fill$,
    "package:flutter/src/widgets/tween_animation_builder.dart": tween_animation_builder,
    "package:flutter/src/widgets/value_listenable_builder.dart": value_listenable_builder,
    "package:flutter/src/widgets/implicit_animations.dart": implicit_animations,
    "package:flutter/src/widgets/sliver_prototype_extent_list.dart": sliver_prototype_extent_list,
    "package:flutter/src/widgets/animated_cross_fade.dart": animated_cross_fade,
    "package:flutter/src/widgets/animated_size.dart": animated_size$,
    "package:flutter/src/widgets/primary_scroll_controller.dart": primary_scroll_controller,
    "package:flutter/src/widgets/preferred_size.dart": preferred_size,
    "package:flutter/src/widgets/icon_theme_data.dart": icon_theme_data,
    "package:flutter/src/widgets/raw_keyboard_listener.dart": raw_keyboard_listener,
    "package:flutter/src/widgets/async.dart": async$,
    "package:flutter/src/widgets/image_filter.dart": image_filter,
    "package:flutter/src/widgets/fade_in_image.dart": fade_in_image,
    "package:flutter/src/widgets/scroll_view.dart": scroll_view,
    "package:flutter/src/widgets/unique_widget.dart": unique_widget,
    "package:flutter/src/widgets/texture.dart": texture$,
    "package:flutter/src/widgets/page_view.dart": page_view,
    "package:flutter/src/widgets/bottom_navigation_bar_item.dart": bottom_navigation_bar_item,
    "package:flutter/src/widgets/color_filter.dart": color_filter,
    "package:flutter/src/widgets/status_transitions.dart": status_transitions,
    "package:flutter/src/widgets/sliver_layout_builder.dart": sliver_layout_builder,
    "package:flutter/src/widgets/layout_builder.dart": layout_builder,
    "package:flutter/src/widgets/icon_data.dart": icon_data,
    "package:flutter/src/widgets/annotated_region.dart": annotated_region,
    "package:flutter/src/widgets/single_child_scroll_view.dart": single_child_scroll_view,
    "package:flutter/src/widgets/scrollbar.dart": scrollbar,
    "package:flutter/src/widgets/heroes.dart": heroes,
    "package:flutter/src/widgets/dismissible.dart": dismissible,
    "package:flutter/src/widgets/animated_list.dart": animated_list,
    "package:flutter/src/widgets/icon_theme.dart": icon_theme,
    "package:flutter/src/widgets/orientation_builder.dart": orientation_builder,
    "package:flutter/src/widgets/size_changed_layout_notifier.dart": size_changed_layout_notifier,
    "package:flutter/src/widgets/spacer.dart": spacer,
    "package:flutter/src/widgets/animated_switcher.dart": animated_switcher,
    "package:flutter/src/widgets/will_pop_scope.dart": will_pop_scope,
    "package:flutter/src/widgets/sliver_persistent_header.dart": sliver_persistent_header$,
    "package:flutter/src/widgets/image_icon.dart": image_icon,
    "package:flutter/src/widgets/icon.dart": icon$,
    "package:flutter/src/widgets/drag_target.dart": drag_target,
    "package:flutter/src/widgets/form.dart": form,
    "package:flutter/src/widgets/safe_area.dart": safe_area,
    "package:flutter/src/widgets/list_wheel_scroll_view.dart": list_wheel_scroll_view,
    "package:flutter/src/widgets/placeholder.dart": placeholder,
    "package:flutter/src/widgets/grid_paper.dart": grid_paper,
    "package:flutter/src/widgets/nested_scroll_view.dart": nested_scroll_view,
    "package:flutter/src/widgets/platform_view.dart": platform_view$,
    "package:flutter/src/widgets/draggable_scrollable_sheet.dart": draggable_scrollable_sheet
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["framework.dart","navigation_toolbar.dart","inherited_model.dart","focus_manager.dart","focus_traversal.dart","actions.dart","scrollable.dart","ticker_provider.dart","viewport.dart","basic.dart","widget_span.dart","localizations.dart","container.dart","image.dart","binding.dart","scroll_aware_image_provider.dart","disposable_build_context.dart","media_query.dart","widget_inspector.dart","gesture_detector.dart","debug.dart","table.dart","app.dart","title.dart","inherited_theme.dart","text.dart","shortcuts.dart","inherited_notifier.dart","focus_scope.dart","semantics_debugger.dart","performance_overlay.dart","navigator.dart","routes.dart","pages.dart","transitions.dart","page_storage.dart","overlay.dart","route_notification_messages.dart","modal_barrier.dart","banner.dart","scroll_metrics.dart","scroll_position.dart","scroll_position_with_single_context.dart","scroll_activity.dart","notification_listener.dart","scroll_notification.dart","scroll_physics.dart","scroll_simulation.dart","overscroll_indicator.dart","scroll_context.dart","scroll_controller.dart","scroll_configuration.dart","editable_text.dart","automatic_keep_alive.dart","text_selection.dart","visibility.dart","sliver.dart","constants.dart","sliver_fill.dart","implicit_animations.dart","tween_animation_builder.dart","value_listenable_builder.dart","sliver_prototype_extent_list.dart","animated_cross_fade.dart","animated_size.dart","primary_scroll_controller.dart","preferred_size.dart","icon_theme_data.dart","raw_keyboard_listener.dart","async.dart","image_filter.dart","fade_in_image.dart","scroll_view.dart","unique_widget.dart","texture.dart","page_view.dart","bottom_navigation_bar_item.dart","color_filter.dart","status_transitions.dart","layout_builder.dart","sliver_layout_builder.dart","icon_data.dart","annotated_region.dart","single_child_scroll_view.dart","scrollbar.dart","heroes.dart","dismissible.dart","animated_list.dart","icon_theme.dart","orientation_builder.dart","size_changed_layout_notifier.dart","spacer.dart","animated_switcher.dart","will_pop_scope.dart","sliver_persistent_header.dart","image_icon.dart","icon.dart","drag_target.dart","form.dart","safe_area.dart","list_wheel_scroll_view.dart","placeholder.dart","grid_paper.dart","nested_scroll_view.dart","platform_view.dart","draggable_scrollable_sheet.dart"],"names":[],"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","file":"actions.ddc.js"}');
  // Exports:
  return {
    src__widgets__navigation_toolbar: navigation_toolbar,
    src__widgets__framework: framework,
    src__widgets__inherited_model: inherited_model,
    src__widgets__focus_manager: focus_manager,
    src__widgets__focus_traversal: focus_traversal,
    src__widgets__scrollable: scrollable$,
    src__widgets__viewport: viewport,
    src__widgets__basic: basic,
    src__widgets__widget_span: widget_span,
    src__widgets__localizations: localizations,
    src__widgets__container: container,
    src__widgets__image: image$,
    src__widgets__ticker_provider: ticker_provider,
    src__widgets__scroll_aware_image_provider: scroll_aware_image_provider,
    src__widgets__disposable_build_context: disposable_build_context,
    src__widgets__media_query: media_query,
    src__widgets__binding: binding$5,
    src__widgets__widget_inspector: widget_inspector,
    src__widgets__gesture_detector: gesture_detector,
    src__widgets__debug: debug$0,
    src__widgets__table: table$,
    src__widgets__app: app,
    src__widgets__title: title$,
    src__widgets__text: text,
    src__widgets__inherited_theme: inherited_theme,
    src__widgets__shortcuts: shortcuts$,
    src__widgets__inherited_notifier: inherited_notifier,
    src__widgets__focus_scope: focus_scope,
    src__widgets__actions: actions$,
    src__widgets__semantics_debugger: semantics_debugger,
    src__widgets__performance_overlay: performance_overlay$,
    src__widgets__pages: pages,
    src__widgets__routes: routes,
    src__widgets__transitions: transitions,
    src__widgets__page_storage: page_storage,
    src__widgets__overlay: overlay$,
    src__widgets__navigator: navigator$,
    src__widgets__route_notification_messages: route_notification_messages,
    src__widgets__modal_barrier: modal_barrier,
    src__widgets__banner: banner,
    src__widgets__scroll_position_with_single_context: scroll_position_with_single_context,
    src__widgets__scroll_position: scroll_position,
    src__widgets__scroll_activity: scroll_activity,
    src__widgets__scroll_notification: scroll_notification,
    src__widgets__scroll_metrics: scroll_metrics,
    src__widgets__notification_listener: notification_listener,
    src__widgets__scroll_physics: scroll_physics,
    src__widgets__scroll_simulation: scroll_simulation,
    src__widgets__overscroll_indicator: overscroll_indicator,
    src__widgets__scroll_context: scroll_context,
    src__widgets__scroll_controller: scroll_controller,
    src__widgets__scroll_configuration: scroll_configuration,
    src__widgets__editable_text: editable_text,
    src__widgets__text_selection: text_selection,
    src__widgets__visibility: visibility,
    src__widgets__sliver: sliver$,
    src__widgets__automatic_keep_alive: automatic_keep_alive,
    src__widgets__constants: constants$,
    src__widgets__sliver_fill: sliver_fill$,
    src__widgets__tween_animation_builder: tween_animation_builder,
    src__widgets__value_listenable_builder: value_listenable_builder,
    src__widgets__implicit_animations: implicit_animations,
    src__widgets__sliver_prototype_extent_list: sliver_prototype_extent_list,
    src__widgets__animated_cross_fade: animated_cross_fade,
    src__widgets__animated_size: animated_size$,
    src__widgets__primary_scroll_controller: primary_scroll_controller,
    src__widgets__preferred_size: preferred_size,
    src__widgets__icon_theme_data: icon_theme_data,
    src__widgets__raw_keyboard_listener: raw_keyboard_listener,
    src__widgets__async: async$,
    src__widgets__image_filter: image_filter,
    src__widgets__fade_in_image: fade_in_image,
    src__widgets__scroll_view: scroll_view,
    src__widgets__unique_widget: unique_widget,
    src__widgets__texture: texture$,
    src__widgets__page_view: page_view,
    src__widgets__bottom_navigation_bar_item: bottom_navigation_bar_item,
    src__widgets__color_filter: color_filter,
    src__widgets__status_transitions: status_transitions,
    src__widgets__sliver_layout_builder: sliver_layout_builder,
    src__widgets__layout_builder: layout_builder,
    src__widgets__icon_data: icon_data,
    src__widgets__annotated_region: annotated_region,
    src__widgets__single_child_scroll_view: single_child_scroll_view,
    src__widgets__scrollbar: scrollbar,
    src__widgets__heroes: heroes,
    src__widgets__dismissible: dismissible,
    src__widgets__animated_list: animated_list,
    src__widgets__icon_theme: icon_theme,
    src__widgets__orientation_builder: orientation_builder,
    src__widgets__size_changed_layout_notifier: size_changed_layout_notifier,
    src__widgets__spacer: spacer,
    src__widgets__animated_switcher: animated_switcher,
    src__widgets__will_pop_scope: will_pop_scope,
    src__widgets__sliver_persistent_header: sliver_persistent_header$,
    src__widgets__image_icon: image_icon,
    src__widgets__icon: icon$,
    src__widgets__drag_target: drag_target,
    src__widgets__form: form,
    src__widgets__safe_area: safe_area,
    src__widgets__list_wheel_scroll_view: list_wheel_scroll_view,
    src__widgets__placeholder: placeholder,
    src__widgets__grid_paper: grid_paper,
    src__widgets__nested_scroll_view: nested_scroll_view,
    src__widgets__platform_view: platform_view$,
    src__widgets__draggable_scrollable_sheet: draggable_scrollable_sheet
  };
});

//# sourceMappingURL=actions.ddc.js.map
